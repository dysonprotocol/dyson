# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ibc/core/commitment/v1/commitment.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2
from cosmos.ics23.v1 import proofs_pb2 as cosmos_dot_ics23_dot_v1_dot_proofs__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ibc/core/commitment/v1/commitment.proto',
  package='ibc.core.commitment.v1',
  syntax='proto3',
  serialized_options=_b('Z<github.com/cosmos/ibc-go/v7/modules/core/23-commitment/types'),
  serialized_pb=_b('\n\'ibc/core/commitment/v1/commitment.proto\x12\x16ibc.core.commitment.v1\x1a\x14gogoproto/gogo.proto\x1a\x1c\x63osmos/ics23/v1/proofs.proto\"&\n\nMerkleRoot\x12\x12\n\x04hash\x18\x01 \x01(\x0cR\x04hash:\x04\x88\xa0\x1f\x00\"-\n\x0cMerklePrefix\x12\x1d\n\nkey_prefix\x18\x01 \x01(\x0cR\tkeyPrefix\"-\n\nMerklePath\x12\x19\n\x08key_path\x18\x01 \x03(\tR\x07keyPath:\x04\x98\xa0\x1f\x00\"G\n\x0bMerkleProof\x12\x38\n\x06proofs\x18\x01 \x03(\x0b\x32 .cosmos.ics23.v1.CommitmentProofR\x06proofsB>Z<github.com/cosmos/ibc-go/v7/modules/core/23-commitment/typesb\x06proto3')
  ,
  dependencies=[gogoproto_dot_gogo__pb2.DESCRIPTOR,cosmos_dot_ics23_dot_v1_dot_proofs__pb2.DESCRIPTOR,])




_MERKLEROOT = _descriptor.Descriptor(
  name='MerkleRoot',
  full_name='ibc.core.commitment.v1.MerkleRoot',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hash', full_name='ibc.core.commitment.v1.MerkleRoot.hash', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='hash', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\210\240\037\000'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=119,
  serialized_end=157,
)


_MERKLEPREFIX = _descriptor.Descriptor(
  name='MerklePrefix',
  full_name='ibc.core.commitment.v1.MerklePrefix',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key_prefix', full_name='ibc.core.commitment.v1.MerklePrefix.key_prefix', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='keyPrefix', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=159,
  serialized_end=204,
)


_MERKLEPATH = _descriptor.Descriptor(
  name='MerklePath',
  full_name='ibc.core.commitment.v1.MerklePath',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key_path', full_name='ibc.core.commitment.v1.MerklePath.key_path', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='keyPath', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('\230\240\037\000'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=206,
  serialized_end=251,
)


_MERKLEPROOF = _descriptor.Descriptor(
  name='MerkleProof',
  full_name='ibc.core.commitment.v1.MerkleProof',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='proofs', full_name='ibc.core.commitment.v1.MerkleProof.proofs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='proofs', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=253,
  serialized_end=324,
)

_MERKLEPROOF.fields_by_name['proofs'].message_type = cosmos_dot_ics23_dot_v1_dot_proofs__pb2._COMMITMENTPROOF
DESCRIPTOR.message_types_by_name['MerkleRoot'] = _MERKLEROOT
DESCRIPTOR.message_types_by_name['MerklePrefix'] = _MERKLEPREFIX
DESCRIPTOR.message_types_by_name['MerklePath'] = _MERKLEPATH
DESCRIPTOR.message_types_by_name['MerkleProof'] = _MERKLEPROOF
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

MerkleRoot = _reflection.GeneratedProtocolMessageType('MerkleRoot', (_message.Message,), dict(
  DESCRIPTOR = _MERKLEROOT,
  __module__ = 'ibc.core.commitment.v1.commitment_pb2'
  # @@protoc_insertion_point(class_scope:ibc.core.commitment.v1.MerkleRoot)
  ))
_sym_db.RegisterMessage(MerkleRoot)

MerklePrefix = _reflection.GeneratedProtocolMessageType('MerklePrefix', (_message.Message,), dict(
  DESCRIPTOR = _MERKLEPREFIX,
  __module__ = 'ibc.core.commitment.v1.commitment_pb2'
  # @@protoc_insertion_point(class_scope:ibc.core.commitment.v1.MerklePrefix)
  ))
_sym_db.RegisterMessage(MerklePrefix)

MerklePath = _reflection.GeneratedProtocolMessageType('MerklePath', (_message.Message,), dict(
  DESCRIPTOR = _MERKLEPATH,
  __module__ = 'ibc.core.commitment.v1.commitment_pb2'
  # @@protoc_insertion_point(class_scope:ibc.core.commitment.v1.MerklePath)
  ))
_sym_db.RegisterMessage(MerklePath)

MerkleProof = _reflection.GeneratedProtocolMessageType('MerkleProof', (_message.Message,), dict(
  DESCRIPTOR = _MERKLEPROOF,
  __module__ = 'ibc.core.commitment.v1.commitment_pb2'
  # @@protoc_insertion_point(class_scope:ibc.core.commitment.v1.MerkleProof)
  ))
_sym_db.RegisterMessage(MerkleProof)


DESCRIPTOR._options = None
_MERKLEROOT._options = None
_MERKLEPATH._options = None
# @@protoc_insertion_point(module_scope)
