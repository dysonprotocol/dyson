{
  "cosmos.auth.v1beta1/QueryAccounts": {
    "module_name": "cosmos.auth.v1beta1",
    "name": "Accounts",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAccountsRequest",
      "definitions": {
        "QueryAccountsRequest": {
          "properties": {
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Accounts Request",
          "description": "QueryAccountsRequest is the request type for the Query/Accounts RPC method. Since: cosmos-sdk 0.43"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/auth/v1beta1/accounts",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.auth.v1beta1/QueryAccount": {
    "module_name": "cosmos.auth.v1beta1",
    "name": "Account",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAccountRequest",
      "definitions": {
        "QueryAccountRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address defines the address to query for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Account Request",
          "description": "QueryAccountRequest is the request type for the Query/Account RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/auth/v1beta1/accounts/{address}",
    "http_rules": [
      {
        "Params": [
          "address"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.auth.v1beta1/QueryAccountAddressByID": {
    "module_name": "cosmos.auth.v1beta1",
    "name": "AccountAddressByID",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAccountAddressByIDRequest",
      "definitions": {
        "QueryAccountAddressByIDRequest": {
          "properties": {
            "id": {
              "type": "string",
              "description": "id is the account number of the address to be queried. This field should have been an uint64 (like all account numbers), and will be updated to uint64 in a future version of the auth query."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Account Address By ID Request",
          "description": "QueryAccountAddressByIDRequest is the request type for AccountAddressByID rpc method Since: cosmos-sdk 0.46.2"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/auth/v1beta1/address_by_id/{id}",
    "http_rules": [
      {
        "Params": [
          "id"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.auth.v1beta1/QueryParams": {
    "module_name": "cosmos.auth.v1beta1",
    "name": "Params",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryParamsRequest",
      "definitions": {
        "QueryParamsRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Params Request",
          "description": "QueryParamsRequest is the request type for the Query/Params RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/auth/v1beta1/params",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.auth.v1beta1/QueryModuleAccounts": {
    "module_name": "cosmos.auth.v1beta1",
    "name": "ModuleAccounts",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryModuleAccountsRequest",
      "definitions": {
        "QueryModuleAccountsRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Module Accounts Request",
          "description": "QueryModuleAccountsRequest is the request type for the Query/ModuleAccounts RPC method. Since: cosmos-sdk 0.46"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/auth/v1beta1/module_accounts",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.auth.v1beta1/QueryModuleAccountByName": {
    "module_name": "cosmos.auth.v1beta1",
    "name": "ModuleAccountByName",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryModuleAccountByNameRequest",
      "definitions": {
        "QueryModuleAccountByNameRequest": {
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Module Account By Name Request",
          "description": "QueryModuleAccountByNameRequest is the request type for the Query/ModuleAccountByName RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/auth/v1beta1/module_accounts/{name}",
    "http_rules": [
      {
        "Params": [
          "name"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.auth.v1beta1/QueryBech32Prefix": {
    "module_name": "cosmos.auth.v1beta1",
    "name": "Bech32Prefix",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/Bech32PrefixRequest",
      "definitions": {
        "Bech32PrefixRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Bech 32 Prefix Request",
          "description": "Bech32PrefixRequest is the request type for Bech32Prefix rpc method. Since: cosmos-sdk 0.46"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/auth/v1beta1/bech32",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.auth.v1beta1/QueryAddressBytesToString": {
    "module_name": "cosmos.auth.v1beta1",
    "name": "AddressBytesToString",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/AddressBytesToStringRequest",
      "definitions": {
        "AddressBytesToStringRequest": {
          "properties": {
            "address_bytes": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Address Bytes To String Request",
          "description": "AddressBytesToStringRequest is the request type for AddressString rpc method. Since: cosmos-sdk 0.46"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/auth/v1beta1/bech32/{address_bytes}",
    "http_rules": [
      {
        "Params": [
          "address_bytes"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.auth.v1beta1/QueryAddressStringToBytes": {
    "module_name": "cosmos.auth.v1beta1",
    "name": "AddressStringToBytes",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/AddressStringToBytesRequest",
      "definitions": {
        "AddressStringToBytesRequest": {
          "properties": {
            "address_string": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Address String To Bytes Request",
          "description": "AddressStringToBytesRequest is the request type for AccountBytes rpc method. Since: cosmos-sdk 0.46"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/auth/v1beta1/bech32/{address_string}",
    "http_rules": [
      {
        "Params": [
          "address_string"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.authz.v1beta1/QueryGrants": {
    "module_name": "cosmos.authz.v1beta1",
    "name": "Grants",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGrantsRequest",
      "definitions": {
        "QueryGrantsRequest": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "grantee": {
              "type": "string"
            },
            "msg_type_url": {
              "type": "string",
              "description": "Optional, msg_type_url, when set, will query only grants matching given msg type."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Grants Request",
          "description": "QueryGrantsRequest is the request type for the Query/Grants RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/authz/v1beta1/grants",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.authz.v1beta1/QueryGranterGrants": {
    "module_name": "cosmos.authz.v1beta1",
    "name": "GranterGrants",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGranterGrantsRequest",
      "definitions": {
        "QueryGranterGrantsRequest": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Granter Grants Request",
          "description": "QueryGranterGrantsRequest is the request type for the Query/GranterGrants RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/authz/v1beta1/grants/granter/{granter}",
    "http_rules": [
      {
        "Params": [
          "granter"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.authz.v1beta1/QueryGranteeGrants": {
    "module_name": "cosmos.authz.v1beta1",
    "name": "GranteeGrants",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGranteeGrantsRequest",
      "definitions": {
        "QueryGranteeGrantsRequest": {
          "properties": {
            "grantee": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Grantee Grants Request",
          "description": "QueryGranteeGrantsRequest is the request type for the Query/IssuedGrants RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/authz/v1beta1/grants/grantee/{grantee}",
    "http_rules": [
      {
        "Params": [
          "grantee"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.authz.v1beta1/sendMsgGrant": {
    "module_name": "cosmos.authz.v1beta1",
    "name": "Grant",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgGrant",
      "definitions": {
        "MsgGrant": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "grantee": {
              "type": "string"
            },
            "grant": {
              "$ref": "#/definitions/cosmos.authz.v1beta1.Grant",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Grant",
          "description": "MsgGrant is a request type for Grant method. It declares authorization to the grantee on behalf of the granter with the provided expiration time."
        },
        "cosmos.authz.v1beta1.Grant": {
          "properties": {
            "authorization": {
              "oneOf": [
                {
                  "title": "cosmos.authz.v1beta1.GenericAuthorization",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.authz.v1beta1.GenericAuthorization",
                      "enum": [
                        "/cosmos.authz.v1beta1.GenericAuthorization"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/GenericAuthorization"
                    }
                  }
                },
                {
                  "title": "cosmos.bank.v1beta1.SendAuthorization",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.bank.v1beta1.SendAuthorization",
                      "enum": [
                        "/cosmos.bank.v1beta1.SendAuthorization"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/SendAuthorization"
                    }
                  }
                },
                {
                  "title": "cosmos.staking.v1beta1.StakeAuthorization",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.staking.v1beta1.StakeAuthorization",
                      "enum": [
                        "/cosmos.staking.v1beta1.StakeAuthorization"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/StakeAuthorization"
                    }
                  }
                }
              ]
            },
            "expiration": {
              "type": "string",
              "description": "time when the grant will expire and will be pruned. If null, then the grant doesn't have a time expiration (other conditions  in `authorization` may apply to invalidate the grant)",
              "format": "date-time"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Grant",
          "description": "Grant gives permissions to execute the provide method with expiration time."
        },
        "GenericAuthorization": {
          "properties": {
            "msg": {
              "type": "string",
              "description": "Msg, identified by it's type URL, to grant unrestricted permissions to execute"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Generic Authorization",
          "description": "GenericAuthorization gives the grantee unrestricted permissions to execute the provided method on behalf of the granter's account."
        },
        "SendAuthorization": {
          "properties": {
            "spend_limit": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Send Authorization",
          "description": "SendAuthorization allows the grantee to spend up to spend_limit coins from the granter's account. Since: cosmos-sdk 0.43"
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "StakeAuthorization": {
          "properties": {
            "max_tokens": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false,
              "description": "max_tokens specifies the maximum amount of tokens can be delegate to a validator. If it is empty, there is no spend limit and any amount of coins can be delegated."
            },
            "allow_list": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.StakeAuthorization.Validators",
              "additionalProperties": false,
              "description": "allow_list specifies list of validator addresses to whom grantee can delegate tokens on behalf of granter's account."
            },
            "deny_list": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.StakeAuthorization.Validators",
              "additionalProperties": false,
              "description": "deny_list specifies list of validator addresses to whom grantee can not delegate tokens."
            },
            "authorization_type": {
              "enum": [
                "AUTHORIZATION_TYPE_UNSPECIFIED",
                0,
                "AUTHORIZATION_TYPE_DELEGATE",
                1,
                "AUTHORIZATION_TYPE_UNDELEGATE",
                2,
                "AUTHORIZATION_TYPE_REDELEGATE",
                3
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Authorization Type",
              "description": "AuthorizationType defines the type of staking module authorization type Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Stake Authorization",
          "description": "StakeAuthorization defines authorization for delegate/undelegate/redelegate. Since: cosmos-sdk 0.43"
        },
        "cosmos.staking.v1beta1.StakeAuthorization.Validators": {
          "properties": {
            "address": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Validators",
          "description": "Validators defines list of validator addresses."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.authz.v1beta1/sendMsgExec": {
    "module_name": "cosmos.authz.v1beta1",
    "name": "Exec",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgExec",
      "definitions": {
        "MsgExec": {
          "properties": {
            "grantee": {
              "type": "string"
            },
            "msgs": {
              "items": {
                "oneOf": [
                  {
                    "title": "cosmos.authz.v1beta1.MsgExec",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.authz.v1beta1.MsgExec",
                        "enum": [
                          "/cosmos.authz.v1beta1.MsgExec"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgExec"
                      }
                    }
                  },
                  {
                    "title": "cosmos.authz.v1beta1.MsgGrant",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.authz.v1beta1.MsgGrant",
                        "enum": [
                          "/cosmos.authz.v1beta1.MsgGrant"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgGrant"
                      }
                    }
                  },
                  {
                    "title": "cosmos.authz.v1beta1.MsgRevoke",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.authz.v1beta1.MsgRevoke",
                        "enum": [
                          "/cosmos.authz.v1beta1.MsgRevoke"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRevoke"
                      }
                    }
                  },
                  {
                    "title": "cosmos.bank.v1beta1.MsgMultiSend",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.bank.v1beta1.MsgMultiSend",
                        "enum": [
                          "/cosmos.bank.v1beta1.MsgMultiSend"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgMultiSend"
                      }
                    }
                  },
                  {
                    "title": "cosmos.bank.v1beta1.MsgSend",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.bank.v1beta1.MsgSend",
                        "enum": [
                          "/cosmos.bank.v1beta1.MsgSend"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSend"
                      }
                    }
                  },
                  {
                    "title": "cosmos.crisis.v1beta1.MsgVerifyInvariant",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.crisis.v1beta1.MsgVerifyInvariant",
                        "enum": [
                          "/cosmos.crisis.v1beta1.MsgVerifyInvariant"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVerifyInvariant"
                      }
                    }
                  },
                  {
                    "title": "cosmos.distribution.v1beta1.MsgFundCommunityPool",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.distribution.v1beta1.MsgFundCommunityPool",
                        "enum": [
                          "/cosmos.distribution.v1beta1.MsgFundCommunityPool"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgFundCommunityPool"
                      }
                    }
                  },
                  {
                    "title": "cosmos.distribution.v1beta1.MsgSetWithdrawAddress",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress",
                        "enum": [
                          "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSetWithdrawAddress"
                      }
                    }
                  },
                  {
                    "title": "cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
                        "enum": [
                          "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgWithdrawDelegatorReward"
                      }
                    }
                  },
                  {
                    "title": "cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",
                        "enum": [
                          "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgWithdrawValidatorCommission"
                      }
                    }
                  },
                  {
                    "title": "cosmos.evidence.v1beta1.MsgSubmitEvidence",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.evidence.v1beta1.MsgSubmitEvidence",
                        "enum": [
                          "/cosmos.evidence.v1beta1.MsgSubmitEvidence"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitEvidence"
                      }
                    }
                  },
                  {
                    "title": "cosmos.feegrant.v1beta1.MsgGrantAllowance",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.feegrant.v1beta1.MsgGrantAllowance",
                        "enum": [
                          "/cosmos.feegrant.v1beta1.MsgGrantAllowance"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgGrantAllowance"
                      }
                    }
                  },
                  {
                    "title": "cosmos.feegrant.v1beta1.MsgRevokeAllowance",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.feegrant.v1beta1.MsgRevokeAllowance",
                        "enum": [
                          "/cosmos.feegrant.v1beta1.MsgRevokeAllowance"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRevokeAllowance"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgDeposit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgDeposit",
                        "enum": [
                          "/cosmos.gov.v1.MsgDeposit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeposit"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgExecLegacyContent",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgExecLegacyContent",
                        "enum": [
                          "/cosmos.gov.v1.MsgExecLegacyContent"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgExecLegacyContent"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgSubmitProposal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgSubmitProposal",
                        "enum": [
                          "/cosmos.gov.v1.MsgSubmitProposal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitProposal"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgVote",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgVote",
                        "enum": [
                          "/cosmos.gov.v1.MsgVote"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVote"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgVoteWeighted",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgVoteWeighted",
                        "enum": [
                          "/cosmos.gov.v1.MsgVoteWeighted"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVoteWeighted"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1beta1.MsgDeposit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1beta1.MsgDeposit",
                        "enum": [
                          "/cosmos.gov.v1beta1.MsgDeposit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeposit"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1beta1.MsgSubmitProposal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1beta1.MsgSubmitProposal",
                        "enum": [
                          "/cosmos.gov.v1beta1.MsgSubmitProposal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitProposal"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1beta1.MsgVote",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1beta1.MsgVote",
                        "enum": [
                          "/cosmos.gov.v1beta1.MsgVote"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVote"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1beta1.MsgVoteWeighted",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1beta1.MsgVoteWeighted",
                        "enum": [
                          "/cosmos.gov.v1beta1.MsgVoteWeighted"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVoteWeighted"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgCreateGroup",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgCreateGroup",
                        "enum": [
                          "/cosmos.group.v1.MsgCreateGroup"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateGroup"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgCreateGroupPolicy",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgCreateGroupPolicy",
                        "enum": [
                          "/cosmos.group.v1.MsgCreateGroupPolicy"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateGroupPolicy"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgCreateGroupWithPolicy",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgCreateGroupWithPolicy",
                        "enum": [
                          "/cosmos.group.v1.MsgCreateGroupWithPolicy"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateGroupWithPolicy"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgExec",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgExec",
                        "enum": [
                          "/cosmos.group.v1.MsgExec"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgExec"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgLeaveGroup",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgLeaveGroup",
                        "enum": [
                          "/cosmos.group.v1.MsgLeaveGroup"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgLeaveGroup"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgSubmitProposal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgSubmitProposal",
                        "enum": [
                          "/cosmos.group.v1.MsgSubmitProposal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitProposal"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupAdmin",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupAdmin",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupAdmin"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupAdmin"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupMembers",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupMembers",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupMembers"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupMembers"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupMetadata",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupMetadata",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupMetadata"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupMetadata"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupPolicyAdmin",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupPolicyAdmin"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupPolicyDecisionPolicy"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupPolicyMetadata",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupPolicyMetadata",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupPolicyMetadata"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupPolicyMetadata"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgVote",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgVote",
                        "enum": [
                          "/cosmos.group.v1.MsgVote"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVote"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgWithdrawProposal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgWithdrawProposal",
                        "enum": [
                          "/cosmos.group.v1.MsgWithdrawProposal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgWithdrawProposal"
                      }
                    }
                  },
                  {
                    "title": "cosmos.slashing.v1beta1.MsgUnjail",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.slashing.v1beta1.MsgUnjail",
                        "enum": [
                          "/cosmos.slashing.v1beta1.MsgUnjail"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUnjail"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgBeginRedelegate",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgBeginRedelegate",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgBeginRedelegate"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgBeginRedelegate"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgCancelUnbondingDelegation",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCancelUnbondingDelegation"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgCreateValidator",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgCreateValidator",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgCreateValidator"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateValidator"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgDelegate",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgDelegate",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgDelegate"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDelegate"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgEditValidator",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgEditValidator",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgEditValidator"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgEditValidator"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgUndelegate",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgUndelegate",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgUndelegate"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUndelegate"
                      }
                    }
                  },
                  {
                    "title": "cosmos.upgrade.v1beta1.MsgCancelUpgrade",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.upgrade.v1beta1.MsgCancelUpgrade",
                        "enum": [
                          "/cosmos.upgrade.v1beta1.MsgCancelUpgrade"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCancelUpgrade"
                      }
                    }
                  },
                  {
                    "title": "cosmos.upgrade.v1beta1.MsgSoftwareUpgrade",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade",
                        "enum": [
                          "/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSoftwareUpgrade"
                      }
                    }
                  },
                  {
                    "title": "cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount",
                        "enum": [
                          "/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreatePeriodicVestingAccount"
                      }
                    }
                  },
                  {
                    "title": "cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount",
                        "enum": [
                          "/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreatePermanentLockedAccount"
                      }
                    }
                  },
                  {
                    "title": "cosmos.vesting.v1beta1.MsgCreateVestingAccount",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.vesting.v1beta1.MsgCreateVestingAccount",
                        "enum": [
                          "/cosmos.vesting.v1beta1.MsgCreateVestingAccount"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateVestingAccount"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgCreateScheduledRun",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgCreateScheduledRun",
                        "enum": [
                          "/dyson.MsgCreateScheduledRun"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateScheduledRun"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgCreateStorage",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgCreateStorage",
                        "enum": [
                          "/dyson.MsgCreateStorage"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateStorage"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgDeleteScheduledRun",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgDeleteScheduledRun",
                        "enum": [
                          "/dyson.MsgDeleteScheduledRun"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeleteScheduledRun"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgDeleteScript",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgDeleteScript",
                        "enum": [
                          "/dyson.MsgDeleteScript"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeleteScript"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgDeleteStorage",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgDeleteStorage",
                        "enum": [
                          "/dyson.MsgDeleteStorage"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeleteStorage"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgDeployAutonomousScript",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgDeployAutonomousScript",
                        "enum": [
                          "/dyson.MsgDeployAutonomousScript"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeployAutonomousScript"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgRun",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgRun",
                        "enum": [
                          "/dyson.MsgRun"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRun"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgUpdateScheduledRun",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgUpdateScheduledRun",
                        "enum": [
                          "/dyson.MsgUpdateScheduledRun"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateScheduledRun"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgUpdateScript",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgUpdateScript",
                        "enum": [
                          "/dyson.MsgUpdateScript"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateScript"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgUpdateStorage",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgUpdateStorage",
                        "enum": [
                          "/dyson.MsgUpdateStorage"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateStorage"
                      }
                    }
                  },
                  {
                    "title": "ibc.applications.transfer.v1.MsgTransfer",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.applications.transfer.v1.MsgTransfer",
                        "enum": [
                          "/ibc.applications.transfer.v1.MsgTransfer"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgTransfer"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgAcknowledgement",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgAcknowledgement",
                        "enum": [
                          "/ibc.core.channel.v1.MsgAcknowledgement"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgAcknowledgement"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelCloseConfirm",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelCloseConfirm",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelCloseConfirm"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelCloseConfirm"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelCloseInit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelCloseInit",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelCloseInit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelCloseInit"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelOpenAck",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelOpenAck",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelOpenAck"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelOpenAck"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelOpenConfirm",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelOpenConfirm",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelOpenConfirm"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelOpenConfirm"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelOpenInit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelOpenInit",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelOpenInit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelOpenInit"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelOpenTry",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelOpenTry",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelOpenTry"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelOpenTry"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgRecvPacket",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgRecvPacket",
                        "enum": [
                          "/ibc.core.channel.v1.MsgRecvPacket"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRecvPacket"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgTimeout",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgTimeout",
                        "enum": [
                          "/ibc.core.channel.v1.MsgTimeout"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgTimeout"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgTimeoutOnClose",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgTimeoutOnClose",
                        "enum": [
                          "/ibc.core.channel.v1.MsgTimeoutOnClose"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgTimeoutOnClose"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.client.v1.MsgCreateClient",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.client.v1.MsgCreateClient",
                        "enum": [
                          "/ibc.core.client.v1.MsgCreateClient"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateClient"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.client.v1.MsgSubmitMisbehaviour",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.client.v1.MsgSubmitMisbehaviour",
                        "enum": [
                          "/ibc.core.client.v1.MsgSubmitMisbehaviour"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitMisbehaviour"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.client.v1.MsgUpdateClient",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.client.v1.MsgUpdateClient",
                        "enum": [
                          "/ibc.core.client.v1.MsgUpdateClient"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateClient"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.client.v1.MsgUpgradeClient",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.client.v1.MsgUpgradeClient",
                        "enum": [
                          "/ibc.core.client.v1.MsgUpgradeClient"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpgradeClient"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.connection.v1.MsgConnectionOpenAck",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.connection.v1.MsgConnectionOpenAck",
                        "enum": [
                          "/ibc.core.connection.v1.MsgConnectionOpenAck"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgConnectionOpenAck"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.connection.v1.MsgConnectionOpenConfirm",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.connection.v1.MsgConnectionOpenConfirm",
                        "enum": [
                          "/ibc.core.connection.v1.MsgConnectionOpenConfirm"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgConnectionOpenConfirm"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.connection.v1.MsgConnectionOpenInit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.connection.v1.MsgConnectionOpenInit",
                        "enum": [
                          "/ibc.core.connection.v1.MsgConnectionOpenInit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgConnectionOpenInit"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.connection.v1.MsgConnectionOpenTry",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.connection.v1.MsgConnectionOpenTry",
                        "enum": [
                          "/ibc.core.connection.v1.MsgConnectionOpenTry"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgConnectionOpenTry"
                      }
                    }
                  },
                  {
                    "title": "names.MsgAccept",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgAccept",
                        "enum": [
                          "/names.MsgAccept"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgAccept"
                      }
                    }
                  },
                  {
                    "title": "names.MsgBurnCoins",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgBurnCoins",
                        "enum": [
                          "/names.MsgBurnCoins"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgBurnCoins"
                      }
                    }
                  },
                  {
                    "title": "names.MsgBuy",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgBuy",
                        "enum": [
                          "/names.MsgBuy"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgBuy"
                      }
                    }
                  },
                  {
                    "title": "names.MsgDeleteName",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgDeleteName",
                        "enum": [
                          "/names.MsgDeleteName"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeleteName"
                      }
                    }
                  },
                  {
                    "title": "names.MsgMintCoins",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgMintCoins",
                        "enum": [
                          "/names.MsgMintCoins"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgMintCoins"
                      }
                    }
                  },
                  {
                    "title": "names.MsgOfferTo",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgOfferTo",
                        "enum": [
                          "/names.MsgOfferTo"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgOfferTo"
                      }
                    }
                  },
                  {
                    "title": "names.MsgRegister",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgRegister",
                        "enum": [
                          "/names.MsgRegister"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRegister"
                      }
                    }
                  },
                  {
                    "title": "names.MsgReveal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgReveal",
                        "enum": [
                          "/names.MsgReveal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgReveal"
                      }
                    }
                  },
                  {
                    "title": "names.MsgSetPriceAndExtend",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgSetPriceAndExtend",
                        "enum": [
                          "/names.MsgSetPriceAndExtend"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSetPriceAndExtend"
                      }
                    }
                  },
                  {
                    "title": "names.MsgUpdateName",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgUpdateName",
                        "enum": [
                          "/names.MsgUpdateName"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateName"
                      }
                    }
                  }
                ]
              },
              "type": "array",
              "description": "Authorization Msg requests to execute. Each msg must implement Authorization interface The x/authz will try to find a grant matching (msg.signers[0], grantee, MsgTypeURL(msg)) triple and validate it."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Exec",
          "description": "MsgExec attempts to execute the provided messages using authorizations granted to the grantee. Each message should have only one signer corresponding to the granter of the authorization."
        },
        "MsgGrant": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "grantee": {
              "type": "string"
            },
            "grant": {
              "$ref": "#/definitions/cosmos.authz.v1beta1.Grant",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Grant",
          "description": "MsgGrant is a request type for Grant method. It declares authorization to the grantee on behalf of the granter with the provided expiration time."
        },
        "cosmos.authz.v1beta1.Grant": {
          "properties": {
            "authorization": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "expiration": {
              "type": "string",
              "description": "time when the grant will expire and will be pruned. If null, then the grant doesn't have a time expiration (other conditions  in `authorization` may apply to invalidate the grant)",
              "format": "date-time"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Grant",
          "description": "Grant gives permissions to execute the provide method with expiration time."
        },
        "MsgRevoke": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "grantee": {
              "type": "string"
            },
            "msg_type_url": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Revoke",
          "description": "MsgRevoke revokes any authorization with the provided sdk.Msg type on the granter's account with that has been granted to the grantee."
        },
        "MsgMultiSend": {
          "properties": {
            "inputs": {
              "items": {
                "$ref": "#/definitions/cosmos.bank.v1beta1.Input"
              },
              "type": "array"
            },
            "outputs": {
              "items": {
                "$ref": "#/definitions/cosmos.bank.v1beta1.Output"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Multi Send",
          "description": "MsgMultiSend represents an arbitrary multi-in, multi-out send message."
        },
        "cosmos.bank.v1beta1.Input": {
          "properties": {
            "address": {
              "type": "string"
            },
            "coins": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Input",
          "description": "Input models transaction input."
        },
        "cosmos.bank.v1beta1.Output": {
          "properties": {
            "address": {
              "type": "string"
            },
            "coins": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Output",
          "description": "Output models transaction outputs."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "MsgSend": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Send",
          "description": "MsgSend represents a message to send coins from one account to another."
        },
        "MsgVerifyInvariant": {
          "properties": {
            "sender": {
              "type": "string"
            },
            "invariant_module_name": {
              "type": "string"
            },
            "invariant_route": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Verify Invariant",
          "description": "MsgVerifyInvariant represents a message to verify a particular invariance."
        },
        "MsgFundCommunityPool": {
          "properties": {
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            },
            "depositor": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Fund Community Pool",
          "description": "MsgFundCommunityPool allows an account to directly fund the community pool."
        },
        "MsgSetWithdrawAddress": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "withdraw_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Set Withdraw Address",
          "description": "MsgSetWithdrawAddress sets the withdraw address for a delegator (or validator self-delegation)."
        },
        "MsgWithdrawDelegatorReward": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Delegator Reward",
          "description": "MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator from a single validator."
        },
        "MsgWithdrawValidatorCommission": {
          "properties": {
            "validator_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Validator Commission",
          "description": "MsgWithdrawValidatorCommission withdraws the full commission to the validator address."
        },
        "MsgSubmitEvidence": {
          "properties": {
            "submitter": {
              "type": "string"
            },
            "evidence": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Evidence",
          "description": "MsgSubmitEvidence represents a message that supports submitting arbitrary Evidence of misbehavior such as equivocation or counterfactual signing."
        },
        "MsgGrantAllowance": {
          "properties": {
            "granter": {
              "type": "string",
              "description": "granter is the address of the user granting an allowance of their funds."
            },
            "grantee": {
              "type": "string",
              "description": "grantee is the address of the user being granted an allowance of another user's funds."
            },
            "allowance": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "allowance can be any of basic, periodic, allowed fee allowance."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Grant Allowance",
          "description": "MsgGrantAllowance adds permission for Grantee to spend up to Allowance of fees from the account of Granter."
        },
        "MsgRevokeAllowance": {
          "properties": {
            "granter": {
              "type": "string",
              "description": "granter is the address of the user granting an allowance of their funds."
            },
            "grantee": {
              "type": "string",
              "description": "grantee is the address of the user being granted an allowance of another user's funds."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Revoke Allowance",
          "description": "MsgRevokeAllowance removes any existing Allowance from Granter to Grantee."
        },
        "MsgDeposit": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "depositor": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Deposit",
          "description": "MsgDeposit defines a message to submit a deposit to an existing proposal."
        },
        "MsgExecLegacyContent": {
          "properties": {
            "content": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "content is the proposal's content."
            },
            "authority": {
              "type": "string",
              "description": "authority must be the gov module address."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Exec Legacy Content",
          "description": "MsgExecLegacyContent is used to wrap the legacy content field into a message. This ensures backwards compatibility with v1beta1.MsgSubmitProposal."
        },
        "MsgSubmitProposal": {
          "properties": {
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "proposers": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "proposers are the account addresses of the proposers. Proposers signatures will be counted as yes votes."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the proposal."
            },
            "messages": {
              "items": {
                "properties": {
                  "type_url": {
                    "type": "string",
                    "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                  },
                  "value": {
                    "type": "string",
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "format": "binary",
                    "binaryEncoding": "base64"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "Any",
                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use 'type.googleapis.com/full.type.name' as the type URL and the unpack methods only use the fully qualified type name after the last '/' in the type URL, for example \"foo.bar.com/x/y.z\" will yield type name \"y.z\". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       \"@type\": \"type.googleapis.com/google.profile.Person\",       \"firstName\": <string>,       \"lastName\": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",       \"value\": \"1.212s\"     }"
              },
              "type": "array",
              "description": "messages is a list of `sdk.Msg`s that will be executed if the proposal passes."
            },
            "exec": {
              "enum": [
                "EXEC_UNSPECIFIED",
                0,
                "EXEC_TRY",
                1
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Proposals and Voting",
              "description": "Proposals and Voting  Exec defines modes of execution of a proposal on creation or on new vote."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Proposal",
          "description": "MsgSubmitProposal is the Msg/SubmitProposal request type."
        },
        "MsgVote": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "voter": {
              "type": "string",
              "description": "voter is the voter account address."
            },
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given proposal."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the vote."
            },
            "exec": {
              "enum": [
                "EXEC_UNSPECIFIED",
                0,
                "EXEC_TRY",
                1
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Proposals and Voting",
              "description": "Proposals and Voting  Exec defines modes of execution of a proposal on creation or on new vote."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote",
          "description": "MsgVote is the Msg/Vote request type."
        },
        "MsgVoteWeighted": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "voter": {
              "type": "string"
            },
            "options": {
              "items": {
                "$ref": "#/definitions/cosmos.gov.v1beta1.WeightedVoteOption"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote Weighted",
          "description": "MsgVoteWeighted defines a message to cast a vote. Since: cosmos-sdk 0.43"
        },
        "cosmos.gov.v1.WeightedVoteOption": {
          "properties": {
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given governance proposal."
            },
            "weight": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Weighted Vote Option",
          "description": "WeightedVoteOption defines a unit of vote for vote split."
        },
        "cosmos.gov.v1beta1.WeightedVoteOption": {
          "properties": {
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given governance proposal."
            },
            "weight": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Weighted Vote Option",
          "description": "WeightedVoteOption defines a unit of vote for vote split. Since: cosmos-sdk 0.43"
        },
        "MsgCreateGroup": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "members": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "members defines the group members."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the group."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Groups",
          "description": "Groups  MsgCreateGroup is the Msg/CreateGroup request type."
        },
        "cosmos.group.v1.MemberRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the member's account address."
            },
            "weight": {
              "type": "string",
              "description": "weight is the member's voting weight that should be greater than 0."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the member."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Member Request",
          "description": "MemberRequest represents a group member to be used in Msg server requests. Contrary to `Member`, it doesn't have any `added_at` field since this field cannot be set as part of requests."
        },
        "MsgCreateGroupPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the group policy."
            },
            "decision_policy": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "decision_policy specifies the group policy's decision policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Group Policies",
          "description": "Group Policies  MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type."
        },
        "MsgCreateGroupWithPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group and group policy admin."
            },
            "members": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "members defines the group members."
            },
            "group_metadata": {
              "type": "string",
              "description": "group_metadata is any arbitrary metadata attached to the group."
            },
            "group_policy_metadata": {
              "type": "string",
              "description": "group_policy_metadata is any arbitrary metadata attached to the group policy."
            },
            "group_policy_as_admin": {
              "type": "boolean",
              "description": "group_policy_as_admin is a boolean field, if set to true, the group policy account address will be used as group and group policy admin."
            },
            "decision_policy": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "decision_policy specifies the group policy's decision policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Group With Policy",
          "description": "MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type."
        },
        "MsgLeaveGroup": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the account address of the group member."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Leave Group",
          "description": "MsgLeaveGroup is the Msg/LeaveGroup request type."
        },
        "MsgUpdateGroupAdmin": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the current account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "new_admin": {
              "type": "string",
              "description": "new_admin is the group new admin account address."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Admin",
          "description": "MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type."
        },
        "MsgUpdateGroupMembers": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "member_updates": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "member_updates is the list of members to update, set weight to 0 to remove a member."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Members",
          "description": "MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type."
        },
        "MsgUpdateGroupMetadata": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is the updated group's metadata."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Metadata",
          "description": "MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type."
        },
        "MsgUpdateGroupPolicyAdmin": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of the group policy."
            },
            "new_admin": {
              "type": "string",
              "description": "new_admin is the new group policy admin."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Admin",
          "description": "MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type."
        },
        "MsgUpdateGroupPolicyDecisionPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "decision_policy": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "decision_policy is the updated group policy's decision policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Decision Policy",
          "description": "MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type."
        },
        "MsgUpdateGroupPolicyMetadata": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is the updated group policy metadata."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Metadata",
          "description": "MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type."
        },
        "MsgWithdrawProposal": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "address": {
              "type": "string",
              "description": "address is the admin of the group policy or one of the proposer of the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Proposal",
          "description": "MsgWithdrawProposal is the Msg/WithdrawProposal request type."
        },
        "MsgUnjail": {
          "properties": {
            "validator_addr": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Unjail",
          "description": "MsgUnjail defines the Msg/Unjail request type"
        },
        "MsgBeginRedelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_src_address": {
              "type": "string"
            },
            "validator_dst_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Begin Redelegate",
          "description": "MsgBeginRedelegate defines a SDK message for performing a redelegation of coins from a delegator and source validator to a destination validator."
        },
        "MsgCancelUnbondingDelegation": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false,
              "description": "amount is always less than or equal to unbonding delegation entry balance"
            },
            "creation_height": {
              "type": "string",
              "description": "creation_height is the height which the unbonding took place."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Cancel Unbonding Delegation",
          "description": "MsgCancelUnbondingDelegation defines the SDK message for performing a cancel unbonding delegation for delegator Since: cosmos-sdk 0.46"
        },
        "MsgCreateValidator": {
          "properties": {
            "description": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.Description",
              "additionalProperties": false
            },
            "commission": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.CommissionRates",
              "additionalProperties": false
            },
            "min_self_delegation": {
              "type": "string"
            },
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "pubkey": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "value": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Validator",
          "description": "MsgCreateValidator defines a SDK message for creating a new validator."
        },
        "cosmos.staking.v1beta1.CommissionRates": {
          "properties": {
            "rate": {
              "type": "string",
              "description": "rate is the commission rate charged to delegators, as a fraction."
            },
            "max_rate": {
              "type": "string",
              "description": "max_rate defines the maximum commission rate which validator can ever charge, as a fraction."
            },
            "max_change_rate": {
              "type": "string",
              "description": "max_change_rate defines the maximum daily increase of the validator commission, as a fraction."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Commission Rates",
          "description": "CommissionRates defines the initial commission rates to be used for creating a validator."
        },
        "cosmos.staking.v1beta1.Description": {
          "properties": {
            "moniker": {
              "type": "string",
              "description": "moniker defines a human-readable name for the validator."
            },
            "identity": {
              "type": "string",
              "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
            },
            "website": {
              "type": "string",
              "description": "website defines an optional website link."
            },
            "security_contact": {
              "type": "string",
              "description": "security_contact defines an optional email for security contact."
            },
            "details": {
              "type": "string",
              "description": "details define other optional details."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Description",
          "description": "Description defines a validator description."
        },
        "MsgDelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delegate",
          "description": "MsgDelegate defines a SDK message for performing a delegation of coins from a delegator to a validator."
        },
        "MsgEditValidator": {
          "properties": {
            "description": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.Description",
              "additionalProperties": false
            },
            "validator_address": {
              "type": "string"
            },
            "commission_rate": {
              "type": "string",
              "description": "We pass a reference to the new commission rate and min self delegation as it's not mandatory to update. If not updated, the deserialized rate will be zero with no way to distinguish if an update was intended. REF: #2373"
            },
            "min_self_delegation": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Edit Validator",
          "description": "MsgEditValidator defines a SDK message for editing an existing validator."
        },
        "MsgUndelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Undelegate",
          "description": "MsgUndelegate defines a SDK message for performing an undelegation from a delegate and a validator."
        },
        "MsgCancelUpgrade": {
          "properties": {
            "authority": {
              "type": "string",
              "description": "authority is the address of the governance account."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Cancel Upgrade",
          "description": "MsgCancelUpgrade is the Msg/CancelUpgrade request type. Since: cosmos-sdk 0.46"
        },
        "MsgSoftwareUpgrade": {
          "properties": {
            "authority": {
              "type": "string",
              "description": "authority is the address of the governance account."
            },
            "plan": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.Plan",
              "additionalProperties": false,
              "description": "plan is the upgrade plan."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Software Upgrade",
          "description": "MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type. Since: cosmos-sdk 0.46"
        },
        "cosmos.upgrade.v1beta1.Plan": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Sets the name for the upgrade. This name will be used by the upgraded version of the software to apply any special \"on-upgrade\" commands during the first BeginBlock method after the upgrade is applied. It is also used to detect whether a software version can handle a given upgrade. If no upgrade handler with this name has been set in the software, it will be assumed that the software is out-of-date when the upgrade Time or Height is reached and the software will exit."
            },
            "time": {
              "type": "string",
              "description": "Deprecated: Time based upgrades have been deprecated. Time based upgrade logic has been removed from the SDK. If this field is not empty, an error will be thrown.",
              "format": "date-time"
            },
            "height": {
              "type": "string",
              "description": "The height at which the upgrade must be performed. Only used if Time is not set."
            },
            "info": {
              "type": "string",
              "description": "Any application specific upgrade info to be included on-chain such as a git commit that validators could automatically upgrade to"
            },
            "upgraded_client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been moved to the IBC module in the sub module 02-client. If this field is not empty, an error will be thrown."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Plan",
          "description": "Plan specifies information about a planned upgrade and when it should occur."
        },
        "MsgCreatePeriodicVestingAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "start_time": {
              "type": "string"
            },
            "vesting_periods": {
              "items": {
                "$ref": "#/definitions/cosmos.vesting.v1beta1.Period"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Periodic Vesting Account",
          "description": "MsgCreateVestingAccount defines a message that enables creating a vesting account. Since: cosmos-sdk 0.46"
        },
        "cosmos.vesting.v1beta1.Period": {
          "properties": {
            "length": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Period",
          "description": "Period defines a length of time and amount of coins that will vest."
        },
        "MsgCreatePermanentLockedAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Permanent Locked Account",
          "description": "MsgCreatePermanentLockedAccount defines a message that enables creating a permanent locked account. Since: cosmos-sdk 0.46"
        },
        "MsgCreateVestingAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            },
            "end_time": {
              "type": "string"
            },
            "delayed": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Vesting Account",
          "description": "MsgCreateVestingAccount defines a message that enables creating a vesting account."
        },
        "MsgCreateScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "height": {
              "type": "string"
            },
            "gas": {
              "type": "string"
            },
            "msg": {
              "$ref": "#/definitions/dyson.MsgRun",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Scheduled Run"
        },
        "dyson.MsgRun": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The account sending the transaction"
            },
            "address": {
              "type": "string",
              "description": "dys address of the scrit to call"
            },
            "extra_lines": {
              "type": "string",
              "description": "optional extra source code to append to the end of the script before running"
            },
            "function_name": {
              "type": "string",
              "description": "optional function to call"
            },
            "args": {
              "type": "string",
              "description": "optional args to call the function with"
            },
            "kwargs": {
              "type": "string",
              "description": "optional kwargs to run"
            },
            "coins": {
              "type": "string",
              "description": "optional comma seperated list of coins to send the script (for example \"123dys,456token\")"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Run",
          "description": "MsgRun runs a script at a specific address"
        },
        "MsgCreateStorage": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The address signing this transaction"
            },
            "index": {
              "type": "string",
              "description": "Name of the Storage, must be prefixed with the creators address (for example: \"dys..1a3/some_name\")"
            },
            "data": {
              "type": "string",
              "description": "data to store at this index"
            },
            "force": {
              "type": "boolean",
              "description": "If true, force will always store the data at this address regardless of already existing storage"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Storage",
          "description": "Create a new storage of arbitrary text"
        },
        "MsgDeleteScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Scheduled Run"
        },
        "MsgDeleteScript": {
          "properties": {
            "creator": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Script"
        },
        "MsgDeleteStorage": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Storage"
        },
        "MsgDeployAutonomousScript": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "code": {
              "type": "string",
              "format": "python"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Deploy Autonomous Script",
          "description": "Deploy an Autonomous Script at a new address"
        },
        "MsgRun": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The account sending the transaction"
            },
            "address": {
              "type": "string",
              "description": "dys address of the scrit to call"
            },
            "extra_lines": {
              "type": "string",
              "description": "optional extra source code to append to the end of the script before running"
            },
            "function_name": {
              "type": "string",
              "description": "optional function to call"
            },
            "args": {
              "type": "string",
              "description": "optional args to call the function with"
            },
            "kwargs": {
              "type": "string",
              "description": "optional kwargs to run"
            },
            "coins": {
              "type": "string",
              "description": "optional comma seperated list of coins to send the script (for example \"123dys,456token\")"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Run",
          "description": "MsgRun runs a script at a specific address"
        },
        "MsgUpdateScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            },
            "msg": {
              "$ref": "#/definitions/dyson.MsgRun",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Scheduled Run"
        },
        "MsgUpdateScript": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "code": {
              "type": "string",
              "format": "python"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Script"
        },
        "MsgUpdateStorage": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The address signing this transaction"
            },
            "index": {
              "type": "string",
              "description": "Name of the Storage, must be prefixed with the creators address (for example: \"dys..1a3/some_name\")"
            },
            "data": {
              "type": "string",
              "description": "data to store at this index"
            },
            "force": {
              "type": "boolean",
              "description": "If true, force will always store the data at this address regardless of already existing storage"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Storage"
        },
        "MsgTransfer": {
          "properties": {
            "source_port": {
              "type": "string",
              "description": "the port on which the packet will be sent"
            },
            "source_channel": {
              "type": "string",
              "description": "the channel by which the packet will be sent"
            },
            "token": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false,
              "description": "the tokens to be transferred"
            },
            "sender": {
              "type": "string",
              "description": "the sender address"
            },
            "receiver": {
              "type": "string",
              "description": "the recipient address on the destination chain"
            },
            "timeout_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false,
              "description": "Timeout height relative to the current block height. The timeout is disabled when set to 0."
            },
            "timeout_timestamp": {
              "type": "string",
              "description": "Timeout timestamp in absolute nanoseconds since unix epoch. The timeout is disabled when set to 0."
            },
            "memo": {
              "type": "string",
              "description": "optional memo"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Transfer",
          "description": "MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between ICS20 enabled chains. See ICS Spec here: https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures"
        },
        "ibc.core.client.v1.Height": {
          "properties": {
            "revision_number": {
              "type": "string",
              "description": "the revision that the client is currently on"
            },
            "revision_height": {
              "type": "string",
              "description": "the height within the given revision"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Height",
          "description": "Height is a monotonically increasing data type that can be compared against another Height for the purposes of updating and freezing clients Normally the RevisionHeight is incremented at each height while keeping RevisionNumber the same. However some consensus algorithms may choose to reset the height in certain conditions e.g. hard forks, state-machine breaking changes In these cases, the RevisionNumber is incremented so that height continues to be monitonically increasing even as the RevisionHeight gets reset"
        },
        "MsgAcknowledgement": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "acknowledgement": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_acked": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Acknowledgement",
          "description": "MsgAcknowledgement receives incoming IBC acknowledgement"
        },
        "ibc.core.channel.v1.Packet": {
          "properties": {
            "sequence": {
              "type": "string",
              "description": "number corresponds to the order of sends and receives, where a Packet with an earlier sequence number must be sent and received before a Packet with a later sequence number."
            },
            "source_port": {
              "type": "string",
              "description": "identifies the port on the sending chain."
            },
            "source_channel": {
              "type": "string",
              "description": "identifies the channel end on the sending chain."
            },
            "destination_port": {
              "type": "string",
              "description": "identifies the port on the receiving chain."
            },
            "destination_channel": {
              "type": "string",
              "description": "identifies the channel end on the receiving chain."
            },
            "data": {
              "type": "string",
              "description": "actual opaque bytes transferred directly to the application module",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "timeout_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false,
              "description": "block height after which the packet times out"
            },
            "timeout_timestamp": {
              "type": "string",
              "description": "block timestamp (in nanoseconds) after which the packet times out"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Packet",
          "description": "Packet defines a type that carries data across different chains through IBC"
        },
        "MsgChannelCloseConfirm": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "proof_init": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Close Confirm",
          "description": "MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of channel state to CLOSED on Chain A."
        },
        "MsgChannelCloseInit": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Close Init",
          "description": "MsgChannelCloseInit defines a msg sent by a Relayer to Chain A to close a channel with Chain B."
        },
        "MsgChannelOpenAck": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "counterparty_channel_id": {
              "type": "string"
            },
            "counterparty_version": {
              "type": "string"
            },
            "proof_try": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Ack",
          "description": "MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to acknowledge the change of channel state to TRYOPEN on Chain B."
        },
        "MsgChannelOpenConfirm": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "proof_ack": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Confirm",
          "description": "MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of channel state to OPEN on Chain A."
        },
        "MsgChannelOpenInit": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel": {
              "$ref": "#/definitions/ibc.core.channel.v1.Channel",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Init",
          "description": "MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake. It is called by a relayer on Chain A."
        },
        "ibc.core.channel.v1.Channel": {
          "properties": {
            "state": {
              "enum": [
                "STATE_UNINITIALIZED_UNSPECIFIED",
                0,
                "STATE_INIT",
                1,
                "STATE_TRYOPEN",
                2,
                "STATE_OPEN",
                3,
                "STATE_CLOSED",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "State",
              "description": "State defines if a channel is in one of the following states: CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED."
            },
            "ordering": {
              "enum": [
                "ORDER_NONE_UNSPECIFIED",
                0,
                "ORDER_UNORDERED",
                1,
                "ORDER_ORDERED",
                2
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Order",
              "description": "Order defines if a channel is ORDERED or UNORDERED"
            },
            "counterparty": {
              "$ref": "#/definitions/ibc.core.channel.v1.Counterparty",
              "additionalProperties": false,
              "description": "counterparty channel end"
            },
            "connection_hops": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "list of connection identifiers, in order, along which packets sent on this channel will travel"
            },
            "version": {
              "type": "string",
              "description": "opaque channel version, which is agreed upon during the handshake"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Channel",
          "description": "Channel defines pipeline for exactly-once packet delivery between specific modules on separate blockchains, which has at least one end capable of sending packets and one end capable of receiving packets."
        },
        "ibc.core.channel.v1.Counterparty": {
          "properties": {
            "port_id": {
              "type": "string",
              "description": "port on the counterparty chain which owns the other end of the channel."
            },
            "channel_id": {
              "type": "string",
              "description": "channel end on the counterparty chain"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Counterparty",
          "description": "Counterparty defines a channel end counterparty"
        },
        "MsgChannelOpenTry": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "previous_channel_id": {
              "type": "string",
              "description": "Deprecated: this field is unused. Crossing hello's are no longer supported in core IBC."
            },
            "channel": {
              "$ref": "#/definitions/ibc.core.channel.v1.Channel",
              "additionalProperties": false,
              "description": "NOTE: the version field within the channel has been deprecated. Its value will be ignored by core IBC."
            },
            "counterparty_version": {
              "type": "string"
            },
            "proof_init": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Try",
          "description": "MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel on Chain B. The version field within the Channel field has been deprecated. Its value will be ignored by core IBC."
        },
        "MsgRecvPacket": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "proof_commitment": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Recv Packet",
          "description": "MsgRecvPacket receives incoming IBC packet"
        },
        "MsgTimeout": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "proof_unreceived": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "next_sequence_recv": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Timeout",
          "description": "MsgTimeout receives timed-out packet"
        },
        "MsgTimeoutOnClose": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "proof_unreceived": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_close": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "next_sequence_recv": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Timeout On Close",
          "description": "MsgTimeoutOnClose timed-out packet upon counterparty channel closure."
        },
        "MsgCreateClient": {
          "properties": {
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "light client state"
            },
            "consensus_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "consensus state associated with the client that corresponds to a given height."
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Client",
          "description": "MsgCreateClient defines a message to create an IBC client"
        },
        "MsgSubmitMisbehaviour": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "client unique identifier"
            },
            "misbehaviour": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "misbehaviour used for freezing the light client"
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Misbehaviour",
          "description": "MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for light client misbehaviour."
        },
        "MsgUpdateClient": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "client unique identifier"
            },
            "header": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "header to update the light client"
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Client",
          "description": "MsgUpdateClient defines an sdk.Msg to update a IBC client state using the given header."
        },
        "MsgUpgradeClient": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "client unique identifier"
            },
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "upgraded client state"
            },
            "consensus_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "upgraded consensus state, only contains enough information to serve as a basis of trust in update logic"
            },
            "proof_upgrade_client": {
              "type": "string",
              "description": "proof that old chain committed to new client",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_upgrade_consensus_state": {
              "type": "string",
              "description": "proof that old chain committed to new consensus state",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Upgrade Client",
          "description": "MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client state"
        },
        "MsgConnectionOpenAck": {
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "counterparty_connection_id": {
              "type": "string"
            },
            "version": {
              "$ref": "#/definitions/ibc.core.connection.v1.Version",
              "additionalProperties": false
            },
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "proof_try": {
              "type": "string",
              "description": "proof of the initialization the connection on Chain B: `UNITIALIZED -> TRYOPEN`",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_client": {
              "type": "string",
              "description": "proof of client state included in message",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_consensus": {
              "type": "string",
              "description": "proof of client consensus state",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "consensus_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Ack",
          "description": "MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to acknowledge the change of connection state to TRYOPEN on Chain B."
        },
        "ibc.core.connection.v1.Version": {
          "properties": {
            "identifier": {
              "type": "string",
              "description": "unique version identifier"
            },
            "features": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "list of features compatible with the specified identifier"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Version",
          "description": "Version defines the versioning scheme used to negotiate the IBC verison in the connection handshake."
        },
        "MsgConnectionOpenConfirm": {
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "proof_ack": {
              "type": "string",
              "description": "proof for the change of the connection state on Chain A: `INIT -> OPEN`",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Confirm",
          "description": "MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of connection state to OPEN on Chain A."
        },
        "MsgConnectionOpenInit": {
          "properties": {
            "client_id": {
              "type": "string"
            },
            "counterparty": {
              "$ref": "#/definitions/ibc.core.connection.v1.Counterparty",
              "additionalProperties": false
            },
            "version": {
              "$ref": "#/definitions/ibc.core.connection.v1.Version",
              "additionalProperties": false
            },
            "delay_period": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Init",
          "description": "MsgConnectionOpenInit defines the msg sent by an account on Chain A to initialize a connection with Chain B."
        },
        "ibc.core.commitment.v1.MerklePrefix": {
          "properties": {
            "key_prefix": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Merkle Prefix",
          "description": "MerklePrefix is merkle path prefixed to the key. The constructed key from the Path and the key will be append(Path.KeyPath, append(Path.KeyPrefix, key...))"
        },
        "ibc.core.connection.v1.Counterparty": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "identifies the client on the counterparty chain associated with a given connection."
            },
            "connection_id": {
              "type": "string",
              "description": "identifies the connection end on the counterparty chain associated with a given connection."
            },
            "prefix": {
              "$ref": "#/definitions/ibc.core.commitment.v1.MerklePrefix",
              "additionalProperties": false,
              "description": "commitment merkle prefix of the counterparty chain."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Counterparty",
          "description": "Counterparty defines the counterparty chain associated with a connection end."
        },
        "MsgConnectionOpenTry": {
          "properties": {
            "client_id": {
              "type": "string"
            },
            "previous_connection_id": {
              "type": "string",
              "description": "Deprecated: this field is unused. Crossing hellos are no longer supported in core IBC."
            },
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "counterparty": {
              "$ref": "#/definitions/ibc.core.connection.v1.Counterparty",
              "additionalProperties": false
            },
            "delay_period": {
              "type": "string"
            },
            "counterparty_versions": {
              "items": {
                "$ref": "#/definitions/ibc.core.connection.v1.Version"
              },
              "type": "array"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "proof_init": {
              "type": "string",
              "description": "proof of the initialization the connection on Chain A: `UNITIALIZED -> INIT`",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_client": {
              "type": "string",
              "description": "proof of client state included in message",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_consensus": {
              "type": "string",
              "description": "proof of client consensus state",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "consensus_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Try",
          "description": "MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a connection on Chain B."
        },
        "MsgAccept": {
          "properties": {
            "name": {
              "type": "string"
            },
            "newOwner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Accept"
        },
        "MsgBurnCoins": {
          "properties": {
            "owner": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Burn Coins"
        },
        "MsgBuy": {
          "properties": {
            "buyer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Buy"
        },
        "MsgDeleteName": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Name"
        },
        "MsgMintCoins": {
          "properties": {
            "owner": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Mint Coins"
        },
        "MsgOfferTo": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "newOwner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Offer To"
        },
        "MsgRegister": {
          "properties": {
            "commit": {
              "type": "string",
              "description": "The Shake256(owner+name+salt) hexdigest"
            },
            "owner": {
              "type": "string",
              "description": "Address of the owner"
            },
            "price": {
              "type": "string",
              "description": "The price that this name is valued at and can be purchased for example 100dys. The monthly fee is 1% of this price."
            },
            "auto_renew": {
              "type": "boolean",
              "description": "Should the name be automatically renewed"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Register"
        },
        "MsgReveal": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "salt": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Reveal"
        },
        "MsgSetPriceAndExtend": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "price": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Set Price And Extend"
        },
        "MsgUpdateName": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            },
            "authorized": {
              "type": "string"
            },
            "auto_renew": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Name"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.authz.v1beta1/sendMsgRevoke": {
    "module_name": "cosmos.authz.v1beta1",
    "name": "Revoke",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgRevoke",
      "definitions": {
        "MsgRevoke": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "grantee": {
              "type": "string"
            },
            "msg_type_url": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Revoke",
          "description": "MsgRevoke revokes any authorization with the provided sdk.Msg type on the granter's account with that has been granted to the grantee."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.bank.v1beta1/QueryBalance": {
    "module_name": "cosmos.bank.v1beta1",
    "name": "Balance",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryBalanceRequest",
      "definitions": {
        "QueryBalanceRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the address to query balances for."
            },
            "denom": {
              "type": "string",
              "description": "denom is the coin denom to query balances for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Balance Request",
          "description": "QueryBalanceRequest is the request type for the Query/Balance RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/bank/v1beta1/balances/{address}/by_denom",
    "http_rules": [
      {
        "Params": [
          "address"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.bank.v1beta1/QueryAllBalances": {
    "module_name": "cosmos.bank.v1beta1",
    "name": "AllBalances",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAllBalancesRequest",
      "definitions": {
        "QueryAllBalancesRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the address to query balances for."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query All Balances Request",
          "description": "QueryBalanceRequest is the request type for the Query/AllBalances RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/bank/v1beta1/balances/{address}",
    "http_rules": [
      {
        "Params": [
          "address"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.bank.v1beta1/QuerySpendableBalances": {
    "module_name": "cosmos.bank.v1beta1",
    "name": "SpendableBalances",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QuerySpendableBalancesRequest",
      "definitions": {
        "QuerySpendableBalancesRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the address to query spendable balances for."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Spendable Balances Request",
          "description": "QuerySpendableBalancesRequest defines the gRPC request structure for querying an account's spendable balances. Since: cosmos-sdk 0.46"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/bank/v1beta1/spendable_balances/{address}",
    "http_rules": [
      {
        "Params": [
          "address"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.bank.v1beta1/QueryTotalSupply": {
    "module_name": "cosmos.bank.v1beta1",
    "name": "TotalSupply",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryTotalSupplyRequest",
      "definitions": {
        "QueryTotalSupplyRequest": {
          "properties": {
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Total Supply Request",
          "description": "QueryTotalSupplyRequest is the request type for the Query/TotalSupply RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/bank/v1beta1/supply",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.bank.v1beta1/QuerySupplyOf": {
    "module_name": "cosmos.bank.v1beta1",
    "name": "SupplyOf",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QuerySupplyOfRequest",
      "definitions": {
        "QuerySupplyOfRequest": {
          "properties": {
            "denom": {
              "type": "string",
              "description": "denom is the coin denom to query balances for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Supply Of Request",
          "description": "QuerySupplyOfRequest is the request type for the Query/SupplyOf RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/bank/v1beta1/supply/by_denom",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.bank.v1beta1/QueryParams": {
    "module_name": "cosmos.bank.v1beta1",
    "name": "Params",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryParamsRequest",
      "definitions": {
        "QueryParamsRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Params Request",
          "description": "QueryParamsRequest defines the request type for querying x/bank parameters."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/bank/v1beta1/params",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.bank.v1beta1/QueryDenomMetadata": {
    "module_name": "cosmos.bank.v1beta1",
    "name": "DenomMetadata",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDenomMetadataRequest",
      "definitions": {
        "QueryDenomMetadataRequest": {
          "properties": {
            "denom": {
              "type": "string",
              "description": "denom is the coin denom to query the metadata for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Denom Metadata Request",
          "description": "QueryDenomMetadataRequest is the request type for the Query/DenomMetadata RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/bank/v1beta1/denoms_metadata/{denom}",
    "http_rules": [
      {
        "Params": [
          "denom"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.bank.v1beta1/QueryDenomsMetadata": {
    "module_name": "cosmos.bank.v1beta1",
    "name": "DenomsMetadata",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDenomsMetadataRequest",
      "definitions": {
        "QueryDenomsMetadataRequest": {
          "properties": {
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Denoms Metadata Request",
          "description": "QueryDenomsMetadataRequest is the request type for the Query/DenomsMetadata RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/bank/v1beta1/denoms_metadata",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.bank.v1beta1/QueryDenomOwners": {
    "module_name": "cosmos.bank.v1beta1",
    "name": "DenomOwners",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDenomOwnersRequest",
      "definitions": {
        "QueryDenomOwnersRequest": {
          "properties": {
            "denom": {
              "type": "string",
              "description": "denom defines the coin denomination to query all account holders for."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Denom Owners Request",
          "description": "QueryDenomOwnersRequest defines the request type for the DenomOwners RPC query, which queries for a paginated set of all account holders of a particular denomination."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/bank/v1beta1/denom_owners/{denom}",
    "http_rules": [
      {
        "Params": [
          "denom"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.bank.v1beta1/sendMsgSend": {
    "module_name": "cosmos.bank.v1beta1",
    "name": "Send",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgSend",
      "definitions": {
        "MsgSend": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Send",
          "description": "MsgSend represents a message to send coins from one account to another."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.bank.v1beta1/sendMsgMultiSend": {
    "module_name": "cosmos.bank.v1beta1",
    "name": "MultiSend",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgMultiSend",
      "definitions": {
        "MsgMultiSend": {
          "properties": {
            "inputs": {
              "items": {
                "$ref": "#/definitions/cosmos.bank.v1beta1.Input"
              },
              "type": "array"
            },
            "outputs": {
              "items": {
                "$ref": "#/definitions/cosmos.bank.v1beta1.Output"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Multi Send",
          "description": "MsgMultiSend represents an arbitrary multi-in, multi-out send message."
        },
        "cosmos.bank.v1beta1.Input": {
          "properties": {
            "address": {
              "type": "string"
            },
            "coins": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Input",
          "description": "Input models transaction input."
        },
        "cosmos.bank.v1beta1.Output": {
          "properties": {
            "address": {
              "type": "string"
            },
            "coins": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Output",
          "description": "Output models transaction outputs."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.distribution.v1beta1/QueryParams": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "Params",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryParamsRequest",
      "definitions": {
        "QueryParamsRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Params Request",
          "description": "QueryParamsRequest is the request type for the Query/Params RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/distribution/v1beta1/params",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.distribution.v1beta1/QueryValidatorOutstandingRewards": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "ValidatorOutstandingRewards",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryValidatorOutstandingRewardsRequest",
      "definitions": {
        "QueryValidatorOutstandingRewardsRequest": {
          "properties": {
            "validator_address": {
              "type": "string",
              "description": "validator_address defines the validator address to query for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Validator Outstanding Rewards Request",
          "description": "QueryValidatorOutstandingRewardsRequest is the request type for the Query/ValidatorOutstandingRewards RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards",
    "http_rules": [
      {
        "Params": [
          "validator_address"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.distribution.v1beta1/QueryValidatorCommission": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "ValidatorCommission",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryValidatorCommissionRequest",
      "definitions": {
        "QueryValidatorCommissionRequest": {
          "properties": {
            "validator_address": {
              "type": "string",
              "description": "validator_address defines the validator address to query for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Validator Commission Request",
          "description": "QueryValidatorCommissionRequest is the request type for the Query/ValidatorCommission RPC method"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/distribution/v1beta1/validators/{validator_address}/commission",
    "http_rules": [
      {
        "Params": [
          "validator_address"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.distribution.v1beta1/QueryValidatorSlashes": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "ValidatorSlashes",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryValidatorSlashesRequest",
      "definitions": {
        "QueryValidatorSlashesRequest": {
          "properties": {
            "validator_address": {
              "type": "string",
              "description": "validator_address defines the validator address to query for."
            },
            "starting_height": {
              "type": "string",
              "description": "starting_height defines the optional starting height to query the slashes."
            },
            "ending_height": {
              "type": "string",
              "description": "starting_height defines the optional ending height to query the slashes."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Validator Slashes Request",
          "description": "QueryValidatorSlashesRequest is the request type for the Query/ValidatorSlashes RPC method"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/distribution/v1beta1/validators/{validator_address}/slashes",
    "http_rules": [
      {
        "Params": [
          "validator_address"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.distribution.v1beta1/QueryDelegationRewards": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "DelegationRewards",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDelegationRewardsRequest",
      "definitions": {
        "QueryDelegationRewardsRequest": {
          "properties": {
            "delegator_address": {
              "type": "string",
              "description": "delegator_address defines the delegator address to query for."
            },
            "validator_address": {
              "type": "string",
              "description": "validator_address defines the validator address to query for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Delegation Rewards Request",
          "description": "QueryDelegationRewardsRequest is the request type for the Query/DelegationRewards RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}",
    "http_rules": [
      {
        "Params": [
          "delegator_address",
          "validator_address"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.distribution.v1beta1/QueryDelegationTotalRewards": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "DelegationTotalRewards",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDelegationTotalRewardsRequest",
      "definitions": {
        "QueryDelegationTotalRewardsRequest": {
          "properties": {
            "delegator_address": {
              "type": "string",
              "description": "delegator_address defines the delegator address to query for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Delegation Total Rewards Request",
          "description": "QueryDelegationTotalRewardsRequest is the request type for the Query/DelegationTotalRewards RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards",
    "http_rules": [
      {
        "Params": [
          "delegator_address"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.distribution.v1beta1/QueryDelegatorValidators": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "DelegatorValidators",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDelegatorValidatorsRequest",
      "definitions": {
        "QueryDelegatorValidatorsRequest": {
          "properties": {
            "delegator_address": {
              "type": "string",
              "description": "delegator_address defines the delegator address to query for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Delegator Validators Request",
          "description": "QueryDelegatorValidatorsRequest is the request type for the Query/DelegatorValidators RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators",
    "http_rules": [
      {
        "Params": [
          "delegator_address"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.distribution.v1beta1/QueryDelegatorWithdrawAddress": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "DelegatorWithdrawAddress",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDelegatorWithdrawAddressRequest",
      "definitions": {
        "QueryDelegatorWithdrawAddressRequest": {
          "properties": {
            "delegator_address": {
              "type": "string",
              "description": "delegator_address defines the delegator address to query for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Delegator Withdraw Address Request",
          "description": "QueryDelegatorWithdrawAddressRequest is the request type for the Query/DelegatorWithdrawAddress RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address",
    "http_rules": [
      {
        "Params": [
          "delegator_address"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.distribution.v1beta1/QueryCommunityPool": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "CommunityPool",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryCommunityPoolRequest",
      "definitions": {
        "QueryCommunityPoolRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Community Pool Request",
          "description": "QueryCommunityPoolRequest is the request type for the Query/CommunityPool RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/distribution/v1beta1/community_pool",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.distribution.v1beta1/sendMsgSetWithdrawAddress": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "SetWithdrawAddress",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgSetWithdrawAddress",
      "definitions": {
        "MsgSetWithdrawAddress": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "withdraw_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Set Withdraw Address",
          "description": "MsgSetWithdrawAddress sets the withdraw address for a delegator (or validator self-delegation)."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.distribution.v1beta1/sendMsgWithdrawDelegatorReward": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "WithdrawDelegatorReward",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgWithdrawDelegatorReward",
      "definitions": {
        "MsgWithdrawDelegatorReward": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Delegator Reward",
          "description": "MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator from a single validator."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.distribution.v1beta1/sendMsgWithdrawValidatorCommission": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "WithdrawValidatorCommission",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgWithdrawValidatorCommission",
      "definitions": {
        "MsgWithdrawValidatorCommission": {
          "properties": {
            "validator_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Validator Commission",
          "description": "MsgWithdrawValidatorCommission withdraws the full commission to the validator address."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.distribution.v1beta1/sendMsgFundCommunityPool": {
    "module_name": "cosmos.distribution.v1beta1",
    "name": "FundCommunityPool",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgFundCommunityPool",
      "definitions": {
        "MsgFundCommunityPool": {
          "properties": {
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            },
            "depositor": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Fund Community Pool",
          "description": "MsgFundCommunityPool allows an account to directly fund the community pool."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.feegrant.v1beta1/QueryAllowance": {
    "module_name": "cosmos.feegrant.v1beta1",
    "name": "Allowance",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAllowanceRequest",
      "definitions": {
        "QueryAllowanceRequest": {
          "properties": {
            "granter": {
              "type": "string",
              "description": "granter is the address of the user granting an allowance of their funds."
            },
            "grantee": {
              "type": "string",
              "description": "grantee is the address of the user being granted an allowance of another user's funds."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Allowance Request",
          "description": "QueryAllowanceRequest is the request type for the Query/Allowance RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}",
    "http_rules": [
      {
        "Params": [
          "granter",
          "grantee"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.feegrant.v1beta1/QueryAllowances": {
    "module_name": "cosmos.feegrant.v1beta1",
    "name": "Allowances",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAllowancesRequest",
      "definitions": {
        "QueryAllowancesRequest": {
          "properties": {
            "grantee": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Allowances Request",
          "description": "QueryAllowancesRequest is the request type for the Query/Allowances RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/feegrant/v1beta1/allowances/{grantee}",
    "http_rules": [
      {
        "Params": [
          "grantee"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.feegrant.v1beta1/QueryAllowancesByGranter": {
    "module_name": "cosmos.feegrant.v1beta1",
    "name": "AllowancesByGranter",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAllowancesByGranterRequest",
      "definitions": {
        "QueryAllowancesByGranterRequest": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Allowances By Granter Request",
          "description": "QueryAllowancesByGranterRequest is the request type for the Query/AllowancesByGranter RPC method. Since: cosmos-sdk 0.46"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/feegrant/v1beta1/issued/{granter}",
    "http_rules": [
      {
        "Params": [
          "granter"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.feegrant.v1beta1/sendMsgGrantAllowance": {
    "module_name": "cosmos.feegrant.v1beta1",
    "name": "GrantAllowance",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgGrantAllowance",
      "definitions": {
        "MsgGrantAllowance": {
          "properties": {
            "granter": {
              "type": "string",
              "description": "granter is the address of the user granting an allowance of their funds."
            },
            "grantee": {
              "type": "string",
              "description": "grantee is the address of the user being granted an allowance of another user's funds."
            },
            "allowance": {
              "oneOf": [
                {
                  "title": "cosmos.authz.v1beta1.MsgExec",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.authz.v1beta1.MsgExec",
                      "enum": [
                        "/cosmos.authz.v1beta1.MsgExec"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgExec"
                    }
                  }
                },
                {
                  "title": "cosmos.authz.v1beta1.MsgGrant",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.authz.v1beta1.MsgGrant",
                      "enum": [
                        "/cosmos.authz.v1beta1.MsgGrant"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgGrant"
                    }
                  }
                },
                {
                  "title": "cosmos.authz.v1beta1.MsgRevoke",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.authz.v1beta1.MsgRevoke",
                      "enum": [
                        "/cosmos.authz.v1beta1.MsgRevoke"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgRevoke"
                    }
                  }
                },
                {
                  "title": "cosmos.bank.v1beta1.MsgMultiSend",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.bank.v1beta1.MsgMultiSend",
                      "enum": [
                        "/cosmos.bank.v1beta1.MsgMultiSend"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgMultiSend"
                    }
                  }
                },
                {
                  "title": "cosmos.bank.v1beta1.MsgSend",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.bank.v1beta1.MsgSend",
                      "enum": [
                        "/cosmos.bank.v1beta1.MsgSend"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgSend"
                    }
                  }
                },
                {
                  "title": "cosmos.crisis.v1beta1.MsgVerifyInvariant",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.crisis.v1beta1.MsgVerifyInvariant",
                      "enum": [
                        "/cosmos.crisis.v1beta1.MsgVerifyInvariant"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgVerifyInvariant"
                    }
                  }
                },
                {
                  "title": "cosmos.distribution.v1beta1.MsgFundCommunityPool",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.distribution.v1beta1.MsgFundCommunityPool",
                      "enum": [
                        "/cosmos.distribution.v1beta1.MsgFundCommunityPool"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgFundCommunityPool"
                    }
                  }
                },
                {
                  "title": "cosmos.distribution.v1beta1.MsgSetWithdrawAddress",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress",
                      "enum": [
                        "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgSetWithdrawAddress"
                    }
                  }
                },
                {
                  "title": "cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
                      "enum": [
                        "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgWithdrawDelegatorReward"
                    }
                  }
                },
                {
                  "title": "cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",
                      "enum": [
                        "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgWithdrawValidatorCommission"
                    }
                  }
                },
                {
                  "title": "cosmos.evidence.v1beta1.MsgSubmitEvidence",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.evidence.v1beta1.MsgSubmitEvidence",
                      "enum": [
                        "/cosmos.evidence.v1beta1.MsgSubmitEvidence"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgSubmitEvidence"
                    }
                  }
                },
                {
                  "title": "cosmos.feegrant.v1beta1.MsgGrantAllowance",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.feegrant.v1beta1.MsgGrantAllowance",
                      "enum": [
                        "/cosmos.feegrant.v1beta1.MsgGrantAllowance"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgGrantAllowance"
                    }
                  }
                },
                {
                  "title": "cosmos.feegrant.v1beta1.MsgRevokeAllowance",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.feegrant.v1beta1.MsgRevokeAllowance",
                      "enum": [
                        "/cosmos.feegrant.v1beta1.MsgRevokeAllowance"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgRevokeAllowance"
                    }
                  }
                },
                {
                  "title": "cosmos.gov.v1.MsgDeposit",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.gov.v1.MsgDeposit",
                      "enum": [
                        "/cosmos.gov.v1.MsgDeposit"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgDeposit"
                    }
                  }
                },
                {
                  "title": "cosmos.gov.v1.MsgExecLegacyContent",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.gov.v1.MsgExecLegacyContent",
                      "enum": [
                        "/cosmos.gov.v1.MsgExecLegacyContent"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgExecLegacyContent"
                    }
                  }
                },
                {
                  "title": "cosmos.gov.v1.MsgSubmitProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.gov.v1.MsgSubmitProposal",
                      "enum": [
                        "/cosmos.gov.v1.MsgSubmitProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgSubmitProposal"
                    }
                  }
                },
                {
                  "title": "cosmos.gov.v1.MsgVote",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.gov.v1.MsgVote",
                      "enum": [
                        "/cosmos.gov.v1.MsgVote"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgVote"
                    }
                  }
                },
                {
                  "title": "cosmos.gov.v1.MsgVoteWeighted",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.gov.v1.MsgVoteWeighted",
                      "enum": [
                        "/cosmos.gov.v1.MsgVoteWeighted"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgVoteWeighted"
                    }
                  }
                },
                {
                  "title": "cosmos.gov.v1beta1.MsgDeposit",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.gov.v1beta1.MsgDeposit",
                      "enum": [
                        "/cosmos.gov.v1beta1.MsgDeposit"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgDeposit"
                    }
                  }
                },
                {
                  "title": "cosmos.gov.v1beta1.MsgSubmitProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.gov.v1beta1.MsgSubmitProposal",
                      "enum": [
                        "/cosmos.gov.v1beta1.MsgSubmitProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgSubmitProposal"
                    }
                  }
                },
                {
                  "title": "cosmos.gov.v1beta1.MsgVote",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.gov.v1beta1.MsgVote",
                      "enum": [
                        "/cosmos.gov.v1beta1.MsgVote"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgVote"
                    }
                  }
                },
                {
                  "title": "cosmos.gov.v1beta1.MsgVoteWeighted",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.gov.v1beta1.MsgVoteWeighted",
                      "enum": [
                        "/cosmos.gov.v1beta1.MsgVoteWeighted"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgVoteWeighted"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgCreateGroup",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgCreateGroup",
                      "enum": [
                        "/cosmos.group.v1.MsgCreateGroup"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgCreateGroup"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgCreateGroupPolicy",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgCreateGroupPolicy",
                      "enum": [
                        "/cosmos.group.v1.MsgCreateGroupPolicy"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgCreateGroupPolicy"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgCreateGroupWithPolicy",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgCreateGroupWithPolicy",
                      "enum": [
                        "/cosmos.group.v1.MsgCreateGroupWithPolicy"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgCreateGroupWithPolicy"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgExec",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgExec",
                      "enum": [
                        "/cosmos.group.v1.MsgExec"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgExec"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgLeaveGroup",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgLeaveGroup",
                      "enum": [
                        "/cosmos.group.v1.MsgLeaveGroup"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgLeaveGroup"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgSubmitProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgSubmitProposal",
                      "enum": [
                        "/cosmos.group.v1.MsgSubmitProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgSubmitProposal"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgUpdateGroupAdmin",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgUpdateGroupAdmin",
                      "enum": [
                        "/cosmos.group.v1.MsgUpdateGroupAdmin"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUpdateGroupAdmin"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgUpdateGroupMembers",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgUpdateGroupMembers",
                      "enum": [
                        "/cosmos.group.v1.MsgUpdateGroupMembers"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUpdateGroupMembers"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgUpdateGroupMetadata",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgUpdateGroupMetadata",
                      "enum": [
                        "/cosmos.group.v1.MsgUpdateGroupMetadata"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUpdateGroupMetadata"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgUpdateGroupPolicyAdmin",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin",
                      "enum": [
                        "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUpdateGroupPolicyAdmin"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",
                      "enum": [
                        "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUpdateGroupPolicyDecisionPolicy"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgUpdateGroupPolicyMetadata",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgUpdateGroupPolicyMetadata",
                      "enum": [
                        "/cosmos.group.v1.MsgUpdateGroupPolicyMetadata"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUpdateGroupPolicyMetadata"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgVote",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgVote",
                      "enum": [
                        "/cosmos.group.v1.MsgVote"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgVote"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.MsgWithdrawProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.MsgWithdrawProposal",
                      "enum": [
                        "/cosmos.group.v1.MsgWithdrawProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgWithdrawProposal"
                    }
                  }
                },
                {
                  "title": "cosmos.slashing.v1beta1.MsgUnjail",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.slashing.v1beta1.MsgUnjail",
                      "enum": [
                        "/cosmos.slashing.v1beta1.MsgUnjail"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUnjail"
                    }
                  }
                },
                {
                  "title": "cosmos.staking.v1beta1.MsgBeginRedelegate",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.staking.v1beta1.MsgBeginRedelegate",
                      "enum": [
                        "/cosmos.staking.v1beta1.MsgBeginRedelegate"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgBeginRedelegate"
                    }
                  }
                },
                {
                  "title": "cosmos.staking.v1beta1.MsgCancelUnbondingDelegation",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation",
                      "enum": [
                        "/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgCancelUnbondingDelegation"
                    }
                  }
                },
                {
                  "title": "cosmos.staking.v1beta1.MsgCreateValidator",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.staking.v1beta1.MsgCreateValidator",
                      "enum": [
                        "/cosmos.staking.v1beta1.MsgCreateValidator"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgCreateValidator"
                    }
                  }
                },
                {
                  "title": "cosmos.staking.v1beta1.MsgDelegate",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.staking.v1beta1.MsgDelegate",
                      "enum": [
                        "/cosmos.staking.v1beta1.MsgDelegate"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgDelegate"
                    }
                  }
                },
                {
                  "title": "cosmos.staking.v1beta1.MsgEditValidator",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.staking.v1beta1.MsgEditValidator",
                      "enum": [
                        "/cosmos.staking.v1beta1.MsgEditValidator"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgEditValidator"
                    }
                  }
                },
                {
                  "title": "cosmos.staking.v1beta1.MsgUndelegate",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.staking.v1beta1.MsgUndelegate",
                      "enum": [
                        "/cosmos.staking.v1beta1.MsgUndelegate"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUndelegate"
                    }
                  }
                },
                {
                  "title": "cosmos.upgrade.v1beta1.MsgCancelUpgrade",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.upgrade.v1beta1.MsgCancelUpgrade",
                      "enum": [
                        "/cosmos.upgrade.v1beta1.MsgCancelUpgrade"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgCancelUpgrade"
                    }
                  }
                },
                {
                  "title": "cosmos.upgrade.v1beta1.MsgSoftwareUpgrade",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade",
                      "enum": [
                        "/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgSoftwareUpgrade"
                    }
                  }
                },
                {
                  "title": "cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount",
                      "enum": [
                        "/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgCreatePeriodicVestingAccount"
                    }
                  }
                },
                {
                  "title": "cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount",
                      "enum": [
                        "/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgCreatePermanentLockedAccount"
                    }
                  }
                },
                {
                  "title": "cosmos.vesting.v1beta1.MsgCreateVestingAccount",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.vesting.v1beta1.MsgCreateVestingAccount",
                      "enum": [
                        "/cosmos.vesting.v1beta1.MsgCreateVestingAccount"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgCreateVestingAccount"
                    }
                  }
                },
                {
                  "title": "dyson.MsgCreateScheduledRun",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/dyson.MsgCreateScheduledRun",
                      "enum": [
                        "/dyson.MsgCreateScheduledRun"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgCreateScheduledRun"
                    }
                  }
                },
                {
                  "title": "dyson.MsgCreateStorage",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/dyson.MsgCreateStorage",
                      "enum": [
                        "/dyson.MsgCreateStorage"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgCreateStorage"
                    }
                  }
                },
                {
                  "title": "dyson.MsgDeleteScheduledRun",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/dyson.MsgDeleteScheduledRun",
                      "enum": [
                        "/dyson.MsgDeleteScheduledRun"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgDeleteScheduledRun"
                    }
                  }
                },
                {
                  "title": "dyson.MsgDeleteScript",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/dyson.MsgDeleteScript",
                      "enum": [
                        "/dyson.MsgDeleteScript"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgDeleteScript"
                    }
                  }
                },
                {
                  "title": "dyson.MsgDeleteStorage",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/dyson.MsgDeleteStorage",
                      "enum": [
                        "/dyson.MsgDeleteStorage"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgDeleteStorage"
                    }
                  }
                },
                {
                  "title": "dyson.MsgDeployAutonomousScript",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/dyson.MsgDeployAutonomousScript",
                      "enum": [
                        "/dyson.MsgDeployAutonomousScript"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgDeployAutonomousScript"
                    }
                  }
                },
                {
                  "title": "dyson.MsgRun",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/dyson.MsgRun",
                      "enum": [
                        "/dyson.MsgRun"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgRun"
                    }
                  }
                },
                {
                  "title": "dyson.MsgUpdateScheduledRun",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/dyson.MsgUpdateScheduledRun",
                      "enum": [
                        "/dyson.MsgUpdateScheduledRun"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUpdateScheduledRun"
                    }
                  }
                },
                {
                  "title": "dyson.MsgUpdateScript",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/dyson.MsgUpdateScript",
                      "enum": [
                        "/dyson.MsgUpdateScript"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUpdateScript"
                    }
                  }
                },
                {
                  "title": "dyson.MsgUpdateStorage",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/dyson.MsgUpdateStorage",
                      "enum": [
                        "/dyson.MsgUpdateStorage"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUpdateStorage"
                    }
                  }
                },
                {
                  "title": "ibc.applications.transfer.v1.MsgTransfer",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.applications.transfer.v1.MsgTransfer",
                      "enum": [
                        "/ibc.applications.transfer.v1.MsgTransfer"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgTransfer"
                    }
                  }
                },
                {
                  "title": "ibc.core.channel.v1.MsgAcknowledgement",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.channel.v1.MsgAcknowledgement",
                      "enum": [
                        "/ibc.core.channel.v1.MsgAcknowledgement"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgAcknowledgement"
                    }
                  }
                },
                {
                  "title": "ibc.core.channel.v1.MsgChannelCloseConfirm",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.channel.v1.MsgChannelCloseConfirm",
                      "enum": [
                        "/ibc.core.channel.v1.MsgChannelCloseConfirm"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgChannelCloseConfirm"
                    }
                  }
                },
                {
                  "title": "ibc.core.channel.v1.MsgChannelCloseInit",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.channel.v1.MsgChannelCloseInit",
                      "enum": [
                        "/ibc.core.channel.v1.MsgChannelCloseInit"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgChannelCloseInit"
                    }
                  }
                },
                {
                  "title": "ibc.core.channel.v1.MsgChannelOpenAck",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.channel.v1.MsgChannelOpenAck",
                      "enum": [
                        "/ibc.core.channel.v1.MsgChannelOpenAck"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgChannelOpenAck"
                    }
                  }
                },
                {
                  "title": "ibc.core.channel.v1.MsgChannelOpenConfirm",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.channel.v1.MsgChannelOpenConfirm",
                      "enum": [
                        "/ibc.core.channel.v1.MsgChannelOpenConfirm"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgChannelOpenConfirm"
                    }
                  }
                },
                {
                  "title": "ibc.core.channel.v1.MsgChannelOpenInit",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.channel.v1.MsgChannelOpenInit",
                      "enum": [
                        "/ibc.core.channel.v1.MsgChannelOpenInit"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgChannelOpenInit"
                    }
                  }
                },
                {
                  "title": "ibc.core.channel.v1.MsgChannelOpenTry",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.channel.v1.MsgChannelOpenTry",
                      "enum": [
                        "/ibc.core.channel.v1.MsgChannelOpenTry"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgChannelOpenTry"
                    }
                  }
                },
                {
                  "title": "ibc.core.channel.v1.MsgRecvPacket",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.channel.v1.MsgRecvPacket",
                      "enum": [
                        "/ibc.core.channel.v1.MsgRecvPacket"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgRecvPacket"
                    }
                  }
                },
                {
                  "title": "ibc.core.channel.v1.MsgTimeout",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.channel.v1.MsgTimeout",
                      "enum": [
                        "/ibc.core.channel.v1.MsgTimeout"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgTimeout"
                    }
                  }
                },
                {
                  "title": "ibc.core.channel.v1.MsgTimeoutOnClose",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.channel.v1.MsgTimeoutOnClose",
                      "enum": [
                        "/ibc.core.channel.v1.MsgTimeoutOnClose"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgTimeoutOnClose"
                    }
                  }
                },
                {
                  "title": "ibc.core.client.v1.MsgCreateClient",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.client.v1.MsgCreateClient",
                      "enum": [
                        "/ibc.core.client.v1.MsgCreateClient"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgCreateClient"
                    }
                  }
                },
                {
                  "title": "ibc.core.client.v1.MsgSubmitMisbehaviour",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.client.v1.MsgSubmitMisbehaviour",
                      "enum": [
                        "/ibc.core.client.v1.MsgSubmitMisbehaviour"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgSubmitMisbehaviour"
                    }
                  }
                },
                {
                  "title": "ibc.core.client.v1.MsgUpdateClient",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.client.v1.MsgUpdateClient",
                      "enum": [
                        "/ibc.core.client.v1.MsgUpdateClient"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUpdateClient"
                    }
                  }
                },
                {
                  "title": "ibc.core.client.v1.MsgUpgradeClient",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.client.v1.MsgUpgradeClient",
                      "enum": [
                        "/ibc.core.client.v1.MsgUpgradeClient"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUpgradeClient"
                    }
                  }
                },
                {
                  "title": "ibc.core.connection.v1.MsgConnectionOpenAck",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.connection.v1.MsgConnectionOpenAck",
                      "enum": [
                        "/ibc.core.connection.v1.MsgConnectionOpenAck"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgConnectionOpenAck"
                    }
                  }
                },
                {
                  "title": "ibc.core.connection.v1.MsgConnectionOpenConfirm",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.connection.v1.MsgConnectionOpenConfirm",
                      "enum": [
                        "/ibc.core.connection.v1.MsgConnectionOpenConfirm"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgConnectionOpenConfirm"
                    }
                  }
                },
                {
                  "title": "ibc.core.connection.v1.MsgConnectionOpenInit",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.connection.v1.MsgConnectionOpenInit",
                      "enum": [
                        "/ibc.core.connection.v1.MsgConnectionOpenInit"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgConnectionOpenInit"
                    }
                  }
                },
                {
                  "title": "ibc.core.connection.v1.MsgConnectionOpenTry",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.connection.v1.MsgConnectionOpenTry",
                      "enum": [
                        "/ibc.core.connection.v1.MsgConnectionOpenTry"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgConnectionOpenTry"
                    }
                  }
                },
                {
                  "title": "names.MsgAccept",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/names.MsgAccept",
                      "enum": [
                        "/names.MsgAccept"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgAccept"
                    }
                  }
                },
                {
                  "title": "names.MsgBurnCoins",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/names.MsgBurnCoins",
                      "enum": [
                        "/names.MsgBurnCoins"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgBurnCoins"
                    }
                  }
                },
                {
                  "title": "names.MsgBuy",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/names.MsgBuy",
                      "enum": [
                        "/names.MsgBuy"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgBuy"
                    }
                  }
                },
                {
                  "title": "names.MsgDeleteName",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/names.MsgDeleteName",
                      "enum": [
                        "/names.MsgDeleteName"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgDeleteName"
                    }
                  }
                },
                {
                  "title": "names.MsgMintCoins",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/names.MsgMintCoins",
                      "enum": [
                        "/names.MsgMintCoins"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgMintCoins"
                    }
                  }
                },
                {
                  "title": "names.MsgOfferTo",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/names.MsgOfferTo",
                      "enum": [
                        "/names.MsgOfferTo"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgOfferTo"
                    }
                  }
                },
                {
                  "title": "names.MsgRegister",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/names.MsgRegister",
                      "enum": [
                        "/names.MsgRegister"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgRegister"
                    }
                  }
                },
                {
                  "title": "names.MsgReveal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/names.MsgReveal",
                      "enum": [
                        "/names.MsgReveal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgReveal"
                    }
                  }
                },
                {
                  "title": "names.MsgSetPriceAndExtend",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/names.MsgSetPriceAndExtend",
                      "enum": [
                        "/names.MsgSetPriceAndExtend"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgSetPriceAndExtend"
                    }
                  }
                },
                {
                  "title": "names.MsgUpdateName",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/names.MsgUpdateName",
                      "enum": [
                        "/names.MsgUpdateName"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/MsgUpdateName"
                    }
                  }
                }
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Grant Allowance",
          "description": "MsgGrantAllowance adds permission for Grantee to spend up to Allowance of fees from the account of Granter."
        },
        "MsgExec": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "executor": {
              "type": "string",
              "description": "executor is the account address used to execute the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Exec",
          "description": "MsgExec is the Msg/Exec request type."
        },
        "MsgGrant": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "grantee": {
              "type": "string"
            },
            "grant": {
              "$ref": "#/definitions/cosmos.authz.v1beta1.Grant",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Grant",
          "description": "MsgGrant is a request type for Grant method. It declares authorization to the grantee on behalf of the granter with the provided expiration time."
        },
        "cosmos.authz.v1beta1.Grant": {
          "properties": {
            "authorization": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "expiration": {
              "type": "string",
              "description": "time when the grant will expire and will be pruned. If null, then the grant doesn't have a time expiration (other conditions  in `authorization` may apply to invalidate the grant)",
              "format": "date-time"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Grant",
          "description": "Grant gives permissions to execute the provide method with expiration time."
        },
        "MsgRevoke": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "grantee": {
              "type": "string"
            },
            "msg_type_url": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Revoke",
          "description": "MsgRevoke revokes any authorization with the provided sdk.Msg type on the granter's account with that has been granted to the grantee."
        },
        "MsgMultiSend": {
          "properties": {
            "inputs": {
              "items": {
                "$ref": "#/definitions/cosmos.bank.v1beta1.Input"
              },
              "type": "array"
            },
            "outputs": {
              "items": {
                "$ref": "#/definitions/cosmos.bank.v1beta1.Output"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Multi Send",
          "description": "MsgMultiSend represents an arbitrary multi-in, multi-out send message."
        },
        "cosmos.bank.v1beta1.Input": {
          "properties": {
            "address": {
              "type": "string"
            },
            "coins": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Input",
          "description": "Input models transaction input."
        },
        "cosmos.bank.v1beta1.Output": {
          "properties": {
            "address": {
              "type": "string"
            },
            "coins": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Output",
          "description": "Output models transaction outputs."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "MsgSend": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Send",
          "description": "MsgSend represents a message to send coins from one account to another."
        },
        "MsgVerifyInvariant": {
          "properties": {
            "sender": {
              "type": "string"
            },
            "invariant_module_name": {
              "type": "string"
            },
            "invariant_route": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Verify Invariant",
          "description": "MsgVerifyInvariant represents a message to verify a particular invariance."
        },
        "MsgFundCommunityPool": {
          "properties": {
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            },
            "depositor": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Fund Community Pool",
          "description": "MsgFundCommunityPool allows an account to directly fund the community pool."
        },
        "MsgSetWithdrawAddress": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "withdraw_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Set Withdraw Address",
          "description": "MsgSetWithdrawAddress sets the withdraw address for a delegator (or validator self-delegation)."
        },
        "MsgWithdrawDelegatorReward": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Delegator Reward",
          "description": "MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator from a single validator."
        },
        "MsgWithdrawValidatorCommission": {
          "properties": {
            "validator_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Validator Commission",
          "description": "MsgWithdrawValidatorCommission withdraws the full commission to the validator address."
        },
        "MsgSubmitEvidence": {
          "properties": {
            "submitter": {
              "type": "string"
            },
            "evidence": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Evidence",
          "description": "MsgSubmitEvidence represents a message that supports submitting arbitrary Evidence of misbehavior such as equivocation or counterfactual signing."
        },
        "MsgRevokeAllowance": {
          "properties": {
            "granter": {
              "type": "string",
              "description": "granter is the address of the user granting an allowance of their funds."
            },
            "grantee": {
              "type": "string",
              "description": "grantee is the address of the user being granted an allowance of another user's funds."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Revoke Allowance",
          "description": "MsgRevokeAllowance removes any existing Allowance from Granter to Grantee."
        },
        "MsgDeposit": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "depositor": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Deposit",
          "description": "MsgDeposit defines a message to submit a deposit to an existing proposal."
        },
        "MsgExecLegacyContent": {
          "properties": {
            "content": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "content is the proposal's content."
            },
            "authority": {
              "type": "string",
              "description": "authority must be the gov module address."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Exec Legacy Content",
          "description": "MsgExecLegacyContent is used to wrap the legacy content field into a message. This ensures backwards compatibility with v1beta1.MsgSubmitProposal."
        },
        "MsgSubmitProposal": {
          "properties": {
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "proposers": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "proposers are the account addresses of the proposers. Proposers signatures will be counted as yes votes."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the proposal."
            },
            "messages": {
              "items": {
                "properties": {
                  "type_url": {
                    "type": "string",
                    "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                  },
                  "value": {
                    "type": "string",
                    "description": "Must be a valid serialized protocol buffer of the above specified type.",
                    "format": "binary",
                    "binaryEncoding": "base64"
                  }
                },
                "additionalProperties": false,
                "type": "object",
                "title": "Any",
                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use 'type.googleapis.com/full.type.name' as the type URL and the unpack methods only use the fully qualified type name after the last '/' in the type URL, for example \"foo.bar.com/x/y.z\" will yield type name \"y.z\". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       \"@type\": \"type.googleapis.com/google.profile.Person\",       \"firstName\": <string>,       \"lastName\": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",       \"value\": \"1.212s\"     }"
              },
              "type": "array",
              "description": "messages is a list of `sdk.Msg`s that will be executed if the proposal passes."
            },
            "exec": {
              "enum": [
                "EXEC_UNSPECIFIED",
                0,
                "EXEC_TRY",
                1
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Proposals and Voting",
              "description": "Proposals and Voting  Exec defines modes of execution of a proposal on creation or on new vote."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Proposal",
          "description": "MsgSubmitProposal is the Msg/SubmitProposal request type."
        },
        "MsgVote": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "voter": {
              "type": "string",
              "description": "voter is the voter account address."
            },
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given proposal."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the vote."
            },
            "exec": {
              "enum": [
                "EXEC_UNSPECIFIED",
                0,
                "EXEC_TRY",
                1
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Proposals and Voting",
              "description": "Proposals and Voting  Exec defines modes of execution of a proposal on creation or on new vote."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote",
          "description": "MsgVote is the Msg/Vote request type."
        },
        "MsgVoteWeighted": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "voter": {
              "type": "string"
            },
            "options": {
              "items": {
                "$ref": "#/definitions/cosmos.gov.v1beta1.WeightedVoteOption"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote Weighted",
          "description": "MsgVoteWeighted defines a message to cast a vote. Since: cosmos-sdk 0.43"
        },
        "cosmos.gov.v1.WeightedVoteOption": {
          "properties": {
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given governance proposal."
            },
            "weight": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Weighted Vote Option",
          "description": "WeightedVoteOption defines a unit of vote for vote split."
        },
        "cosmos.gov.v1beta1.WeightedVoteOption": {
          "properties": {
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given governance proposal."
            },
            "weight": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Weighted Vote Option",
          "description": "WeightedVoteOption defines a unit of vote for vote split. Since: cosmos-sdk 0.43"
        },
        "MsgCreateGroup": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "members": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "members defines the group members."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the group."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Groups",
          "description": "Groups  MsgCreateGroup is the Msg/CreateGroup request type."
        },
        "cosmos.group.v1.MemberRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the member's account address."
            },
            "weight": {
              "type": "string",
              "description": "weight is the member's voting weight that should be greater than 0."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the member."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Member Request",
          "description": "MemberRequest represents a group member to be used in Msg server requests. Contrary to `Member`, it doesn't have any `added_at` field since this field cannot be set as part of requests."
        },
        "MsgCreateGroupPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the group policy."
            },
            "decision_policy": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "decision_policy specifies the group policy's decision policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Group Policies",
          "description": "Group Policies  MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type."
        },
        "MsgCreateGroupWithPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group and group policy admin."
            },
            "members": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "members defines the group members."
            },
            "group_metadata": {
              "type": "string",
              "description": "group_metadata is any arbitrary metadata attached to the group."
            },
            "group_policy_metadata": {
              "type": "string",
              "description": "group_policy_metadata is any arbitrary metadata attached to the group policy."
            },
            "group_policy_as_admin": {
              "type": "boolean",
              "description": "group_policy_as_admin is a boolean field, if set to true, the group policy account address will be used as group and group policy admin."
            },
            "decision_policy": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "decision_policy specifies the group policy's decision policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Group With Policy",
          "description": "MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type."
        },
        "MsgLeaveGroup": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the account address of the group member."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Leave Group",
          "description": "MsgLeaveGroup is the Msg/LeaveGroup request type."
        },
        "MsgUpdateGroupAdmin": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the current account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "new_admin": {
              "type": "string",
              "description": "new_admin is the group new admin account address."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Admin",
          "description": "MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type."
        },
        "MsgUpdateGroupMembers": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "member_updates": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "member_updates is the list of members to update, set weight to 0 to remove a member."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Members",
          "description": "MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type."
        },
        "MsgUpdateGroupMetadata": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is the updated group's metadata."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Metadata",
          "description": "MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type."
        },
        "MsgUpdateGroupPolicyAdmin": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of the group policy."
            },
            "new_admin": {
              "type": "string",
              "description": "new_admin is the new group policy admin."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Admin",
          "description": "MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type."
        },
        "MsgUpdateGroupPolicyDecisionPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "decision_policy": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "decision_policy is the updated group policy's decision policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Decision Policy",
          "description": "MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type."
        },
        "MsgUpdateGroupPolicyMetadata": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is the updated group policy metadata."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Metadata",
          "description": "MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type."
        },
        "MsgWithdrawProposal": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "address": {
              "type": "string",
              "description": "address is the admin of the group policy or one of the proposer of the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Proposal",
          "description": "MsgWithdrawProposal is the Msg/WithdrawProposal request type."
        },
        "MsgUnjail": {
          "properties": {
            "validator_addr": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Unjail",
          "description": "MsgUnjail defines the Msg/Unjail request type"
        },
        "MsgBeginRedelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_src_address": {
              "type": "string"
            },
            "validator_dst_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Begin Redelegate",
          "description": "MsgBeginRedelegate defines a SDK message for performing a redelegation of coins from a delegator and source validator to a destination validator."
        },
        "MsgCancelUnbondingDelegation": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false,
              "description": "amount is always less than or equal to unbonding delegation entry balance"
            },
            "creation_height": {
              "type": "string",
              "description": "creation_height is the height which the unbonding took place."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Cancel Unbonding Delegation",
          "description": "MsgCancelUnbondingDelegation defines the SDK message for performing a cancel unbonding delegation for delegator Since: cosmos-sdk 0.46"
        },
        "MsgCreateValidator": {
          "properties": {
            "description": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.Description",
              "additionalProperties": false
            },
            "commission": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.CommissionRates",
              "additionalProperties": false
            },
            "min_self_delegation": {
              "type": "string"
            },
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "pubkey": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "value": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Validator",
          "description": "MsgCreateValidator defines a SDK message for creating a new validator."
        },
        "cosmos.staking.v1beta1.CommissionRates": {
          "properties": {
            "rate": {
              "type": "string",
              "description": "rate is the commission rate charged to delegators, as a fraction."
            },
            "max_rate": {
              "type": "string",
              "description": "max_rate defines the maximum commission rate which validator can ever charge, as a fraction."
            },
            "max_change_rate": {
              "type": "string",
              "description": "max_change_rate defines the maximum daily increase of the validator commission, as a fraction."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Commission Rates",
          "description": "CommissionRates defines the initial commission rates to be used for creating a validator."
        },
        "cosmos.staking.v1beta1.Description": {
          "properties": {
            "moniker": {
              "type": "string",
              "description": "moniker defines a human-readable name for the validator."
            },
            "identity": {
              "type": "string",
              "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
            },
            "website": {
              "type": "string",
              "description": "website defines an optional website link."
            },
            "security_contact": {
              "type": "string",
              "description": "security_contact defines an optional email for security contact."
            },
            "details": {
              "type": "string",
              "description": "details define other optional details."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Description",
          "description": "Description defines a validator description."
        },
        "MsgDelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delegate",
          "description": "MsgDelegate defines a SDK message for performing a delegation of coins from a delegator to a validator."
        },
        "MsgEditValidator": {
          "properties": {
            "description": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.Description",
              "additionalProperties": false
            },
            "validator_address": {
              "type": "string"
            },
            "commission_rate": {
              "type": "string",
              "description": "We pass a reference to the new commission rate and min self delegation as it's not mandatory to update. If not updated, the deserialized rate will be zero with no way to distinguish if an update was intended. REF: #2373"
            },
            "min_self_delegation": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Edit Validator",
          "description": "MsgEditValidator defines a SDK message for editing an existing validator."
        },
        "MsgUndelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Undelegate",
          "description": "MsgUndelegate defines a SDK message for performing an undelegation from a delegate and a validator."
        },
        "MsgCancelUpgrade": {
          "properties": {
            "authority": {
              "type": "string",
              "description": "authority is the address of the governance account."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Cancel Upgrade",
          "description": "MsgCancelUpgrade is the Msg/CancelUpgrade request type. Since: cosmos-sdk 0.46"
        },
        "MsgSoftwareUpgrade": {
          "properties": {
            "authority": {
              "type": "string",
              "description": "authority is the address of the governance account."
            },
            "plan": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.Plan",
              "additionalProperties": false,
              "description": "plan is the upgrade plan."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Software Upgrade",
          "description": "MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type. Since: cosmos-sdk 0.46"
        },
        "cosmos.upgrade.v1beta1.Plan": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Sets the name for the upgrade. This name will be used by the upgraded version of the software to apply any special \"on-upgrade\" commands during the first BeginBlock method after the upgrade is applied. It is also used to detect whether a software version can handle a given upgrade. If no upgrade handler with this name has been set in the software, it will be assumed that the software is out-of-date when the upgrade Time or Height is reached and the software will exit."
            },
            "time": {
              "type": "string",
              "description": "Deprecated: Time based upgrades have been deprecated. Time based upgrade logic has been removed from the SDK. If this field is not empty, an error will be thrown.",
              "format": "date-time"
            },
            "height": {
              "type": "string",
              "description": "The height at which the upgrade must be performed. Only used if Time is not set."
            },
            "info": {
              "type": "string",
              "description": "Any application specific upgrade info to be included on-chain such as a git commit that validators could automatically upgrade to"
            },
            "upgraded_client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been moved to the IBC module in the sub module 02-client. If this field is not empty, an error will be thrown."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Plan",
          "description": "Plan specifies information about a planned upgrade and when it should occur."
        },
        "MsgCreatePeriodicVestingAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "start_time": {
              "type": "string"
            },
            "vesting_periods": {
              "items": {
                "$ref": "#/definitions/cosmos.vesting.v1beta1.Period"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Periodic Vesting Account",
          "description": "MsgCreateVestingAccount defines a message that enables creating a vesting account. Since: cosmos-sdk 0.46"
        },
        "cosmos.vesting.v1beta1.Period": {
          "properties": {
            "length": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Period",
          "description": "Period defines a length of time and amount of coins that will vest."
        },
        "MsgCreatePermanentLockedAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Permanent Locked Account",
          "description": "MsgCreatePermanentLockedAccount defines a message that enables creating a permanent locked account. Since: cosmos-sdk 0.46"
        },
        "MsgCreateVestingAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            },
            "end_time": {
              "type": "string"
            },
            "delayed": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Vesting Account",
          "description": "MsgCreateVestingAccount defines a message that enables creating a vesting account."
        },
        "MsgCreateScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "height": {
              "type": "string"
            },
            "gas": {
              "type": "string"
            },
            "msg": {
              "$ref": "#/definitions/dyson.MsgRun",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Scheduled Run"
        },
        "dyson.MsgRun": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The account sending the transaction"
            },
            "address": {
              "type": "string",
              "description": "dys address of the scrit to call"
            },
            "extra_lines": {
              "type": "string",
              "description": "optional extra source code to append to the end of the script before running"
            },
            "function_name": {
              "type": "string",
              "description": "optional function to call"
            },
            "args": {
              "type": "string",
              "description": "optional args to call the function with"
            },
            "kwargs": {
              "type": "string",
              "description": "optional kwargs to run"
            },
            "coins": {
              "type": "string",
              "description": "optional comma seperated list of coins to send the script (for example \"123dys,456token\")"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Run",
          "description": "MsgRun runs a script at a specific address"
        },
        "MsgCreateStorage": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The address signing this transaction"
            },
            "index": {
              "type": "string",
              "description": "Name of the Storage, must be prefixed with the creators address (for example: \"dys..1a3/some_name\")"
            },
            "data": {
              "type": "string",
              "description": "data to store at this index"
            },
            "force": {
              "type": "boolean",
              "description": "If true, force will always store the data at this address regardless of already existing storage"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Storage",
          "description": "Create a new storage of arbitrary text"
        },
        "MsgDeleteScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Scheduled Run"
        },
        "MsgDeleteScript": {
          "properties": {
            "creator": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Script"
        },
        "MsgDeleteStorage": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Storage"
        },
        "MsgDeployAutonomousScript": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "code": {
              "type": "string",
              "format": "python"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Deploy Autonomous Script",
          "description": "Deploy an Autonomous Script at a new address"
        },
        "MsgRun": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The account sending the transaction"
            },
            "address": {
              "type": "string",
              "description": "dys address of the scrit to call"
            },
            "extra_lines": {
              "type": "string",
              "description": "optional extra source code to append to the end of the script before running"
            },
            "function_name": {
              "type": "string",
              "description": "optional function to call"
            },
            "args": {
              "type": "string",
              "description": "optional args to call the function with"
            },
            "kwargs": {
              "type": "string",
              "description": "optional kwargs to run"
            },
            "coins": {
              "type": "string",
              "description": "optional comma seperated list of coins to send the script (for example \"123dys,456token\")"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Run",
          "description": "MsgRun runs a script at a specific address"
        },
        "MsgUpdateScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            },
            "msg": {
              "$ref": "#/definitions/dyson.MsgRun",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Scheduled Run"
        },
        "MsgUpdateScript": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "code": {
              "type": "string",
              "format": "python"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Script"
        },
        "MsgUpdateStorage": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The address signing this transaction"
            },
            "index": {
              "type": "string",
              "description": "Name of the Storage, must be prefixed with the creators address (for example: \"dys..1a3/some_name\")"
            },
            "data": {
              "type": "string",
              "description": "data to store at this index"
            },
            "force": {
              "type": "boolean",
              "description": "If true, force will always store the data at this address regardless of already existing storage"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Storage"
        },
        "MsgTransfer": {
          "properties": {
            "source_port": {
              "type": "string",
              "description": "the port on which the packet will be sent"
            },
            "source_channel": {
              "type": "string",
              "description": "the channel by which the packet will be sent"
            },
            "token": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false,
              "description": "the tokens to be transferred"
            },
            "sender": {
              "type": "string",
              "description": "the sender address"
            },
            "receiver": {
              "type": "string",
              "description": "the recipient address on the destination chain"
            },
            "timeout_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false,
              "description": "Timeout height relative to the current block height. The timeout is disabled when set to 0."
            },
            "timeout_timestamp": {
              "type": "string",
              "description": "Timeout timestamp in absolute nanoseconds since unix epoch. The timeout is disabled when set to 0."
            },
            "memo": {
              "type": "string",
              "description": "optional memo"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Transfer",
          "description": "MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between ICS20 enabled chains. See ICS Spec here: https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures"
        },
        "ibc.core.client.v1.Height": {
          "properties": {
            "revision_number": {
              "type": "string",
              "description": "the revision that the client is currently on"
            },
            "revision_height": {
              "type": "string",
              "description": "the height within the given revision"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Height",
          "description": "Height is a monotonically increasing data type that can be compared against another Height for the purposes of updating and freezing clients Normally the RevisionHeight is incremented at each height while keeping RevisionNumber the same. However some consensus algorithms may choose to reset the height in certain conditions e.g. hard forks, state-machine breaking changes In these cases, the RevisionNumber is incremented so that height continues to be monitonically increasing even as the RevisionHeight gets reset"
        },
        "MsgAcknowledgement": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "acknowledgement": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_acked": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Acknowledgement",
          "description": "MsgAcknowledgement receives incoming IBC acknowledgement"
        },
        "ibc.core.channel.v1.Packet": {
          "properties": {
            "sequence": {
              "type": "string",
              "description": "number corresponds to the order of sends and receives, where a Packet with an earlier sequence number must be sent and received before a Packet with a later sequence number."
            },
            "source_port": {
              "type": "string",
              "description": "identifies the port on the sending chain."
            },
            "source_channel": {
              "type": "string",
              "description": "identifies the channel end on the sending chain."
            },
            "destination_port": {
              "type": "string",
              "description": "identifies the port on the receiving chain."
            },
            "destination_channel": {
              "type": "string",
              "description": "identifies the channel end on the receiving chain."
            },
            "data": {
              "type": "string",
              "description": "actual opaque bytes transferred directly to the application module",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "timeout_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false,
              "description": "block height after which the packet times out"
            },
            "timeout_timestamp": {
              "type": "string",
              "description": "block timestamp (in nanoseconds) after which the packet times out"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Packet",
          "description": "Packet defines a type that carries data across different chains through IBC"
        },
        "MsgChannelCloseConfirm": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "proof_init": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Close Confirm",
          "description": "MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of channel state to CLOSED on Chain A."
        },
        "MsgChannelCloseInit": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Close Init",
          "description": "MsgChannelCloseInit defines a msg sent by a Relayer to Chain A to close a channel with Chain B."
        },
        "MsgChannelOpenAck": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "counterparty_channel_id": {
              "type": "string"
            },
            "counterparty_version": {
              "type": "string"
            },
            "proof_try": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Ack",
          "description": "MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to acknowledge the change of channel state to TRYOPEN on Chain B."
        },
        "MsgChannelOpenConfirm": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "proof_ack": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Confirm",
          "description": "MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of channel state to OPEN on Chain A."
        },
        "MsgChannelOpenInit": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel": {
              "$ref": "#/definitions/ibc.core.channel.v1.Channel",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Init",
          "description": "MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake. It is called by a relayer on Chain A."
        },
        "ibc.core.channel.v1.Channel": {
          "properties": {
            "state": {
              "enum": [
                "STATE_UNINITIALIZED_UNSPECIFIED",
                0,
                "STATE_INIT",
                1,
                "STATE_TRYOPEN",
                2,
                "STATE_OPEN",
                3,
                "STATE_CLOSED",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "State",
              "description": "State defines if a channel is in one of the following states: CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED."
            },
            "ordering": {
              "enum": [
                "ORDER_NONE_UNSPECIFIED",
                0,
                "ORDER_UNORDERED",
                1,
                "ORDER_ORDERED",
                2
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Order",
              "description": "Order defines if a channel is ORDERED or UNORDERED"
            },
            "counterparty": {
              "$ref": "#/definitions/ibc.core.channel.v1.Counterparty",
              "additionalProperties": false,
              "description": "counterparty channel end"
            },
            "connection_hops": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "list of connection identifiers, in order, along which packets sent on this channel will travel"
            },
            "version": {
              "type": "string",
              "description": "opaque channel version, which is agreed upon during the handshake"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Channel",
          "description": "Channel defines pipeline for exactly-once packet delivery between specific modules on separate blockchains, which has at least one end capable of sending packets and one end capable of receiving packets."
        },
        "ibc.core.channel.v1.Counterparty": {
          "properties": {
            "port_id": {
              "type": "string",
              "description": "port on the counterparty chain which owns the other end of the channel."
            },
            "channel_id": {
              "type": "string",
              "description": "channel end on the counterparty chain"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Counterparty",
          "description": "Counterparty defines a channel end counterparty"
        },
        "MsgChannelOpenTry": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "previous_channel_id": {
              "type": "string",
              "description": "Deprecated: this field is unused. Crossing hello's are no longer supported in core IBC."
            },
            "channel": {
              "$ref": "#/definitions/ibc.core.channel.v1.Channel",
              "additionalProperties": false,
              "description": "NOTE: the version field within the channel has been deprecated. Its value will be ignored by core IBC."
            },
            "counterparty_version": {
              "type": "string"
            },
            "proof_init": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Try",
          "description": "MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel on Chain B. The version field within the Channel field has been deprecated. Its value will be ignored by core IBC."
        },
        "MsgRecvPacket": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "proof_commitment": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Recv Packet",
          "description": "MsgRecvPacket receives incoming IBC packet"
        },
        "MsgTimeout": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "proof_unreceived": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "next_sequence_recv": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Timeout",
          "description": "MsgTimeout receives timed-out packet"
        },
        "MsgTimeoutOnClose": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "proof_unreceived": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_close": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "next_sequence_recv": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Timeout On Close",
          "description": "MsgTimeoutOnClose timed-out packet upon counterparty channel closure."
        },
        "MsgCreateClient": {
          "properties": {
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "light client state"
            },
            "consensus_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "consensus state associated with the client that corresponds to a given height."
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Client",
          "description": "MsgCreateClient defines a message to create an IBC client"
        },
        "MsgSubmitMisbehaviour": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "client unique identifier"
            },
            "misbehaviour": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "misbehaviour used for freezing the light client"
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Misbehaviour",
          "description": "MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for light client misbehaviour."
        },
        "MsgUpdateClient": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "client unique identifier"
            },
            "header": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "header to update the light client"
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Client",
          "description": "MsgUpdateClient defines an sdk.Msg to update a IBC client state using the given header."
        },
        "MsgUpgradeClient": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "client unique identifier"
            },
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "upgraded client state"
            },
            "consensus_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "upgraded consensus state, only contains enough information to serve as a basis of trust in update logic"
            },
            "proof_upgrade_client": {
              "type": "string",
              "description": "proof that old chain committed to new client",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_upgrade_consensus_state": {
              "type": "string",
              "description": "proof that old chain committed to new consensus state",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Upgrade Client",
          "description": "MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client state"
        },
        "MsgConnectionOpenAck": {
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "counterparty_connection_id": {
              "type": "string"
            },
            "version": {
              "$ref": "#/definitions/ibc.core.connection.v1.Version",
              "additionalProperties": false
            },
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "proof_try": {
              "type": "string",
              "description": "proof of the initialization the connection on Chain B: `UNITIALIZED -> TRYOPEN`",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_client": {
              "type": "string",
              "description": "proof of client state included in message",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_consensus": {
              "type": "string",
              "description": "proof of client consensus state",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "consensus_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Ack",
          "description": "MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to acknowledge the change of connection state to TRYOPEN on Chain B."
        },
        "ibc.core.connection.v1.Version": {
          "properties": {
            "identifier": {
              "type": "string",
              "description": "unique version identifier"
            },
            "features": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "list of features compatible with the specified identifier"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Version",
          "description": "Version defines the versioning scheme used to negotiate the IBC verison in the connection handshake."
        },
        "MsgConnectionOpenConfirm": {
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "proof_ack": {
              "type": "string",
              "description": "proof for the change of the connection state on Chain A: `INIT -> OPEN`",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Confirm",
          "description": "MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of connection state to OPEN on Chain A."
        },
        "MsgConnectionOpenInit": {
          "properties": {
            "client_id": {
              "type": "string"
            },
            "counterparty": {
              "$ref": "#/definitions/ibc.core.connection.v1.Counterparty",
              "additionalProperties": false
            },
            "version": {
              "$ref": "#/definitions/ibc.core.connection.v1.Version",
              "additionalProperties": false
            },
            "delay_period": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Init",
          "description": "MsgConnectionOpenInit defines the msg sent by an account on Chain A to initialize a connection with Chain B."
        },
        "ibc.core.commitment.v1.MerklePrefix": {
          "properties": {
            "key_prefix": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Merkle Prefix",
          "description": "MerklePrefix is merkle path prefixed to the key. The constructed key from the Path and the key will be append(Path.KeyPath, append(Path.KeyPrefix, key...))"
        },
        "ibc.core.connection.v1.Counterparty": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "identifies the client on the counterparty chain associated with a given connection."
            },
            "connection_id": {
              "type": "string",
              "description": "identifies the connection end on the counterparty chain associated with a given connection."
            },
            "prefix": {
              "$ref": "#/definitions/ibc.core.commitment.v1.MerklePrefix",
              "additionalProperties": false,
              "description": "commitment merkle prefix of the counterparty chain."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Counterparty",
          "description": "Counterparty defines the counterparty chain associated with a connection end."
        },
        "MsgConnectionOpenTry": {
          "properties": {
            "client_id": {
              "type": "string"
            },
            "previous_connection_id": {
              "type": "string",
              "description": "Deprecated: this field is unused. Crossing hellos are no longer supported in core IBC."
            },
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "counterparty": {
              "$ref": "#/definitions/ibc.core.connection.v1.Counterparty",
              "additionalProperties": false
            },
            "delay_period": {
              "type": "string"
            },
            "counterparty_versions": {
              "items": {
                "$ref": "#/definitions/ibc.core.connection.v1.Version"
              },
              "type": "array"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "proof_init": {
              "type": "string",
              "description": "proof of the initialization the connection on Chain A: `UNITIALIZED -> INIT`",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_client": {
              "type": "string",
              "description": "proof of client state included in message",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_consensus": {
              "type": "string",
              "description": "proof of client consensus state",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "consensus_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Try",
          "description": "MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a connection on Chain B."
        },
        "MsgAccept": {
          "properties": {
            "name": {
              "type": "string"
            },
            "newOwner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Accept"
        },
        "MsgBurnCoins": {
          "properties": {
            "owner": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Burn Coins"
        },
        "MsgBuy": {
          "properties": {
            "buyer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Buy"
        },
        "MsgDeleteName": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Name"
        },
        "MsgMintCoins": {
          "properties": {
            "owner": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Mint Coins"
        },
        "MsgOfferTo": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "newOwner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Offer To"
        },
        "MsgRegister": {
          "properties": {
            "commit": {
              "type": "string",
              "description": "The Shake256(owner+name+salt) hexdigest"
            },
            "owner": {
              "type": "string",
              "description": "Address of the owner"
            },
            "price": {
              "type": "string",
              "description": "The price that this name is valued at and can be purchased for example 100dys. The monthly fee is 1% of this price."
            },
            "auto_renew": {
              "type": "boolean",
              "description": "Should the name be automatically renewed"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Register"
        },
        "MsgReveal": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "salt": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Reveal"
        },
        "MsgSetPriceAndExtend": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "price": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Set Price And Extend"
        },
        "MsgUpdateName": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            },
            "authorized": {
              "type": "string"
            },
            "auto_renew": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Name"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.feegrant.v1beta1/sendMsgRevokeAllowance": {
    "module_name": "cosmos.feegrant.v1beta1",
    "name": "RevokeAllowance",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgRevokeAllowance",
      "definitions": {
        "MsgRevokeAllowance": {
          "properties": {
            "granter": {
              "type": "string",
              "description": "granter is the address of the user granting an allowance of their funds."
            },
            "grantee": {
              "type": "string",
              "description": "grantee is the address of the user being granted an allowance of another user's funds."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Revoke Allowance",
          "description": "MsgRevokeAllowance removes any existing Allowance from Granter to Grantee."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.gov.v1beta1/QueryProposal": {
    "module_name": "cosmos.gov.v1beta1",
    "name": "Proposal",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryProposalRequest",
      "definitions": {
        "QueryProposalRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id defines the unique id of the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Proposal Request",
          "description": "QueryProposalRequest is the request type for the Query/Proposal RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1beta1/proposals/{proposal_id}",
    "http_rules": [
      {
        "Params": [
          "proposal_id"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1beta1/QueryProposals": {
    "module_name": "cosmos.gov.v1beta1",
    "name": "Proposals",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryProposalsRequest",
      "definitions": {
        "QueryProposalsRequest": {
          "properties": {
            "proposal_status": {
              "enum": [
                "PROPOSAL_STATUS_UNSPECIFIED",
                0,
                "PROPOSAL_STATUS_DEPOSIT_PERIOD",
                1,
                "PROPOSAL_STATUS_VOTING_PERIOD",
                2,
                "PROPOSAL_STATUS_PASSED",
                3,
                "PROPOSAL_STATUS_REJECTED",
                4,
                "PROPOSAL_STATUS_FAILED",
                5
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Proposal Status",
              "description": "ProposalStatus enumerates the valid statuses of a proposal."
            },
            "voter": {
              "type": "string",
              "description": "voter defines the voter address for the proposals."
            },
            "depositor": {
              "type": "string",
              "description": "depositor defines the deposit addresses from the proposals."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Proposals Request",
          "description": "QueryProposalsRequest is the request type for the Query/Proposals RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1beta1/proposals",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1beta1/QueryVote": {
    "module_name": "cosmos.gov.v1beta1",
    "name": "Vote",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryVoteRequest",
      "definitions": {
        "QueryVoteRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id defines the unique id of the proposal."
            },
            "voter": {
              "type": "string",
              "description": "voter defines the voter address for the proposals."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Vote Request",
          "description": "QueryVoteRequest is the request type for the Query/Vote RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}",
    "http_rules": [
      {
        "Params": [
          "proposal_id",
          "voter"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1beta1/QueryVotes": {
    "module_name": "cosmos.gov.v1beta1",
    "name": "Votes",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryVotesRequest",
      "definitions": {
        "QueryVotesRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id defines the unique id of the proposal."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Votes Request",
          "description": "QueryVotesRequest is the request type for the Query/Votes RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes",
    "http_rules": [
      {
        "Params": [
          "proposal_id"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1beta1/QueryParams": {
    "module_name": "cosmos.gov.v1beta1",
    "name": "Params",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryParamsRequest",
      "definitions": {
        "QueryParamsRequest": {
          "properties": {
            "params_type": {
              "type": "string",
              "description": "params_type defines which parameters to query for, can be one of \"voting\", \"tallying\" or \"deposit\"."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Params Request",
          "description": "QueryParamsRequest is the request type for the Query/Params RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1beta1/params/{params_type}",
    "http_rules": [
      {
        "Params": [
          "params_type"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1beta1/QueryDeposit": {
    "module_name": "cosmos.gov.v1beta1",
    "name": "Deposit",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDepositRequest",
      "definitions": {
        "QueryDepositRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id defines the unique id of the proposal."
            },
            "depositor": {
              "type": "string",
              "description": "depositor defines the deposit addresses from the proposals."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Deposit Request",
          "description": "QueryDepositRequest is the request type for the Query/Deposit RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}",
    "http_rules": [
      {
        "Params": [
          "proposal_id",
          "depositor"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1beta1/QueryDeposits": {
    "module_name": "cosmos.gov.v1beta1",
    "name": "Deposits",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDepositsRequest",
      "definitions": {
        "QueryDepositsRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id defines the unique id of the proposal."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Deposits Request",
          "description": "QueryDepositsRequest is the request type for the Query/Deposits RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits",
    "http_rules": [
      {
        "Params": [
          "proposal_id"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1beta1/QueryTallyResult": {
    "module_name": "cosmos.gov.v1beta1",
    "name": "TallyResult",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryTallyResultRequest",
      "definitions": {
        "QueryTallyResultRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id defines the unique id of the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Tally Result Request",
          "description": "QueryTallyResultRequest is the request type for the Query/Tally RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1beta1/proposals/{proposal_id}/tally",
    "http_rules": [
      {
        "Params": [
          "proposal_id"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1beta1/sendMsgSubmitProposal": {
    "module_name": "cosmos.gov.v1beta1",
    "name": "SubmitProposal",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgSubmitProposal",
      "definitions": {
        "MsgSubmitProposal": {
          "properties": {
            "content": {
              "oneOf": [
                {
                  "title": "cosmos.distribution.v1beta1.CommunityPoolSpendProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.distribution.v1beta1.CommunityPoolSpendProposal",
                      "enum": [
                        "/cosmos.distribution.v1beta1.CommunityPoolSpendProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/CommunityPoolSpendProposal"
                    }
                  }
                },
                {
                  "title": "cosmos.gov.v1beta1.TextProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.gov.v1beta1.TextProposal",
                      "enum": [
                        "/cosmos.gov.v1beta1.TextProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/TextProposal"
                    }
                  }
                },
                {
                  "title": "cosmos.params.v1beta1.ParameterChangeProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.params.v1beta1.ParameterChangeProposal",
                      "enum": [
                        "/cosmos.params.v1beta1.ParameterChangeProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/ParameterChangeProposal"
                    }
                  }
                },
                {
                  "title": "cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal",
                      "enum": [
                        "/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/CancelSoftwareUpgradeProposal"
                    }
                  }
                },
                {
                  "title": "cosmos.upgrade.v1beta1.SoftwareUpgradeProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal",
                      "enum": [
                        "/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/SoftwareUpgradeProposal"
                    }
                  }
                },
                {
                  "title": "ibc.core.client.v1.ClientUpdateProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.client.v1.ClientUpdateProposal",
                      "enum": [
                        "/ibc.core.client.v1.ClientUpdateProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/ClientUpdateProposal"
                    }
                  }
                },
                {
                  "title": "ibc.core.client.v1.UpgradeProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.client.v1.UpgradeProposal",
                      "enum": [
                        "/ibc.core.client.v1.UpgradeProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/UpgradeProposal"
                    }
                  }
                }
              ]
            },
            "initial_deposit": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            },
            "proposer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Proposal",
          "description": "MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary proposal Content."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "CommunityPoolSpendProposal": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "recipient": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Community Pool Spend Proposal",
          "description": "CommunityPoolSpendProposal details a proposal for use of community funds, together with how many coins are proposed to be spent, and to which recipient account."
        },
        "TextProposal": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Text Proposal",
          "description": "TextProposal defines a standard text proposal whose changes need to be manually updated in case of approval."
        },
        "ParameterChangeProposal": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "changes": {
              "items": {
                "$ref": "#/definitions/cosmos.params.v1beta1.ParamChange"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Parameter Change Proposal",
          "description": "ParameterChangeProposal defines a proposal to change one or more parameters."
        },
        "cosmos.params.v1beta1.ParamChange": {
          "properties": {
            "subspace": {
              "type": "string"
            },
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Param Change",
          "description": "ParamChange defines an individual parameter change, for use in ParameterChangeProposal."
        },
        "CancelSoftwareUpgradeProposal": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Cancel Software Upgrade Proposal",
          "description": "CancelSoftwareUpgradeProposal is a gov Content type for cancelling a software upgrade. Deprecated: This legacy proposal is deprecated in favor of Msg-based gov proposals, see MsgCancelUpgrade."
        },
        "SoftwareUpgradeProposal": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "plan": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.Plan",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Software Upgrade Proposal",
          "description": "SoftwareUpgradeProposal is a gov Content type for initiating a software upgrade. Deprecated: This legacy proposal is deprecated in favor of Msg-based gov proposals, see MsgSoftwareUpgrade."
        },
        "cosmos.upgrade.v1beta1.Plan": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Sets the name for the upgrade. This name will be used by the upgraded version of the software to apply any special \"on-upgrade\" commands during the first BeginBlock method after the upgrade is applied. It is also used to detect whether a software version can handle a given upgrade. If no upgrade handler with this name has been set in the software, it will be assumed that the software is out-of-date when the upgrade Time or Height is reached and the software will exit."
            },
            "time": {
              "type": "string",
              "description": "Deprecated: Time based upgrades have been deprecated. Time based upgrade logic has been removed from the SDK. If this field is not empty, an error will be thrown.",
              "format": "date-time"
            },
            "height": {
              "type": "string",
              "description": "The height at which the upgrade must be performed. Only used if Time is not set."
            },
            "info": {
              "type": "string",
              "description": "Any application specific upgrade info to be included on-chain such as a git commit that validators could automatically upgrade to"
            },
            "upgraded_client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been moved to the IBC module in the sub module 02-client. If this field is not empty, an error will be thrown."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Plan",
          "description": "Plan specifies information about a planned upgrade and when it should occur."
        },
        "ClientUpdateProposal": {
          "properties": {
            "title": {
              "type": "string",
              "description": "the title of the update proposal"
            },
            "description": {
              "type": "string",
              "description": "the description of the proposal"
            },
            "subject_client_id": {
              "type": "string",
              "description": "the client identifier for the client to be updated if the proposal passes"
            },
            "substitute_client_id": {
              "type": "string",
              "description": "the substitute client identifier for the client standing in for the subject client"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Client Update Proposal",
          "description": "ClientUpdateProposal is a governance proposal. If it passes, the substitute client's latest consensus state is copied over to the subject client. The proposal handler may fail if the subject and the substitute do not match in client and chain parameters (with exception to latest height, frozen height, and chain-id)."
        },
        "UpgradeProposal": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "plan": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.Plan",
              "additionalProperties": false
            },
            "upgraded_client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "An UpgradedClientState must be provided to perform an IBC breaking upgrade. This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs, so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the previous version of the chain. This will allow IBC connections to persist smoothly across planned chain upgrades"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Upgrade Proposal",
          "description": "UpgradeProposal is a gov Content type for initiating an IBC breaking upgrade."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.gov.v1beta1/sendMsgVote": {
    "module_name": "cosmos.gov.v1beta1",
    "name": "Vote",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgVote",
      "definitions": {
        "MsgVote": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "voter": {
              "type": "string"
            },
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given governance proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote",
          "description": "MsgVote defines a message to cast a vote."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}",
    "http_rules": null
  },
  "cosmos.gov.v1beta1/sendMsgVoteWeighted": {
    "module_name": "cosmos.gov.v1beta1",
    "name": "VoteWeighted",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgVoteWeighted",
      "definitions": {
        "MsgVoteWeighted": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "voter": {
              "type": "string"
            },
            "options": {
              "items": {
                "$ref": "#/definitions/cosmos.gov.v1beta1.WeightedVoteOption"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote Weighted",
          "description": "MsgVoteWeighted defines a message to cast a vote. Since: cosmos-sdk 0.43"
        },
        "cosmos.gov.v1beta1.WeightedVoteOption": {
          "properties": {
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given governance proposal."
            },
            "weight": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Weighted Vote Option",
          "description": "WeightedVoteOption defines a unit of vote for vote split. Since: cosmos-sdk 0.43"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.gov.v1beta1/sendMsgDeposit": {
    "module_name": "cosmos.gov.v1beta1",
    "name": "Deposit",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgDeposit",
      "definitions": {
        "MsgDeposit": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "depositor": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Deposit",
          "description": "MsgDeposit defines a message to submit a deposit to an existing proposal."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}",
    "http_rules": null
  },
  "cosmos.gov.v1/QueryProposal": {
    "module_name": "cosmos.gov.v1",
    "name": "Proposal",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryProposalRequest",
      "definitions": {
        "QueryProposalRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id defines the unique id of the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Proposal Request",
          "description": "QueryProposalRequest is the request type for the Query/Proposal RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1/proposals/{proposal_id}",
    "http_rules": [
      {
        "Params": [
          "proposal_id"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1/QueryProposals": {
    "module_name": "cosmos.gov.v1",
    "name": "Proposals",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryProposalsRequest",
      "definitions": {
        "QueryProposalsRequest": {
          "properties": {
            "proposal_status": {
              "enum": [
                "PROPOSAL_STATUS_UNSPECIFIED",
                0,
                "PROPOSAL_STATUS_DEPOSIT_PERIOD",
                1,
                "PROPOSAL_STATUS_VOTING_PERIOD",
                2,
                "PROPOSAL_STATUS_PASSED",
                3,
                "PROPOSAL_STATUS_REJECTED",
                4,
                "PROPOSAL_STATUS_FAILED",
                5
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Proposal Status",
              "description": "ProposalStatus enumerates the valid statuses of a proposal."
            },
            "voter": {
              "type": "string",
              "description": "voter defines the voter address for the proposals."
            },
            "depositor": {
              "type": "string",
              "description": "depositor defines the deposit addresses from the proposals."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Proposals Request",
          "description": "QueryProposalsRequest is the request type for the Query/Proposals RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1/proposals",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1/QueryVote": {
    "module_name": "cosmos.gov.v1",
    "name": "Vote",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryVoteRequest",
      "definitions": {
        "QueryVoteRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id defines the unique id of the proposal."
            },
            "voter": {
              "type": "string",
              "description": "voter defines the voter address for the proposals."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Vote Request",
          "description": "QueryVoteRequest is the request type for the Query/Vote RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}",
    "http_rules": [
      {
        "Params": [
          "proposal_id",
          "voter"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1/QueryVotes": {
    "module_name": "cosmos.gov.v1",
    "name": "Votes",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryVotesRequest",
      "definitions": {
        "QueryVotesRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id defines the unique id of the proposal."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Votes Request",
          "description": "QueryVotesRequest is the request type for the Query/Votes RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1/proposals/{proposal_id}/votes",
    "http_rules": [
      {
        "Params": [
          "proposal_id"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1/QueryParams": {
    "module_name": "cosmos.gov.v1",
    "name": "Params",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryParamsRequest",
      "definitions": {
        "QueryParamsRequest": {
          "properties": {
            "params_type": {
              "type": "string",
              "description": "params_type defines which parameters to query for, can be one of \"voting\", \"tallying\" or \"deposit\"."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Params Request",
          "description": "QueryParamsRequest is the request type for the Query/Params RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1/params/{params_type}",
    "http_rules": [
      {
        "Params": [
          "params_type"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1/QueryDeposit": {
    "module_name": "cosmos.gov.v1",
    "name": "Deposit",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDepositRequest",
      "definitions": {
        "QueryDepositRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id defines the unique id of the proposal."
            },
            "depositor": {
              "type": "string",
              "description": "depositor defines the deposit addresses from the proposals."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Deposit Request",
          "description": "QueryDepositRequest is the request type for the Query/Deposit RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}",
    "http_rules": [
      {
        "Params": [
          "proposal_id",
          "depositor"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1/QueryDeposits": {
    "module_name": "cosmos.gov.v1",
    "name": "Deposits",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDepositsRequest",
      "definitions": {
        "QueryDepositsRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id defines the unique id of the proposal."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Deposits Request",
          "description": "QueryDepositsRequest is the request type for the Query/Deposits RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1/proposals/{proposal_id}/deposits",
    "http_rules": [
      {
        "Params": [
          "proposal_id"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1/QueryTallyResult": {
    "module_name": "cosmos.gov.v1",
    "name": "TallyResult",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryTallyResultRequest",
      "definitions": {
        "QueryTallyResultRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id defines the unique id of the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Tally Result Request",
          "description": "QueryTallyResultRequest is the request type for the Query/Tally RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1/proposals/{proposal_id}/tally",
    "http_rules": [
      {
        "Params": [
          "proposal_id"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.gov.v1/sendMsgSubmitProposal": {
    "module_name": "cosmos.gov.v1",
    "name": "SubmitProposal",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgSubmitProposal",
      "definitions": {
        "MsgSubmitProposal": {
          "properties": {
            "messages": {
              "items": {
                "oneOf": [
                  {
                    "title": "cosmos.authz.v1beta1.MsgExec",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.authz.v1beta1.MsgExec",
                        "enum": [
                          "/cosmos.authz.v1beta1.MsgExec"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgExec"
                      }
                    }
                  },
                  {
                    "title": "cosmos.authz.v1beta1.MsgGrant",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.authz.v1beta1.MsgGrant",
                        "enum": [
                          "/cosmos.authz.v1beta1.MsgGrant"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgGrant"
                      }
                    }
                  },
                  {
                    "title": "cosmos.authz.v1beta1.MsgRevoke",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.authz.v1beta1.MsgRevoke",
                        "enum": [
                          "/cosmos.authz.v1beta1.MsgRevoke"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRevoke"
                      }
                    }
                  },
                  {
                    "title": "cosmos.bank.v1beta1.MsgMultiSend",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.bank.v1beta1.MsgMultiSend",
                        "enum": [
                          "/cosmos.bank.v1beta1.MsgMultiSend"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgMultiSend"
                      }
                    }
                  },
                  {
                    "title": "cosmos.bank.v1beta1.MsgSend",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.bank.v1beta1.MsgSend",
                        "enum": [
                          "/cosmos.bank.v1beta1.MsgSend"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSend"
                      }
                    }
                  },
                  {
                    "title": "cosmos.crisis.v1beta1.MsgVerifyInvariant",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.crisis.v1beta1.MsgVerifyInvariant",
                        "enum": [
                          "/cosmos.crisis.v1beta1.MsgVerifyInvariant"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVerifyInvariant"
                      }
                    }
                  },
                  {
                    "title": "cosmos.distribution.v1beta1.MsgFundCommunityPool",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.distribution.v1beta1.MsgFundCommunityPool",
                        "enum": [
                          "/cosmos.distribution.v1beta1.MsgFundCommunityPool"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgFundCommunityPool"
                      }
                    }
                  },
                  {
                    "title": "cosmos.distribution.v1beta1.MsgSetWithdrawAddress",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress",
                        "enum": [
                          "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSetWithdrawAddress"
                      }
                    }
                  },
                  {
                    "title": "cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
                        "enum": [
                          "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgWithdrawDelegatorReward"
                      }
                    }
                  },
                  {
                    "title": "cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",
                        "enum": [
                          "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgWithdrawValidatorCommission"
                      }
                    }
                  },
                  {
                    "title": "cosmos.evidence.v1beta1.MsgSubmitEvidence",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.evidence.v1beta1.MsgSubmitEvidence",
                        "enum": [
                          "/cosmos.evidence.v1beta1.MsgSubmitEvidence"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitEvidence"
                      }
                    }
                  },
                  {
                    "title": "cosmos.feegrant.v1beta1.MsgGrantAllowance",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.feegrant.v1beta1.MsgGrantAllowance",
                        "enum": [
                          "/cosmos.feegrant.v1beta1.MsgGrantAllowance"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgGrantAllowance"
                      }
                    }
                  },
                  {
                    "title": "cosmos.feegrant.v1beta1.MsgRevokeAllowance",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.feegrant.v1beta1.MsgRevokeAllowance",
                        "enum": [
                          "/cosmos.feegrant.v1beta1.MsgRevokeAllowance"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRevokeAllowance"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgDeposit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgDeposit",
                        "enum": [
                          "/cosmos.gov.v1.MsgDeposit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeposit"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgExecLegacyContent",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgExecLegacyContent",
                        "enum": [
                          "/cosmos.gov.v1.MsgExecLegacyContent"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgExecLegacyContent"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgSubmitProposal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgSubmitProposal",
                        "enum": [
                          "/cosmos.gov.v1.MsgSubmitProposal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitProposal"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgVote",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgVote",
                        "enum": [
                          "/cosmos.gov.v1.MsgVote"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVote"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgVoteWeighted",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgVoteWeighted",
                        "enum": [
                          "/cosmos.gov.v1.MsgVoteWeighted"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVoteWeighted"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1beta1.MsgDeposit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1beta1.MsgDeposit",
                        "enum": [
                          "/cosmos.gov.v1beta1.MsgDeposit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeposit"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1beta1.MsgSubmitProposal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1beta1.MsgSubmitProposal",
                        "enum": [
                          "/cosmos.gov.v1beta1.MsgSubmitProposal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitProposal"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1beta1.MsgVote",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1beta1.MsgVote",
                        "enum": [
                          "/cosmos.gov.v1beta1.MsgVote"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVote"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1beta1.MsgVoteWeighted",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1beta1.MsgVoteWeighted",
                        "enum": [
                          "/cosmos.gov.v1beta1.MsgVoteWeighted"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVoteWeighted"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgCreateGroup",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgCreateGroup",
                        "enum": [
                          "/cosmos.group.v1.MsgCreateGroup"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateGroup"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgCreateGroupPolicy",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgCreateGroupPolicy",
                        "enum": [
                          "/cosmos.group.v1.MsgCreateGroupPolicy"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateGroupPolicy"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgCreateGroupWithPolicy",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgCreateGroupWithPolicy",
                        "enum": [
                          "/cosmos.group.v1.MsgCreateGroupWithPolicy"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateGroupWithPolicy"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgExec",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgExec",
                        "enum": [
                          "/cosmos.group.v1.MsgExec"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgExec"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgLeaveGroup",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgLeaveGroup",
                        "enum": [
                          "/cosmos.group.v1.MsgLeaveGroup"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgLeaveGroup"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgSubmitProposal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgSubmitProposal",
                        "enum": [
                          "/cosmos.group.v1.MsgSubmitProposal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitProposal"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupAdmin",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupAdmin",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupAdmin"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupAdmin"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupMembers",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupMembers",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupMembers"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupMembers"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupMetadata",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupMetadata",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupMetadata"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupMetadata"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupPolicyAdmin",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupPolicyAdmin"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupPolicyDecisionPolicy"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupPolicyMetadata",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupPolicyMetadata",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupPolicyMetadata"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupPolicyMetadata"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgVote",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgVote",
                        "enum": [
                          "/cosmos.group.v1.MsgVote"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVote"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgWithdrawProposal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgWithdrawProposal",
                        "enum": [
                          "/cosmos.group.v1.MsgWithdrawProposal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgWithdrawProposal"
                      }
                    }
                  },
                  {
                    "title": "cosmos.slashing.v1beta1.MsgUnjail",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.slashing.v1beta1.MsgUnjail",
                        "enum": [
                          "/cosmos.slashing.v1beta1.MsgUnjail"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUnjail"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgBeginRedelegate",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgBeginRedelegate",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgBeginRedelegate"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgBeginRedelegate"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgCancelUnbondingDelegation",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCancelUnbondingDelegation"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgCreateValidator",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgCreateValidator",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgCreateValidator"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateValidator"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgDelegate",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgDelegate",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgDelegate"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDelegate"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgEditValidator",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgEditValidator",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgEditValidator"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgEditValidator"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgUndelegate",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgUndelegate",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgUndelegate"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUndelegate"
                      }
                    }
                  },
                  {
                    "title": "cosmos.upgrade.v1beta1.MsgCancelUpgrade",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.upgrade.v1beta1.MsgCancelUpgrade",
                        "enum": [
                          "/cosmos.upgrade.v1beta1.MsgCancelUpgrade"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCancelUpgrade"
                      }
                    }
                  },
                  {
                    "title": "cosmos.upgrade.v1beta1.MsgSoftwareUpgrade",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade",
                        "enum": [
                          "/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSoftwareUpgrade"
                      }
                    }
                  },
                  {
                    "title": "cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount",
                        "enum": [
                          "/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreatePeriodicVestingAccount"
                      }
                    }
                  },
                  {
                    "title": "cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount",
                        "enum": [
                          "/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreatePermanentLockedAccount"
                      }
                    }
                  },
                  {
                    "title": "cosmos.vesting.v1beta1.MsgCreateVestingAccount",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.vesting.v1beta1.MsgCreateVestingAccount",
                        "enum": [
                          "/cosmos.vesting.v1beta1.MsgCreateVestingAccount"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateVestingAccount"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgCreateScheduledRun",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgCreateScheduledRun",
                        "enum": [
                          "/dyson.MsgCreateScheduledRun"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateScheduledRun"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgCreateStorage",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgCreateStorage",
                        "enum": [
                          "/dyson.MsgCreateStorage"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateStorage"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgDeleteScheduledRun",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgDeleteScheduledRun",
                        "enum": [
                          "/dyson.MsgDeleteScheduledRun"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeleteScheduledRun"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgDeleteScript",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgDeleteScript",
                        "enum": [
                          "/dyson.MsgDeleteScript"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeleteScript"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgDeleteStorage",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgDeleteStorage",
                        "enum": [
                          "/dyson.MsgDeleteStorage"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeleteStorage"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgDeployAutonomousScript",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgDeployAutonomousScript",
                        "enum": [
                          "/dyson.MsgDeployAutonomousScript"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeployAutonomousScript"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgRun",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgRun",
                        "enum": [
                          "/dyson.MsgRun"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRun"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgUpdateScheduledRun",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgUpdateScheduledRun",
                        "enum": [
                          "/dyson.MsgUpdateScheduledRun"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateScheduledRun"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgUpdateScript",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgUpdateScript",
                        "enum": [
                          "/dyson.MsgUpdateScript"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateScript"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgUpdateStorage",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgUpdateStorage",
                        "enum": [
                          "/dyson.MsgUpdateStorage"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateStorage"
                      }
                    }
                  },
                  {
                    "title": "ibc.applications.transfer.v1.MsgTransfer",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.applications.transfer.v1.MsgTransfer",
                        "enum": [
                          "/ibc.applications.transfer.v1.MsgTransfer"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgTransfer"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgAcknowledgement",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgAcknowledgement",
                        "enum": [
                          "/ibc.core.channel.v1.MsgAcknowledgement"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgAcknowledgement"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelCloseConfirm",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelCloseConfirm",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelCloseConfirm"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelCloseConfirm"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelCloseInit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelCloseInit",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelCloseInit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelCloseInit"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelOpenAck",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelOpenAck",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelOpenAck"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelOpenAck"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelOpenConfirm",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelOpenConfirm",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelOpenConfirm"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelOpenConfirm"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelOpenInit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelOpenInit",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelOpenInit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelOpenInit"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelOpenTry",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelOpenTry",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelOpenTry"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelOpenTry"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgRecvPacket",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgRecvPacket",
                        "enum": [
                          "/ibc.core.channel.v1.MsgRecvPacket"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRecvPacket"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgTimeout",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgTimeout",
                        "enum": [
                          "/ibc.core.channel.v1.MsgTimeout"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgTimeout"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgTimeoutOnClose",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgTimeoutOnClose",
                        "enum": [
                          "/ibc.core.channel.v1.MsgTimeoutOnClose"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgTimeoutOnClose"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.client.v1.MsgCreateClient",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.client.v1.MsgCreateClient",
                        "enum": [
                          "/ibc.core.client.v1.MsgCreateClient"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateClient"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.client.v1.MsgSubmitMisbehaviour",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.client.v1.MsgSubmitMisbehaviour",
                        "enum": [
                          "/ibc.core.client.v1.MsgSubmitMisbehaviour"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitMisbehaviour"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.client.v1.MsgUpdateClient",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.client.v1.MsgUpdateClient",
                        "enum": [
                          "/ibc.core.client.v1.MsgUpdateClient"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateClient"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.client.v1.MsgUpgradeClient",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.client.v1.MsgUpgradeClient",
                        "enum": [
                          "/ibc.core.client.v1.MsgUpgradeClient"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpgradeClient"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.connection.v1.MsgConnectionOpenAck",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.connection.v1.MsgConnectionOpenAck",
                        "enum": [
                          "/ibc.core.connection.v1.MsgConnectionOpenAck"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgConnectionOpenAck"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.connection.v1.MsgConnectionOpenConfirm",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.connection.v1.MsgConnectionOpenConfirm",
                        "enum": [
                          "/ibc.core.connection.v1.MsgConnectionOpenConfirm"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgConnectionOpenConfirm"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.connection.v1.MsgConnectionOpenInit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.connection.v1.MsgConnectionOpenInit",
                        "enum": [
                          "/ibc.core.connection.v1.MsgConnectionOpenInit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgConnectionOpenInit"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.connection.v1.MsgConnectionOpenTry",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.connection.v1.MsgConnectionOpenTry",
                        "enum": [
                          "/ibc.core.connection.v1.MsgConnectionOpenTry"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgConnectionOpenTry"
                      }
                    }
                  },
                  {
                    "title": "names.MsgAccept",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgAccept",
                        "enum": [
                          "/names.MsgAccept"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgAccept"
                      }
                    }
                  },
                  {
                    "title": "names.MsgBurnCoins",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgBurnCoins",
                        "enum": [
                          "/names.MsgBurnCoins"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgBurnCoins"
                      }
                    }
                  },
                  {
                    "title": "names.MsgBuy",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgBuy",
                        "enum": [
                          "/names.MsgBuy"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgBuy"
                      }
                    }
                  },
                  {
                    "title": "names.MsgDeleteName",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgDeleteName",
                        "enum": [
                          "/names.MsgDeleteName"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeleteName"
                      }
                    }
                  },
                  {
                    "title": "names.MsgMintCoins",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgMintCoins",
                        "enum": [
                          "/names.MsgMintCoins"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgMintCoins"
                      }
                    }
                  },
                  {
                    "title": "names.MsgOfferTo",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgOfferTo",
                        "enum": [
                          "/names.MsgOfferTo"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgOfferTo"
                      }
                    }
                  },
                  {
                    "title": "names.MsgRegister",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgRegister",
                        "enum": [
                          "/names.MsgRegister"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRegister"
                      }
                    }
                  },
                  {
                    "title": "names.MsgReveal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgReveal",
                        "enum": [
                          "/names.MsgReveal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgReveal"
                      }
                    }
                  },
                  {
                    "title": "names.MsgSetPriceAndExtend",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgSetPriceAndExtend",
                        "enum": [
                          "/names.MsgSetPriceAndExtend"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSetPriceAndExtend"
                      }
                    }
                  },
                  {
                    "title": "names.MsgUpdateName",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgUpdateName",
                        "enum": [
                          "/names.MsgUpdateName"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateName"
                      }
                    }
                  }
                ]
              },
              "type": "array"
            },
            "initial_deposit": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            },
            "proposer": {
              "type": "string"
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Proposal",
          "description": "MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary proposal Content."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "MsgExec": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "executor": {
              "type": "string",
              "description": "executor is the account address used to execute the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Exec",
          "description": "MsgExec is the Msg/Exec request type."
        },
        "MsgGrant": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "grantee": {
              "type": "string"
            },
            "grant": {
              "$ref": "#/definitions/cosmos.authz.v1beta1.Grant",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Grant",
          "description": "MsgGrant is a request type for Grant method. It declares authorization to the grantee on behalf of the granter with the provided expiration time."
        },
        "cosmos.authz.v1beta1.Grant": {
          "properties": {
            "authorization": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "expiration": {
              "type": "string",
              "description": "time when the grant will expire and will be pruned. If null, then the grant doesn't have a time expiration (other conditions  in `authorization` may apply to invalidate the grant)",
              "format": "date-time"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Grant",
          "description": "Grant gives permissions to execute the provide method with expiration time."
        },
        "MsgRevoke": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "grantee": {
              "type": "string"
            },
            "msg_type_url": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Revoke",
          "description": "MsgRevoke revokes any authorization with the provided sdk.Msg type on the granter's account with that has been granted to the grantee."
        },
        "MsgMultiSend": {
          "properties": {
            "inputs": {
              "items": {
                "$ref": "#/definitions/cosmos.bank.v1beta1.Input"
              },
              "type": "array"
            },
            "outputs": {
              "items": {
                "$ref": "#/definitions/cosmos.bank.v1beta1.Output"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Multi Send",
          "description": "MsgMultiSend represents an arbitrary multi-in, multi-out send message."
        },
        "cosmos.bank.v1beta1.Input": {
          "properties": {
            "address": {
              "type": "string"
            },
            "coins": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Input",
          "description": "Input models transaction input."
        },
        "cosmos.bank.v1beta1.Output": {
          "properties": {
            "address": {
              "type": "string"
            },
            "coins": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Output",
          "description": "Output models transaction outputs."
        },
        "MsgSend": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Send",
          "description": "MsgSend represents a message to send coins from one account to another."
        },
        "MsgVerifyInvariant": {
          "properties": {
            "sender": {
              "type": "string"
            },
            "invariant_module_name": {
              "type": "string"
            },
            "invariant_route": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Verify Invariant",
          "description": "MsgVerifyInvariant represents a message to verify a particular invariance."
        },
        "MsgFundCommunityPool": {
          "properties": {
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            },
            "depositor": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Fund Community Pool",
          "description": "MsgFundCommunityPool allows an account to directly fund the community pool."
        },
        "MsgSetWithdrawAddress": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "withdraw_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Set Withdraw Address",
          "description": "MsgSetWithdrawAddress sets the withdraw address for a delegator (or validator self-delegation)."
        },
        "MsgWithdrawDelegatorReward": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Delegator Reward",
          "description": "MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator from a single validator."
        },
        "MsgWithdrawValidatorCommission": {
          "properties": {
            "validator_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Validator Commission",
          "description": "MsgWithdrawValidatorCommission withdraws the full commission to the validator address."
        },
        "MsgSubmitEvidence": {
          "properties": {
            "submitter": {
              "type": "string"
            },
            "evidence": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Evidence",
          "description": "MsgSubmitEvidence represents a message that supports submitting arbitrary Evidence of misbehavior such as equivocation or counterfactual signing."
        },
        "MsgGrantAllowance": {
          "properties": {
            "granter": {
              "type": "string",
              "description": "granter is the address of the user granting an allowance of their funds."
            },
            "grantee": {
              "type": "string",
              "description": "grantee is the address of the user being granted an allowance of another user's funds."
            },
            "allowance": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "allowance can be any of basic, periodic, allowed fee allowance."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Grant Allowance",
          "description": "MsgGrantAllowance adds permission for Grantee to spend up to Allowance of fees from the account of Granter."
        },
        "MsgRevokeAllowance": {
          "properties": {
            "granter": {
              "type": "string",
              "description": "granter is the address of the user granting an allowance of their funds."
            },
            "grantee": {
              "type": "string",
              "description": "grantee is the address of the user being granted an allowance of another user's funds."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Revoke Allowance",
          "description": "MsgRevokeAllowance removes any existing Allowance from Granter to Grantee."
        },
        "MsgDeposit": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "depositor": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Deposit",
          "description": "MsgDeposit defines a message to submit a deposit to an existing proposal."
        },
        "MsgExecLegacyContent": {
          "properties": {
            "content": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "content is the proposal's content."
            },
            "authority": {
              "type": "string",
              "description": "authority must be the gov module address."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Exec Legacy Content",
          "description": "MsgExecLegacyContent is used to wrap the legacy content field into a message. This ensures backwards compatibility with v1beta1.MsgSubmitProposal."
        },
        "MsgVote": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "voter": {
              "type": "string",
              "description": "voter is the voter account address."
            },
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given proposal."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the vote."
            },
            "exec": {
              "enum": [
                "EXEC_UNSPECIFIED",
                0,
                "EXEC_TRY",
                1
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Proposals and Voting",
              "description": "Proposals and Voting  Exec defines modes of execution of a proposal on creation or on new vote."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote",
          "description": "MsgVote is the Msg/Vote request type."
        },
        "MsgVoteWeighted": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "voter": {
              "type": "string"
            },
            "options": {
              "items": {
                "$ref": "#/definitions/cosmos.gov.v1beta1.WeightedVoteOption"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote Weighted",
          "description": "MsgVoteWeighted defines a message to cast a vote. Since: cosmos-sdk 0.43"
        },
        "cosmos.gov.v1.WeightedVoteOption": {
          "properties": {
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given governance proposal."
            },
            "weight": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Weighted Vote Option",
          "description": "WeightedVoteOption defines a unit of vote for vote split."
        },
        "cosmos.gov.v1beta1.WeightedVoteOption": {
          "properties": {
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given governance proposal."
            },
            "weight": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Weighted Vote Option",
          "description": "WeightedVoteOption defines a unit of vote for vote split. Since: cosmos-sdk 0.43"
        },
        "MsgCreateGroup": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "members": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "members defines the group members."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the group."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Groups",
          "description": "Groups  MsgCreateGroup is the Msg/CreateGroup request type."
        },
        "cosmos.group.v1.MemberRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the member's account address."
            },
            "weight": {
              "type": "string",
              "description": "weight is the member's voting weight that should be greater than 0."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the member."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Member Request",
          "description": "MemberRequest represents a group member to be used in Msg server requests. Contrary to `Member`, it doesn't have any `added_at` field since this field cannot be set as part of requests."
        },
        "MsgCreateGroupPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the group policy."
            },
            "decision_policy": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "decision_policy specifies the group policy's decision policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Group Policies",
          "description": "Group Policies  MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type."
        },
        "MsgCreateGroupWithPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group and group policy admin."
            },
            "members": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "members defines the group members."
            },
            "group_metadata": {
              "type": "string",
              "description": "group_metadata is any arbitrary metadata attached to the group."
            },
            "group_policy_metadata": {
              "type": "string",
              "description": "group_policy_metadata is any arbitrary metadata attached to the group policy."
            },
            "group_policy_as_admin": {
              "type": "boolean",
              "description": "group_policy_as_admin is a boolean field, if set to true, the group policy account address will be used as group and group policy admin."
            },
            "decision_policy": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "decision_policy specifies the group policy's decision policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Group With Policy",
          "description": "MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type."
        },
        "MsgLeaveGroup": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the account address of the group member."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Leave Group",
          "description": "MsgLeaveGroup is the Msg/LeaveGroup request type."
        },
        "MsgUpdateGroupAdmin": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the current account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "new_admin": {
              "type": "string",
              "description": "new_admin is the group new admin account address."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Admin",
          "description": "MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type."
        },
        "MsgUpdateGroupMembers": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "member_updates": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "member_updates is the list of members to update, set weight to 0 to remove a member."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Members",
          "description": "MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type."
        },
        "MsgUpdateGroupMetadata": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is the updated group's metadata."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Metadata",
          "description": "MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type."
        },
        "MsgUpdateGroupPolicyAdmin": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of the group policy."
            },
            "new_admin": {
              "type": "string",
              "description": "new_admin is the new group policy admin."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Admin",
          "description": "MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type."
        },
        "MsgUpdateGroupPolicyDecisionPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "decision_policy": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "decision_policy is the updated group policy's decision policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Decision Policy",
          "description": "MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type."
        },
        "MsgUpdateGroupPolicyMetadata": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is the updated group policy metadata."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Metadata",
          "description": "MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type."
        },
        "MsgWithdrawProposal": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "address": {
              "type": "string",
              "description": "address is the admin of the group policy or one of the proposer of the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Proposal",
          "description": "MsgWithdrawProposal is the Msg/WithdrawProposal request type."
        },
        "MsgUnjail": {
          "properties": {
            "validator_addr": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Unjail",
          "description": "MsgUnjail defines the Msg/Unjail request type"
        },
        "MsgBeginRedelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_src_address": {
              "type": "string"
            },
            "validator_dst_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Begin Redelegate",
          "description": "MsgBeginRedelegate defines a SDK message for performing a redelegation of coins from a delegator and source validator to a destination validator."
        },
        "MsgCancelUnbondingDelegation": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false,
              "description": "amount is always less than or equal to unbonding delegation entry balance"
            },
            "creation_height": {
              "type": "string",
              "description": "creation_height is the height which the unbonding took place."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Cancel Unbonding Delegation",
          "description": "MsgCancelUnbondingDelegation defines the SDK message for performing a cancel unbonding delegation for delegator Since: cosmos-sdk 0.46"
        },
        "MsgCreateValidator": {
          "properties": {
            "description": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.Description",
              "additionalProperties": false
            },
            "commission": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.CommissionRates",
              "additionalProperties": false
            },
            "min_self_delegation": {
              "type": "string"
            },
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "pubkey": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "value": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Validator",
          "description": "MsgCreateValidator defines a SDK message for creating a new validator."
        },
        "cosmos.staking.v1beta1.CommissionRates": {
          "properties": {
            "rate": {
              "type": "string",
              "description": "rate is the commission rate charged to delegators, as a fraction."
            },
            "max_rate": {
              "type": "string",
              "description": "max_rate defines the maximum commission rate which validator can ever charge, as a fraction."
            },
            "max_change_rate": {
              "type": "string",
              "description": "max_change_rate defines the maximum daily increase of the validator commission, as a fraction."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Commission Rates",
          "description": "CommissionRates defines the initial commission rates to be used for creating a validator."
        },
        "cosmos.staking.v1beta1.Description": {
          "properties": {
            "moniker": {
              "type": "string",
              "description": "moniker defines a human-readable name for the validator."
            },
            "identity": {
              "type": "string",
              "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
            },
            "website": {
              "type": "string",
              "description": "website defines an optional website link."
            },
            "security_contact": {
              "type": "string",
              "description": "security_contact defines an optional email for security contact."
            },
            "details": {
              "type": "string",
              "description": "details define other optional details."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Description",
          "description": "Description defines a validator description."
        },
        "MsgDelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delegate",
          "description": "MsgDelegate defines a SDK message for performing a delegation of coins from a delegator to a validator."
        },
        "MsgEditValidator": {
          "properties": {
            "description": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.Description",
              "additionalProperties": false
            },
            "validator_address": {
              "type": "string"
            },
            "commission_rate": {
              "type": "string",
              "description": "We pass a reference to the new commission rate and min self delegation as it's not mandatory to update. If not updated, the deserialized rate will be zero with no way to distinguish if an update was intended. REF: #2373"
            },
            "min_self_delegation": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Edit Validator",
          "description": "MsgEditValidator defines a SDK message for editing an existing validator."
        },
        "MsgUndelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Undelegate",
          "description": "MsgUndelegate defines a SDK message for performing an undelegation from a delegate and a validator."
        },
        "MsgCancelUpgrade": {
          "properties": {
            "authority": {
              "type": "string",
              "description": "authority is the address of the governance account."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Cancel Upgrade",
          "description": "MsgCancelUpgrade is the Msg/CancelUpgrade request type. Since: cosmos-sdk 0.46"
        },
        "MsgSoftwareUpgrade": {
          "properties": {
            "authority": {
              "type": "string",
              "description": "authority is the address of the governance account."
            },
            "plan": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.Plan",
              "additionalProperties": false,
              "description": "plan is the upgrade plan."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Software Upgrade",
          "description": "MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type. Since: cosmos-sdk 0.46"
        },
        "cosmos.upgrade.v1beta1.Plan": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Sets the name for the upgrade. This name will be used by the upgraded version of the software to apply any special \"on-upgrade\" commands during the first BeginBlock method after the upgrade is applied. It is also used to detect whether a software version can handle a given upgrade. If no upgrade handler with this name has been set in the software, it will be assumed that the software is out-of-date when the upgrade Time or Height is reached and the software will exit."
            },
            "time": {
              "type": "string",
              "description": "Deprecated: Time based upgrades have been deprecated. Time based upgrade logic has been removed from the SDK. If this field is not empty, an error will be thrown.",
              "format": "date-time"
            },
            "height": {
              "type": "string",
              "description": "The height at which the upgrade must be performed. Only used if Time is not set."
            },
            "info": {
              "type": "string",
              "description": "Any application specific upgrade info to be included on-chain such as a git commit that validators could automatically upgrade to"
            },
            "upgraded_client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been moved to the IBC module in the sub module 02-client. If this field is not empty, an error will be thrown."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Plan",
          "description": "Plan specifies information about a planned upgrade and when it should occur."
        },
        "MsgCreatePeriodicVestingAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "start_time": {
              "type": "string"
            },
            "vesting_periods": {
              "items": {
                "$ref": "#/definitions/cosmos.vesting.v1beta1.Period"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Periodic Vesting Account",
          "description": "MsgCreateVestingAccount defines a message that enables creating a vesting account. Since: cosmos-sdk 0.46"
        },
        "cosmos.vesting.v1beta1.Period": {
          "properties": {
            "length": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Period",
          "description": "Period defines a length of time and amount of coins that will vest."
        },
        "MsgCreatePermanentLockedAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Permanent Locked Account",
          "description": "MsgCreatePermanentLockedAccount defines a message that enables creating a permanent locked account. Since: cosmos-sdk 0.46"
        },
        "MsgCreateVestingAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            },
            "end_time": {
              "type": "string"
            },
            "delayed": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Vesting Account",
          "description": "MsgCreateVestingAccount defines a message that enables creating a vesting account."
        },
        "MsgCreateScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "height": {
              "type": "string"
            },
            "gas": {
              "type": "string"
            },
            "msg": {
              "$ref": "#/definitions/dyson.MsgRun",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Scheduled Run"
        },
        "dyson.MsgRun": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The account sending the transaction"
            },
            "address": {
              "type": "string",
              "description": "dys address of the scrit to call"
            },
            "extra_lines": {
              "type": "string",
              "description": "optional extra source code to append to the end of the script before running"
            },
            "function_name": {
              "type": "string",
              "description": "optional function to call"
            },
            "args": {
              "type": "string",
              "description": "optional args to call the function with"
            },
            "kwargs": {
              "type": "string",
              "description": "optional kwargs to run"
            },
            "coins": {
              "type": "string",
              "description": "optional comma seperated list of coins to send the script (for example \"123dys,456token\")"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Run",
          "description": "MsgRun runs a script at a specific address"
        },
        "MsgCreateStorage": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The address signing this transaction"
            },
            "index": {
              "type": "string",
              "description": "Name of the Storage, must be prefixed with the creators address (for example: \"dys..1a3/some_name\")"
            },
            "data": {
              "type": "string",
              "description": "data to store at this index"
            },
            "force": {
              "type": "boolean",
              "description": "If true, force will always store the data at this address regardless of already existing storage"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Storage",
          "description": "Create a new storage of arbitrary text"
        },
        "MsgDeleteScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Scheduled Run"
        },
        "MsgDeleteScript": {
          "properties": {
            "creator": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Script"
        },
        "MsgDeleteStorage": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Storage"
        },
        "MsgDeployAutonomousScript": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "code": {
              "type": "string",
              "format": "python"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Deploy Autonomous Script",
          "description": "Deploy an Autonomous Script at a new address"
        },
        "MsgRun": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The account sending the transaction"
            },
            "address": {
              "type": "string",
              "description": "dys address of the scrit to call"
            },
            "extra_lines": {
              "type": "string",
              "description": "optional extra source code to append to the end of the script before running"
            },
            "function_name": {
              "type": "string",
              "description": "optional function to call"
            },
            "args": {
              "type": "string",
              "description": "optional args to call the function with"
            },
            "kwargs": {
              "type": "string",
              "description": "optional kwargs to run"
            },
            "coins": {
              "type": "string",
              "description": "optional comma seperated list of coins to send the script (for example \"123dys,456token\")"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Run",
          "description": "MsgRun runs a script at a specific address"
        },
        "MsgUpdateScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            },
            "msg": {
              "$ref": "#/definitions/dyson.MsgRun",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Scheduled Run"
        },
        "MsgUpdateScript": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "code": {
              "type": "string",
              "format": "python"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Script"
        },
        "MsgUpdateStorage": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The address signing this transaction"
            },
            "index": {
              "type": "string",
              "description": "Name of the Storage, must be prefixed with the creators address (for example: \"dys..1a3/some_name\")"
            },
            "data": {
              "type": "string",
              "description": "data to store at this index"
            },
            "force": {
              "type": "boolean",
              "description": "If true, force will always store the data at this address regardless of already existing storage"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Storage"
        },
        "MsgTransfer": {
          "properties": {
            "source_port": {
              "type": "string",
              "description": "the port on which the packet will be sent"
            },
            "source_channel": {
              "type": "string",
              "description": "the channel by which the packet will be sent"
            },
            "token": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false,
              "description": "the tokens to be transferred"
            },
            "sender": {
              "type": "string",
              "description": "the sender address"
            },
            "receiver": {
              "type": "string",
              "description": "the recipient address on the destination chain"
            },
            "timeout_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false,
              "description": "Timeout height relative to the current block height. The timeout is disabled when set to 0."
            },
            "timeout_timestamp": {
              "type": "string",
              "description": "Timeout timestamp in absolute nanoseconds since unix epoch. The timeout is disabled when set to 0."
            },
            "memo": {
              "type": "string",
              "description": "optional memo"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Transfer",
          "description": "MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between ICS20 enabled chains. See ICS Spec here: https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures"
        },
        "ibc.core.client.v1.Height": {
          "properties": {
            "revision_number": {
              "type": "string",
              "description": "the revision that the client is currently on"
            },
            "revision_height": {
              "type": "string",
              "description": "the height within the given revision"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Height",
          "description": "Height is a monotonically increasing data type that can be compared against another Height for the purposes of updating and freezing clients Normally the RevisionHeight is incremented at each height while keeping RevisionNumber the same. However some consensus algorithms may choose to reset the height in certain conditions e.g. hard forks, state-machine breaking changes In these cases, the RevisionNumber is incremented so that height continues to be monitonically increasing even as the RevisionHeight gets reset"
        },
        "MsgAcknowledgement": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "acknowledgement": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_acked": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Acknowledgement",
          "description": "MsgAcknowledgement receives incoming IBC acknowledgement"
        },
        "ibc.core.channel.v1.Packet": {
          "properties": {
            "sequence": {
              "type": "string",
              "description": "number corresponds to the order of sends and receives, where a Packet with an earlier sequence number must be sent and received before a Packet with a later sequence number."
            },
            "source_port": {
              "type": "string",
              "description": "identifies the port on the sending chain."
            },
            "source_channel": {
              "type": "string",
              "description": "identifies the channel end on the sending chain."
            },
            "destination_port": {
              "type": "string",
              "description": "identifies the port on the receiving chain."
            },
            "destination_channel": {
              "type": "string",
              "description": "identifies the channel end on the receiving chain."
            },
            "data": {
              "type": "string",
              "description": "actual opaque bytes transferred directly to the application module",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "timeout_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false,
              "description": "block height after which the packet times out"
            },
            "timeout_timestamp": {
              "type": "string",
              "description": "block timestamp (in nanoseconds) after which the packet times out"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Packet",
          "description": "Packet defines a type that carries data across different chains through IBC"
        },
        "MsgChannelCloseConfirm": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "proof_init": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Close Confirm",
          "description": "MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of channel state to CLOSED on Chain A."
        },
        "MsgChannelCloseInit": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Close Init",
          "description": "MsgChannelCloseInit defines a msg sent by a Relayer to Chain A to close a channel with Chain B."
        },
        "MsgChannelOpenAck": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "counterparty_channel_id": {
              "type": "string"
            },
            "counterparty_version": {
              "type": "string"
            },
            "proof_try": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Ack",
          "description": "MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to acknowledge the change of channel state to TRYOPEN on Chain B."
        },
        "MsgChannelOpenConfirm": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "proof_ack": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Confirm",
          "description": "MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of channel state to OPEN on Chain A."
        },
        "MsgChannelOpenInit": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel": {
              "$ref": "#/definitions/ibc.core.channel.v1.Channel",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Init",
          "description": "MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake. It is called by a relayer on Chain A."
        },
        "ibc.core.channel.v1.Channel": {
          "properties": {
            "state": {
              "enum": [
                "STATE_UNINITIALIZED_UNSPECIFIED",
                0,
                "STATE_INIT",
                1,
                "STATE_TRYOPEN",
                2,
                "STATE_OPEN",
                3,
                "STATE_CLOSED",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "State",
              "description": "State defines if a channel is in one of the following states: CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED."
            },
            "ordering": {
              "enum": [
                "ORDER_NONE_UNSPECIFIED",
                0,
                "ORDER_UNORDERED",
                1,
                "ORDER_ORDERED",
                2
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Order",
              "description": "Order defines if a channel is ORDERED or UNORDERED"
            },
            "counterparty": {
              "$ref": "#/definitions/ibc.core.channel.v1.Counterparty",
              "additionalProperties": false,
              "description": "counterparty channel end"
            },
            "connection_hops": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "list of connection identifiers, in order, along which packets sent on this channel will travel"
            },
            "version": {
              "type": "string",
              "description": "opaque channel version, which is agreed upon during the handshake"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Channel",
          "description": "Channel defines pipeline for exactly-once packet delivery between specific modules on separate blockchains, which has at least one end capable of sending packets and one end capable of receiving packets."
        },
        "ibc.core.channel.v1.Counterparty": {
          "properties": {
            "port_id": {
              "type": "string",
              "description": "port on the counterparty chain which owns the other end of the channel."
            },
            "channel_id": {
              "type": "string",
              "description": "channel end on the counterparty chain"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Counterparty",
          "description": "Counterparty defines a channel end counterparty"
        },
        "MsgChannelOpenTry": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "previous_channel_id": {
              "type": "string",
              "description": "Deprecated: this field is unused. Crossing hello's are no longer supported in core IBC."
            },
            "channel": {
              "$ref": "#/definitions/ibc.core.channel.v1.Channel",
              "additionalProperties": false,
              "description": "NOTE: the version field within the channel has been deprecated. Its value will be ignored by core IBC."
            },
            "counterparty_version": {
              "type": "string"
            },
            "proof_init": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Try",
          "description": "MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel on Chain B. The version field within the Channel field has been deprecated. Its value will be ignored by core IBC."
        },
        "MsgRecvPacket": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "proof_commitment": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Recv Packet",
          "description": "MsgRecvPacket receives incoming IBC packet"
        },
        "MsgTimeout": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "proof_unreceived": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "next_sequence_recv": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Timeout",
          "description": "MsgTimeout receives timed-out packet"
        },
        "MsgTimeoutOnClose": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "proof_unreceived": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_close": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "next_sequence_recv": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Timeout On Close",
          "description": "MsgTimeoutOnClose timed-out packet upon counterparty channel closure."
        },
        "MsgCreateClient": {
          "properties": {
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "light client state"
            },
            "consensus_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "consensus state associated with the client that corresponds to a given height."
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Client",
          "description": "MsgCreateClient defines a message to create an IBC client"
        },
        "MsgSubmitMisbehaviour": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "client unique identifier"
            },
            "misbehaviour": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "misbehaviour used for freezing the light client"
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Misbehaviour",
          "description": "MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for light client misbehaviour."
        },
        "MsgUpdateClient": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "client unique identifier"
            },
            "header": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "header to update the light client"
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Client",
          "description": "MsgUpdateClient defines an sdk.Msg to update a IBC client state using the given header."
        },
        "MsgUpgradeClient": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "client unique identifier"
            },
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "upgraded client state"
            },
            "consensus_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "upgraded consensus state, only contains enough information to serve as a basis of trust in update logic"
            },
            "proof_upgrade_client": {
              "type": "string",
              "description": "proof that old chain committed to new client",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_upgrade_consensus_state": {
              "type": "string",
              "description": "proof that old chain committed to new consensus state",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Upgrade Client",
          "description": "MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client state"
        },
        "MsgConnectionOpenAck": {
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "counterparty_connection_id": {
              "type": "string"
            },
            "version": {
              "$ref": "#/definitions/ibc.core.connection.v1.Version",
              "additionalProperties": false
            },
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "proof_try": {
              "type": "string",
              "description": "proof of the initialization the connection on Chain B: `UNITIALIZED -> TRYOPEN`",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_client": {
              "type": "string",
              "description": "proof of client state included in message",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_consensus": {
              "type": "string",
              "description": "proof of client consensus state",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "consensus_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Ack",
          "description": "MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to acknowledge the change of connection state to TRYOPEN on Chain B."
        },
        "ibc.core.connection.v1.Version": {
          "properties": {
            "identifier": {
              "type": "string",
              "description": "unique version identifier"
            },
            "features": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "list of features compatible with the specified identifier"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Version",
          "description": "Version defines the versioning scheme used to negotiate the IBC verison in the connection handshake."
        },
        "MsgConnectionOpenConfirm": {
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "proof_ack": {
              "type": "string",
              "description": "proof for the change of the connection state on Chain A: `INIT -> OPEN`",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Confirm",
          "description": "MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of connection state to OPEN on Chain A."
        },
        "MsgConnectionOpenInit": {
          "properties": {
            "client_id": {
              "type": "string"
            },
            "counterparty": {
              "$ref": "#/definitions/ibc.core.connection.v1.Counterparty",
              "additionalProperties": false
            },
            "version": {
              "$ref": "#/definitions/ibc.core.connection.v1.Version",
              "additionalProperties": false
            },
            "delay_period": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Init",
          "description": "MsgConnectionOpenInit defines the msg sent by an account on Chain A to initialize a connection with Chain B."
        },
        "ibc.core.commitment.v1.MerklePrefix": {
          "properties": {
            "key_prefix": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Merkle Prefix",
          "description": "MerklePrefix is merkle path prefixed to the key. The constructed key from the Path and the key will be append(Path.KeyPath, append(Path.KeyPrefix, key...))"
        },
        "ibc.core.connection.v1.Counterparty": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "identifies the client on the counterparty chain associated with a given connection."
            },
            "connection_id": {
              "type": "string",
              "description": "identifies the connection end on the counterparty chain associated with a given connection."
            },
            "prefix": {
              "$ref": "#/definitions/ibc.core.commitment.v1.MerklePrefix",
              "additionalProperties": false,
              "description": "commitment merkle prefix of the counterparty chain."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Counterparty",
          "description": "Counterparty defines the counterparty chain associated with a connection end."
        },
        "MsgConnectionOpenTry": {
          "properties": {
            "client_id": {
              "type": "string"
            },
            "previous_connection_id": {
              "type": "string",
              "description": "Deprecated: this field is unused. Crossing hellos are no longer supported in core IBC."
            },
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "counterparty": {
              "$ref": "#/definitions/ibc.core.connection.v1.Counterparty",
              "additionalProperties": false
            },
            "delay_period": {
              "type": "string"
            },
            "counterparty_versions": {
              "items": {
                "$ref": "#/definitions/ibc.core.connection.v1.Version"
              },
              "type": "array"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "proof_init": {
              "type": "string",
              "description": "proof of the initialization the connection on Chain A: `UNITIALIZED -> INIT`",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_client": {
              "type": "string",
              "description": "proof of client state included in message",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_consensus": {
              "type": "string",
              "description": "proof of client consensus state",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "consensus_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Try",
          "description": "MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a connection on Chain B."
        },
        "MsgAccept": {
          "properties": {
            "name": {
              "type": "string"
            },
            "newOwner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Accept"
        },
        "MsgBurnCoins": {
          "properties": {
            "owner": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Burn Coins"
        },
        "MsgBuy": {
          "properties": {
            "buyer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Buy"
        },
        "MsgDeleteName": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Name"
        },
        "MsgMintCoins": {
          "properties": {
            "owner": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Mint Coins"
        },
        "MsgOfferTo": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "newOwner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Offer To"
        },
        "MsgRegister": {
          "properties": {
            "commit": {
              "type": "string",
              "description": "The Shake256(owner+name+salt) hexdigest"
            },
            "owner": {
              "type": "string",
              "description": "Address of the owner"
            },
            "price": {
              "type": "string",
              "description": "The price that this name is valued at and can be purchased for example 100dys. The monthly fee is 1% of this price."
            },
            "auto_renew": {
              "type": "boolean",
              "description": "Should the name be automatically renewed"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Register"
        },
        "MsgReveal": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "salt": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Reveal"
        },
        "MsgSetPriceAndExtend": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "price": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Set Price And Extend"
        },
        "MsgUpdateName": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            },
            "authorized": {
              "type": "string"
            },
            "auto_renew": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Name"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.gov.v1/sendMsgExecLegacyContent": {
    "module_name": "cosmos.gov.v1",
    "name": "ExecLegacyContent",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgExecLegacyContent",
      "definitions": {
        "MsgExecLegacyContent": {
          "properties": {
            "content": {
              "oneOf": [
                {
                  "title": "cosmos.distribution.v1beta1.CommunityPoolSpendProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.distribution.v1beta1.CommunityPoolSpendProposal",
                      "enum": [
                        "/cosmos.distribution.v1beta1.CommunityPoolSpendProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/CommunityPoolSpendProposal"
                    }
                  }
                },
                {
                  "title": "cosmos.gov.v1beta1.TextProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.gov.v1beta1.TextProposal",
                      "enum": [
                        "/cosmos.gov.v1beta1.TextProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/TextProposal"
                    }
                  }
                },
                {
                  "title": "cosmos.params.v1beta1.ParameterChangeProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.params.v1beta1.ParameterChangeProposal",
                      "enum": [
                        "/cosmos.params.v1beta1.ParameterChangeProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/ParameterChangeProposal"
                    }
                  }
                },
                {
                  "title": "cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal",
                      "enum": [
                        "/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/CancelSoftwareUpgradeProposal"
                    }
                  }
                },
                {
                  "title": "cosmos.upgrade.v1beta1.SoftwareUpgradeProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal",
                      "enum": [
                        "/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/SoftwareUpgradeProposal"
                    }
                  }
                },
                {
                  "title": "ibc.core.client.v1.ClientUpdateProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.client.v1.ClientUpdateProposal",
                      "enum": [
                        "/ibc.core.client.v1.ClientUpdateProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/ClientUpdateProposal"
                    }
                  }
                },
                {
                  "title": "ibc.core.client.v1.UpgradeProposal",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/ibc.core.client.v1.UpgradeProposal",
                      "enum": [
                        "/ibc.core.client.v1.UpgradeProposal"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/UpgradeProposal"
                    }
                  }
                }
              ]
            },
            "authority": {
              "type": "string",
              "description": "authority must be the gov module address."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Exec Legacy Content",
          "description": "MsgExecLegacyContent is used to wrap the legacy content field into a message. This ensures backwards compatibility with v1beta1.MsgSubmitProposal."
        },
        "CommunityPoolSpendProposal": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "recipient": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Community Pool Spend Proposal",
          "description": "CommunityPoolSpendProposal details a proposal for use of community funds, together with how many coins are proposed to be spent, and to which recipient account."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "TextProposal": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Text Proposal",
          "description": "TextProposal defines a standard text proposal whose changes need to be manually updated in case of approval."
        },
        "ParameterChangeProposal": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "changes": {
              "items": {
                "$ref": "#/definitions/cosmos.params.v1beta1.ParamChange"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Parameter Change Proposal",
          "description": "ParameterChangeProposal defines a proposal to change one or more parameters."
        },
        "cosmos.params.v1beta1.ParamChange": {
          "properties": {
            "subspace": {
              "type": "string"
            },
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Param Change",
          "description": "ParamChange defines an individual parameter change, for use in ParameterChangeProposal."
        },
        "CancelSoftwareUpgradeProposal": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Cancel Software Upgrade Proposal",
          "description": "CancelSoftwareUpgradeProposal is a gov Content type for cancelling a software upgrade. Deprecated: This legacy proposal is deprecated in favor of Msg-based gov proposals, see MsgCancelUpgrade."
        },
        "SoftwareUpgradeProposal": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "plan": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.Plan",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Software Upgrade Proposal",
          "description": "SoftwareUpgradeProposal is a gov Content type for initiating a software upgrade. Deprecated: This legacy proposal is deprecated in favor of Msg-based gov proposals, see MsgSoftwareUpgrade."
        },
        "cosmos.upgrade.v1beta1.Plan": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Sets the name for the upgrade. This name will be used by the upgraded version of the software to apply any special \"on-upgrade\" commands during the first BeginBlock method after the upgrade is applied. It is also used to detect whether a software version can handle a given upgrade. If no upgrade handler with this name has been set in the software, it will be assumed that the software is out-of-date when the upgrade Time or Height is reached and the software will exit."
            },
            "time": {
              "type": "string",
              "description": "Deprecated: Time based upgrades have been deprecated. Time based upgrade logic has been removed from the SDK. If this field is not empty, an error will be thrown.",
              "format": "date-time"
            },
            "height": {
              "type": "string",
              "description": "The height at which the upgrade must be performed. Only used if Time is not set."
            },
            "info": {
              "type": "string",
              "description": "Any application specific upgrade info to be included on-chain such as a git commit that validators could automatically upgrade to"
            },
            "upgraded_client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been moved to the IBC module in the sub module 02-client. If this field is not empty, an error will be thrown."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Plan",
          "description": "Plan specifies information about a planned upgrade and when it should occur."
        },
        "ClientUpdateProposal": {
          "properties": {
            "title": {
              "type": "string",
              "description": "the title of the update proposal"
            },
            "description": {
              "type": "string",
              "description": "the description of the proposal"
            },
            "subject_client_id": {
              "type": "string",
              "description": "the client identifier for the client to be updated if the proposal passes"
            },
            "substitute_client_id": {
              "type": "string",
              "description": "the substitute client identifier for the client standing in for the subject client"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Client Update Proposal",
          "description": "ClientUpdateProposal is a governance proposal. If it passes, the substitute client's latest consensus state is copied over to the subject client. The proposal handler may fail if the subject and the substitute do not match in client and chain parameters (with exception to latest height, frozen height, and chain-id)."
        },
        "UpgradeProposal": {
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "plan": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.Plan",
              "additionalProperties": false
            },
            "upgraded_client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "An UpgradedClientState must be provided to perform an IBC breaking upgrade. This will make the chain commit to the correct upgraded (self) client state before the upgrade occurs, so that connecting chains can verify that the new upgraded client is valid by verifying a proof on the previous version of the chain. This will allow IBC connections to persist smoothly across planned chain upgrades"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Upgrade Proposal",
          "description": "UpgradeProposal is a gov Content type for initiating an IBC breaking upgrade."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.gov.v1/sendMsgVote": {
    "module_name": "cosmos.gov.v1",
    "name": "Vote",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgVote",
      "definitions": {
        "MsgVote": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "voter": {
              "type": "string"
            },
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given governance proposal."
            },
            "metadata": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote",
          "description": "MsgVote defines a message to cast a vote."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}",
    "http_rules": null
  },
  "cosmos.gov.v1/sendMsgVoteWeighted": {
    "module_name": "cosmos.gov.v1",
    "name": "VoteWeighted",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgVoteWeighted",
      "definitions": {
        "MsgVoteWeighted": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "voter": {
              "type": "string"
            },
            "options": {
              "items": {
                "$ref": "#/definitions/cosmos.gov.v1.WeightedVoteOption"
              },
              "type": "array"
            },
            "metadata": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote Weighted",
          "description": "MsgVoteWeighted defines a message to cast a vote."
        },
        "cosmos.gov.v1.WeightedVoteOption": {
          "properties": {
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given governance proposal."
            },
            "weight": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Weighted Vote Option",
          "description": "WeightedVoteOption defines a unit of vote for vote split."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.gov.v1/sendMsgDeposit": {
    "module_name": "cosmos.gov.v1",
    "name": "Deposit",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgDeposit",
      "definitions": {
        "MsgDeposit": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "depositor": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Deposit",
          "description": "MsgDeposit defines a message to submit a deposit to an existing proposal."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}",
    "http_rules": null
  },
  "cosmos.group.v1/QueryGroupInfo": {
    "module_name": "cosmos.group.v1",
    "name": "GroupInfo",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGroupInfoRequest",
      "definitions": {
        "QueryGroupInfoRequest": {
          "properties": {
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Group Info Request",
          "description": "QueryGroupInfoRequest is the Query/GroupInfo request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/group_info/{group_id}",
    "http_rules": [
      {
        "Params": [
          "group_id"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/QueryGroupPolicyInfo": {
    "module_name": "cosmos.group.v1",
    "name": "GroupPolicyInfo",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGroupPolicyInfoRequest",
      "definitions": {
        "QueryGroupPolicyInfoRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the account address of the group policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Group Policy Info Request",
          "description": "QueryGroupPolicyInfoRequest is the Query/GroupPolicyInfo request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/group_policy_info/{address}",
    "http_rules": [
      {
        "Params": [
          "address"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/QueryGroupMembers": {
    "module_name": "cosmos.group.v1",
    "name": "GroupMembers",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGroupMembersRequest",
      "definitions": {
        "QueryGroupMembersRequest": {
          "properties": {
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Group Members Request",
          "description": "QueryGroupMembersRequest is the Query/GroupMembers request type."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/group_members/{group_id}",
    "http_rules": [
      {
        "Params": [
          "group_id"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/QueryGroupsByAdmin": {
    "module_name": "cosmos.group.v1",
    "name": "GroupsByAdmin",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGroupsByAdminRequest",
      "definitions": {
        "QueryGroupsByAdminRequest": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of a group's admin."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Groups By Admin Request",
          "description": "QueryGroupsByAdminRequest is the Query/GroupsByAdmin request type."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/groups_by_admin/{admin}",
    "http_rules": [
      {
        "Params": [
          "admin"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/QueryGroupPoliciesByGroup": {
    "module_name": "cosmos.group.v1",
    "name": "GroupPoliciesByGroup",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGroupPoliciesByGroupRequest",
      "definitions": {
        "QueryGroupPoliciesByGroupRequest": {
          "properties": {
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group policy's group."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Group Policies By Group Request",
          "description": "QueryGroupPoliciesByGroupRequest is the Query/GroupPoliciesByGroup request type."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/group_policies_by_group/{group_id}",
    "http_rules": [
      {
        "Params": [
          "group_id"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/QueryGroupPoliciesByAdmin": {
    "module_name": "cosmos.group.v1",
    "name": "GroupPoliciesByAdmin",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGroupPoliciesByAdminRequest",
      "definitions": {
        "QueryGroupPoliciesByAdminRequest": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the admin address of the group policy."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Group Policies By Admin Request",
          "description": "QueryGroupPoliciesByAdminRequest is the Query/GroupPoliciesByAdmin request type."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/group_policies_by_admin/{admin}",
    "http_rules": [
      {
        "Params": [
          "admin"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/QueryProposal": {
    "module_name": "cosmos.group.v1",
    "name": "Proposal",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryProposalRequest",
      "definitions": {
        "QueryProposalRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id is the unique ID of a proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Proposal Request",
          "description": "QueryProposalRequest is the Query/Proposal request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/proposal/{proposal_id}",
    "http_rules": [
      {
        "Params": [
          "proposal_id"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/QueryProposalsByGroupPolicy": {
    "module_name": "cosmos.group.v1",
    "name": "ProposalsByGroupPolicy",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryProposalsByGroupPolicyRequest",
      "definitions": {
        "QueryProposalsByGroupPolicyRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the account address of the group policy related to proposals."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Proposals By Group Policy Request",
          "description": "QueryProposalsByGroupPolicyRequest is the Query/ProposalByGroupPolicy request type."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/proposals_by_group_policy/{address}",
    "http_rules": [
      {
        "Params": [
          "address"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/QueryVoteByProposalVoter": {
    "module_name": "cosmos.group.v1",
    "name": "VoteByProposalVoter",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryVoteByProposalVoterRequest",
      "definitions": {
        "QueryVoteByProposalVoterRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id is the unique ID of a proposal."
            },
            "voter": {
              "type": "string",
              "description": "voter is a proposal voter account address."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Vote By Proposal Voter Request",
          "description": "QueryVoteByProposalVoterRequest is the Query/VoteByProposalVoter request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/vote_by_proposal_voter/{proposal_id}/{voter}",
    "http_rules": [
      {
        "Params": [
          "proposal_id",
          "voter"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/QueryVotesByProposal": {
    "module_name": "cosmos.group.v1",
    "name": "VotesByProposal",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryVotesByProposalRequest",
      "definitions": {
        "QueryVotesByProposalRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id is the unique ID of a proposal."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Votes By Proposal Request",
          "description": "QueryVotesByProposalRequest is the Query/VotesByProposal request type."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/votes_by_proposal/{proposal_id}",
    "http_rules": [
      {
        "Params": [
          "proposal_id"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/QueryVotesByVoter": {
    "module_name": "cosmos.group.v1",
    "name": "VotesByVoter",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryVotesByVoterRequest",
      "definitions": {
        "QueryVotesByVoterRequest": {
          "properties": {
            "voter": {
              "type": "string",
              "description": "voter is a proposal voter account address."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Votes By Voter Request",
          "description": "QueryVotesByVoterRequest is the Query/VotesByVoter request type."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/votes_by_voter/{voter}",
    "http_rules": [
      {
        "Params": [
          "voter"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/QueryGroupsByMember": {
    "module_name": "cosmos.group.v1",
    "name": "GroupsByMember",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGroupsByMemberRequest",
      "definitions": {
        "QueryGroupsByMemberRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the group member address."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Groups By Member Request",
          "description": "QueryGroupsByMemberRequest is the Query/GroupsByMember request type."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/groups_by_member/{address}",
    "http_rules": [
      {
        "Params": [
          "address"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/QueryTallyResult": {
    "module_name": "cosmos.group.v1",
    "name": "TallyResult",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryTallyResultRequest",
      "definitions": {
        "QueryTallyResultRequest": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal_id is the unique id of a proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Tally Result Request",
          "description": "QueryTallyResultRequest is the Query/TallyResult request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/group/v1/proposals/{proposal_id}/tally",
    "http_rules": [
      {
        "Params": [
          "proposal_id"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.group.v1/sendMsgCreateGroup": {
    "module_name": "cosmos.group.v1",
    "name": "CreateGroup",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgCreateGroup",
      "definitions": {
        "MsgCreateGroup": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "members": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "members defines the group members."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the group."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Groups",
          "description": "Groups  MsgCreateGroup is the Msg/CreateGroup request type."
        },
        "cosmos.group.v1.MemberRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the member's account address."
            },
            "weight": {
              "type": "string",
              "description": "weight is the member's voting weight that should be greater than 0."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the member."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Member Request",
          "description": "MemberRequest represents a group member to be used in Msg server requests. Contrary to `Member`, it doesn't have any `added_at` field since this field cannot be set as part of requests."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgUpdateGroupMembers": {
    "module_name": "cosmos.group.v1",
    "name": "UpdateGroupMembers",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgUpdateGroupMembers",
      "definitions": {
        "MsgUpdateGroupMembers": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "member_updates": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "member_updates is the list of members to update, set weight to 0 to remove a member."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Members",
          "description": "MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type."
        },
        "cosmos.group.v1.MemberRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the member's account address."
            },
            "weight": {
              "type": "string",
              "description": "weight is the member's voting weight that should be greater than 0."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the member."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Member Request",
          "description": "MemberRequest represents a group member to be used in Msg server requests. Contrary to `Member`, it doesn't have any `added_at` field since this field cannot be set as part of requests."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgUpdateGroupAdmin": {
    "module_name": "cosmos.group.v1",
    "name": "UpdateGroupAdmin",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgUpdateGroupAdmin",
      "definitions": {
        "MsgUpdateGroupAdmin": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the current account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "new_admin": {
              "type": "string",
              "description": "new_admin is the group new admin account address."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Admin",
          "description": "MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgUpdateGroupMetadata": {
    "module_name": "cosmos.group.v1",
    "name": "UpdateGroupMetadata",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgUpdateGroupMetadata",
      "definitions": {
        "MsgUpdateGroupMetadata": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is the updated group's metadata."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Metadata",
          "description": "MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgCreateGroupPolicy": {
    "module_name": "cosmos.group.v1",
    "name": "CreateGroupPolicy",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgCreateGroupPolicy",
      "definitions": {
        "MsgCreateGroupPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the group policy."
            },
            "decision_policy": {
              "oneOf": [
                {
                  "title": "cosmos.group.v1.PercentageDecisionPolicy",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.PercentageDecisionPolicy",
                      "enum": [
                        "/cosmos.group.v1.PercentageDecisionPolicy"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/PercentageDecisionPolicy"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.ThresholdDecisionPolicy",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.ThresholdDecisionPolicy",
                      "enum": [
                        "/cosmos.group.v1.ThresholdDecisionPolicy"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/ThresholdDecisionPolicy"
                    }
                  }
                }
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Group Policies",
          "description": "Group Policies  MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type."
        },
        "PercentageDecisionPolicy": {
          "properties": {
            "percentage": {
              "type": "string",
              "description": "percentage is the minimum percentage the weighted sum of `YES` votes must meet for a proposal to succeed."
            },
            "windows": {
              "$ref": "#/definitions/cosmos.group.v1.DecisionPolicyWindows",
              "additionalProperties": false,
              "description": "windows defines the different windows for voting and execution."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Percentage Decision Policy",
          "description": "PercentageDecisionPolicy is a decision policy where a proposal passes when it satisfies the two following conditions: 1. The percentage of all `YES` voters' weights out of the total group weight    is greater or equal than the given `percentage`. 2. The voting and execution periods of the proposal respect the parameters    given by `windows`."
        },
        "cosmos.group.v1.DecisionPolicyWindows": {
          "properties": {
            "voting_period": {
              "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
              "type": "string",
              "description": "voting_period is the duration from submission of a proposal to the end of voting period Within this times votes can be submitted with MsgVote.",
              "format": "regex"
            },
            "min_execution_period": {
              "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
              "type": "string",
              "description": "min_execution_period is the minimum duration after the proposal submission where members can start sending MsgExec. This means that the window for sending a MsgExec transaction is: `[ submission + min_execution_period ; submission + voting_period + max_execution_period]` where max_execution_period is a app-specific config, defined in the keeper. If not set, min_execution_period will default to 0. Please make sure to set a `min_execution_period` that is smaller than `voting_period + max_execution_period`, or else the above execution window is empty, meaning that all proposals created with this decision policy won't be able to be executed.",
              "format": "regex"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Decision Policy Windows",
          "description": "DecisionPolicyWindows defines the different windows for voting and execution."
        },
        "ThresholdDecisionPolicy": {
          "properties": {
            "threshold": {
              "type": "string",
              "description": "threshold is the minimum weighted sum of `YES` votes that must be met or exceeded for a proposal to succeed."
            },
            "windows": {
              "$ref": "#/definitions/cosmos.group.v1.DecisionPolicyWindows",
              "additionalProperties": false,
              "description": "windows defines the different windows for voting and execution."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Threshold Decision Policy",
          "description": "ThresholdDecisionPolicy is a decision policy where a proposal passes when it satisfies the two following conditions: 1. The sum of all `YES` voters' weights is greater or equal than the defined    `threshold`. 2. The voting and execution periods of the proposal respect the parameters    given by `windows`."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgCreateGroupWithPolicy": {
    "module_name": "cosmos.group.v1",
    "name": "CreateGroupWithPolicy",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgCreateGroupWithPolicy",
      "definitions": {
        "MsgCreateGroupWithPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group and group policy admin."
            },
            "members": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "members defines the group members."
            },
            "group_metadata": {
              "type": "string",
              "description": "group_metadata is any arbitrary metadata attached to the group."
            },
            "group_policy_metadata": {
              "type": "string",
              "description": "group_policy_metadata is any arbitrary metadata attached to the group policy."
            },
            "group_policy_as_admin": {
              "type": "boolean",
              "description": "group_policy_as_admin is a boolean field, if set to true, the group policy account address will be used as group and group policy admin."
            },
            "decision_policy": {
              "oneOf": [
                {
                  "title": "cosmos.group.v1.PercentageDecisionPolicy",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.PercentageDecisionPolicy",
                      "enum": [
                        "/cosmos.group.v1.PercentageDecisionPolicy"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/PercentageDecisionPolicy"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.ThresholdDecisionPolicy",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.ThresholdDecisionPolicy",
                      "enum": [
                        "/cosmos.group.v1.ThresholdDecisionPolicy"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/ThresholdDecisionPolicy"
                    }
                  }
                }
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Group With Policy",
          "description": "MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type."
        },
        "cosmos.group.v1.MemberRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the member's account address."
            },
            "weight": {
              "type": "string",
              "description": "weight is the member's voting weight that should be greater than 0."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the member."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Member Request",
          "description": "MemberRequest represents a group member to be used in Msg server requests. Contrary to `Member`, it doesn't have any `added_at` field since this field cannot be set as part of requests."
        },
        "PercentageDecisionPolicy": {
          "properties": {
            "percentage": {
              "type": "string",
              "description": "percentage is the minimum percentage the weighted sum of `YES` votes must meet for a proposal to succeed."
            },
            "windows": {
              "$ref": "#/definitions/cosmos.group.v1.DecisionPolicyWindows",
              "additionalProperties": false,
              "description": "windows defines the different windows for voting and execution."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Percentage Decision Policy",
          "description": "PercentageDecisionPolicy is a decision policy where a proposal passes when it satisfies the two following conditions: 1. The percentage of all `YES` voters' weights out of the total group weight    is greater or equal than the given `percentage`. 2. The voting and execution periods of the proposal respect the parameters    given by `windows`."
        },
        "cosmos.group.v1.DecisionPolicyWindows": {
          "properties": {
            "voting_period": {
              "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
              "type": "string",
              "description": "voting_period is the duration from submission of a proposal to the end of voting period Within this times votes can be submitted with MsgVote.",
              "format": "regex"
            },
            "min_execution_period": {
              "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
              "type": "string",
              "description": "min_execution_period is the minimum duration after the proposal submission where members can start sending MsgExec. This means that the window for sending a MsgExec transaction is: `[ submission + min_execution_period ; submission + voting_period + max_execution_period]` where max_execution_period is a app-specific config, defined in the keeper. If not set, min_execution_period will default to 0. Please make sure to set a `min_execution_period` that is smaller than `voting_period + max_execution_period`, or else the above execution window is empty, meaning that all proposals created with this decision policy won't be able to be executed.",
              "format": "regex"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Decision Policy Windows",
          "description": "DecisionPolicyWindows defines the different windows for voting and execution."
        },
        "ThresholdDecisionPolicy": {
          "properties": {
            "threshold": {
              "type": "string",
              "description": "threshold is the minimum weighted sum of `YES` votes that must be met or exceeded for a proposal to succeed."
            },
            "windows": {
              "$ref": "#/definitions/cosmos.group.v1.DecisionPolicyWindows",
              "additionalProperties": false,
              "description": "windows defines the different windows for voting and execution."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Threshold Decision Policy",
          "description": "ThresholdDecisionPolicy is a decision policy where a proposal passes when it satisfies the two following conditions: 1. The sum of all `YES` voters' weights is greater or equal than the defined    `threshold`. 2. The voting and execution periods of the proposal respect the parameters    given by `windows`."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgUpdateGroupPolicyAdmin": {
    "module_name": "cosmos.group.v1",
    "name": "UpdateGroupPolicyAdmin",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgUpdateGroupPolicyAdmin",
      "definitions": {
        "MsgUpdateGroupPolicyAdmin": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of the group policy."
            },
            "new_admin": {
              "type": "string",
              "description": "new_admin is the new group policy admin."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Admin",
          "description": "MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgUpdateGroupPolicyDecisionPolicy": {
    "module_name": "cosmos.group.v1",
    "name": "UpdateGroupPolicyDecisionPolicy",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgUpdateGroupPolicyDecisionPolicy",
      "definitions": {
        "MsgUpdateGroupPolicyDecisionPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "decision_policy": {
              "oneOf": [
                {
                  "title": "cosmos.group.v1.PercentageDecisionPolicy",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.PercentageDecisionPolicy",
                      "enum": [
                        "/cosmos.group.v1.PercentageDecisionPolicy"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/PercentageDecisionPolicy"
                    }
                  }
                },
                {
                  "title": "cosmos.group.v1.ThresholdDecisionPolicy",
                  "type": "object",
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request",
                      "readOnly": true,
                      "default": "/cosmos.group.v1.ThresholdDecisionPolicy",
                      "enum": [
                        "/cosmos.group.v1.ThresholdDecisionPolicy"
                      ]
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "readOnly": true,
                      "binaryEncoding": "base64"
                    },
                    "object_value": {
                      "$ref": "#/definitions/ThresholdDecisionPolicy"
                    }
                  }
                }
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Decision Policy",
          "description": "MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type."
        },
        "PercentageDecisionPolicy": {
          "properties": {
            "percentage": {
              "type": "string",
              "description": "percentage is the minimum percentage the weighted sum of `YES` votes must meet for a proposal to succeed."
            },
            "windows": {
              "$ref": "#/definitions/cosmos.group.v1.DecisionPolicyWindows",
              "additionalProperties": false,
              "description": "windows defines the different windows for voting and execution."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Percentage Decision Policy",
          "description": "PercentageDecisionPolicy is a decision policy where a proposal passes when it satisfies the two following conditions: 1. The percentage of all `YES` voters' weights out of the total group weight    is greater or equal than the given `percentage`. 2. The voting and execution periods of the proposal respect the parameters    given by `windows`."
        },
        "cosmos.group.v1.DecisionPolicyWindows": {
          "properties": {
            "voting_period": {
              "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
              "type": "string",
              "description": "voting_period is the duration from submission of a proposal to the end of voting period Within this times votes can be submitted with MsgVote.",
              "format": "regex"
            },
            "min_execution_period": {
              "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
              "type": "string",
              "description": "min_execution_period is the minimum duration after the proposal submission where members can start sending MsgExec. This means that the window for sending a MsgExec transaction is: `[ submission + min_execution_period ; submission + voting_period + max_execution_period]` where max_execution_period is a app-specific config, defined in the keeper. If not set, min_execution_period will default to 0. Please make sure to set a `min_execution_period` that is smaller than `voting_period + max_execution_period`, or else the above execution window is empty, meaning that all proposals created with this decision policy won't be able to be executed.",
              "format": "regex"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Decision Policy Windows",
          "description": "DecisionPolicyWindows defines the different windows for voting and execution."
        },
        "ThresholdDecisionPolicy": {
          "properties": {
            "threshold": {
              "type": "string",
              "description": "threshold is the minimum weighted sum of `YES` votes that must be met or exceeded for a proposal to succeed."
            },
            "windows": {
              "$ref": "#/definitions/cosmos.group.v1.DecisionPolicyWindows",
              "additionalProperties": false,
              "description": "windows defines the different windows for voting and execution."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Threshold Decision Policy",
          "description": "ThresholdDecisionPolicy is a decision policy where a proposal passes when it satisfies the two following conditions: 1. The sum of all `YES` voters' weights is greater or equal than the defined    `threshold`. 2. The voting and execution periods of the proposal respect the parameters    given by `windows`."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgUpdateGroupPolicyMetadata": {
    "module_name": "cosmos.group.v1",
    "name": "UpdateGroupPolicyMetadata",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgUpdateGroupPolicyMetadata",
      "definitions": {
        "MsgUpdateGroupPolicyMetadata": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is the updated group policy metadata."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Metadata",
          "description": "MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgSubmitProposal": {
    "module_name": "cosmos.group.v1",
    "name": "SubmitProposal",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgSubmitProposal",
      "definitions": {
        "MsgSubmitProposal": {
          "properties": {
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "proposers": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "proposers are the account addresses of the proposers. Proposers signatures will be counted as yes votes."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the proposal."
            },
            "messages": {
              "items": {
                "oneOf": [
                  {
                    "title": "cosmos.authz.v1beta1.MsgExec",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.authz.v1beta1.MsgExec",
                        "enum": [
                          "/cosmos.authz.v1beta1.MsgExec"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgExec"
                      }
                    }
                  },
                  {
                    "title": "cosmos.authz.v1beta1.MsgGrant",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.authz.v1beta1.MsgGrant",
                        "enum": [
                          "/cosmos.authz.v1beta1.MsgGrant"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgGrant"
                      }
                    }
                  },
                  {
                    "title": "cosmos.authz.v1beta1.MsgRevoke",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.authz.v1beta1.MsgRevoke",
                        "enum": [
                          "/cosmos.authz.v1beta1.MsgRevoke"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRevoke"
                      }
                    }
                  },
                  {
                    "title": "cosmos.bank.v1beta1.MsgMultiSend",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.bank.v1beta1.MsgMultiSend",
                        "enum": [
                          "/cosmos.bank.v1beta1.MsgMultiSend"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgMultiSend"
                      }
                    }
                  },
                  {
                    "title": "cosmos.bank.v1beta1.MsgSend",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.bank.v1beta1.MsgSend",
                        "enum": [
                          "/cosmos.bank.v1beta1.MsgSend"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSend"
                      }
                    }
                  },
                  {
                    "title": "cosmos.crisis.v1beta1.MsgVerifyInvariant",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.crisis.v1beta1.MsgVerifyInvariant",
                        "enum": [
                          "/cosmos.crisis.v1beta1.MsgVerifyInvariant"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVerifyInvariant"
                      }
                    }
                  },
                  {
                    "title": "cosmos.distribution.v1beta1.MsgFundCommunityPool",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.distribution.v1beta1.MsgFundCommunityPool",
                        "enum": [
                          "/cosmos.distribution.v1beta1.MsgFundCommunityPool"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgFundCommunityPool"
                      }
                    }
                  },
                  {
                    "title": "cosmos.distribution.v1beta1.MsgSetWithdrawAddress",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress",
                        "enum": [
                          "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSetWithdrawAddress"
                      }
                    }
                  },
                  {
                    "title": "cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
                        "enum": [
                          "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgWithdrawDelegatorReward"
                      }
                    }
                  },
                  {
                    "title": "cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",
                        "enum": [
                          "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgWithdrawValidatorCommission"
                      }
                    }
                  },
                  {
                    "title": "cosmos.evidence.v1beta1.MsgSubmitEvidence",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.evidence.v1beta1.MsgSubmitEvidence",
                        "enum": [
                          "/cosmos.evidence.v1beta1.MsgSubmitEvidence"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitEvidence"
                      }
                    }
                  },
                  {
                    "title": "cosmos.feegrant.v1beta1.MsgGrantAllowance",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.feegrant.v1beta1.MsgGrantAllowance",
                        "enum": [
                          "/cosmos.feegrant.v1beta1.MsgGrantAllowance"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgGrantAllowance"
                      }
                    }
                  },
                  {
                    "title": "cosmos.feegrant.v1beta1.MsgRevokeAllowance",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.feegrant.v1beta1.MsgRevokeAllowance",
                        "enum": [
                          "/cosmos.feegrant.v1beta1.MsgRevokeAllowance"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRevokeAllowance"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgDeposit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgDeposit",
                        "enum": [
                          "/cosmos.gov.v1.MsgDeposit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeposit"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgExecLegacyContent",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgExecLegacyContent",
                        "enum": [
                          "/cosmos.gov.v1.MsgExecLegacyContent"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgExecLegacyContent"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgSubmitProposal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgSubmitProposal",
                        "enum": [
                          "/cosmos.gov.v1.MsgSubmitProposal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitProposal"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgVote",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgVote",
                        "enum": [
                          "/cosmos.gov.v1.MsgVote"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVote"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1.MsgVoteWeighted",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1.MsgVoteWeighted",
                        "enum": [
                          "/cosmos.gov.v1.MsgVoteWeighted"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVoteWeighted"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1beta1.MsgDeposit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1beta1.MsgDeposit",
                        "enum": [
                          "/cosmos.gov.v1beta1.MsgDeposit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeposit"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1beta1.MsgSubmitProposal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1beta1.MsgSubmitProposal",
                        "enum": [
                          "/cosmos.gov.v1beta1.MsgSubmitProposal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitProposal"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1beta1.MsgVote",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1beta1.MsgVote",
                        "enum": [
                          "/cosmos.gov.v1beta1.MsgVote"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVote"
                      }
                    }
                  },
                  {
                    "title": "cosmos.gov.v1beta1.MsgVoteWeighted",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.gov.v1beta1.MsgVoteWeighted",
                        "enum": [
                          "/cosmos.gov.v1beta1.MsgVoteWeighted"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVoteWeighted"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgCreateGroup",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgCreateGroup",
                        "enum": [
                          "/cosmos.group.v1.MsgCreateGroup"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateGroup"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgCreateGroupPolicy",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgCreateGroupPolicy",
                        "enum": [
                          "/cosmos.group.v1.MsgCreateGroupPolicy"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateGroupPolicy"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgCreateGroupWithPolicy",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgCreateGroupWithPolicy",
                        "enum": [
                          "/cosmos.group.v1.MsgCreateGroupWithPolicy"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateGroupWithPolicy"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgExec",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgExec",
                        "enum": [
                          "/cosmos.group.v1.MsgExec"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgExec"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgLeaveGroup",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgLeaveGroup",
                        "enum": [
                          "/cosmos.group.v1.MsgLeaveGroup"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgLeaveGroup"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgSubmitProposal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgSubmitProposal",
                        "enum": [
                          "/cosmos.group.v1.MsgSubmitProposal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitProposal"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupAdmin",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupAdmin",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupAdmin"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupAdmin"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupMembers",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupMembers",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupMembers"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupMembers"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupMetadata",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupMetadata",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupMetadata"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupMetadata"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupPolicyAdmin",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupPolicyAdmin"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupPolicyDecisionPolicy"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgUpdateGroupPolicyMetadata",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgUpdateGroupPolicyMetadata",
                        "enum": [
                          "/cosmos.group.v1.MsgUpdateGroupPolicyMetadata"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateGroupPolicyMetadata"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgVote",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgVote",
                        "enum": [
                          "/cosmos.group.v1.MsgVote"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgVote"
                      }
                    }
                  },
                  {
                    "title": "cosmos.group.v1.MsgWithdrawProposal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.group.v1.MsgWithdrawProposal",
                        "enum": [
                          "/cosmos.group.v1.MsgWithdrawProposal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgWithdrawProposal"
                      }
                    }
                  },
                  {
                    "title": "cosmos.slashing.v1beta1.MsgUnjail",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.slashing.v1beta1.MsgUnjail",
                        "enum": [
                          "/cosmos.slashing.v1beta1.MsgUnjail"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUnjail"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgBeginRedelegate",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgBeginRedelegate",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgBeginRedelegate"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgBeginRedelegate"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgCancelUnbondingDelegation",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCancelUnbondingDelegation"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgCreateValidator",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgCreateValidator",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgCreateValidator"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateValidator"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgDelegate",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgDelegate",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgDelegate"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDelegate"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgEditValidator",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgEditValidator",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgEditValidator"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgEditValidator"
                      }
                    }
                  },
                  {
                    "title": "cosmos.staking.v1beta1.MsgUndelegate",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.staking.v1beta1.MsgUndelegate",
                        "enum": [
                          "/cosmos.staking.v1beta1.MsgUndelegate"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUndelegate"
                      }
                    }
                  },
                  {
                    "title": "cosmos.upgrade.v1beta1.MsgCancelUpgrade",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.upgrade.v1beta1.MsgCancelUpgrade",
                        "enum": [
                          "/cosmos.upgrade.v1beta1.MsgCancelUpgrade"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCancelUpgrade"
                      }
                    }
                  },
                  {
                    "title": "cosmos.upgrade.v1beta1.MsgSoftwareUpgrade",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade",
                        "enum": [
                          "/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSoftwareUpgrade"
                      }
                    }
                  },
                  {
                    "title": "cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount",
                        "enum": [
                          "/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreatePeriodicVestingAccount"
                      }
                    }
                  },
                  {
                    "title": "cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount",
                        "enum": [
                          "/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreatePermanentLockedAccount"
                      }
                    }
                  },
                  {
                    "title": "cosmos.vesting.v1beta1.MsgCreateVestingAccount",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/cosmos.vesting.v1beta1.MsgCreateVestingAccount",
                        "enum": [
                          "/cosmos.vesting.v1beta1.MsgCreateVestingAccount"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateVestingAccount"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgCreateScheduledRun",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgCreateScheduledRun",
                        "enum": [
                          "/dyson.MsgCreateScheduledRun"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateScheduledRun"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgCreateStorage",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgCreateStorage",
                        "enum": [
                          "/dyson.MsgCreateStorage"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateStorage"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgDeleteScheduledRun",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgDeleteScheduledRun",
                        "enum": [
                          "/dyson.MsgDeleteScheduledRun"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeleteScheduledRun"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgDeleteScript",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgDeleteScript",
                        "enum": [
                          "/dyson.MsgDeleteScript"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeleteScript"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgDeleteStorage",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgDeleteStorage",
                        "enum": [
                          "/dyson.MsgDeleteStorage"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeleteStorage"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgDeployAutonomousScript",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgDeployAutonomousScript",
                        "enum": [
                          "/dyson.MsgDeployAutonomousScript"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeployAutonomousScript"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgRun",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgRun",
                        "enum": [
                          "/dyson.MsgRun"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRun"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgUpdateScheduledRun",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgUpdateScheduledRun",
                        "enum": [
                          "/dyson.MsgUpdateScheduledRun"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateScheduledRun"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgUpdateScript",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgUpdateScript",
                        "enum": [
                          "/dyson.MsgUpdateScript"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateScript"
                      }
                    }
                  },
                  {
                    "title": "dyson.MsgUpdateStorage",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/dyson.MsgUpdateStorage",
                        "enum": [
                          "/dyson.MsgUpdateStorage"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateStorage"
                      }
                    }
                  },
                  {
                    "title": "ibc.applications.transfer.v1.MsgTransfer",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.applications.transfer.v1.MsgTransfer",
                        "enum": [
                          "/ibc.applications.transfer.v1.MsgTransfer"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgTransfer"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgAcknowledgement",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgAcknowledgement",
                        "enum": [
                          "/ibc.core.channel.v1.MsgAcknowledgement"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgAcknowledgement"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelCloseConfirm",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelCloseConfirm",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelCloseConfirm"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelCloseConfirm"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelCloseInit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelCloseInit",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelCloseInit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelCloseInit"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelOpenAck",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelOpenAck",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelOpenAck"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelOpenAck"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelOpenConfirm",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelOpenConfirm",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelOpenConfirm"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelOpenConfirm"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelOpenInit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelOpenInit",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelOpenInit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelOpenInit"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgChannelOpenTry",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgChannelOpenTry",
                        "enum": [
                          "/ibc.core.channel.v1.MsgChannelOpenTry"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgChannelOpenTry"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgRecvPacket",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgRecvPacket",
                        "enum": [
                          "/ibc.core.channel.v1.MsgRecvPacket"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRecvPacket"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgTimeout",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgTimeout",
                        "enum": [
                          "/ibc.core.channel.v1.MsgTimeout"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgTimeout"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.channel.v1.MsgTimeoutOnClose",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.channel.v1.MsgTimeoutOnClose",
                        "enum": [
                          "/ibc.core.channel.v1.MsgTimeoutOnClose"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgTimeoutOnClose"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.client.v1.MsgCreateClient",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.client.v1.MsgCreateClient",
                        "enum": [
                          "/ibc.core.client.v1.MsgCreateClient"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgCreateClient"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.client.v1.MsgSubmitMisbehaviour",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.client.v1.MsgSubmitMisbehaviour",
                        "enum": [
                          "/ibc.core.client.v1.MsgSubmitMisbehaviour"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSubmitMisbehaviour"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.client.v1.MsgUpdateClient",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.client.v1.MsgUpdateClient",
                        "enum": [
                          "/ibc.core.client.v1.MsgUpdateClient"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateClient"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.client.v1.MsgUpgradeClient",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.client.v1.MsgUpgradeClient",
                        "enum": [
                          "/ibc.core.client.v1.MsgUpgradeClient"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpgradeClient"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.connection.v1.MsgConnectionOpenAck",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.connection.v1.MsgConnectionOpenAck",
                        "enum": [
                          "/ibc.core.connection.v1.MsgConnectionOpenAck"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgConnectionOpenAck"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.connection.v1.MsgConnectionOpenConfirm",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.connection.v1.MsgConnectionOpenConfirm",
                        "enum": [
                          "/ibc.core.connection.v1.MsgConnectionOpenConfirm"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgConnectionOpenConfirm"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.connection.v1.MsgConnectionOpenInit",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.connection.v1.MsgConnectionOpenInit",
                        "enum": [
                          "/ibc.core.connection.v1.MsgConnectionOpenInit"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgConnectionOpenInit"
                      }
                    }
                  },
                  {
                    "title": "ibc.core.connection.v1.MsgConnectionOpenTry",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/ibc.core.connection.v1.MsgConnectionOpenTry",
                        "enum": [
                          "/ibc.core.connection.v1.MsgConnectionOpenTry"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgConnectionOpenTry"
                      }
                    }
                  },
                  {
                    "title": "names.MsgAccept",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgAccept",
                        "enum": [
                          "/names.MsgAccept"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgAccept"
                      }
                    }
                  },
                  {
                    "title": "names.MsgBurnCoins",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgBurnCoins",
                        "enum": [
                          "/names.MsgBurnCoins"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgBurnCoins"
                      }
                    }
                  },
                  {
                    "title": "names.MsgBuy",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgBuy",
                        "enum": [
                          "/names.MsgBuy"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgBuy"
                      }
                    }
                  },
                  {
                    "title": "names.MsgDeleteName",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgDeleteName",
                        "enum": [
                          "/names.MsgDeleteName"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgDeleteName"
                      }
                    }
                  },
                  {
                    "title": "names.MsgMintCoins",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgMintCoins",
                        "enum": [
                          "/names.MsgMintCoins"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgMintCoins"
                      }
                    }
                  },
                  {
                    "title": "names.MsgOfferTo",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgOfferTo",
                        "enum": [
                          "/names.MsgOfferTo"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgOfferTo"
                      }
                    }
                  },
                  {
                    "title": "names.MsgRegister",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgRegister",
                        "enum": [
                          "/names.MsgRegister"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgRegister"
                      }
                    }
                  },
                  {
                    "title": "names.MsgReveal",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgReveal",
                        "enum": [
                          "/names.MsgReveal"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgReveal"
                      }
                    }
                  },
                  {
                    "title": "names.MsgSetPriceAndExtend",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgSetPriceAndExtend",
                        "enum": [
                          "/names.MsgSetPriceAndExtend"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgSetPriceAndExtend"
                      }
                    }
                  },
                  {
                    "title": "names.MsgUpdateName",
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "description": "Registered fully-qualified proto name for a message type valid for this request",
                        "readOnly": true,
                        "default": "/names.MsgUpdateName",
                        "enum": [
                          "/names.MsgUpdateName"
                        ]
                      },
                      "value": {
                        "type": "string",
                        "description": "Must be a valid serialized protocol buffer of the above specified type.",
                        "format": "binary",
                        "readOnly": true,
                        "binaryEncoding": "base64"
                      },
                      "object_value": {
                        "$ref": "#/definitions/MsgUpdateName"
                      }
                    }
                  }
                ]
              },
              "type": "array",
              "description": "messages is a list of `sdk.Msg`s that will be executed if the proposal passes."
            },
            "exec": {
              "enum": [
                "EXEC_UNSPECIFIED",
                0,
                "EXEC_TRY",
                1
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Proposals and Voting",
              "description": "Proposals and Voting  Exec defines modes of execution of a proposal on creation or on new vote."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Proposal",
          "description": "MsgSubmitProposal is the Msg/SubmitProposal request type."
        },
        "MsgExec": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "executor": {
              "type": "string",
              "description": "executor is the account address used to execute the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Exec",
          "description": "MsgExec is the Msg/Exec request type."
        },
        "MsgGrant": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "grantee": {
              "type": "string"
            },
            "grant": {
              "$ref": "#/definitions/cosmos.authz.v1beta1.Grant",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Grant",
          "description": "MsgGrant is a request type for Grant method. It declares authorization to the grantee on behalf of the granter with the provided expiration time."
        },
        "cosmos.authz.v1beta1.Grant": {
          "properties": {
            "authorization": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "expiration": {
              "type": "string",
              "description": "time when the grant will expire and will be pruned. If null, then the grant doesn't have a time expiration (other conditions  in `authorization` may apply to invalidate the grant)",
              "format": "date-time"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Grant",
          "description": "Grant gives permissions to execute the provide method with expiration time."
        },
        "MsgRevoke": {
          "properties": {
            "granter": {
              "type": "string"
            },
            "grantee": {
              "type": "string"
            },
            "msg_type_url": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Revoke",
          "description": "MsgRevoke revokes any authorization with the provided sdk.Msg type on the granter's account with that has been granted to the grantee."
        },
        "MsgMultiSend": {
          "properties": {
            "inputs": {
              "items": {
                "$ref": "#/definitions/cosmos.bank.v1beta1.Input"
              },
              "type": "array"
            },
            "outputs": {
              "items": {
                "$ref": "#/definitions/cosmos.bank.v1beta1.Output"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Multi Send",
          "description": "MsgMultiSend represents an arbitrary multi-in, multi-out send message."
        },
        "cosmos.bank.v1beta1.Input": {
          "properties": {
            "address": {
              "type": "string"
            },
            "coins": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Input",
          "description": "Input models transaction input."
        },
        "cosmos.bank.v1beta1.Output": {
          "properties": {
            "address": {
              "type": "string"
            },
            "coins": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Output",
          "description": "Output models transaction outputs."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "MsgSend": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Send",
          "description": "MsgSend represents a message to send coins from one account to another."
        },
        "MsgVerifyInvariant": {
          "properties": {
            "sender": {
              "type": "string"
            },
            "invariant_module_name": {
              "type": "string"
            },
            "invariant_route": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Verify Invariant",
          "description": "MsgVerifyInvariant represents a message to verify a particular invariance."
        },
        "MsgFundCommunityPool": {
          "properties": {
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            },
            "depositor": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Fund Community Pool",
          "description": "MsgFundCommunityPool allows an account to directly fund the community pool."
        },
        "MsgSetWithdrawAddress": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "withdraw_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Set Withdraw Address",
          "description": "MsgSetWithdrawAddress sets the withdraw address for a delegator (or validator self-delegation)."
        },
        "MsgWithdrawDelegatorReward": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Delegator Reward",
          "description": "MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator from a single validator."
        },
        "MsgWithdrawValidatorCommission": {
          "properties": {
            "validator_address": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Validator Commission",
          "description": "MsgWithdrawValidatorCommission withdraws the full commission to the validator address."
        },
        "MsgSubmitEvidence": {
          "properties": {
            "submitter": {
              "type": "string"
            },
            "evidence": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Evidence",
          "description": "MsgSubmitEvidence represents a message that supports submitting arbitrary Evidence of misbehavior such as equivocation or counterfactual signing."
        },
        "MsgGrantAllowance": {
          "properties": {
            "granter": {
              "type": "string",
              "description": "granter is the address of the user granting an allowance of their funds."
            },
            "grantee": {
              "type": "string",
              "description": "grantee is the address of the user being granted an allowance of another user's funds."
            },
            "allowance": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "allowance can be any of basic, periodic, allowed fee allowance."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Grant Allowance",
          "description": "MsgGrantAllowance adds permission for Grantee to spend up to Allowance of fees from the account of Granter."
        },
        "MsgRevokeAllowance": {
          "properties": {
            "granter": {
              "type": "string",
              "description": "granter is the address of the user granting an allowance of their funds."
            },
            "grantee": {
              "type": "string",
              "description": "grantee is the address of the user being granted an allowance of another user's funds."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Revoke Allowance",
          "description": "MsgRevokeAllowance removes any existing Allowance from Granter to Grantee."
        },
        "MsgDeposit": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "depositor": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Deposit",
          "description": "MsgDeposit defines a message to submit a deposit to an existing proposal."
        },
        "MsgExecLegacyContent": {
          "properties": {
            "content": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "content is the proposal's content."
            },
            "authority": {
              "type": "string",
              "description": "authority must be the gov module address."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Exec Legacy Content",
          "description": "MsgExecLegacyContent is used to wrap the legacy content field into a message. This ensures backwards compatibility with v1beta1.MsgSubmitProposal."
        },
        "MsgVote": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "voter": {
              "type": "string",
              "description": "voter is the voter account address."
            },
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given proposal."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the vote."
            },
            "exec": {
              "enum": [
                "EXEC_UNSPECIFIED",
                0,
                "EXEC_TRY",
                1
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Proposals and Voting",
              "description": "Proposals and Voting  Exec defines modes of execution of a proposal on creation or on new vote."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote",
          "description": "MsgVote is the Msg/Vote request type."
        },
        "MsgVoteWeighted": {
          "properties": {
            "proposal_id": {
              "type": "string"
            },
            "voter": {
              "type": "string"
            },
            "options": {
              "items": {
                "$ref": "#/definitions/cosmos.gov.v1beta1.WeightedVoteOption"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote Weighted",
          "description": "MsgVoteWeighted defines a message to cast a vote. Since: cosmos-sdk 0.43"
        },
        "cosmos.gov.v1.WeightedVoteOption": {
          "properties": {
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given governance proposal."
            },
            "weight": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Weighted Vote Option",
          "description": "WeightedVoteOption defines a unit of vote for vote split."
        },
        "cosmos.gov.v1beta1.WeightedVoteOption": {
          "properties": {
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given governance proposal."
            },
            "weight": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Weighted Vote Option",
          "description": "WeightedVoteOption defines a unit of vote for vote split. Since: cosmos-sdk 0.43"
        },
        "MsgCreateGroup": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "members": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "members defines the group members."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the group."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Groups",
          "description": "Groups  MsgCreateGroup is the Msg/CreateGroup request type."
        },
        "cosmos.group.v1.MemberRequest": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the member's account address."
            },
            "weight": {
              "type": "string",
              "description": "weight is the member's voting weight that should be greater than 0."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the member."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Member Request",
          "description": "MemberRequest represents a group member to be used in Msg server requests. Contrary to `Member`, it doesn't have any `added_at` field since this field cannot be set as part of requests."
        },
        "MsgCreateGroupPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata attached to the group policy."
            },
            "decision_policy": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "decision_policy specifies the group policy's decision policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Group Policies",
          "description": "Group Policies  MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type."
        },
        "MsgCreateGroupWithPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group and group policy admin."
            },
            "members": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "members defines the group members."
            },
            "group_metadata": {
              "type": "string",
              "description": "group_metadata is any arbitrary metadata attached to the group."
            },
            "group_policy_metadata": {
              "type": "string",
              "description": "group_policy_metadata is any arbitrary metadata attached to the group policy."
            },
            "group_policy_as_admin": {
              "type": "boolean",
              "description": "group_policy_as_admin is a boolean field, if set to true, the group policy account address will be used as group and group policy admin."
            },
            "decision_policy": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "decision_policy specifies the group policy's decision policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Group With Policy",
          "description": "MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type."
        },
        "MsgLeaveGroup": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the account address of the group member."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Leave Group",
          "description": "MsgLeaveGroup is the Msg/LeaveGroup request type."
        },
        "MsgUpdateGroupAdmin": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the current account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "new_admin": {
              "type": "string",
              "description": "new_admin is the group new admin account address."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Admin",
          "description": "MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type."
        },
        "MsgUpdateGroupMembers": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "member_updates": {
              "items": {
                "$ref": "#/definitions/cosmos.group.v1.MemberRequest"
              },
              "type": "array",
              "description": "member_updates is the list of members to update, set weight to 0 to remove a member."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Members",
          "description": "MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type."
        },
        "MsgUpdateGroupMetadata": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is the updated group's metadata."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Metadata",
          "description": "MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type."
        },
        "MsgUpdateGroupPolicyAdmin": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of the group policy."
            },
            "new_admin": {
              "type": "string",
              "description": "new_admin is the new group policy admin."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Admin",
          "description": "MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type."
        },
        "MsgUpdateGroupPolicyDecisionPolicy": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "decision_policy": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "decision_policy is the updated group policy's decision policy."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Decision Policy",
          "description": "MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type."
        },
        "MsgUpdateGroupPolicyMetadata": {
          "properties": {
            "admin": {
              "type": "string",
              "description": "admin is the account address of the group admin."
            },
            "group_policy_address": {
              "type": "string",
              "description": "group_policy_address is the account address of group policy."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is the updated group policy metadata."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Group Policy Metadata",
          "description": "MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type."
        },
        "MsgWithdrawProposal": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "address": {
              "type": "string",
              "description": "address is the admin of the group policy or one of the proposer of the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Proposal",
          "description": "MsgWithdrawProposal is the Msg/WithdrawProposal request type."
        },
        "MsgUnjail": {
          "properties": {
            "validator_addr": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Unjail",
          "description": "MsgUnjail defines the Msg/Unjail request type"
        },
        "MsgBeginRedelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_src_address": {
              "type": "string"
            },
            "validator_dst_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Begin Redelegate",
          "description": "MsgBeginRedelegate defines a SDK message for performing a redelegation of coins from a delegator and source validator to a destination validator."
        },
        "MsgCancelUnbondingDelegation": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false,
              "description": "amount is always less than or equal to unbonding delegation entry balance"
            },
            "creation_height": {
              "type": "string",
              "description": "creation_height is the height which the unbonding took place."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Cancel Unbonding Delegation",
          "description": "MsgCancelUnbondingDelegation defines the SDK message for performing a cancel unbonding delegation for delegator Since: cosmos-sdk 0.46"
        },
        "MsgCreateValidator": {
          "properties": {
            "description": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.Description",
              "additionalProperties": false
            },
            "commission": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.CommissionRates",
              "additionalProperties": false
            },
            "min_self_delegation": {
              "type": "string"
            },
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "pubkey": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "value": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Validator",
          "description": "MsgCreateValidator defines a SDK message for creating a new validator."
        },
        "cosmos.staking.v1beta1.CommissionRates": {
          "properties": {
            "rate": {
              "type": "string",
              "description": "rate is the commission rate charged to delegators, as a fraction."
            },
            "max_rate": {
              "type": "string",
              "description": "max_rate defines the maximum commission rate which validator can ever charge, as a fraction."
            },
            "max_change_rate": {
              "type": "string",
              "description": "max_change_rate defines the maximum daily increase of the validator commission, as a fraction."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Commission Rates",
          "description": "CommissionRates defines the initial commission rates to be used for creating a validator."
        },
        "cosmos.staking.v1beta1.Description": {
          "properties": {
            "moniker": {
              "type": "string",
              "description": "moniker defines a human-readable name for the validator."
            },
            "identity": {
              "type": "string",
              "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
            },
            "website": {
              "type": "string",
              "description": "website defines an optional website link."
            },
            "security_contact": {
              "type": "string",
              "description": "security_contact defines an optional email for security contact."
            },
            "details": {
              "type": "string",
              "description": "details define other optional details."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Description",
          "description": "Description defines a validator description."
        },
        "MsgDelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delegate",
          "description": "MsgDelegate defines a SDK message for performing a delegation of coins from a delegator to a validator."
        },
        "MsgEditValidator": {
          "properties": {
            "description": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.Description",
              "additionalProperties": false
            },
            "validator_address": {
              "type": "string"
            },
            "commission_rate": {
              "type": "string",
              "description": "We pass a reference to the new commission rate and min self delegation as it's not mandatory to update. If not updated, the deserialized rate will be zero with no way to distinguish if an update was intended. REF: #2373"
            },
            "min_self_delegation": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Edit Validator",
          "description": "MsgEditValidator defines a SDK message for editing an existing validator."
        },
        "MsgUndelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Undelegate",
          "description": "MsgUndelegate defines a SDK message for performing an undelegation from a delegate and a validator."
        },
        "MsgCancelUpgrade": {
          "properties": {
            "authority": {
              "type": "string",
              "description": "authority is the address of the governance account."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Cancel Upgrade",
          "description": "MsgCancelUpgrade is the Msg/CancelUpgrade request type. Since: cosmos-sdk 0.46"
        },
        "MsgSoftwareUpgrade": {
          "properties": {
            "authority": {
              "type": "string",
              "description": "authority is the address of the governance account."
            },
            "plan": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.Plan",
              "additionalProperties": false,
              "description": "plan is the upgrade plan."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Software Upgrade",
          "description": "MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type. Since: cosmos-sdk 0.46"
        },
        "cosmos.upgrade.v1beta1.Plan": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Sets the name for the upgrade. This name will be used by the upgraded version of the software to apply any special \"on-upgrade\" commands during the first BeginBlock method after the upgrade is applied. It is also used to detect whether a software version can handle a given upgrade. If no upgrade handler with this name has been set in the software, it will be assumed that the software is out-of-date when the upgrade Time or Height is reached and the software will exit."
            },
            "time": {
              "type": "string",
              "description": "Deprecated: Time based upgrades have been deprecated. Time based upgrade logic has been removed from the SDK. If this field is not empty, an error will be thrown.",
              "format": "date-time"
            },
            "height": {
              "type": "string",
              "description": "The height at which the upgrade must be performed. Only used if Time is not set."
            },
            "info": {
              "type": "string",
              "description": "Any application specific upgrade info to be included on-chain such as a git commit that validators could automatically upgrade to"
            },
            "upgraded_client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been moved to the IBC module in the sub module 02-client. If this field is not empty, an error will be thrown."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Plan",
          "description": "Plan specifies information about a planned upgrade and when it should occur."
        },
        "MsgCreatePeriodicVestingAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "start_time": {
              "type": "string"
            },
            "vesting_periods": {
              "items": {
                "$ref": "#/definitions/cosmos.vesting.v1beta1.Period"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Periodic Vesting Account",
          "description": "MsgCreateVestingAccount defines a message that enables creating a vesting account. Since: cosmos-sdk 0.46"
        },
        "cosmos.vesting.v1beta1.Period": {
          "properties": {
            "length": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Period",
          "description": "Period defines a length of time and amount of coins that will vest."
        },
        "MsgCreatePermanentLockedAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Permanent Locked Account",
          "description": "MsgCreatePermanentLockedAccount defines a message that enables creating a permanent locked account. Since: cosmos-sdk 0.46"
        },
        "MsgCreateVestingAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            },
            "end_time": {
              "type": "string"
            },
            "delayed": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Vesting Account",
          "description": "MsgCreateVestingAccount defines a message that enables creating a vesting account."
        },
        "MsgCreateScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "height": {
              "type": "string"
            },
            "gas": {
              "type": "string"
            },
            "msg": {
              "$ref": "#/definitions/dyson.MsgRun",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Scheduled Run"
        },
        "dyson.MsgRun": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The account sending the transaction"
            },
            "address": {
              "type": "string",
              "description": "dys address of the scrit to call"
            },
            "extra_lines": {
              "type": "string",
              "description": "optional extra source code to append to the end of the script before running"
            },
            "function_name": {
              "type": "string",
              "description": "optional function to call"
            },
            "args": {
              "type": "string",
              "description": "optional args to call the function with"
            },
            "kwargs": {
              "type": "string",
              "description": "optional kwargs to run"
            },
            "coins": {
              "type": "string",
              "description": "optional comma seperated list of coins to send the script (for example \"123dys,456token\")"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Run",
          "description": "MsgRun runs a script at a specific address"
        },
        "MsgCreateStorage": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The address signing this transaction"
            },
            "index": {
              "type": "string",
              "description": "Name of the Storage, must be prefixed with the creators address (for example: \"dys..1a3/some_name\")"
            },
            "data": {
              "type": "string",
              "description": "data to store at this index"
            },
            "force": {
              "type": "boolean",
              "description": "If true, force will always store the data at this address regardless of already existing storage"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Storage",
          "description": "Create a new storage of arbitrary text"
        },
        "MsgDeleteScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Scheduled Run"
        },
        "MsgDeleteScript": {
          "properties": {
            "creator": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Script"
        },
        "MsgDeleteStorage": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Storage"
        },
        "MsgDeployAutonomousScript": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "code": {
              "type": "string",
              "format": "python"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Deploy Autonomous Script",
          "description": "Deploy an Autonomous Script at a new address"
        },
        "MsgRun": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The account sending the transaction"
            },
            "address": {
              "type": "string",
              "description": "dys address of the scrit to call"
            },
            "extra_lines": {
              "type": "string",
              "description": "optional extra source code to append to the end of the script before running"
            },
            "function_name": {
              "type": "string",
              "description": "optional function to call"
            },
            "args": {
              "type": "string",
              "description": "optional args to call the function with"
            },
            "kwargs": {
              "type": "string",
              "description": "optional kwargs to run"
            },
            "coins": {
              "type": "string",
              "description": "optional comma seperated list of coins to send the script (for example \"123dys,456token\")"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Run",
          "description": "MsgRun runs a script at a specific address"
        },
        "MsgUpdateScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            },
            "msg": {
              "$ref": "#/definitions/dyson.MsgRun",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Scheduled Run"
        },
        "MsgUpdateScript": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "code": {
              "type": "string",
              "format": "python"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Script"
        },
        "MsgUpdateStorage": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The address signing this transaction"
            },
            "index": {
              "type": "string",
              "description": "Name of the Storage, must be prefixed with the creators address (for example: \"dys..1a3/some_name\")"
            },
            "data": {
              "type": "string",
              "description": "data to store at this index"
            },
            "force": {
              "type": "boolean",
              "description": "If true, force will always store the data at this address regardless of already existing storage"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Storage"
        },
        "MsgTransfer": {
          "properties": {
            "source_port": {
              "type": "string",
              "description": "the port on which the packet will be sent"
            },
            "source_channel": {
              "type": "string",
              "description": "the channel by which the packet will be sent"
            },
            "token": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false,
              "description": "the tokens to be transferred"
            },
            "sender": {
              "type": "string",
              "description": "the sender address"
            },
            "receiver": {
              "type": "string",
              "description": "the recipient address on the destination chain"
            },
            "timeout_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false,
              "description": "Timeout height relative to the current block height. The timeout is disabled when set to 0."
            },
            "timeout_timestamp": {
              "type": "string",
              "description": "Timeout timestamp in absolute nanoseconds since unix epoch. The timeout is disabled when set to 0."
            },
            "memo": {
              "type": "string",
              "description": "optional memo"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Transfer",
          "description": "MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between ICS20 enabled chains. See ICS Spec here: https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures"
        },
        "ibc.core.client.v1.Height": {
          "properties": {
            "revision_number": {
              "type": "string",
              "description": "the revision that the client is currently on"
            },
            "revision_height": {
              "type": "string",
              "description": "the height within the given revision"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Height",
          "description": "Height is a monotonically increasing data type that can be compared against another Height for the purposes of updating and freezing clients Normally the RevisionHeight is incremented at each height while keeping RevisionNumber the same. However some consensus algorithms may choose to reset the height in certain conditions e.g. hard forks, state-machine breaking changes In these cases, the RevisionNumber is incremented so that height continues to be monitonically increasing even as the RevisionHeight gets reset"
        },
        "MsgAcknowledgement": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "acknowledgement": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_acked": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Acknowledgement",
          "description": "MsgAcknowledgement receives incoming IBC acknowledgement"
        },
        "ibc.core.channel.v1.Packet": {
          "properties": {
            "sequence": {
              "type": "string",
              "description": "number corresponds to the order of sends and receives, where a Packet with an earlier sequence number must be sent and received before a Packet with a later sequence number."
            },
            "source_port": {
              "type": "string",
              "description": "identifies the port on the sending chain."
            },
            "source_channel": {
              "type": "string",
              "description": "identifies the channel end on the sending chain."
            },
            "destination_port": {
              "type": "string",
              "description": "identifies the port on the receiving chain."
            },
            "destination_channel": {
              "type": "string",
              "description": "identifies the channel end on the receiving chain."
            },
            "data": {
              "type": "string",
              "description": "actual opaque bytes transferred directly to the application module",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "timeout_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false,
              "description": "block height after which the packet times out"
            },
            "timeout_timestamp": {
              "type": "string",
              "description": "block timestamp (in nanoseconds) after which the packet times out"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Packet",
          "description": "Packet defines a type that carries data across different chains through IBC"
        },
        "MsgChannelCloseConfirm": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "proof_init": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Close Confirm",
          "description": "MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of channel state to CLOSED on Chain A."
        },
        "MsgChannelCloseInit": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Close Init",
          "description": "MsgChannelCloseInit defines a msg sent by a Relayer to Chain A to close a channel with Chain B."
        },
        "MsgChannelOpenAck": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "counterparty_channel_id": {
              "type": "string"
            },
            "counterparty_version": {
              "type": "string"
            },
            "proof_try": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Ack",
          "description": "MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to acknowledge the change of channel state to TRYOPEN on Chain B."
        },
        "MsgChannelOpenConfirm": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel_id": {
              "type": "string"
            },
            "proof_ack": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Confirm",
          "description": "MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of channel state to OPEN on Chain A."
        },
        "MsgChannelOpenInit": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "channel": {
              "$ref": "#/definitions/ibc.core.channel.v1.Channel",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Init",
          "description": "MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake. It is called by a relayer on Chain A."
        },
        "ibc.core.channel.v1.Channel": {
          "properties": {
            "state": {
              "enum": [
                "STATE_UNINITIALIZED_UNSPECIFIED",
                0,
                "STATE_INIT",
                1,
                "STATE_TRYOPEN",
                2,
                "STATE_OPEN",
                3,
                "STATE_CLOSED",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "State",
              "description": "State defines if a channel is in one of the following states: CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED."
            },
            "ordering": {
              "enum": [
                "ORDER_NONE_UNSPECIFIED",
                0,
                "ORDER_UNORDERED",
                1,
                "ORDER_ORDERED",
                2
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Order",
              "description": "Order defines if a channel is ORDERED or UNORDERED"
            },
            "counterparty": {
              "$ref": "#/definitions/ibc.core.channel.v1.Counterparty",
              "additionalProperties": false,
              "description": "counterparty channel end"
            },
            "connection_hops": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "list of connection identifiers, in order, along which packets sent on this channel will travel"
            },
            "version": {
              "type": "string",
              "description": "opaque channel version, which is agreed upon during the handshake"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Channel",
          "description": "Channel defines pipeline for exactly-once packet delivery between specific modules on separate blockchains, which has at least one end capable of sending packets and one end capable of receiving packets."
        },
        "ibc.core.channel.v1.Counterparty": {
          "properties": {
            "port_id": {
              "type": "string",
              "description": "port on the counterparty chain which owns the other end of the channel."
            },
            "channel_id": {
              "type": "string",
              "description": "channel end on the counterparty chain"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Counterparty",
          "description": "Counterparty defines a channel end counterparty"
        },
        "MsgChannelOpenTry": {
          "properties": {
            "port_id": {
              "type": "string"
            },
            "previous_channel_id": {
              "type": "string",
              "description": "Deprecated: this field is unused. Crossing hello's are no longer supported in core IBC."
            },
            "channel": {
              "$ref": "#/definitions/ibc.core.channel.v1.Channel",
              "additionalProperties": false,
              "description": "NOTE: the version field within the channel has been deprecated. Its value will be ignored by core IBC."
            },
            "counterparty_version": {
              "type": "string"
            },
            "proof_init": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Channel Open Try",
          "description": "MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel on Chain B. The version field within the Channel field has been deprecated. Its value will be ignored by core IBC."
        },
        "MsgRecvPacket": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "proof_commitment": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Recv Packet",
          "description": "MsgRecvPacket receives incoming IBC packet"
        },
        "MsgTimeout": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "proof_unreceived": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "next_sequence_recv": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Timeout",
          "description": "MsgTimeout receives timed-out packet"
        },
        "MsgTimeoutOnClose": {
          "properties": {
            "packet": {
              "$ref": "#/definitions/ibc.core.channel.v1.Packet",
              "additionalProperties": false
            },
            "proof_unreceived": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_close": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "next_sequence_recv": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Timeout On Close",
          "description": "MsgTimeoutOnClose timed-out packet upon counterparty channel closure."
        },
        "MsgCreateClient": {
          "properties": {
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "light client state"
            },
            "consensus_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "consensus state associated with the client that corresponds to a given height."
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Client",
          "description": "MsgCreateClient defines a message to create an IBC client"
        },
        "MsgSubmitMisbehaviour": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "client unique identifier"
            },
            "misbehaviour": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "misbehaviour used for freezing the light client"
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Submit Misbehaviour",
          "description": "MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for light client misbehaviour."
        },
        "MsgUpdateClient": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "client unique identifier"
            },
            "header": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "header to update the light client"
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Client",
          "description": "MsgUpdateClient defines an sdk.Msg to update a IBC client state using the given header."
        },
        "MsgUpgradeClient": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "client unique identifier"
            },
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "upgraded client state"
            },
            "consensus_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object",
              "description": "upgraded consensus state, only contains enough information to serve as a basis of trust in update logic"
            },
            "proof_upgrade_client": {
              "type": "string",
              "description": "proof that old chain committed to new client",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_upgrade_consensus_state": {
              "type": "string",
              "description": "proof that old chain committed to new consensus state",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "signer": {
              "type": "string",
              "description": "signer address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Upgrade Client",
          "description": "MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client state"
        },
        "MsgConnectionOpenAck": {
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "counterparty_connection_id": {
              "type": "string"
            },
            "version": {
              "$ref": "#/definitions/ibc.core.connection.v1.Version",
              "additionalProperties": false
            },
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "proof_try": {
              "type": "string",
              "description": "proof of the initialization the connection on Chain B: `UNITIALIZED -> TRYOPEN`",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_client": {
              "type": "string",
              "description": "proof of client state included in message",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_consensus": {
              "type": "string",
              "description": "proof of client consensus state",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "consensus_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Ack",
          "description": "MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to acknowledge the change of connection state to TRYOPEN on Chain B."
        },
        "ibc.core.connection.v1.Version": {
          "properties": {
            "identifier": {
              "type": "string",
              "description": "unique version identifier"
            },
            "features": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "list of features compatible with the specified identifier"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Version",
          "description": "Version defines the versioning scheme used to negotiate the IBC verison in the connection handshake."
        },
        "MsgConnectionOpenConfirm": {
          "properties": {
            "connection_id": {
              "type": "string"
            },
            "proof_ack": {
              "type": "string",
              "description": "proof for the change of the connection state on Chain A: `INIT -> OPEN`",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Confirm",
          "description": "MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of connection state to OPEN on Chain A."
        },
        "MsgConnectionOpenInit": {
          "properties": {
            "client_id": {
              "type": "string"
            },
            "counterparty": {
              "$ref": "#/definitions/ibc.core.connection.v1.Counterparty",
              "additionalProperties": false
            },
            "version": {
              "$ref": "#/definitions/ibc.core.connection.v1.Version",
              "additionalProperties": false
            },
            "delay_period": {
              "type": "string"
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Init",
          "description": "MsgConnectionOpenInit defines the msg sent by an account on Chain A to initialize a connection with Chain B."
        },
        "ibc.core.commitment.v1.MerklePrefix": {
          "properties": {
            "key_prefix": {
              "type": "string",
              "format": "binary",
              "binaryEncoding": "base64"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Merkle Prefix",
          "description": "MerklePrefix is merkle path prefixed to the key. The constructed key from the Path and the key will be append(Path.KeyPath, append(Path.KeyPrefix, key...))"
        },
        "ibc.core.connection.v1.Counterparty": {
          "properties": {
            "client_id": {
              "type": "string",
              "description": "identifies the client on the counterparty chain associated with a given connection."
            },
            "connection_id": {
              "type": "string",
              "description": "identifies the connection end on the counterparty chain associated with a given connection."
            },
            "prefix": {
              "$ref": "#/definitions/ibc.core.commitment.v1.MerklePrefix",
              "additionalProperties": false,
              "description": "commitment merkle prefix of the counterparty chain."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Counterparty",
          "description": "Counterparty defines the counterparty chain associated with a connection end."
        },
        "MsgConnectionOpenTry": {
          "properties": {
            "client_id": {
              "type": "string"
            },
            "previous_connection_id": {
              "type": "string",
              "description": "Deprecated: this field is unused. Crossing hellos are no longer supported in core IBC."
            },
            "client_state": {
              "properties": {
                "type_url": {
                  "type": "string",
                  "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                },
                "value": {
                  "type": "string",
                  "description": "Must be a valid serialized protocol buffer of the above specified type.",
                  "format": "binary",
                  "binaryEncoding": "base64"
                }
              },
              "additionalProperties": false,
              "type": "object"
            },
            "counterparty": {
              "$ref": "#/definitions/ibc.core.connection.v1.Counterparty",
              "additionalProperties": false
            },
            "delay_period": {
              "type": "string"
            },
            "counterparty_versions": {
              "items": {
                "$ref": "#/definitions/ibc.core.connection.v1.Version"
              },
              "type": "array"
            },
            "proof_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "proof_init": {
              "type": "string",
              "description": "proof of the initialization the connection on Chain A: `UNITIALIZED -> INIT`",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_client": {
              "type": "string",
              "description": "proof of client state included in message",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "proof_consensus": {
              "type": "string",
              "description": "proof of client consensus state",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "consensus_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false
            },
            "signer": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Connection Open Try",
          "description": "MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a connection on Chain B."
        },
        "MsgAccept": {
          "properties": {
            "name": {
              "type": "string"
            },
            "newOwner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Accept"
        },
        "MsgBurnCoins": {
          "properties": {
            "owner": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Burn Coins"
        },
        "MsgBuy": {
          "properties": {
            "buyer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Buy"
        },
        "MsgDeleteName": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Name"
        },
        "MsgMintCoins": {
          "properties": {
            "owner": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Mint Coins"
        },
        "MsgOfferTo": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "newOwner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Offer To"
        },
        "MsgRegister": {
          "properties": {
            "commit": {
              "type": "string",
              "description": "The Shake256(owner+name+salt) hexdigest"
            },
            "owner": {
              "type": "string",
              "description": "Address of the owner"
            },
            "price": {
              "type": "string",
              "description": "The price that this name is valued at and can be purchased for example 100dys. The monthly fee is 1% of this price."
            },
            "auto_renew": {
              "type": "boolean",
              "description": "Should the name be automatically renewed"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Register"
        },
        "MsgReveal": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "salt": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Reveal"
        },
        "MsgSetPriceAndExtend": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "price": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Set Price And Extend"
        },
        "MsgUpdateName": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            },
            "authorized": {
              "type": "string"
            },
            "auto_renew": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Name"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgWithdrawProposal": {
    "module_name": "cosmos.group.v1",
    "name": "WithdrawProposal",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgWithdrawProposal",
      "definitions": {
        "MsgWithdrawProposal": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "address": {
              "type": "string",
              "description": "address is the admin of the group policy or one of the proposer of the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Withdraw Proposal",
          "description": "MsgWithdrawProposal is the Msg/WithdrawProposal request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgVote": {
    "module_name": "cosmos.group.v1",
    "name": "Vote",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgVote",
      "definitions": {
        "MsgVote": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "voter": {
              "type": "string",
              "description": "voter is the voter account address."
            },
            "option": {
              "enum": [
                "VOTE_OPTION_UNSPECIFIED",
                0,
                "VOTE_OPTION_YES",
                1,
                "VOTE_OPTION_ABSTAIN",
                2,
                "VOTE_OPTION_NO",
                3,
                "VOTE_OPTION_NO_WITH_VETO",
                4
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Vote Option",
              "description": "VoteOption enumerates the valid vote options for a given proposal."
            },
            "metadata": {
              "type": "string",
              "description": "metadata is any arbitrary metadata to attached to the vote."
            },
            "exec": {
              "enum": [
                "EXEC_UNSPECIFIED",
                0,
                "EXEC_TRY",
                1
              ],
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Proposals and Voting",
              "description": "Proposals and Voting  Exec defines modes of execution of a proposal on creation or on new vote."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Vote",
          "description": "MsgVote is the Msg/Vote request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgExec": {
    "module_name": "cosmos.group.v1",
    "name": "Exec",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgExec",
      "definitions": {
        "MsgExec": {
          "properties": {
            "proposal_id": {
              "type": "string",
              "description": "proposal is the unique ID of the proposal."
            },
            "executor": {
              "type": "string",
              "description": "executor is the account address used to execute the proposal."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Exec",
          "description": "MsgExec is the Msg/Exec request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.group.v1/sendMsgLeaveGroup": {
    "module_name": "cosmos.group.v1",
    "name": "LeaveGroup",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgLeaveGroup",
      "definitions": {
        "MsgLeaveGroup": {
          "properties": {
            "address": {
              "type": "string",
              "description": "address is the account address of the group member."
            },
            "group_id": {
              "type": "string",
              "description": "group_id is the unique ID of the group."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Leave Group",
          "description": "MsgLeaveGroup is the Msg/LeaveGroup request type."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.mint.v1beta1/QueryParams": {
    "module_name": "cosmos.mint.v1beta1",
    "name": "Params",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryParamsRequest",
      "definitions": {
        "QueryParamsRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Params Request",
          "description": "QueryParamsRequest is the request type for the Query/Params RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/mint/v1beta1/params",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.mint.v1beta1/QueryInflation": {
    "module_name": "cosmos.mint.v1beta1",
    "name": "Inflation",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryInflationRequest",
      "definitions": {
        "QueryInflationRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Inflation Request",
          "description": "QueryInflationRequest is the request type for the Query/Inflation RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/mint/v1beta1/inflation",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.mint.v1beta1/QueryAnnualProvisions": {
    "module_name": "cosmos.mint.v1beta1",
    "name": "AnnualProvisions",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAnnualProvisionsRequest",
      "definitions": {
        "QueryAnnualProvisionsRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Annual Provisions Request",
          "description": "QueryAnnualProvisionsRequest is the request type for the Query/AnnualProvisions RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/mint/v1beta1/annual_provisions",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.params.v1beta1/QueryParams": {
    "module_name": "cosmos.params.v1beta1",
    "name": "Params",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryParamsRequest",
      "definitions": {
        "QueryParamsRequest": {
          "properties": {
            "subspace": {
              "type": "string",
              "description": "subspace defines the module to query the parameter for."
            },
            "key": {
              "type": "string",
              "description": "key defines the key of the parameter in the subspace."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Params Request",
          "description": "QueryParamsRequest is request type for the Query/Params RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/params/v1beta1/params",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.params.v1beta1/QuerySubspaces": {
    "module_name": "cosmos.params.v1beta1",
    "name": "Subspaces",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QuerySubspacesRequest",
      "definitions": {
        "QuerySubspacesRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Subspaces Request",
          "description": "QuerySubspacesRequest defines a request type for querying for all registered subspaces and all keys for a subspace. Since: cosmos-sdk 0.46"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/params/v1beta1/subspaces",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.slashing.v1beta1/QueryParams": {
    "module_name": "cosmos.slashing.v1beta1",
    "name": "Params",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryParamsRequest",
      "definitions": {
        "QueryParamsRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Params Request",
          "description": "QueryParamsRequest is the request type for the Query/Params RPC method"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/slashing/v1beta1/params",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.slashing.v1beta1/QuerySigningInfo": {
    "module_name": "cosmos.slashing.v1beta1",
    "name": "SigningInfo",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QuerySigningInfoRequest",
      "definitions": {
        "QuerySigningInfoRequest": {
          "properties": {
            "cons_address": {
              "type": "string",
              "description": "cons_address is the address to query signing info of"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Signing Info Request",
          "description": "QuerySigningInfoRequest is the request type for the Query/SigningInfo RPC method"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/slashing/v1beta1/signing_infos/{cons_address}",
    "http_rules": [
      {
        "Params": [
          "cons_address"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.slashing.v1beta1/QuerySigningInfos": {
    "module_name": "cosmos.slashing.v1beta1",
    "name": "SigningInfos",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QuerySigningInfosRequest",
      "definitions": {
        "QuerySigningInfosRequest": {
          "properties": {
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Signing Infos Request",
          "description": "QuerySigningInfosRequest is the request type for the Query/SigningInfos RPC method"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/slashing/v1beta1/signing_infos",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.slashing.v1beta1/sendMsgUnjail": {
    "module_name": "cosmos.slashing.v1beta1",
    "name": "Unjail",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgUnjail",
      "definitions": {
        "MsgUnjail": {
          "properties": {
            "validator_addr": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Unjail",
          "description": "MsgUnjail defines the Msg/Unjail request type"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.staking.v1beta1/QueryValidators": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "Validators",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryValidatorsRequest",
      "definitions": {
        "QueryValidatorsRequest": {
          "properties": {
            "status": {
              "type": "string",
              "description": "status enables to query for validators matching a given status."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Validators Request",
          "description": "QueryValidatorsRequest is request type for Query/Validators RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/validators",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryValidator": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "Validator",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryValidatorRequest",
      "definitions": {
        "QueryValidatorRequest": {
          "properties": {
            "validator_addr": {
              "type": "string",
              "description": "validator_addr defines the validator address to query for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Validator Request",
          "description": "QueryValidatorRequest is response type for the Query/Validator RPC method"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/validators/{validator_addr}",
    "http_rules": [
      {
        "Params": [
          "validator_addr"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryValidatorDelegations": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "ValidatorDelegations",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryValidatorDelegationsRequest",
      "definitions": {
        "QueryValidatorDelegationsRequest": {
          "properties": {
            "validator_addr": {
              "type": "string",
              "description": "validator_addr defines the validator address to query for."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Validator Delegations Request",
          "description": "QueryValidatorDelegationsRequest is request type for the Query/ValidatorDelegations RPC method"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations",
    "http_rules": [
      {
        "Params": [
          "validator_addr"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryValidatorUnbondingDelegations": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "ValidatorUnbondingDelegations",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryValidatorUnbondingDelegationsRequest",
      "definitions": {
        "QueryValidatorUnbondingDelegationsRequest": {
          "properties": {
            "validator_addr": {
              "type": "string",
              "description": "validator_addr defines the validator address to query for."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Validator Unbonding Delegations Request",
          "description": "QueryValidatorUnbondingDelegationsRequest is required type for the Query/ValidatorUnbondingDelegations RPC method"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations",
    "http_rules": [
      {
        "Params": [
          "validator_addr"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryDelegation": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "Delegation",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDelegationRequest",
      "definitions": {
        "QueryDelegationRequest": {
          "properties": {
            "delegator_addr": {
              "type": "string",
              "description": "delegator_addr defines the delegator address to query for."
            },
            "validator_addr": {
              "type": "string",
              "description": "validator_addr defines the validator address to query for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Delegation Request",
          "description": "QueryDelegationRequest is request type for the Query/Delegation RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}",
    "http_rules": [
      {
        "Params": [
          "validator_addr",
          "delegator_addr"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryUnbondingDelegation": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "UnbondingDelegation",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryUnbondingDelegationRequest",
      "definitions": {
        "QueryUnbondingDelegationRequest": {
          "properties": {
            "delegator_addr": {
              "type": "string",
              "description": "delegator_addr defines the delegator address to query for."
            },
            "validator_addr": {
              "type": "string",
              "description": "validator_addr defines the validator address to query for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Unbonding Delegation Request",
          "description": "QueryUnbondingDelegationRequest is request type for the Query/UnbondingDelegation RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation",
    "http_rules": [
      {
        "Params": [
          "validator_addr",
          "delegator_addr"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryDelegatorDelegations": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "DelegatorDelegations",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDelegatorDelegationsRequest",
      "definitions": {
        "QueryDelegatorDelegationsRequest": {
          "properties": {
            "delegator_addr": {
              "type": "string",
              "description": "delegator_addr defines the delegator address to query for."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Delegator Delegations Request",
          "description": "QueryDelegatorDelegationsRequest is request type for the Query/DelegatorDelegations RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/delegations/{delegator_addr}",
    "http_rules": [
      {
        "Params": [
          "delegator_addr"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryDelegatorUnbondingDelegations": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "DelegatorUnbondingDelegations",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDelegatorUnbondingDelegationsRequest",
      "definitions": {
        "QueryDelegatorUnbondingDelegationsRequest": {
          "properties": {
            "delegator_addr": {
              "type": "string",
              "description": "delegator_addr defines the delegator address to query for."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Delegator Unbonding Delegations Request",
          "description": "QueryDelegatorUnbondingDelegationsRequest is request type for the Query/DelegatorUnbondingDelegations RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations",
    "http_rules": [
      {
        "Params": [
          "delegator_addr"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryRedelegations": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "Redelegations",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryRedelegationsRequest",
      "definitions": {
        "QueryRedelegationsRequest": {
          "properties": {
            "delegator_addr": {
              "type": "string",
              "description": "delegator_addr defines the delegator address to query for."
            },
            "src_validator_addr": {
              "type": "string",
              "description": "src_validator_addr defines the validator address to redelegate from."
            },
            "dst_validator_addr": {
              "type": "string",
              "description": "dst_validator_addr defines the validator address to redelegate to."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Redelegations Request",
          "description": "QueryRedelegationsRequest is request type for the Query/Redelegations RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations",
    "http_rules": [
      {
        "Params": [
          "delegator_addr"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryDelegatorValidators": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "DelegatorValidators",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDelegatorValidatorsRequest",
      "definitions": {
        "QueryDelegatorValidatorsRequest": {
          "properties": {
            "delegator_addr": {
              "type": "string",
              "description": "delegator_addr defines the delegator address to query for."
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Delegator Validators Request",
          "description": "QueryDelegatorValidatorsRequest is request type for the Query/DelegatorValidators RPC method."
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators",
    "http_rules": [
      {
        "Params": [
          "delegator_addr"
        ],
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryDelegatorValidator": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "DelegatorValidator",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDelegatorValidatorRequest",
      "definitions": {
        "QueryDelegatorValidatorRequest": {
          "properties": {
            "delegator_addr": {
              "type": "string",
              "description": "delegator_addr defines the delegator address to query for."
            },
            "validator_addr": {
              "type": "string",
              "description": "validator_addr defines the validator address to query for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Delegator Validator Request",
          "description": "QueryDelegatorValidatorRequest is request type for the Query/DelegatorValidator RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}",
    "http_rules": [
      {
        "Params": [
          "delegator_addr",
          "validator_addr"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryHistoricalInfo": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "HistoricalInfo",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryHistoricalInfoRequest",
      "definitions": {
        "QueryHistoricalInfoRequest": {
          "properties": {
            "height": {
              "type": "string",
              "description": "height defines at which height to query the historical info."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Historical Info Request",
          "description": "QueryHistoricalInfoRequest is request type for the Query/HistoricalInfo RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/historical_info/{height}",
    "http_rules": [
      {
        "Params": [
          "height"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryPool": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "Pool",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryPoolRequest",
      "definitions": {
        "QueryPoolRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Pool Request",
          "description": "QueryPoolRequest is request type for the Query/Pool RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/pool",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/QueryParams": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "Params",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryParamsRequest",
      "definitions": {
        "QueryParamsRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Params Request",
          "description": "QueryParamsRequest is request type for the Query/Params RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/staking/v1beta1/params",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.staking.v1beta1/sendMsgCreateValidator": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "CreateValidator",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgCreateValidator",
      "definitions": {
        "MsgCreateValidator": {
          "properties": {
            "description": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.Description",
              "additionalProperties": false
            },
            "commission": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.CommissionRates",
              "additionalProperties": false
            },
            "min_self_delegation": {
              "type": "string"
            },
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "pubkey": {
              "oneOf": [
                {
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request"
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "binaryEncoding": "base64"
                    },
                    "json_value": {
                      "description": "Must be a valid json object of the above specified type.",
                      "type": "string",
                      "format": "json"
                    }
                  },
                  "additionalProperties": true,
                  "type": "object",
                  "title": "JSON"
                }
              ]
            },
            "value": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Validator",
          "description": "MsgCreateValidator defines a SDK message for creating a new validator."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "cosmos.staking.v1beta1.CommissionRates": {
          "properties": {
            "rate": {
              "type": "string",
              "description": "rate is the commission rate charged to delegators, as a fraction."
            },
            "max_rate": {
              "type": "string",
              "description": "max_rate defines the maximum commission rate which validator can ever charge, as a fraction."
            },
            "max_change_rate": {
              "type": "string",
              "description": "max_change_rate defines the maximum daily increase of the validator commission, as a fraction."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Commission Rates",
          "description": "CommissionRates defines the initial commission rates to be used for creating a validator."
        },
        "cosmos.staking.v1beta1.Description": {
          "properties": {
            "moniker": {
              "type": "string",
              "description": "moniker defines a human-readable name for the validator."
            },
            "identity": {
              "type": "string",
              "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
            },
            "website": {
              "type": "string",
              "description": "website defines an optional website link."
            },
            "security_contact": {
              "type": "string",
              "description": "security_contact defines an optional email for security contact."
            },
            "details": {
              "type": "string",
              "description": "details define other optional details."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Description",
          "description": "Description defines a validator description."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.staking.v1beta1/sendMsgEditValidator": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "EditValidator",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgEditValidator",
      "definitions": {
        "MsgEditValidator": {
          "properties": {
            "description": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.Description",
              "additionalProperties": false
            },
            "validator_address": {
              "type": "string"
            },
            "commission_rate": {
              "type": "string",
              "description": "We pass a reference to the new commission rate and min self delegation as it's not mandatory to update. If not updated, the deserialized rate will be zero with no way to distinguish if an update was intended. REF: #2373"
            },
            "min_self_delegation": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Edit Validator",
          "description": "MsgEditValidator defines a SDK message for editing an existing validator."
        },
        "cosmos.staking.v1beta1.Description": {
          "properties": {
            "moniker": {
              "type": "string",
              "description": "moniker defines a human-readable name for the validator."
            },
            "identity": {
              "type": "string",
              "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
            },
            "website": {
              "type": "string",
              "description": "website defines an optional website link."
            },
            "security_contact": {
              "type": "string",
              "description": "security_contact defines an optional email for security contact."
            },
            "details": {
              "type": "string",
              "description": "details define other optional details."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Description",
          "description": "Description defines a validator description."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.staking.v1beta1/sendMsgDelegate": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "Delegate",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgDelegate",
      "definitions": {
        "MsgDelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delegate",
          "description": "MsgDelegate defines a SDK message for performing a delegation of coins from a delegator to a validator."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.staking.v1beta1/sendMsgBeginRedelegate": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "BeginRedelegate",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgBeginRedelegate",
      "definitions": {
        "MsgBeginRedelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_src_address": {
              "type": "string"
            },
            "validator_dst_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Begin Redelegate",
          "description": "MsgBeginRedelegate defines a SDK message for performing a redelegation of coins from a delegator and source validator to a destination validator."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.staking.v1beta1/sendMsgUndelegate": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "Undelegate",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgUndelegate",
      "definitions": {
        "MsgUndelegate": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Undelegate",
          "description": "MsgUndelegate defines a SDK message for performing an undelegation from a delegate and a validator."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.staking.v1beta1/sendMsgCancelUnbondingDelegation": {
    "module_name": "cosmos.staking.v1beta1",
    "name": "CancelUnbondingDelegation",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgCancelUnbondingDelegation",
      "definitions": {
        "MsgCancelUnbondingDelegation": {
          "properties": {
            "delegator_address": {
              "type": "string"
            },
            "validator_address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false,
              "description": "amount is always less than or equal to unbonding delegation entry balance"
            },
            "creation_height": {
              "type": "string",
              "description": "creation_height is the height which the unbonding took place."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Cancel Unbonding Delegation",
          "description": "MsgCancelUnbondingDelegation defines the SDK message for performing a cancel unbonding delegation for delegator Since: cosmos-sdk 0.46"
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.upgrade.v1beta1/QueryCurrentPlan": {
    "module_name": "cosmos.upgrade.v1beta1",
    "name": "CurrentPlan",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryCurrentPlanRequest",
      "definitions": {
        "QueryCurrentPlanRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Current Plan Request",
          "description": "QueryCurrentPlanRequest is the request type for the Query/CurrentPlan RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/upgrade/v1beta1/current_plan",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.upgrade.v1beta1/QueryAppliedPlan": {
    "module_name": "cosmos.upgrade.v1beta1",
    "name": "AppliedPlan",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAppliedPlanRequest",
      "definitions": {
        "QueryAppliedPlanRequest": {
          "properties": {
            "name": {
              "type": "string",
              "description": "name is the name of the applied plan to query for."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Applied Plan Request",
          "description": "QueryCurrentPlanRequest is the request type for the Query/AppliedPlan RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/upgrade/v1beta1/applied_plan/{name}",
    "http_rules": [
      {
        "Params": [
          "name"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.upgrade.v1beta1/QueryUpgradedConsensusState": {
    "module_name": "cosmos.upgrade.v1beta1",
    "name": "UpgradedConsensusState",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryUpgradedConsensusStateRequest",
      "definitions": {
        "QueryUpgradedConsensusStateRequest": {
          "properties": {
            "last_height": {
              "type": "string",
              "description": "last height of the current chain must be sent in request as this is the height under which next consensus state is stored"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Upgraded Consensus State Request",
          "description": "QueryUpgradedConsensusStateRequest is the request type for the Query/UpgradedConsensusState RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}",
    "http_rules": [
      {
        "Params": [
          "last_height"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.upgrade.v1beta1/QueryModuleVersions": {
    "module_name": "cosmos.upgrade.v1beta1",
    "name": "ModuleVersions",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryModuleVersionsRequest",
      "definitions": {
        "QueryModuleVersionsRequest": {
          "properties": {
            "module_name": {
              "type": "string",
              "description": "module_name is a field to query a specific module consensus version from state. Leaving this empty will fetch the full list of module versions from state"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Module Versions Request",
          "description": "QueryModuleVersionsRequest is the request type for the Query/ModuleVersions RPC method. Since: cosmos-sdk 0.43"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/upgrade/v1beta1/module_versions",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "cosmos.upgrade.v1beta1/QueryAuthority": {
    "module_name": "cosmos.upgrade.v1beta1",
    "name": "Authority",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAuthorityRequest",
      "definitions": {
        "QueryAuthorityRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Authority Request",
          "description": "QueryAuthorityRequest is the request type for Query/Authority Since: cosmos-sdk 0.46"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/cosmos/upgrade/v1beta1/authority",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "cosmos.upgrade.v1beta1/sendMsgSoftwareUpgrade": {
    "module_name": "cosmos.upgrade.v1beta1",
    "name": "SoftwareUpgrade",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgSoftwareUpgrade",
      "definitions": {
        "MsgSoftwareUpgrade": {
          "properties": {
            "authority": {
              "type": "string",
              "description": "authority is the address of the governance account."
            },
            "plan": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.Plan",
              "additionalProperties": false,
              "description": "plan is the upgrade plan."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Software Upgrade",
          "description": "MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type. Since: cosmos-sdk 0.46"
        },
        "cosmos.upgrade.v1beta1.Plan": {
          "properties": {
            "name": {
              "type": "string",
              "description": "Sets the name for the upgrade. This name will be used by the upgraded version of the software to apply any special \"on-upgrade\" commands during the first BeginBlock method after the upgrade is applied. It is also used to detect whether a software version can handle a given upgrade. If no upgrade handler with this name has been set in the software, it will be assumed that the software is out-of-date when the upgrade Time or Height is reached and the software will exit."
            },
            "time": {
              "type": "string",
              "description": "Deprecated: Time based upgrades have been deprecated. Time based upgrade logic has been removed from the SDK. If this field is not empty, an error will be thrown.",
              "format": "date-time"
            },
            "height": {
              "type": "string",
              "description": "The height at which the upgrade must be performed. Only used if Time is not set."
            },
            "info": {
              "type": "string",
              "description": "Any application specific upgrade info to be included on-chain such as a git commit that validators could automatically upgrade to"
            },
            "upgraded_client_state": {
              "oneOf": [
                {
                  "properties": {
                    "type_url": {
                      "type": "string",
                      "description": "Registered fully-qualified proto name for a message type valid for this request"
                    },
                    "value": {
                      "type": "string",
                      "description": "Must be a valid serialized protocol buffer of the above specified type.",
                      "format": "binary",
                      "binaryEncoding": "base64"
                    },
                    "json_value": {
                      "description": "Must be a valid json object of the above specified type.",
                      "type": "string",
                      "format": "json"
                    }
                  },
                  "additionalProperties": true,
                  "type": "object",
                  "description": "Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been moved to the IBC module in the sub module 02-client. If this field is not empty, an error will be thrown.",
                  "title": "JSON"
                }
              ]
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Plan",
          "description": "Plan specifies information about a planned upgrade and when it should occur."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.upgrade.v1beta1/sendMsgCancelUpgrade": {
    "module_name": "cosmos.upgrade.v1beta1",
    "name": "CancelUpgrade",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgCancelUpgrade",
      "definitions": {
        "MsgCancelUpgrade": {
          "properties": {
            "authority": {
              "type": "string",
              "description": "authority is the address of the governance account."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Cancel Upgrade",
          "description": "MsgCancelUpgrade is the Msg/CancelUpgrade request type. Since: cosmos-sdk 0.46"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.vesting.v1beta1/sendMsgCreateVestingAccount": {
    "module_name": "cosmos.vesting.v1beta1",
    "name": "CreateVestingAccount",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgCreateVestingAccount",
      "definitions": {
        "MsgCreateVestingAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            },
            "end_time": {
              "type": "string"
            },
            "delayed": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Vesting Account",
          "description": "MsgCreateVestingAccount defines a message that enables creating a vesting account."
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.vesting.v1beta1/sendMsgCreatePermanentLockedAccount": {
    "module_name": "cosmos.vesting.v1beta1",
    "name": "CreatePermanentLockedAccount",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgCreatePermanentLockedAccount",
      "definitions": {
        "MsgCreatePermanentLockedAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Permanent Locked Account",
          "description": "MsgCreatePermanentLockedAccount defines a message that enables creating a permanent locked account. Since: cosmos-sdk 0.46"
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "cosmos.vesting.v1beta1/sendMsgCreatePeriodicVestingAccount": {
    "module_name": "cosmos.vesting.v1beta1",
    "name": "CreatePeriodicVestingAccount",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgCreatePeriodicVestingAccount",
      "definitions": {
        "MsgCreatePeriodicVestingAccount": {
          "properties": {
            "from_address": {
              "type": "string"
            },
            "to_address": {
              "type": "string"
            },
            "start_time": {
              "type": "string"
            },
            "vesting_periods": {
              "items": {
                "$ref": "#/definitions/cosmos.vesting.v1beta1.Period"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Periodic Vesting Account",
          "description": "MsgCreateVestingAccount defines a message that enables creating a vesting account. Since: cosmos-sdk 0.46"
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "cosmos.vesting.v1beta1.Period": {
          "properties": {
            "length": {
              "type": "string"
            },
            "amount": {
              "items": {
                "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
              },
              "type": "array"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Period",
          "description": "Period defines a length of time and amount of coins that will vest."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "ibc.applications.transfer.v1/QueryDenomTrace": {
    "module_name": "ibc.applications.transfer.v1",
    "name": "DenomTrace",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDenomTraceRequest",
      "definitions": {
        "QueryDenomTraceRequest": {
          "properties": {
            "hash": {
              "type": "string",
              "description": "hash (in hex format) or denom (full denom with ibc prefix) of the denomination trace information."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Denom Trace Request",
          "description": "QueryDenomTraceRequest is the request type for the Query/DenomTrace RPC method"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/ibc/apps/transfer/v1/denom_traces/{hash}",
    "http_rules": [
      {
        "Params": [
          "hash"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "ibc.applications.transfer.v1/QueryDenomTraces": {
    "module_name": "ibc.applications.transfer.v1",
    "name": "DenomTraces",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDenomTracesRequest",
      "definitions": {
        "QueryDenomTracesRequest": {
          "properties": {
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false,
              "description": "pagination defines an optional pagination for the request."
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Denom Traces Request",
          "description": "QueryConnectionsRequest is the request type for the Query/DenomTraces RPC method"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/ibc/apps/transfer/v1/denom_traces",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "ibc.applications.transfer.v1/QueryParams": {
    "module_name": "ibc.applications.transfer.v1",
    "name": "Params",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryParamsRequest",
      "definitions": {
        "QueryParamsRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Params Request",
          "description": "QueryParamsRequest is the request type for the Query/Params RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/ibc/apps/transfer/v1/params",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "ibc.applications.transfer.v1/QueryDenomHash": {
    "module_name": "ibc.applications.transfer.v1",
    "name": "DenomHash",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryDenomHashRequest",
      "definitions": {
        "QueryDenomHashRequest": {
          "properties": {
            "trace": {
              "type": "string",
              "description": "The denomination trace ([port_id]/[channel_id])+/[denom]"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Denom Hash Request",
          "description": "QueryDenomHashRequest is the request type for the Query/DenomHash RPC method"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/ibc/apps/transfer/v1/denom_hashes/{trace}",
    "http_rules": [
      {
        "Params": [
          "trace"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "ibc.applications.transfer.v1/QueryEscrowAddress": {
    "module_name": "ibc.applications.transfer.v1",
    "name": "EscrowAddress",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryEscrowAddressRequest",
      "definitions": {
        "QueryEscrowAddressRequest": {
          "properties": {
            "port_id": {
              "type": "string",
              "description": "unique port identifier"
            },
            "channel_id": {
              "type": "string",
              "description": "unique channel identifier"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Escrow Address Request",
          "description": "QueryEscrowAddressRequest is the request type for the EscrowAddress RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/ibc/apps/transfer/v1/channels/{channel_id}/ports/{port_id}/escrow_address",
    "http_rules": [
      {
        "Params": [
          "channel_id",
          "port_id"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "ibc.applications.transfer.v1/sendMsgTransfer": {
    "module_name": "ibc.applications.transfer.v1",
    "name": "Transfer",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgTransfer",
      "definitions": {
        "MsgTransfer": {
          "properties": {
            "source_port": {
              "type": "string",
              "description": "the port on which the packet will be sent"
            },
            "source_channel": {
              "type": "string",
              "description": "the channel by which the packet will be sent"
            },
            "token": {
              "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
              "additionalProperties": false,
              "description": "the tokens to be transferred"
            },
            "sender": {
              "type": "string",
              "description": "the sender address"
            },
            "receiver": {
              "type": "string",
              "description": "the recipient address on the destination chain"
            },
            "timeout_height": {
              "$ref": "#/definitions/ibc.core.client.v1.Height",
              "additionalProperties": false,
              "description": "Timeout height relative to the current block height. The timeout is disabled when set to 0."
            },
            "timeout_timestamp": {
              "type": "string",
              "description": "Timeout timestamp in absolute nanoseconds since unix epoch. The timeout is disabled when set to 0."
            },
            "memo": {
              "type": "string",
              "description": "optional memo"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Transfer",
          "description": "MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between ICS20 enabled chains. See ICS Spec here: https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures"
        },
        "cosmos.base.v1beta1.Coin": {
          "properties": {
            "denom": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Coin",
          "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "ibc.core.client.v1.Height": {
          "properties": {
            "revision_number": {
              "type": "string",
              "description": "the revision that the client is currently on"
            },
            "revision_height": {
              "type": "string",
              "description": "the height within the given revision"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Height",
          "description": "Height is a monotonically increasing data type that can be compared against another Height for the purposes of updating and freezing clients Normally the RevisionHeight is incremented at each height while keeping RevisionNumber the same. However some consensus algorithms may choose to reset the height in certain conditions e.g. hard forks, state-machine breaking changes In these cases, the RevisionNumber is incremented so that height continues to be monitonically increasing even as the RevisionHeight gets reset"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "dyson/QueryScheduledRun": {
    "module_name": "dyson",
    "name": "ScheduledRun",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGetScheduledRunRequest",
      "definitions": {
        "QueryGetScheduledRunRequest": {
          "properties": {
            "index": {
              "type": "string",
              "description": "index is the script address"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Get Scheduled Run Request"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/scheduledRun",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QueryScheduledRunAll": {
    "module_name": "dyson",
    "name": "ScheduledRunAll",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAllScheduledRunRequest",
      "definitions": {
        "QueryAllScheduledRunRequest": {
          "properties": {
            "index": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query All Scheduled Run Request"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/scheduledRunAll",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QueryStorage": {
    "module_name": "dyson",
    "name": "Storage",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGetStorageRequest",
      "definitions": {
        "QueryGetStorageRequest": {
          "properties": {
            "index": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Get Storage Request"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/storage",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QueryStorageAll": {
    "module_name": "dyson",
    "name": "StorageAll",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAllStorageRequest",
      "definitions": {
        "QueryAllStorageRequest": {
          "properties": {
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query All Storage Request"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/storageAll",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QueryScript": {
    "module_name": "dyson",
    "name": "Script",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGetScriptRequest",
      "definitions": {
        "QueryGetScriptRequest": {
          "properties": {
            "index": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Get Script Request"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/script",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QuerySchema": {
    "module_name": "dyson",
    "name": "Schema",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGetSchemaRequest",
      "definitions": {
        "QueryGetSchemaRequest": {
          "properties": {
            "index": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Get Schema Request"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/schema",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QueryWsgi": {
    "module_name": "dyson",
    "name": "Wsgi",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryWsgiRequest",
      "definitions": {
        "QueryWsgiRequest": {
          "properties": {
            "index": {
              "type": "string"
            },
            "httprequest": {
              "type": "string"
            },
            "gaslimit": {
              "type": "string",
              "description": "Gas to allow the WSGI request"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Wsgi Request"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/wsgi",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QueryQueryScript": {
    "module_name": "dyson",
    "name": "QueryScript",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgRun",
      "definitions": {
        "MsgRun": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The account sending the transaction"
            },
            "address": {
              "type": "string",
              "description": "dys address of the scrit to call"
            },
            "extra_lines": {
              "type": "string",
              "description": "optional extra source code to append to the end of the script before running",
              "format": "python"
            },
            "function_name": {
              "type": "string",
              "description": "optional function to call"
            },
            "args": {
              "type": "string",
              "description": "optional args to call the function with"
            },
            "kwargs": {
              "type": "string",
              "description": "optional kwargs to run"
            },
            "coins": {
              "type": "string",
              "description": "optional comma seperated list of coins to send the script (for example \"123dys,456token\")"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Run",
          "description": "MsgRun runs a script at a specific address"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/query",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QueryScriptAll": {
    "module_name": "dyson",
    "name": "ScriptAll",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAllScriptRequest",
      "definitions": {
        "QueryAllScriptRequest": {
          "properties": {
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query All Script Request"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/scriptAll",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QueryPrefixStorage": {
    "module_name": "dyson",
    "name": "PrefixStorage",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryPrefixStorageRequest",
      "definitions": {
        "QueryPrefixStorageRequest": {
          "properties": {
            "prefix": {
              "type": "string"
            },
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Prefix Storage Request"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/storageprefix",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QueryScheduledGasPriceAndFeeAtBlock": {
    "module_name": "dyson",
    "name": "ScheduledGasPriceAndFeeAtBlock",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryScheduledGasPriceAndFeeAtBlockRequest",
      "definitions": {
        "QueryScheduledGasPriceAndFeeAtBlockRequest": {
          "properties": {
            "blockheight": {
              "type": "string"
            },
            "gaswanted": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Scheduled Gas Price And Fee At Block Request"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/scheduled_gas_price_at_block",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QueryCron": {
    "module_name": "dyson",
    "name": "Cron",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGetCronRequest",
      "definitions": {
        "QueryGetCronRequest": {
          "properties": {
            "blockHeight": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Get Cron Request"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/cron",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QueryCronAll": {
    "module_name": "dyson",
    "name": "CronAll",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAllCronRequest",
      "definitions": {
        "QueryAllCronRequest": {
          "properties": {
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query All Cron Request"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/dyson/cronAll",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/QueryEncodeProtoAny": {
    "module_name": "dyson",
    "name": "EncodeProtoAny",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryEncodeProtoAnyRequest",
      "definitions": {
        "QueryEncodeProtoAnyRequest": {
          "properties": {
            "type_url": {
              "type": "string"
            },
            "json_value": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Encode Proto Any Request"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/org/dyson/dyson/encode_proto_any",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "dyson/sendMsgCreateScheduledRun": {
    "module_name": "dyson",
    "name": "CreateScheduledRun",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgCreateScheduledRun",
      "definitions": {
        "MsgCreateScheduledRun": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "height": {
              "type": "string"
            },
            "gas": {
              "type": "string"
            },
            "msg": {
              "$ref": "#/definitions/dyson.MsgRun",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Scheduled Run"
        },
        "dyson.MsgRun": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The account sending the transaction"
            },
            "address": {
              "type": "string",
              "description": "dys address of the scrit to call"
            },
            "extra_lines": {
              "type": "string",
              "description": "optional extra source code to append to the end of the script before running"
            },
            "function_name": {
              "type": "string",
              "description": "optional function to call"
            },
            "args": {
              "type": "string",
              "description": "optional args to call the function with"
            },
            "kwargs": {
              "type": "string",
              "description": "optional kwargs to run"
            },
            "coins": {
              "type": "string",
              "description": "optional comma seperated list of coins to send the script (for example \"123dys,456token\")"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Run",
          "description": "MsgRun runs a script at a specific address"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "dyson/sendMsgCreateStorage": {
    "module_name": "dyson",
    "name": "CreateStorage",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgCreateStorage",
      "definitions": {
        "MsgCreateStorage": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The address signing this transaction"
            },
            "index": {
              "type": "string",
              "description": "Name of the Storage, must be prefixed with the creators address (for example: \"dys..1a3/some_name\")"
            },
            "data": {
              "type": "string",
              "description": "data to store at this index",
              "format": "json"
            },
            "force": {
              "type": "boolean",
              "description": "If true, force will always store the data at this address regardless of already existing storage"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Create Storage",
          "description": "Create a new storage of arbitrary text"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "dyson/sendMsgUpdateStorage": {
    "module_name": "dyson",
    "name": "UpdateStorage",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgUpdateStorage",
      "definitions": {
        "MsgUpdateStorage": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The address signing this transaction"
            },
            "index": {
              "type": "string",
              "description": "Name of the Storage, must be prefixed with the creators address (for example: \"dys..1a3/some_name\")"
            },
            "data": {
              "type": "string",
              "description": "data to store at this index",
              "format": "json"
            },
            "force": {
              "type": "boolean",
              "description": "If true, force will always store the data at this address regardless of already existing storage"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Storage"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "dyson/sendMsgDeleteStorage": {
    "module_name": "dyson",
    "name": "DeleteStorage",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgDeleteStorage",
      "definitions": {
        "MsgDeleteStorage": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "index": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Storage"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "dyson/sendMsgDeployAutonomousScript": {
    "module_name": "dyson",
    "name": "DeployAutonomousScript",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgDeployAutonomousScript",
      "definitions": {
        "MsgDeployAutonomousScript": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "code": {
              "type": "string",
              "format": "python"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Deploy Autonomous Script",
          "description": "Deploy an Autonomous Script at a new address"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "dyson/sendMsgUpdateScript": {
    "module_name": "dyson",
    "name": "UpdateScript",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgUpdateScript",
      "definitions": {
        "MsgUpdateScript": {
          "properties": {
            "creator": {
              "type": "string"
            },
            "code": {
              "type": "string",
              "format": "python"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Script"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "dyson/sendMsgDeleteScript": {
    "module_name": "dyson",
    "name": "DeleteScript",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgDeleteScript",
      "definitions": {
        "MsgDeleteScript": {
          "properties": {
            "creator": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Script"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "dyson/sendMsgRun": {
    "module_name": "dyson",
    "name": "Run",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgRun",
      "definitions": {
        "MsgRun": {
          "properties": {
            "creator": {
              "type": "string",
              "description": "The account sending the transaction"
            },
            "address": {
              "type": "string",
              "description": "dys address of the scrit to call"
            },
            "extra_lines": {
              "type": "string",
              "description": "optional extra source code to append to the end of the script before running",
              "format": "python"
            },
            "function_name": {
              "type": "string",
              "description": "optional function to call"
            },
            "args": {
              "type": "string",
              "description": "optional args to call the function with"
            },
            "kwargs": {
              "type": "string",
              "description": "optional kwargs to run"
            },
            "coins": {
              "type": "string",
              "description": "optional comma seperated list of coins to send the script (for example \"123dys,456token\")"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Run",
          "description": "MsgRun runs a script at a specific address"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/QueryParams": {
    "module_name": "names",
    "name": "Params",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryParamsRequest",
      "definitions": {
        "QueryParamsRequest": {
          "additionalProperties": false,
          "type": "object",
          "title": "Query Params Request",
          "description": "QueryParamsRequest is request type for the Query/Params RPC method."
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/org/dyson/names/params",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "names/QueryName": {
    "module_name": "names",
    "name": "Name",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGetNameRequest",
      "definitions": {
        "QueryGetNameRequest": {
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Get Name Request"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/org/dyson/names/name",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "names/QueryNameAll": {
    "module_name": "names",
    "name": "NameAll",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAllNameRequest",
      "definitions": {
        "QueryAllNameRequest": {
          "properties": {
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query All Name Request"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/org/dyson/names/nameall",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "names/QueryResolve": {
    "module_name": "names",
    "name": "Resolve",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryResolveRequest",
      "definitions": {
        "QueryResolveRequest": {
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Resolve Request"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/org/dyson/names/resolve",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "names/QueryGenerateCommit": {
    "module_name": "names",
    "name": "GenerateCommit",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGenerateCommitRequest",
      "definitions": {
        "QueryGenerateCommitRequest": {
          "properties": {
            "owner": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "salt": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Generate Commit Request"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/org/dyson/names/generate_commit",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "names/QueryExpirations": {
    "module_name": "names",
    "name": "Expirations",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryGetExpirationsRequest",
      "definitions": {
        "QueryGetExpirationsRequest": {
          "properties": {
            "blockHeight": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query Get Expirations Request"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/org/dyson/names/expirations/{blockHeight}",
    "http_rules": [
      {
        "Params": [
          "blockHeight"
        ],
        "HasQuery": false,
        "HasBody": false
      }
    ]
  },
  "names/QueryExpirationsAll": {
    "module_name": "names",
    "name": "ExpirationsAll",
    "service_name": "Query",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/QueryAllExpirationsRequest",
      "definitions": {
        "QueryAllExpirationsRequest": {
          "properties": {
            "pagination": {
              "$ref": "#/definitions/cosmos.base.query.v1beta1.PageRequest",
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Query All Expirations Request"
        },
        "cosmos.base.query.v1beta1.PageRequest": {
          "properties": {
            "key": {
              "type": "string",
              "description": "key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
              "format": "binary",
              "binaryEncoding": "base64"
            },
            "offset": {
              "type": "string",
              "description": "offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."
            },
            "limit": {
              "type": "string",
              "description": "limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."
            },
            "count_total": {
              "type": "boolean",
              "description": "count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."
            },
            "reverse": {
              "type": "boolean",
              "description": "reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Page Request",
          "description": "PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }",
          "options": {
            "show_opt_in": true,
            "required_by_default": false
          },
          "required": []
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": "/org/dyson/names/expirations",
    "http_rules": [
      {
        "Params": null,
        "HasQuery": true,
        "HasBody": false
      }
    ]
  },
  "names/sendMsgRegister": {
    "module_name": "names",
    "name": "Register",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgRegister",
      "definitions": {
        "MsgRegister": {
          "properties": {
            "commit": {
              "type": "string",
              "description": "The Shake256(owner+name+salt) hexdigest"
            },
            "owner": {
              "type": "string",
              "description": "Address of the owner"
            },
            "price": {
              "type": "string",
              "description": "The price that this name is valued at and can be purchased for example 100dys. The monthly fee is 1% of this price."
            },
            "auto_renew": {
              "type": "boolean",
              "description": "Should the name be automatically renewed"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Register"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgUpdateName": {
    "module_name": "names",
    "name": "UpdateName",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgUpdateName",
      "definitions": {
        "MsgUpdateName": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "destination": {
              "type": "string"
            },
            "authorized": {
              "type": "string"
            },
            "auto_renew": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Name"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgDeleteName": {
    "module_name": "names",
    "name": "DeleteName",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgDeleteName",
      "definitions": {
        "MsgDeleteName": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Delete Name"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgReveal": {
    "module_name": "names",
    "name": "Reveal",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgReveal",
      "definitions": {
        "MsgReveal": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "salt": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Reveal"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgSetPriceAndExtend": {
    "module_name": "names",
    "name": "SetPriceAndExtend",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgSetPriceAndExtend",
      "definitions": {
        "MsgSetPriceAndExtend": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "price": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Set Price And Extend"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgOfferTo": {
    "module_name": "names",
    "name": "OfferTo",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgOfferTo",
      "definitions": {
        "MsgOfferTo": {
          "properties": {
            "name": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "newOwner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Offer To"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgAccept": {
    "module_name": "names",
    "name": "Accept",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgAccept",
      "definitions": {
        "MsgAccept": {
          "properties": {
            "name": {
              "type": "string"
            },
            "newOwner": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Accept"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgBuy": {
    "module_name": "names",
    "name": "Buy",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgBuy",
      "definitions": {
        "MsgBuy": {
          "properties": {
            "buyer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Buy"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgMintCoins": {
    "module_name": "names",
    "name": "MintCoins",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgMintCoins",
      "definitions": {
        "MsgMintCoins": {
          "properties": {
            "owner": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Mint Coins"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgBurnCoins": {
    "module_name": "names",
    "name": "BurnCoins",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgBurnCoins",
      "definitions": {
        "MsgBurnCoins": {
          "properties": {
            "owner": {
              "type": "string"
            },
            "amount": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Burn Coins"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgSetNftClass": {
    "module_name": "names",
    "name": "SetNftClass",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgSetNftClass",
      "definitions": {
        "MsgSetNftClass": {
          "properties": {
            "owner": {
              "type": "string",
              "description": "The owner of the Dys name"
            },
            "id": {
              "type": "string",
              "description": "the Id must equal the Dys name"
            },
            "name": {
              "type": "string",
              "description": "More descriptive name"
            },
            "symbol": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "uri": {
              "type": "string"
            },
            "urihash": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Set Nft Class"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgMintNft": {
    "module_name": "names",
    "name": "MintNft",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgMintNft",
      "definitions": {
        "MsgMintNft": {
          "properties": {
            "classOwner": {
              "type": "string",
              "description": "The owner of the Dys name"
            },
            "classId": {
              "type": "string",
              "description": "the ClassID must equal yythe Dys name"
            },
            "id": {
              "type": "string"
            },
            "uri": {
              "type": "string"
            },
            "urihash": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Mint Nft"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgUpdateNft": {
    "module_name": "names",
    "name": "UpdateNft",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgUpdateNft",
      "definitions": {
        "MsgUpdateNft": {
          "properties": {
            "classOwner": {
              "type": "string",
              "description": "The owner of the Dys name"
            },
            "classId": {
              "type": "string",
              "description": "The dys name that the NFT was create with"
            },
            "id": {
              "type": "string",
              "description": "The ID of this NFT"
            },
            "uri": {
              "type": "string"
            },
            "urihash": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Update Nft"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  },
  "names/sendMsgBurnNft": {
    "module_name": "names",
    "name": "BurnNft",
    "service_name": "Msg",
    "request_schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "$ref": "#/definitions/MsgBurnNft",
      "definitions": {
        "MsgBurnNft": {
          "properties": {
            "classOwner": {
              "type": "string"
            },
            "classId": {
              "type": "string"
            },
            "id": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "type": "object",
          "title": "Msg Burn Nft"
        }
      }
    },
    "resp_schema": {
      "type": "string",
      "format": "json",
      "title": "Response"
    },
    "rest_path": null,
    "http_rules": null
  }
}