{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/PeriodicAllowance",
    "definitions": {
        "PeriodicAllowance": {
            "properties": {
                "basic": {
                    "$ref": "#/definitions/cosmos.feegrant.v1beta1.BasicAllowance",
                    "additionalProperties": true,
                    "description": "basic specifies a struct of `BasicAllowance`"
                },
                "period": {
                    "pattern": "^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",
                    "type": "string",
                    "description": "period specifies the time duration in which period_spend_limit coins can be spent before that allowance is reset",
                    "format": "regex"
                },
                "period_spend_limit": {
                    "items": {
                        "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
                    },
                    "type": "array",
                    "description": "period_spend_limit specifies the maximum number of coins that can be spent in the period"
                },
                "period_can_spend": {
                    "items": {
                        "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
                    },
                    "type": "array",
                    "description": "period_can_spend is the number of coins left to be spent before the period_reset time"
                },
                "period_reset": {
                    "type": "string",
                    "description": "period_reset is the time at which this period resets and a new one begins, it is calculated from the start time of the first transaction after the last period ended",
                    "format": "date-time"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Periodic Allowance",
            "description": "PeriodicAllowance extends Allowance to allow for both a maximum cap, as well as a limit per time period."
        },
        "cosmos.base.v1beta1.Coin": {
            "properties": {
                "denom": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Coin",
            "description": "Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."
        },
        "cosmos.feegrant.v1beta1.BasicAllowance": {
            "properties": {
                "spend_limit": {
                    "items": {
                        "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
                    },
                    "type": "array",
                    "description": "spend_limit specifies the maximum amount of coins that can be spent by this allowance and will be updated as coins are spent. If it is empty, there is no spend limit and any amount of coins can be spent."
                },
                "expiration": {
                    "type": "string",
                    "description": "expiration specifies an optional time when this allowance expires",
                    "format": "date-time"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Basic Allowance",
            "description": "BasicAllowance implements Allowance with a one-time grant of coins that optionally expires. The grantee can use up to SpendLimit to cover fees."
        }
    }
}