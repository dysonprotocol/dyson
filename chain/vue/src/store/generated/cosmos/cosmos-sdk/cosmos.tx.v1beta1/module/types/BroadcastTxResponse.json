{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/BroadcastTxResponse",
    "definitions": {
        "BroadcastTxResponse": {
            "properties": {
                "tx_response": {
                    "$ref": "#/definitions/cosmos.base.abci.v1beta1.TxResponse",
                    "additionalProperties": true,
                    "description": "tx_response is the queried TxResponses."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Broadcast Tx Response",
            "description": "BroadcastTxResponse is the response type for the Service.BroadcastTx method."
        },
        "cosmos.base.abci.v1beta1.ABCIMessageLog": {
            "properties": {
                "msg_index": {
                    "type": "integer"
                },
                "log": {
                    "type": "string"
                },
                "events": {
                    "items": {
                        "$ref": "#/definitions/cosmos.base.abci.v1beta1.StringEvent"
                    },
                    "type": "array",
                    "description": "Events contains a slice of Event objects that were emitted during some execution."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "ABCI Message Log",
            "description": "ABCIMessageLog defines a structure containing an indexed tx ABCI message log."
        },
        "cosmos.base.abci.v1beta1.Attribute": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Attribute",
            "description": "Attribute defines an attribute wrapper where the key and value are strings instead of raw bytes."
        },
        "cosmos.base.abci.v1beta1.StringEvent": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "items": {
                        "$ref": "#/definitions/cosmos.base.abci.v1beta1.Attribute"
                    },
                    "type": "array"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "String Event",
            "description": "StringEvent defines en Event object wrapper where all the attributes contain key/value pairs that are strings instead of raw bytes."
        },
        "cosmos.base.abci.v1beta1.TxResponse": {
            "properties": {
                "height": {
                    "type": "string",
                    "description": "The block height"
                },
                "txhash": {
                    "type": "string",
                    "description": "The transaction hash."
                },
                "codespace": {
                    "type": "string",
                    "description": "Namespace for the Code"
                },
                "code": {
                    "type": "integer",
                    "description": "Response code."
                },
                "data": {
                    "type": "string",
                    "description": "Result bytes, if any."
                },
                "raw_log": {
                    "type": "string",
                    "description": "The output of the application's logger (raw string). May be non-deterministic."
                },
                "logs": {
                    "items": {
                        "$ref": "#/definitions/cosmos.base.abci.v1beta1.ABCIMessageLog"
                    },
                    "type": "array",
                    "description": "The output of the application's logger (typed). May be non-deterministic."
                },
                "info": {
                    "type": "string",
                    "description": "Additional information. May be non-deterministic."
                },
                "gas_wanted": {
                    "type": "string",
                    "description": "Amount of gas requested for transaction."
                },
                "gas_used": {
                    "type": "string",
                    "description": "Amount of gas consumed by transaction."
                },
                "tx": {
                    "properties": {
                        "type_url": {
                            "type": "string",
                            "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
                        },
                        "value": {
                            "type": "string",
                            "description": "Must be a valid serialized protocol buffer of the above specified type.",
                            "format": "binary",
                            "binaryEncoding": "base64"
                        }
                    },
                    "additionalProperties": true,
                    "type": "object",
                    "description": "The request transaction bytes."
                },
                "timestamp": {
                    "type": "string",
                    "description": "Time of the previous block. For heights \u003e 1, it's the weighted median of the timestamps of the valid votes in the block.LastCommit. For height == 1, it's genesis time."
                },
                "events": {
                    "items": {
                        "$ref": "#/definitions/tendermint.abci.Event"
                    },
                    "type": "array",
                    "description": "Events defines all the events emitted by processing a transaction. Note, these events include those emitted by processing all the messages and those emitted from the ante. Whereas Logs contains the events, with additional metadata, emitted only by processing the messages. Since: cosmos-sdk 0.42.11, 0.44.5, 0.45"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Tx Response",
            "description": "TxResponse defines a structure containing relevant tx data and metadata. The tags are stringified and the log is JSON decoded."
        },
        "tendermint.abci.Event": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "attributes": {
                    "items": {
                        "$ref": "#/definitions/tendermint.abci.EventAttribute"
                    },
                    "type": "array"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Event",
            "description": "Event allows application developers to attach additional information to ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx. Later, transactions may be queried using these events."
        },
        "tendermint.abci.EventAttribute": {
            "properties": {
                "key": {
                    "type": "string",
                    "format": "binary",
                    "binaryEncoding": "base64"
                },
                "value": {
                    "type": "string",
                    "format": "binary",
                    "binaryEncoding": "base64"
                },
                "index": {
                    "type": "boolean",
                    "description": "nondeterministic"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Event Attribute",
            "description": "EventAttribute is a single key-value pair, associated with an event."
        }
    }
}