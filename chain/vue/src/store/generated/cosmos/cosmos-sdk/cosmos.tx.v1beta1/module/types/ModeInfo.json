{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "$ref": "#/definitions/ModeInfo",
    "definitions": {
        "ModeInfo": {
            "properties": {
                "single": {
                    "$ref": "#/definitions/cosmos.tx.v1beta1.ModeInfo.Single",
                    "additionalProperties": true,
                    "description": "single represents a single signer"
                },
                "multi": {
                    "$ref": "#/definitions/cosmos.tx.v1beta1.ModeInfo.Multi",
                    "additionalProperties": true,
                    "description": "multi represents a nested multisig signer"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Mode Info",
            "description": "ModeInfo describes the signing mode of a single or nested multisig signer."
        },
        "cosmos.crypto.multisig.v1beta1.CompactBitArray": {
            "properties": {
                "extra_bits_stored": {
                    "type": "integer"
                },
                "elems": {
                    "type": "string",
                    "format": "binary",
                    "binaryEncoding": "base64"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Compact Bit Array",
            "description": "CompactBitArray is an implementation of a space efficient bit array. This is used to ensure that the encoded data takes up a minimal amount of space after proto encoding. This is not thread safe, and is not intended for concurrent usage."
        },
        "cosmos.tx.v1beta1.ModeInfo.Multi": {
            "properties": {
                "bitarray": {
                    "$ref": "#/definitions/cosmos.crypto.multisig.v1beta1.CompactBitArray",
                    "additionalProperties": true,
                    "description": "bitarray specifies which keys within the multisig are signing"
                },
                "mode_infos": {
                    "items": {
                        "$ref": "#/definitions/ModeInfo"
                    },
                    "type": "array",
                    "description": "mode_infos is the corresponding modes of the signers of the multisig which could include nested multisig public keys"
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Multi",
            "description": "Multi is the mode info for a multisig public key"
        },
        "cosmos.tx.v1beta1.ModeInfo.Single": {
            "properties": {
                "mode": {
                    "enum": [
                        "SIGN_MODE_UNSPECIFIED",
                        0,
                        "SIGN_MODE_DIRECT",
                        1,
                        "SIGN_MODE_TEXTUAL",
                        2,
                        "SIGN_MODE_DIRECT_AUX",
                        3,
                        "SIGN_MODE_LEGACY_AMINO_JSON",
                        127,
                        "SIGN_MODE_EIP_191",
                        191
                    ],
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "Sign Mode",
                    "description": "SignMode represents a signing mode with its own security guarantees. This enum should be considered a registry of all known sign modes in the Cosmos ecosystem. Apps are not expected to support all known sign modes. Apps that would like to support custom  sign modes are encouraged to open a small PR against this file to add a new case to this SignMode enum describing their sign mode so that different apps have a consistent version of this enum."
                }
            },
            "additionalProperties": true,
            "type": "object",
            "title": "Single",
            "description": "Single is the mode info for a single signer. It is structured as a message to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the future"
        }
    }
}