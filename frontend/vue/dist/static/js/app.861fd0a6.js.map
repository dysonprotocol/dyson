{"version":3,"file":"static/js/app.861fd0a6.js","mappings":"gRACa,EAAAA,cAAA,kBAAX,wBAUM,UATJ,iBAA2E,GAAjEC,IAAI,SAAc,iBAAe,eAAE,EAAAC,MAAMC,KAAKC,kBAAxD,WACA,iBAOW,QANQC,SAAO,cACtB,IAAW,EAAX,iBAAW,MAEIC,SAAO,cACtB,IAAe,EAAf,iBAAe,M,UAPrB,+B,2PCAA,iBAaY,GAbI,cAAY,eAAE,EAAAC,aAAW,GAAc,eAAa,eAAE,EAAAA,aAAW,IAAjF,CACmBC,SAAO,cACtB,IAAyD,EAAzD,iBAAyD,GAA7CC,KAAK,IAAIC,KAAK,YAAYC,KAAK,eAC3C,iBAA8D,GAAlDF,KAAK,aAAaC,KAAK,aAAaC,KAAK,SACnC,EAAAC,UAAA,kBAAlB,iBAAgG,G,MAA9DH,KAAI,YAAgB,EAAAG,QAASF,KAAK,cAAcC,KAAK,QAAvF,kDACmB,EAAAC,SAAnB,iCAAmB,kBAAnB,iBAA6E,G,MAAjDF,KAAK,8BAA8BC,KAAK,WACpE,iBAA4D,GAAhDF,KAAK,QAAQC,KAAK,gBAAgBC,KAAK,YAEpCE,QAAM,cACrB,IAAuC,EAAvC,iBAAuC,GAAzBC,SAAU,EAAAP,aAAW,sBACnC,iBAAuC,GAAzBO,SAAU,EAAAP,aAAW,sBACnC,iBAAsC,GAAzBO,SAAU,EAAAP,aAAW,wB,MAMxC,OACEQ,KAAM,UACNC,OACE,MAAO,CACLT,aAAa,IAGjBU,SAAU,CACRC,YACE,OAAOC,KAAKC,OAAOC,UAAU,CAAC,SAAU,YAE1CT,QAAS,WACP,OAAOO,KAAKC,OAAOE,QAAQ,4B,WCzBjC,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,WFmBA,GACEC,WAAY,CACVC,QAAO,GAETT,OACE,MAAO,CACLhB,aAAa,IAGjBiB,SAAU,CACRC,YACE,OAAOC,KAAKC,OAAOC,UAAU,CAAC,SAAU,aAG5CK,sBACQP,KAAKC,OAAOO,SAAS,mBAC3BR,KAAKnB,aAAc,GAErB4B,cAAcC,GAEZ,OADAC,EAAQC,IAAIF,IACL,IGvCX,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASG,KAEpE,ICCWC,EDDX,I,6CCEA,SAAWA,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,IAAgBA,EAAc,KAC1B,MAAMC,EACTC,YAAYC,EAAY,IACpBjB,KAAKkB,QAAU,GACflB,KAAKmB,aAAe,KACpBnB,KAAKoB,eAAiB,KACtBpB,KAAKqB,iBAAmB,IAAIC,IAC5BtB,KAAKuB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpB3B,KAAK4B,gBAAmB/B,IACpBG,KAAKmB,aAAetB,GAExBG,KAAK6B,kBAAoB,CACrB,CAACf,EAAYgB,MAAQC,GAAoB,OAAVA,GAAoC,kBAAVA,GAAuC,kBAAVA,EAA8CA,EAAxBC,KAAKC,UAAUF,GAC3H,CAACjB,EAAYoB,UAAYH,GAAUI,OAAOC,KAAKL,GAAS,IAAIM,QAAO,CAACxC,EAAMyC,KACtEzC,EAAK0C,OAAOD,EAAKP,EAAMO,IAChBzC,IACR,IAAIqC,UACP,CAACpB,EAAY0B,YAAcT,GAAU/B,KAAKyC,cAAcV,IAE5D/B,KAAK0C,kBAAqBC,IACtB,GAAI3C,KAAKqB,iBAAiBuB,IAAID,GAAc,CACxC,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAClD,OAAIE,EACOA,EAAgBE,YAE3B,EAEJ,MAAMF,EAAkB,IAAIG,gBAE5B,OADAhD,KAAKqB,iBAAiB4B,IAAIN,EAAaE,GAChCA,EAAgBE,QAE3B/C,KAAKkD,aAAgBP,IACjB,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAC9CE,IACAA,EAAgBM,QAChBnD,KAAKqB,iBAAiB+B,OAAOT,KAGrC3C,KAAKqD,QAAU,EAAGC,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,EAAMC,KAAAA,EAAMC,MAAAA,EAAOC,OAAAA,EAAS,OAAQzC,QAAAA,EAASyB,YAAAA,KAAgBiB,MACzF,MAAMC,EAAgBN,GAAUvD,KAAKoB,gBAAkBpB,KAAKoB,eAAepB,KAAKmB,eAAkB,GAC5F2C,EAAgB9D,KAAK+D,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS1D,KAAKyC,cAAciB,GAC1CO,EAAmBjE,KAAK6B,kBAAkB4B,GAAQ3C,EAAYgB,MACpE,OAAOoC,MAAO,GAAEhD,GAAWlB,KAAKkB,SAAW,KAAKsC,IAAOQ,EAAe,IAAGA,IAAgB,KAAM,IACxFF,EACHrC,QAAS,IACDgC,GAAQA,IAAS3C,EAAYoB,SAAW,CAAE,eAAgBuB,GAAS,MACnEK,EAAcrC,SAAW,IAEjCsB,OAAQJ,EAAc3C,KAAK0C,kBAAkBC,QAAe,EAC5DW,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOW,EAAiBX,KAC9Ea,MAAK5D,MAAAA,IACJ,MAAM6D,EAAIC,EACVD,EAAEvE,KAAO,KACTuE,EAAEE,MAAQ,KACV,MAAMzE,QAAawE,EAASV,KACvBQ,MAAMtE,IACHuE,EAAEG,GACFH,EAAEvE,KAAOA,EAGTuE,EAAEE,MAAQzE,EAEPuE,KAENI,OAAOC,IACRL,EAAEE,MAAQG,EACHL,KAKX,GAHIzB,GACA3C,KAAKqB,iBAAiB+B,OAAOT,IAE5B0B,EAASE,GACV,MAAM1E,EACV,OAAOA,MAGfsC,OAAOuC,OAAO1E,KAAMiB,GAExB0D,cAAcjB,EAAOpB,GACjB,MAAMsC,EAAQlB,EAAMpB,GACpB,OAAQuC,mBAAmBvC,GACvB,IACAuC,mBAAmBC,MAAMC,QAAQH,GAASA,EAAMI,KAAK,KAAwB,kBAAVJ,EAAqBA,EAAS,GAAEA,KAE3GnC,cAAcwC,GACV,MAAMvB,EAAQuB,GAAY,GACpB7C,EAAOD,OAAOC,KAAKsB,GAAOwB,QAAQ5C,GAAQ,qBAAuBoB,EAAMpB,KAC7E,OAAOF,EACF+C,KAAK7C,GAA8B,kBAAfoB,EAAMpB,IAAsBwC,MAAMC,QAAQrB,EAAMpB,IAEnEtC,KAAK2E,cAAcjB,EAAOpB,GAD1BtC,KAAKyC,cAAciB,EAAMpB,MAE1B0C,KAAK,KAEdI,eAAeH,GACX,MAAMjB,EAAchE,KAAKyC,cAAcwC,GACvC,OAAOjB,EAAe,IAAGA,IAAgB,GAE7CD,mBAAmBsB,EAASC,GACxB,MAAO,IACAtF,KAAKuB,iBACL8D,KACCC,GAAW,GACf7D,QAAS,IACDzB,KAAKuB,cAAcE,SAAW,MAC9B4D,EAAQ5D,SAAW,MAClB6D,GAAWA,EAAQ7D,SAAY,MAS7C,MAAM8D,UAAYxE,EACrBC,cACIwE,SAASC,WASTzF,KAAK0F,YAAc,CAAChC,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACpDG,KAAO,+BACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,K,4CCpJR,MACDgC,EAAgB,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,EAAY,CACrBC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANwB,IAApBF,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKL,GACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,EAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKL,GAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUwB,OAAOD,EAAOvB,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQuB,OAAOD,EAAOtB,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQJ,UAA0B0B,EAAI1B,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwByB,EAAIzB,MAAQG,EAAQH,OAC7CyB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKL,GAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUuB,EAAOvB,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQsB,EAAOtB,MAGvBG,EAAQH,MAAQ,EAEbG,IAGf,IAAIwB,EAAa,MACb,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,EAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,EAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cC3FG,MACDC,EAAU,CAAEC,QAAS,IACdC,EAAM,CACfvC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQqC,SACRpC,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqC,SAER,IAAzBrC,EAAQrB,MAAM4B,QACdN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQrB,OAE7BsB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoC,GACrB,MAAO5B,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqC,QAAU7B,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQrB,MAAQ6B,EAAOgC,QACvB,MACJ,QACIhC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoC,GAUrB,YATuBxB,IAAnBO,EAAOkB,SAA4C,OAAnBlB,EAAOkB,QACvCrC,EAAQqC,QAAUI,OAAOtB,EAAOkB,SAGhCrC,EAAQqC,QAAU,QAEDzB,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,QACrCqB,EAAQrB,MAAQ+D,EAAgBvB,EAAOxC,QAEpCqB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQqC,UAA0Bf,EAAIe,QAAUrC,EAAQqC,cACtCzB,IAAlBZ,EAAQrB,QAAwB2C,EAAI3C,MAAQgE,OAAkC/B,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aACvGa,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoC,GAarB,YAZuBxB,IAAnBO,EAAOkB,SAA4C,OAAnBlB,EAAOkB,QACvCrC,EAAQqC,QAAUlB,EAAOkB,QAGzBrC,EAAQqC,QAAU,QAEDzB,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,MACrCqB,EAAQrB,MAAQwC,EAAOxC,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGf,IAAIwB,EAAa,MACb,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,MAAMiB,EAAOpB,EAAWoB,MAAX,CAAqBC,GAAQrB,EAAWsB,OAAOC,KAAKF,EAAK,UAAUG,SAAS,WACzF,SAASN,EAAgBG,GACrB,MAAMI,EAAML,EAAKC,GACXK,EAAM,IAAIzC,WAAWwC,EAAI1C,QAC/B,IAAK,IAAI4C,EAAI,EAAGA,EAAIF,EAAI1C,SAAU4C,EAC9BD,EAAIC,GAAKF,EAAIG,WAAWD,GAE5B,OAAOD,EAEX,MAAMG,EAAO7B,EAAW6B,MAAX,CAAqBJ,GAAQzB,EAAWsB,OAAOC,KAAKE,EAAK,UAAUD,SAAS,WACzF,SAASL,EAAgBO,GACrB,MAAMD,EAAM,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAII,aAAcH,EAClCF,EAAIM,KAAKd,OAAOe,aAAaN,EAAIC,KAErC,OAAOE,EAAKJ,EAAIlE,KAAK,KC5FlB,MACD0E,EAA2B,CAAEC,IAAK,IAC3BC,EAAuB,CAChC5D,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAIrB,MAHoB,KAAhBF,EAAQ0D,KACRzD,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ0D,KAE9BzD,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKyD,GACrB,MAAOjD,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0D,IAAMlD,EAAO+B,SACrB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKyD,GAOrB,YANmB7C,IAAfO,EAAOuC,KAAoC,OAAfvC,EAAOuC,IACnC1D,EAAQ0D,IAAMjB,OAAOtB,EAAOuC,KAG5B1D,EAAQ0D,IAAM,GAEX1D,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAEZ,YADgBV,IAAhBZ,EAAQ0D,MAAsBpC,EAAIoC,IAAM1D,EAAQ0D,KACzCpC,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKyD,GAOrB,YANmB7C,IAAfO,EAAOuC,KAAoC,OAAfvC,EAAOuC,IACnC1D,EAAQ0D,IAAMvC,EAAOuC,IAGrB1D,EAAQ0D,IAAM,GAEX1D,IAGT4D,EAAY,GACLC,EAAQ,CACjB9D,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,YAN8BU,IAA1BZ,EAAQ8D,eACRxB,EAAIvC,OAAOC,EAAQ8D,cAAe7D,EAAOE,OAAO,IAAI4D,QAAQC,cAErCpD,IAAvBZ,EAAQiE,YACRnE,EAAUC,OAAOmE,EAAYlE,EAAQiE,YAAahE,EAAOE,OAAO,IAAI4D,QAAQC,SAEzE/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK4D,GACrB,MAAOpD,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8D,cAAgBxB,EAAIhC,OAAOE,EAAQA,EAAOL,UAClD,MACJ,KAAK,EACDH,EAAQiE,WAAaE,EAAcrE,EAAUQ,OAAOE,EAAQA,EAAOL,WACnE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK4D,GAarB,YAZ6BhD,IAAzBO,EAAO2C,eAAwD,OAAzB3C,EAAO2C,cAC7C9D,EAAQ8D,cAAgBxB,EAAIpB,SAASC,EAAO2C,eAG5C9D,EAAQ8D,mBAAgBlD,OAEFA,IAAtBO,EAAO8C,YAAkD,OAAtB9C,EAAO8C,WAC1CjE,EAAQiE,WAAaG,EAAkBjD,EAAO8C,YAG9CjE,EAAQiE,gBAAarD,EAElBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF0BV,IAA1BZ,EAAQ8D,gBAAgCxC,EAAIwC,cAAgB9D,EAAQ8D,cAAgBxB,EAAIjB,OAAOrB,EAAQ8D,oBAAiBlD,QACjGA,IAAvBZ,EAAQiE,aAA6B3C,EAAI2C,gBAAoCrD,IAAvBZ,EAAQiE,WAA2BjE,EAAQiE,WAAWI,cAAgB,MACrH/C,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK4D,GAarB,YAZ6BhD,IAAzBO,EAAO2C,eAAwD,OAAzB3C,EAAO2C,cAC7C9D,EAAQ8D,cAAgBxB,EAAIf,YAAYJ,EAAO2C,eAG/C9D,EAAQ8D,mBAAgBlD,OAEFA,IAAtBO,EAAO8C,YAAkD,OAAtB9C,EAAO8C,WAC1CjE,EAAQiE,WAAa9C,EAAO8C,WAG5BjE,EAAQiE,gBAAarD,EAElBZ,IAGf,SAASkE,EAAYI,GACjB,MAAM1E,EAAU0E,EAAKC,UAAY,IAC3B1E,EAASyE,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAE3E,QAAAA,EAASC,MAAAA,GAEtB,SAASsE,EAAcK,GACnB,IAAIC,EAAqB,IAAZD,EAAE5E,QAEf,OADA6E,GAAUD,EAAE3E,MAAQ,IACb,IAAI6E,KAAKD,GAEpB,SAASL,EAAkBO,GACvB,OAAIA,aAAaD,KACNC,EAEW,kBAANA,EACL,IAAID,KAAKC,GAGTR,EAAcrE,EAAUoB,SAASyD,IC5IzC,MACDC,EAAe,CAAEC,QAAS,GAAIC,QAAS,IAChCC,EAAW,CACpBhF,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATwB,KAApBF,EAAQ6E,SACR5E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6E,SAEb,KAApB7E,EAAQ8E,SACR7E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8E,cAEflE,IAAlBZ,EAAQgF,OACRnB,EAAM9D,OAAOC,EAAQgF,MAAO/E,EAAOE,OAAO,IAAI4D,QAAQC,SAEnD/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK4E,GACrB,MAAOpE,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6E,QAAUrE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ8E,QAAUtE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQgF,MAAQnB,EAAMvD,OAAOE,EAAQA,EAAOL,UAC5C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK4E,GAmBrB,YAlBuBhE,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAUpC,OAAOtB,EAAO0D,SAGhC7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAUrC,OAAOtB,EAAO2D,SAGhC9E,EAAQ8E,QAAU,QAEDlE,IAAjBO,EAAO6D,OAAwC,OAAjB7D,EAAO6D,MACrChF,EAAQgF,MAAQnB,EAAM3C,SAASC,EAAO6D,OAGtChF,EAAQgF,WAAQpE,EAEbZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHoBV,IAApBZ,EAAQ6E,UAA0BvD,EAAIuD,QAAU7E,EAAQ6E,cACpCjE,IAApBZ,EAAQ8E,UAA0BxD,EAAIwD,QAAU9E,EAAQ8E,cACtClE,IAAlBZ,EAAQgF,QAAwB1D,EAAI0D,MAAQhF,EAAQgF,MAAQnB,EAAMxC,OAAOrB,EAAQgF,YAASpE,GACnFU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK4E,GAmBrB,YAlBuBhE,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAU1D,EAAO0D,QAGzB7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAU3D,EAAO2D,QAGzB9E,EAAQ8E,QAAU,QAEDlE,IAAjBO,EAAO6D,OAAwC,OAAjB7D,EAAO6D,MACrChF,EAAQgF,MAAQnB,EAAMtC,YAAYJ,EAAO6D,OAGzChF,EAAQgF,WAAQpE,EAEbZ,IA4DTiF,EAAc,CAAEH,QAAS,IAClBI,EAAU,CACnBnF,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACG,KAApBF,EAAQ8E,SACR7E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8E,SAErC,IAAK,MAAMK,KAAKnF,EAAQoF,KACpB9C,EAAIvC,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE5C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKiF,GACrBjF,EAAQoF,KAAO,GACf,MAAO5E,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8E,QAAUtE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQoF,KAAK7B,KAAKjB,EAAIhC,OAAOE,EAAQA,EAAOL,WAC5C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKiF,GAQrB,GAPAjF,EAAQoF,KAAO,QACQxE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAUrC,OAAOtB,EAAO2D,SAGhC9E,EAAQ8E,QAAU,QAEFlE,IAAhBO,EAAOiE,MAAsC,OAAhBjE,EAAOiE,KACpC,IAAK,MAAM5G,KAAK2C,EAAOiE,KACnBpF,EAAQoF,KAAK7B,KAAKjB,EAAIpB,SAAS1C,IAGvC,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPoBV,IAApBZ,EAAQ8E,UAA0BxD,EAAIwD,QAAU9E,EAAQ8E,SACpD9E,EAAQoF,KACR9D,EAAI8D,KAAOpF,EAAQoF,KAAKlG,KAAKV,GAAOA,EAAI8D,EAAIjB,OAAO7C,QAAKoC,IAGxDU,EAAI8D,KAAO,GAER9D,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKiF,GAQrB,GAPAjF,EAAQoF,KAAO,QACQxE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAU3D,EAAO2D,QAGzB9E,EAAQ8E,QAAU,QAEFlE,IAAhBO,EAAOiE,MAAsC,OAAhBjE,EAAOiE,KACpC,IAAK,MAAM5G,KAAK2C,EAAOiE,KACnBpF,EAAQoF,KAAK7B,KAAKjB,EAAIf,YAAY/C,IAG1C,OAAOwB,IAmCTqF,EAAgB,CAAER,QAAS,GAAIC,QAAS,GAAIQ,WAAY,IACjDC,EAAY,CACrBxF,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATwB,KAApBF,EAAQ6E,SACR5E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6E,SAEb,KAApB7E,EAAQ8E,SACR7E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8E,SAEV,KAAvB9E,EAAQsF,YACRrF,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsF,YAE9BrF,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKqF,GACrB,MAAO7E,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6E,QAAUrE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ8E,QAAUtE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQsF,WAAa9E,EAAO+B,SAC5B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKqF,GAmBrB,YAlBuBzE,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAUpC,OAAOtB,EAAO0D,SAGhC7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAUrC,OAAOtB,EAAO2D,SAGhC9E,EAAQ8E,QAAU,QAEIlE,IAAtBO,EAAOmE,YAAkD,OAAtBnE,EAAOmE,WAC1CtF,EAAQsF,WAAa7C,OAAOtB,EAAOmE,YAGnCtF,EAAQsF,WAAa,GAElBtF,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHoBV,IAApBZ,EAAQ6E,UAA0BvD,EAAIuD,QAAU7E,EAAQ6E,cACpCjE,IAApBZ,EAAQ8E,UAA0BxD,EAAIwD,QAAU9E,EAAQ8E,cACjClE,IAAvBZ,EAAQsF,aAA6BhE,EAAIgE,WAAatF,EAAQsF,YACvDhE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKqF,GAmBrB,YAlBuBzE,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAU1D,EAAO0D,QAGzB7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAU3D,EAAO2D,QAGzB9E,EAAQ8E,QAAU,QAEIlE,IAAtBO,EAAOmE,YAAkD,OAAtBnE,EAAOmE,WAC1CtF,EAAQsF,WAAanE,EAAOmE,WAG5BtF,EAAQsF,WAAa,GAElBtF,IAuDf,IAAIwB,EAAa,MACb,GAA0B,qBAAfA,EACP,OAAOA,EACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWJH,EAAWoB,KASXpB,EAAW6B,KC7ZxB,MAAMmC,EAAQ,CACV,CAAC,gCAAiCN,GAClC,CAAC,kCAAmCK,GACpC,CAAC,iCAAkCR,IAE1BU,EAAqB,IAAI1D,MAAM,sBAC/B2D,EAAW,IAAIC,EAAAA,SAASH,GAC/BI,EAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,EAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,EACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAAA,UAGxDS,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAAA,IAE3D,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,EAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvHC,QAAU5M,IAAD,CAAayI,QAAS,gCAAiC1D,MAAOuG,EAAQ3D,YAAY3H,KAC3F6M,UAAY7M,IAAD,CAAayI,QAAS,kCAAmC1D,MAAO4G,EAAUhE,YAAY3H,KACjG8M,SAAW9M,IAAD,CAAayI,QAAS,iCAAkC1D,MAAOoG,EAASxD,YAAY3H,OAGhG+M,GAAcrM,OAAS2L,KAAMA,GAAS,CAAEA,KAAM,2BACzC,IAAI3G,EAAI,CAAErE,QAASgL,IClCxBW,GAAiB,CAAEtB,WAAY,GAAIT,QAAS,GAAIC,QAAS,IAClD+B,GAAa,CACtB9G,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MAT2B,KAAvBF,EAAQsF,YACRrF,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsF,YAEb,KAApBtF,EAAQ6E,SACR5E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6E,SAEb,KAApB7E,EAAQ8E,SACR7E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8E,SAE9B7E,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK4G,IACrB,MAAOpG,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsF,WAAa9E,EAAO+B,SAC5B,MACJ,KAAK,EACDvC,EAAQ6E,QAAUrE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ8E,QAAUtE,EAAO+B,SACzB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK4G,IAmBrB,YAlB0BhG,IAAtBO,EAAOmE,YAAkD,OAAtBnE,EAAOmE,WAC1CtF,EAAQsF,WAAa7C,OAAOtB,EAAOmE,YAGnCtF,EAAQsF,WAAa,QAEF1E,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAUpC,OAAOtB,EAAO0D,SAGhC7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAUrC,OAAOtB,EAAO2D,SAGhC9E,EAAQ8E,QAAU,GAEf9E,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHuBV,IAAvBZ,EAAQsF,aAA6BhE,EAAIgE,WAAatF,EAAQsF,iBAC1C1E,IAApBZ,EAAQ6E,UAA0BvD,EAAIuD,QAAU7E,EAAQ6E,cACpCjE,IAApBZ,EAAQ8E,UAA0BxD,EAAIwD,QAAU9E,EAAQ8E,SACjDxD,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK4G,IAmBrB,YAlB0BhG,IAAtBO,EAAOmE,YAAkD,OAAtBnE,EAAOmE,WAC1CtF,EAAQsF,WAAanE,EAAOmE,WAG5BtF,EAAQsF,WAAa,QAEF1E,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAU1D,EAAO0D,QAGzB7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAU3D,EAAO2D,QAGzB9E,EAAQ8E,QAAU,GAEf9E,IAGT8G,GAAkB,CAAExB,WAAY,GAAIT,QAAS,GAAIC,QAAS,IACnDiC,GAAc,CACvBhH,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MAT2B,KAAvBF,EAAQsF,YACRrF,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsF,YAEb,KAApBtF,EAAQ6E,SACR5E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6E,SAEb,KAApB7E,EAAQ8E,SACR7E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8E,SAE9B7E,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8G,IACrB,MAAOtG,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsF,WAAa9E,EAAO+B,SAC5B,MACJ,KAAK,EACDvC,EAAQ6E,QAAUrE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ8E,QAAUtE,EAAO+B,SACzB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8G,IAmBrB,YAlB0BlG,IAAtBO,EAAOmE,YAAkD,OAAtBnE,EAAOmE,WAC1CtF,EAAQsF,WAAa7C,OAAOtB,EAAOmE,YAGnCtF,EAAQsF,WAAa,QAEF1E,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAUpC,OAAOtB,EAAO0D,SAGhC7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAUrC,OAAOtB,EAAO2D,SAGhC9E,EAAQ8E,QAAU,GAEf9E,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHuBV,IAAvBZ,EAAQsF,aAA6BhE,EAAIgE,WAAatF,EAAQsF,iBAC1C1E,IAApBZ,EAAQ6E,UAA0BvD,EAAIuD,QAAU7E,EAAQ6E,cACpCjE,IAApBZ,EAAQ8E,UAA0BxD,EAAIwD,QAAU9E,EAAQ8E,SACjDxD,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8G,IAmBrB,YAlB0BlG,IAAtBO,EAAOmE,YAAkD,OAAtBnE,EAAOmE,WAC1CtF,EAAQsF,WAAanE,EAAOmE,WAG5BtF,EAAQsF,WAAa,QAEF1E,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAU1D,EAAO0D,QAGzB7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAU3D,EAAO2D,QAGzB9E,EAAQ8E,QAAU,GAEf9E,ICpHTgH,GAAyB,CAAEnC,QAAS,GAAIC,QAAS,IAC1CmC,GAAqB,CAC9BlH,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,MAZwB,KAApBF,EAAQ6E,SACR5E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6E,SAEb,KAApB7E,EAAQ8E,SACR7E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8E,cAEPlE,IAA1BZ,EAAQ8D,eACRxB,EAAIvC,OAAOC,EAAQ8D,cAAe7D,EAAOE,OAAO,IAAI4D,QAAQC,cAErCpD,IAAvBZ,EAAQiE,YACRnE,EAAUC,OAAOmE,GAAYlE,EAAQiE,YAAahE,EAAOE,OAAO,IAAI4D,QAAQC,SAEzE/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKgH,IACrB,MAAOxG,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6E,QAAUrE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ8E,QAAUtE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ8D,cAAgBxB,EAAIhC,OAAOE,EAAQA,EAAOL,UAClD,MACJ,KAAK,EACDH,EAAQiE,WAAaE,GAAcrE,EAAUQ,OAAOE,EAAQA,EAAOL,WACnE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKgH,IAyBrB,YAxBuBpG,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAUpC,OAAOtB,EAAO0D,SAGhC7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAUrC,OAAOtB,EAAO2D,SAGhC9E,EAAQ8E,QAAU,QAEOlE,IAAzBO,EAAO2C,eAAwD,OAAzB3C,EAAO2C,cAC7C9D,EAAQ8D,cAAgBxB,EAAIpB,SAASC,EAAO2C,eAG5C9D,EAAQ8D,mBAAgBlD,OAEFA,IAAtBO,EAAO8C,YAAkD,OAAtB9C,EAAO8C,WAC1CjE,EAAQiE,WAAaG,GAAkBjD,EAAO8C,YAG9CjE,EAAQiE,gBAAarD,EAElBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJoBV,IAApBZ,EAAQ6E,UAA0BvD,EAAIuD,QAAU7E,EAAQ6E,cACpCjE,IAApBZ,EAAQ8E,UAA0BxD,EAAIwD,QAAU9E,EAAQ8E,cAC9BlE,IAA1BZ,EAAQ8D,gBAAgCxC,EAAIwC,cAAgB9D,EAAQ8D,cAAgBxB,EAAIjB,OAAOrB,EAAQ8D,oBAAiBlD,QACjGA,IAAvBZ,EAAQiE,aAA6B3C,EAAI2C,gBAAoCrD,IAAvBZ,EAAQiE,WAA2BjE,EAAQiE,WAAWI,cAAgB,MACrH/C,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKgH,IAyBrB,YAxBuBpG,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAU1D,EAAO0D,QAGzB7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAU3D,EAAO2D,QAGzB9E,EAAQ8E,QAAU,QAEOlE,IAAzBO,EAAO2C,eAAwD,OAAzB3C,EAAO2C,cAC7C9D,EAAQ8D,cAAgBxB,EAAIf,YAAYJ,EAAO2C,eAG/C9D,EAAQ8D,mBAAgBlD,OAEFA,IAAtBO,EAAO8C,YAAkD,OAAtB9C,EAAO8C,WAC1CjE,EAAQiE,WAAa9C,EAAO8C,WAG5BjE,EAAQiE,gBAAarD,EAElBZ,IAGf,SAASkE,GAAYI,GACjB,MAAM1E,EAAU0E,EAAKC,UAAY,IAC3B1E,EAASyE,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAE3E,QAAAA,EAASC,MAAAA,GAEtB,SAASsE,GAAcK,GACnB,IAAIC,EAAqB,IAAZD,EAAE5E,QAEf,OADA6E,GAAUD,EAAE3E,MAAQ,IACb,IAAI6E,KAAKD,GAEpB,SAASL,GAAkBO,GACvB,OAAIA,aAAaD,KACNC,EAEW,kBAANA,EACL,IAAID,KAAKC,GAGTR,GAAcrE,EAAUoB,SAASyD,I,gBCnLhDrK,eAAe4M,GAAaC,GACxB,aAAapB,EAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BAG1B7M,eAAe8M,GAAgBD,GAC3B,aAAaR,GAAY,CACrBV,KAAMkB,EAAY,0BAG1B,SAASE,GAAa1I,EAAO2I,GACzB,IAAK,IAAIC,KAAQrL,OAAOC,KAAKmL,GACrBzI,MAAMC,QAAQwI,EAAYC,IAC1B5I,EAAM4I,GAAQ,IAAI5I,EAAM4I,MAAUD,EAAYC,IAG9C5I,EAAM4I,GAAQD,EAAYC,GAGlC,OAAO5I,EAEX,SAAS6I,GAAaC,GAClB,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,IAAK,MAAOtL,EAAKsC,KAAUzC,OAAO0L,QAAQH,GAAW,CACjD,IAAII,EAAQ,GACZA,EAAMlO,KAAO0C,EACbwL,EAAMrK,YAAcmB,EACpB+I,EAAUC,OAAOpE,KAAKsE,GAE1B,OAAOH,EAEX,MAAMI,GAAkB,KACb,CACHC,OAAQ,GACRC,WAAY,CACRrE,qBAAsB6D,GAAa7D,EAAqBpC,YAAY,KACpEsC,MAAO2D,GAAa3D,EAAMtC,YAAY,KACtCsF,WAAYW,GAAaX,GAAWtF,YAAY,KAChDwF,YAAaS,GAAaT,GAAYxF,YAAY,KAClD0F,mBAAoBO,GAAaP,GAAmB1F,YAAY,MAEpE0G,UAAWvC,EACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,IC9CWjN,GD8CX,IACIwN,YAAY,EACZD,MAAAA,GACAE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACL2O,UAAYT,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACjCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAML,OAAOhM,KAAKC,UAAU2B,KAAY,IAEnDmL,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,kDACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,mBAAkB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAClI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYlH,YAAYhC,IAAQ7D,KACnD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYlH,YAAY,IAAKhC,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC7G+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,SAAUpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACnEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,cAAeC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC3FvD,EAAQ,aAAa,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAElE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,0BAA2B,kDAAoDpL,EAAEwB,WAG/G1F,mBAAkB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACzD,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASS,QAAQ7H,GAC7BuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,EACC,IAAImE,EAAAA,GAAY,wBAAyB,4DAGzC,IAAIA,EAAAA,GAAY,wBAAyB,2BAA6BpL,EAAEwB,WAI1F1F,qBAAoB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC3D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASU,UAAU9H,GAC/BuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,EACC,IAAImE,EAAAA,GAAY,0BAA2B,4DAG3C,IAAIA,EAAAA,GAAY,0BAA2B,2BAA6BpL,EAAEwB,WAI5F1F,oBAAmB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC1D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASW,SAAS/H,GAC9BuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,EACC,IAAImE,EAAAA,GAAY,yBAA0B,4DAG1C,IAAIA,EAAAA,GAAY,yBAA0B,2BAA6BpL,EAAEwB,WAI3F1F,eAAc,YAAE4O,IAAe,MAAEvK,IAC7B,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASS,QAAQ7H,GACnC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,EACC,IAAImE,EAAAA,GAAY,wBAAyB,4DAGzC,IAAIA,EAAAA,GAAY,0BAA2B,6BAA+BpL,EAAEwB,WAI9F1F,iBAAgB,YAAE4O,IAAe,MAAEvK,IAC/B,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASU,UAAU9H,GACrC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,EACC,IAAImE,EAAAA,GAAY,0BAA2B,4DAG3C,IAAIA,EAAAA,GAAY,4BAA6B,6BAA+BpL,EAAEwB,WAIhG1F,gBAAe,YAAE4O,IAAe,MAAEvK,IAC9B,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASW,SAAS/H,GACpC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,EACC,IAAImE,EAAAA,GAAY,yBAA0B,4DAG1C,IAAIA,EAAAA,GAAY,2BAA4B,6BAA+BpL,EAAEwB,cCpNvG,SAAWnF,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,MAAMC,GACTC,YAAYC,EAAY,IACpBjB,KAAKkB,QAAU,GACflB,KAAKmB,aAAe,KACpBnB,KAAKoB,eAAiB,KACtBpB,KAAKqB,iBAAmB,IAAIC,IAC5BtB,KAAKuB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpB3B,KAAK4B,gBAAmB/B,IACpBG,KAAKmB,aAAetB,GAExBG,KAAK6B,kBAAoB,CACrB,CAACf,GAAYgB,MAAQC,GAAoB,OAAVA,GAAoC,kBAAVA,GAAuC,kBAAVA,EAA8CA,EAAxBC,KAAKC,UAAUF,GAC3H,CAACjB,GAAYoB,UAAYH,GAAUI,OAAOC,KAAKL,GAAS,IAAIM,QAAO,CAACxC,EAAMyC,KACtEzC,EAAK0C,OAAOD,EAAKP,EAAMO,IAChBzC,IACR,IAAIqC,UACP,CAACpB,GAAY0B,YAAcT,GAAU/B,KAAKyC,cAAcV,IAE5D/B,KAAK0C,kBAAqBC,IACtB,GAAI3C,KAAKqB,iBAAiBuB,IAAID,GAAc,CACxC,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAClD,OAAIE,EACOA,EAAgBE,YAE3B,EAEJ,MAAMF,EAAkB,IAAIG,gBAE5B,OADAhD,KAAKqB,iBAAiB4B,IAAIN,EAAaE,GAChCA,EAAgBE,QAE3B/C,KAAKkD,aAAgBP,IACjB,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAC9CE,IACAA,EAAgBM,QAChBnD,KAAKqB,iBAAiB+B,OAAOT,KAGrC3C,KAAKqD,QAAU,EAAGC,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,EAAMC,KAAAA,EAAMC,MAAAA,EAAOC,OAAAA,EAAS,OAAQzC,QAAAA,EAASyB,YAAAA,KAAgBiB,MACzF,MAAMC,EAAgBN,GAAUvD,KAAKoB,gBAAkBpB,KAAKoB,eAAepB,KAAKmB,eAAkB,GAC5F2C,EAAgB9D,KAAK+D,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS1D,KAAKyC,cAAciB,GAC1CO,EAAmBjE,KAAK6B,kBAAkB4B,GAAQ3C,GAAYgB,MACpE,OAAOoC,MAAO,GAAEhD,GAAWlB,KAAKkB,SAAW,KAAKsC,IAAOQ,EAAe,IAAGA,IAAgB,KAAM,IACxFF,EACHrC,QAAS,IACDgC,GAAQA,IAAS3C,GAAYoB,SAAW,CAAE,eAAgBuB,GAAS,MACnEK,EAAcrC,SAAW,IAEjCsB,OAAQJ,EAAc3C,KAAK0C,kBAAkBC,QAAe,EAC5DW,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOW,EAAiBX,KAC9Ea,MAAK5D,MAAAA,IACJ,MAAM6D,EAAIC,EACVD,EAAEvE,KAAO,KACTuE,EAAEE,MAAQ,KACV,MAAMzE,QAAawE,EAASV,KACvBQ,MAAMtE,IACHuE,EAAEG,GACFH,EAAEvE,KAAOA,EAGTuE,EAAEE,MAAQzE,EAEPuE,KAENI,OAAOC,IACRL,EAAEE,MAAQG,EACHL,KAKX,GAHIzB,GACA3C,KAAKqB,iBAAiB+B,OAAOT,IAE5B0B,EAASE,GACV,MAAM1E,EACV,OAAOA,MAGfsC,OAAOuC,OAAO1E,KAAMiB,GAExB0D,cAAcjB,EAAOpB,GACjB,MAAMsC,EAAQlB,EAAMpB,GACpB,OAAQuC,mBAAmBvC,GACvB,IACAuC,mBAAmBC,MAAMC,QAAQH,GAASA,EAAMI,KAAK,KAAwB,kBAAVJ,EAAqBA,EAAS,GAAEA,KAE3GnC,cAAcwC,GACV,MAAMvB,EAAQuB,GAAY,GACpB7C,EAAOD,OAAOC,KAAKsB,GAAOwB,QAAQ5C,GAAQ,qBAAuBoB,EAAMpB,KAC7E,OAAOF,EACF+C,KAAK7C,GAA8B,kBAAfoB,EAAMpB,IAAsBwC,MAAMC,QAAQrB,EAAMpB,IAEnEtC,KAAK2E,cAAcjB,EAAOpB,GAD1BtC,KAAKyC,cAAciB,EAAMpB,MAE1B0C,KAAK,KAEdI,eAAeH,GACX,MAAMjB,EAAchE,KAAKyC,cAAcwC,GACvC,OAAOjB,EAAe,IAAGA,IAAgB,GAE7CD,mBAAmBsB,EAASC,GACxB,MAAO,IACAtF,KAAKuB,iBACL8D,KACCC,GAAW,GACf7D,QAAS,IACDzB,KAAKuB,cAAcE,SAAW,MAC9B4D,EAAQ5D,SAAW,MAClB6D,GAAWA,EAAQ7D,SAAY,MAS7C,MAAM8D,WAAYxE,GACrBC,cACIwE,SAASC,WASTzF,KAAKoQ,iBAAmB,CAAC3Q,EAASiE,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAClEG,KAAO,iCAAgC/D,IACvCkG,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKqQ,aAAe,CAAC5Q,EAAS6Q,EAAO1M,EAAS,KAAO5D,KAAKqD,QAAQ,CAC9DG,KAAO,iCAAgC/D,KAAW6Q,IAClD3K,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKuQ,oBAAsB,CAAC7M,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAC5DG,KAAO,uCACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKwQ,mBAAqB,CAACF,EAAO1M,EAAS,KAAO5D,KAAKqD,QAAQ,CAC3DG,KAAO,wCAAuC8M,IAC9C3K,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKyQ,YAAc,CAAC7M,EAAS,KAAO5D,KAAKqD,QAAQ,CAC7CG,KAAO,8BACPmC,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAK0Q,iBAAmB,CAAChN,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACzDG,KAAO,8BACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAK2Q,cAAgB,CAACL,EAAO1M,EAAS,KAAO5D,KAAKqD,QAAQ,CACtDG,KAAO,+BAA8B8M,IACrC3K,OAAQ,MACRhC,OAAQ,UACLC,KC3OR,MACDgN,GAAW,CAAEN,MAAO,GAAIxE,OAAQ,IACzB+E,GAAO,CAChB7K,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQqK,OACRpK,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqK,OAEd,KAAnBrK,EAAQ6F,QACR5F,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6F,QAE9B5F,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2K,IACrB,MAAOnK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqK,MAAQ7J,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6F,OAASrF,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQ5H,OAAOtB,EAAOkJ,OAG9BrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASpD,OAAOtB,EAAO0E,QAG/B7F,EAAQ6F,OAAS,GAEd7F,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQqK,QAAwB/I,EAAI+I,MAAQrK,EAAQqK,YACjCzJ,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,QAC/CvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQlJ,EAAOkJ,MAGvBrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,GAEd7F,IClET6K,GAAa,CAAEC,oBAAoB,GAC5BC,GAAS,CAClBhL,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQgL,YACpBC,GAAYlL,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAKpD,OAHmC,IAA/BhE,EAAQ8K,oBACR7K,EAAOE,OAAO,IAAI+K,KAAKlL,EAAQ8K,oBAE5B7K,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6K,IACrB7K,EAAQgL,YAAc,GACtB,MAAOxK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgL,YAAYzH,KAAK0H,GAAY3K,OAAOE,EAAQA,EAAOL,WAC3D,MACJ,KAAK,EACDH,EAAQ8K,mBAAqBtK,EAAO0K,OACpC,MACJ,QACI1K,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6K,IAErB,GADA7K,EAAQgL,YAAc,QACKpK,IAAvBO,EAAO6J,aAAoD,OAAvB7J,EAAO6J,YAC3C,IAAK,MAAMxM,KAAK2C,EAAO6J,YACnBhL,EAAQgL,YAAYzH,KAAK0H,GAAY/J,SAAS1C,IAStD,YANkCoC,IAA9BO,EAAO2J,oBAAkE,OAA9B3J,EAAO2J,mBAClD9K,EAAQ8K,mBAAqBK,QAAQhK,EAAO2J,oBAG5C9K,EAAQ8K,oBAAqB,EAE1B9K,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,OAPItB,EAAQgL,YACR1J,EAAI0J,YAAchL,EAAQgL,YAAY9L,KAAKV,GAAOA,EAAIyM,GAAY5J,OAAO7C,QAAKoC,IAG9EU,EAAI0J,YAAc,QAESpK,IAA/BZ,EAAQ8K,qBAAqCxJ,EAAIwJ,mBAAqB9K,EAAQ8K,oBACvExJ,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6K,IAErB,GADA7K,EAAQgL,YAAc,QACKpK,IAAvBO,EAAO6J,aAAoD,OAAvB7J,EAAO6J,YAC3C,IAAK,MAAMxM,KAAK2C,EAAO6J,YACnBhL,EAAQgL,YAAYzH,KAAK0H,GAAY1J,YAAY/C,IASzD,YANkCoC,IAA9BO,EAAO2J,oBAAkE,OAA9B3J,EAAO2J,mBAClD9K,EAAQ8K,mBAAqB3J,EAAO2J,mBAGpC9K,EAAQ8K,oBAAqB,EAE1B9K,IAGToL,GAAkB,CAAEf,MAAO,GAAIgB,SAAS,GACjCJ,GAAc,CACvBlL,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQqK,OACRpK,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqK,QAEb,IAApBrK,EAAQqL,SACRpL,EAAOE,OAAO,IAAI+K,KAAKlL,EAAQqL,SAE5BpL,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoL,IACrB,MAAO5K,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqK,MAAQ7J,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQqL,QAAU7K,EAAO0K,OACzB,MACJ,QACI1K,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoL,IAarB,YAZqBxK,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQ5H,OAAOtB,EAAOkJ,OAG9BrK,EAAQqK,MAAQ,QAEGzJ,IAAnBO,EAAOkK,SAA4C,OAAnBlK,EAAOkK,QACvCrL,EAAQqL,QAAUF,QAAQhK,EAAOkK,SAGjCrL,EAAQqL,SAAU,EAEfrL,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQqK,QAAwB/I,EAAI+I,MAAQrK,EAAQqK,YAChCzJ,IAApBZ,EAAQqL,UAA0B/J,EAAI+J,QAAUrL,EAAQqL,SACjD/J,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoL,IAarB,YAZqBxK,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQlJ,EAAOkJ,MAGvBrK,EAAQqK,MAAQ,QAEGzJ,IAAnBO,EAAOkK,SAA4C,OAAnBlK,EAAOkK,QACvCrL,EAAQqL,QAAUlK,EAAOkK,QAGzBrL,EAAQqL,SAAU,EAEfrL,IAGTsL,GAAY,CAAE9R,QAAS,IAChB+R,GAAQ,CACjBxL,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACG,KAApBF,EAAQxG,SACRyG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQxG,SAErC,IAAK,MAAM2L,KAAKnF,EAAQwL,MACpBZ,GAAK7K,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKsL,IACrBtL,EAAQwL,MAAQ,GAChB,MAAOhL,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQxG,QAAUgH,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQwL,MAAMjI,KAAKqH,GAAKtK,OAAOE,EAAQA,EAAOL,WAC9C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKsL,IAQrB,GAPAtL,EAAQwL,MAAQ,QACO5K,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAUiJ,OAAOtB,EAAO3H,SAGhCwG,EAAQxG,QAAU,QAEDoH,IAAjBO,EAAOqK,OAAwC,OAAjBrK,EAAOqK,MACrC,IAAK,MAAMhN,KAAK2C,EAAOqK,MACnBxL,EAAQwL,MAAMjI,KAAKqH,GAAK1J,SAAS1C,IAGzC,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPoBV,IAApBZ,EAAQxG,UAA0B8H,EAAI9H,QAAUwG,EAAQxG,SACpDwG,EAAQwL,MACRlK,EAAIkK,MAAQxL,EAAQwL,MAAMtM,KAAKV,GAAOA,EAAIoM,GAAKvJ,OAAO7C,QAAKoC,IAG3DU,EAAIkK,MAAQ,GAETlK,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKsL,IAQrB,GAPAtL,EAAQwL,MAAQ,QACO5K,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAU2H,EAAO3H,QAGzBwG,EAAQxG,QAAU,QAEDoH,IAAjBO,EAAOqK,OAAwC,OAAjBrK,EAAOqK,MACrC,IAAK,MAAMhN,KAAK2C,EAAOqK,MACnBxL,EAAQwL,MAAMjI,KAAKqH,GAAKrJ,YAAY/C,IAG5C,OAAOwB,IAGTyL,GAAa,CAAEjS,QAAS,IACjBkS,GAAS,CAClB3L,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACG,KAApBF,EAAQxG,SACRyG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQxG,SAErC,IAAK,MAAM2L,KAAKnF,EAAQwL,MACpBZ,GAAK7K,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKyL,IACrBzL,EAAQwL,MAAQ,GAChB,MAAOhL,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQxG,QAAUgH,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQwL,MAAMjI,KAAKqH,GAAKtK,OAAOE,EAAQA,EAAOL,WAC9C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKyL,IAQrB,GAPAzL,EAAQwL,MAAQ,QACO5K,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAUiJ,OAAOtB,EAAO3H,SAGhCwG,EAAQxG,QAAU,QAEDoH,IAAjBO,EAAOqK,OAAwC,OAAjBrK,EAAOqK,MACrC,IAAK,MAAMhN,KAAK2C,EAAOqK,MACnBxL,EAAQwL,MAAMjI,KAAKqH,GAAK1J,SAAS1C,IAGzC,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPoBV,IAApBZ,EAAQxG,UAA0B8H,EAAI9H,QAAUwG,EAAQxG,SACpDwG,EAAQwL,MACRlK,EAAIkK,MAAQxL,EAAQwL,MAAMtM,KAAKV,GAAOA,EAAIoM,GAAKvJ,OAAO7C,QAAKoC,IAG3DU,EAAIkK,MAAQ,GAETlK,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKyL,IAQrB,GAPAzL,EAAQwL,MAAQ,QACO5K,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAU2H,EAAO3H,QAGzBwG,EAAQxG,QAAU,QAEDoH,IAAjBO,EAAOqK,OAAwC,OAAjBrK,EAAOqK,MACrC,IAAK,MAAMhN,KAAK2C,EAAOqK,MACnBxL,EAAQwL,MAAMjI,KAAKqH,GAAKrJ,YAAY/C,IAG5C,OAAOwB,IAGT2L,GAAa,GACNC,GAAS,CAClB7L,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQ6L,MACpBjB,GAAK7K,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2L,IACrB3L,EAAQ6L,MAAQ,GAChB,MAAOrL,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6L,MAAMtI,KAAKqH,GAAKtK,OAAOE,EAAQA,EAAOL,WAC9C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2L,IAErB,GADA3L,EAAQ6L,MAAQ,QACKjL,IAAjBO,EAAO0K,OAAwC,OAAjB1K,EAAO0K,MACrC,IAAK,MAAMrN,KAAK2C,EAAO0K,MACnB7L,EAAQ6L,MAAMtI,KAAKqH,GAAK1J,SAAS1C,IAGzC,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAOZ,OANItB,EAAQ6L,MACRvK,EAAIuK,MAAQ7L,EAAQ6L,MAAM3M,KAAKV,GAAOA,EAAIoM,GAAKvJ,OAAO7C,QAAKoC,IAG3DU,EAAIuK,MAAQ,GAETvK,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2L,IAErB,GADA3L,EAAQ6L,MAAQ,QACKjL,IAAjBO,EAAO0K,OAAwC,OAAjB1K,EAAO0K,MACrC,IAAK,MAAMrN,KAAK2C,EAAO0K,MACnB7L,EAAQ6L,MAAMtI,KAAKqH,GAAKrJ,YAAY/C,IAG5C,OAAOwB,IAGT8L,GAAgB,CAAEzB,MAAO,GAAI0B,SAAU,EAAGC,QAAS,IAC5CC,GAAY,CACrBlM,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACC,KAAlBF,EAAQqK,OACRpK,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqK,OAEZ,IAArBrK,EAAQ+L,UACR9L,EAAOE,OAAO,IAAIA,OAAOH,EAAQ+L,UAErC,IAAK,MAAM5G,KAAKnF,EAAQgM,QACpB/L,EAAOE,OAAO,IAAIoC,OAAO4C,GAE7B,OAAOlF,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8L,IACrB9L,EAAQgM,QAAU,GAClB,MAAOxL,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqK,MAAQ7J,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ+L,SAAWvL,EAAOL,SAC1B,MACJ,KAAK,EACDH,EAAQgM,QAAQzI,KAAK/C,EAAO+B,UAC5B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8L,IAcrB,GAbA9L,EAAQgM,QAAU,QACGpL,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQ5H,OAAOtB,EAAOkJ,OAG9BrK,EAAQqK,MAAQ,QAEIzJ,IAApBO,EAAO4K,UAA8C,OAApB5K,EAAO4K,SACxC/L,EAAQ+L,SAAW3K,OAAOD,EAAO4K,UAGjC/L,EAAQ+L,SAAW,OAEAnL,IAAnBO,EAAO6K,SAA4C,OAAnB7K,EAAO6K,QACvC,IAAK,MAAMxN,KAAK2C,EAAO6K,QACnBhM,EAAQgM,QAAQzI,KAAKd,OAAOjE,IAGpC,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GASZ,YARkBV,IAAlBZ,EAAQqK,QAAwB/I,EAAI+I,MAAQrK,EAAQqK,YAC/BzJ,IAArBZ,EAAQ+L,WAA2BzK,EAAIyK,SAAW/L,EAAQ+L,UACtD/L,EAAQgM,QACR1K,EAAI0K,QAAUhM,EAAQgM,QAAQ9M,KAAKV,GAAMA,IAGzC8C,EAAI0K,QAAU,GAEX1K,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8L,IAcrB,GAbA9L,EAAQgM,QAAU,QACGpL,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQlJ,EAAOkJ,MAGvBrK,EAAQqK,MAAQ,QAEIzJ,IAApBO,EAAO4K,UAA8C,OAApB5K,EAAO4K,SACxC/L,EAAQ+L,SAAW5K,EAAO4K,SAG1B/L,EAAQ+L,SAAW,OAEAnL,IAAnBO,EAAO6K,SAA4C,OAAnB7K,EAAO6K,QACvC,IAAK,MAAMxN,KAAK2C,EAAO6K,QACnBhM,EAAQgM,QAAQzI,KAAK/E,GAG7B,OAAOwB,IAGTkM,GAAe,CAAEC,YAAa,GAAIC,KAAM,GAAIC,QAAS,GAAI1S,KAAM,GAAI2S,OAAQ,IACpEC,GAAW,CACpBxM,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACO,KAAxBF,EAAQmM,aACRlM,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQmM,aAErC,IAAK,MAAMhH,KAAKnF,EAAQwM,WACpBP,GAAUlM,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAclD,MAZqB,KAAjBhE,EAAQoM,MACRnM,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQoM,MAEb,KAApBpM,EAAQqM,SACRpM,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqM,SAEhB,KAAjBrM,EAAQrG,MACRsG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQrG,MAEd,KAAnBqG,EAAQsM,QACRrM,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsM,QAE9BrM,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKkM,IACrBlM,EAAQwM,WAAa,GACrB,MAAOhM,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmM,YAAc3L,EAAO+B,SAC7B,MACJ,KAAK,EACDvC,EAAQwM,WAAWjJ,KAAK0I,GAAU3L,OAAOE,EAAQA,EAAOL,WACxD,MACJ,KAAK,EACDH,EAAQoM,KAAO5L,EAAO+B,SACtB,MACJ,KAAK,EACDvC,EAAQqM,QAAU7L,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQrG,KAAO6G,EAAO+B,SACtB,MACJ,KAAK,EACDvC,EAAQsM,OAAS9L,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKkM,IAQrB,GAPAlM,EAAQwM,WAAa,QACM5L,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAc1J,OAAOtB,EAAOgL,aAGpCnM,EAAQmM,YAAc,QAEAvL,IAAtBO,EAAOqL,YAAkD,OAAtBrL,EAAOqL,WAC1C,IAAK,MAAMhO,KAAK2C,EAAOqL,WACnBxM,EAAQwM,WAAWjJ,KAAK0I,GAAU/K,SAAS1C,IA2BnD,YAxBoBoC,IAAhBO,EAAOiL,MAAsC,OAAhBjL,EAAOiL,KACpCpM,EAAQoM,KAAO3J,OAAOtB,EAAOiL,MAG7BpM,EAAQoM,KAAO,QAEIxL,IAAnBO,EAAOkL,SAA4C,OAAnBlL,EAAOkL,QACvCrM,EAAQqM,QAAU5J,OAAOtB,EAAOkL,SAGhCrM,EAAQqM,QAAU,QAEFzL,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAO8I,OAAOtB,EAAOxH,MAG7BqG,EAAQrG,KAAO,QAEGiH,IAAlBO,EAAOmL,QAA0C,OAAlBnL,EAAOmL,OACtCtM,EAAQsM,OAAS7J,OAAOtB,EAAOmL,QAG/BtM,EAAQsM,OAAS,GAEdtM,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAYZ,YAXwBV,IAAxBZ,EAAQmM,cAA8B7K,EAAI6K,YAAcnM,EAAQmM,aAC5DnM,EAAQwM,WACRlL,EAAIkL,WAAaxM,EAAQwM,WAAWtN,KAAKV,GAAOA,EAAIyN,GAAU5K,OAAO7C,QAAKoC,IAG1EU,EAAIkL,WAAa,QAEJ5L,IAAjBZ,EAAQoM,OAAuB9K,EAAI8K,KAAOpM,EAAQoM,WAC9BxL,IAApBZ,EAAQqM,UAA0B/K,EAAI+K,QAAUrM,EAAQqM,cACvCzL,IAAjBZ,EAAQrG,OAAuB2H,EAAI3H,KAAOqG,EAAQrG,WAC/BiH,IAAnBZ,EAAQsM,SAAyBhL,EAAIgL,OAAStM,EAAQsM,QAC/ChL,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKkM,IAQrB,GAPAlM,EAAQwM,WAAa,QACM5L,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAchL,EAAOgL,YAG7BnM,EAAQmM,YAAc,QAEAvL,IAAtBO,EAAOqL,YAAkD,OAAtBrL,EAAOqL,WAC1C,IAAK,MAAMhO,KAAK2C,EAAOqL,WACnBxM,EAAQwM,WAAWjJ,KAAK0I,GAAU1K,YAAY/C,IA2BtD,YAxBoBoC,IAAhBO,EAAOiL,MAAsC,OAAhBjL,EAAOiL,KACpCpM,EAAQoM,KAAOjL,EAAOiL,KAGtBpM,EAAQoM,KAAO,QAEIxL,IAAnBO,EAAOkL,SAA4C,OAAnBlL,EAAOkL,QACvCrM,EAAQqM,QAAUlL,EAAOkL,QAGzBrM,EAAQqM,QAAU,QAEFzL,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAOwH,EAAOxH,KAGtBqG,EAAQrG,KAAO,QAEGiH,IAAlBO,EAAOmL,QAA0C,OAAlBnL,EAAOmL,OACtCtM,EAAQsM,OAASnL,EAAOmL,OAGxBtM,EAAQsM,OAAS,GAEdtM,ICtlBTyM,GAAc,CAAEC,YAAa,GAAIC,UAAW,IACrCC,GAAU,CACnB7M,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACO,KAAxBF,EAAQ0M,aACRzM,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ0M,aAEX,KAAtB1M,EAAQ2M,WACR1M,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ2M,WAErC,IAAK,MAAMxH,KAAKnF,EAAQ6F,OACpB+E,GAAK7K,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKyM,IACrBzM,EAAQ6F,OAAS,GACjB,MAAOrF,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0M,YAAclM,EAAO+B,SAC7B,MACJ,KAAK,EACDvC,EAAQ2M,UAAYnM,EAAO+B,SAC3B,MACJ,KAAK,EACDvC,EAAQ6F,OAAOtC,KAAKqH,GAAKtK,OAAOE,EAAQA,EAAOL,WAC/C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKyM,IAcrB,GAbAzM,EAAQ6F,OAAS,QACUjF,IAAvBO,EAAOuL,aAAoD,OAAvBvL,EAAOuL,YAC3C1M,EAAQ0M,YAAcjK,OAAOtB,EAAOuL,aAGpC1M,EAAQ0M,YAAc,QAED9L,IAArBO,EAAOwL,WAAgD,OAArBxL,EAAOwL,UACzC3M,EAAQ2M,UAAYlK,OAAOtB,EAAOwL,WAGlC3M,EAAQ2M,UAAY,QAEF/L,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAK1J,SAAS1C,IAG1C,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GASZ,YARwBV,IAAxBZ,EAAQ0M,cAA8BpL,EAAIoL,YAAc1M,EAAQ0M,kBAC1C9L,IAAtBZ,EAAQ2M,YAA4BrL,EAAIqL,UAAY3M,EAAQ2M,WACxD3M,EAAQ6F,OACRvE,EAAIuE,OAAS7F,EAAQ6F,OAAO3G,KAAKV,GAAOA,EAAIoM,GAAKvJ,OAAO7C,QAAKoC,IAG7DU,EAAIuE,OAAS,GAEVvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKyM,IAcrB,GAbAzM,EAAQ6F,OAAS,QACUjF,IAAvBO,EAAOuL,aAAoD,OAAvBvL,EAAOuL,YAC3C1M,EAAQ0M,YAAcvL,EAAOuL,YAG7B1M,EAAQ0M,YAAc,QAED9L,IAArBO,EAAOwL,WAAgD,OAArBxL,EAAOwL,UACzC3M,EAAQ2M,UAAYxL,EAAOwL,UAG3B3M,EAAQ2M,UAAY,QAEF/L,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAKrJ,YAAY/C,IAG7C,OAAOwB,IAmCT6M,GAAmB,GACZC,GAAe,CACxB/M,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQ+M,OACpBxB,GAAMxL,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE9C,IAAK,MAAMmB,KAAKnF,EAAQgN,QACpBtB,GAAO3L,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE/C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6M,IACrB7M,EAAQ+M,OAAS,GACjB/M,EAAQgN,QAAU,GAClB,MAAOxM,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+M,OAAOxJ,KAAKgI,GAAMjL,OAAOE,EAAQA,EAAOL,WAChD,MACJ,KAAK,EACDH,EAAQgN,QAAQzJ,KAAKmI,GAAOpL,OAAOE,EAAQA,EAAOL,WAClD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6M,IAGrB,GAFA7M,EAAQ+M,OAAS,GACjB/M,EAAQgN,QAAU,QACIpM,IAAlBO,EAAO4L,QAA0C,OAAlB5L,EAAO4L,OACtC,IAAK,MAAMvO,KAAK2C,EAAO4L,OACnB/M,EAAQ+M,OAAOxJ,KAAKgI,GAAMrK,SAAS1C,IAG3C,QAAuBoC,IAAnBO,EAAO6L,SAA4C,OAAnB7L,EAAO6L,QACvC,IAAK,MAAMxO,KAAK2C,EAAO6L,QACnBhN,EAAQgN,QAAQzJ,KAAKmI,GAAOxK,SAAS1C,IAG7C,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAaZ,OAZItB,EAAQ+M,OACRzL,EAAIyL,OAAS/M,EAAQ+M,OAAO7N,KAAKV,GAAOA,EAAI+M,GAAMlK,OAAO7C,QAAKoC,IAG9DU,EAAIyL,OAAS,GAEb/M,EAAQgN,QACR1L,EAAI0L,QAAUhN,EAAQgN,QAAQ9N,KAAKV,GAAOA,EAAIkN,GAAOrK,OAAO7C,QAAKoC,IAGjEU,EAAI0L,QAAU,GAEX1L,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6M,IAGrB,GAFA7M,EAAQ+M,OAAS,GACjB/M,EAAQgN,QAAU,QACIpM,IAAlBO,EAAO4L,QAA0C,OAAlB5L,EAAO4L,OACtC,IAAK,MAAMvO,KAAK2C,EAAO4L,OACnB/M,EAAQ+M,OAAOxJ,KAAKgI,GAAMhK,YAAY/C,IAG9C,QAAuBoC,IAAnBO,EAAO6L,SAA4C,OAAnB7L,EAAO6L,QACvC,IAAK,MAAMxO,KAAK2C,EAAO6L,QACnBhN,EAAQgN,QAAQzJ,KAAKmI,GAAOnK,YAAY/C,IAGhD,OAAOwB,IC7Mf,MAAMwF,GAAQ,CACV,CAAC,+BAAgCoH,IACjC,CAAC,oCAAqCE,KAE7BrH,GAAqB,IAAI1D,MAAM,sBAC/B2D,GAAW,IAAIC,EAAAA,SAASH,IAC/BI,GAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,GAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,GACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAQA,WAGhES,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAQA,KAEnE,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,GAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvH0G,QAAUrT,IAAD,CAAayI,QAAS,+BAAgC1D,MAAOiO,GAAQrL,YAAY3H,KAC1FsT,aAAetT,IAAD,CAAayI,QAAS,oCAAqC1D,MAAOmO,GAAavL,YAAY3H,OAG3G+M,GAAcrM,OAAS2L,KAAMA,GAAS,CAAEA,KAAM,2BACzC,IAAI3G,GAAI,CAAErE,QAASgL,IC9BxBkH,GAAwB,GACjBC,GAAoB,CAC7BrN,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQqN,WACpBzC,GAAK7K,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKmN,IACrBnN,EAAQqN,WAAa,GACrB,MAAO7M,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqN,WAAW9J,KAAKqH,GAAKtK,OAAOE,EAAQA,EAAOL,WACnD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKmN,IAErB,GADAnN,EAAQqN,WAAa,QACKzM,IAAtBO,EAAOkM,YAAkD,OAAtBlM,EAAOkM,WAC1C,IAAK,MAAM7O,KAAK2C,EAAOkM,WACnBrN,EAAQqN,WAAW9J,KAAKqH,GAAK1J,SAAS1C,IAG9C,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAOZ,OANItB,EAAQqN,WACR/L,EAAI+L,WAAarN,EAAQqN,WAAWnO,KAAKV,GAAOA,EAAIoM,GAAKvJ,OAAO7C,QAAKoC,IAGrEU,EAAI+L,WAAa,GAEd/L,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKmN,IAErB,GADAnN,EAAQqN,WAAa,QACKzM,IAAtBO,EAAOkM,YAAkD,OAAtBlM,EAAOkM,WAC1C,IAAK,MAAM7O,KAAK2C,EAAOkM,WACnBrN,EAAQqN,WAAW9J,KAAKqH,GAAKrJ,YAAY/C,IAGjD,OAAOwB,ICyETsN,GAAc,CAAE9T,QAAS,IAClB+T,GAAU,CACnBxN,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACG,KAApBF,EAAQxG,SACRyG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQxG,SAErC,IAAK,MAAM2L,KAAKnF,EAAQwL,MACpBZ,GAAK7K,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKsN,IACrBtN,EAAQwL,MAAQ,GAChB,MAAOhL,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQxG,QAAUgH,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQwL,MAAMjI,KAAKqH,GAAKtK,OAAOE,EAAQA,EAAOL,WAC9C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKsN,IAQrB,GAPAtN,EAAQwL,MAAQ,QACO5K,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAUiJ,OAAOtB,EAAO3H,SAGhCwG,EAAQxG,QAAU,QAEDoH,IAAjBO,EAAOqK,OAAwC,OAAjBrK,EAAOqK,MACrC,IAAK,MAAMhN,KAAK2C,EAAOqK,MACnBxL,EAAQwL,MAAMjI,KAAKqH,GAAK1J,SAAS1C,IAGzC,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPoBV,IAApBZ,EAAQxG,UAA0B8H,EAAI9H,QAAUwG,EAAQxG,SACpDwG,EAAQwL,MACRlK,EAAIkK,MAAQxL,EAAQwL,MAAMtM,KAAKV,GAAOA,EAAIoM,GAAKvJ,OAAO7C,QAAKoC,IAG3DU,EAAIkK,MAAQ,GAETlK,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKsN,IAQrB,GAPAtN,EAAQwL,MAAQ,QACO5K,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAU2H,EAAO3H,QAGzBwG,EAAQxG,QAAU,QAEDoH,IAAjBO,EAAOqK,OAAwC,OAAjBrK,EAAOqK,MACrC,IAAK,MAAMhN,KAAK2C,EAAOqK,MACnBxL,EAAQwL,MAAMjI,KAAKqH,GAAKrJ,YAAY/C,IAG5C,OAAOwB,I,gBC/Lf1F,eAAe4M,GAAaC,GACxB,aAAapB,GAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BAG1B7M,eAAe8M,GAAgBD,GAC3B,aAAaR,GAAY,CACrBV,KAAMkB,EAAY,0BAG1B,SAASE,GAAa1I,EAAO2I,GACzB,IAAK,IAAIC,KAAQrL,OAAOC,KAAKmL,GACrBzI,MAAMC,QAAQwI,EAAYC,IAC1B5I,EAAM4I,GAAQ,IAAI5I,EAAM4I,MAAUD,EAAYC,IAG9C5I,EAAM4I,GAAQD,EAAYC,GAGlC,OAAO5I,EAEX,SAAS6I,GAAaC,GAClB,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,IAAK,MAAOtL,EAAKsC,KAAUzC,OAAO0L,QAAQH,GAAW,CACjD,IAAII,EAAQ,GACZA,EAAMlO,KAAO0C,EACbwL,EAAMrK,YAAcmB,EACpB+I,EAAUC,OAAOpE,KAAKsE,GAE1B,OAAOH,EAEX,MAAMI,GAAkB,KACb,CACHyF,QAAS,GACTC,YAAa,GACbC,YAAa,GACbC,SAAU,GACV3C,OAAQ,GACR4C,cAAe,GACfC,eAAgB,GAChB5F,WAAY,CACRoF,kBAAmB5F,GAAa4F,GAAkB7L,YAAY,KAC9DwJ,OAAQvD,GAAauD,GAAOxJ,YAAY,KACxC0J,YAAazD,GAAayD,GAAY1J,YAAY,KAClDgK,MAAO/D,GAAa+D,GAAMhK,YAAY,KACtCmK,OAAQlE,GAAakE,GAAOnK,YAAY,KACxCqK,OAAQpE,GAAaoE,GAAOrK,YAAY,KACxC0K,UAAWzE,GAAayE,GAAU1K,YAAY,KAC9CgL,SAAU/E,GAAa+E,GAAShL,YAAY,KAC5CgM,QAAS/F,GAAa+F,GAAQhM,YAAY,MAE9C0G,UAAWvC,GACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,IC5DWjN,GD4DX,IACIwN,YAAY,EACZD,MAFW,GAGXE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACL2T,WAAazF,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAClCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMmF,QAAQxR,KAAKC,UAAU2B,KAAY,IAEpDmQ,eAAiB1F,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACtCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMoF,YAAYzR,KAAKC,UAAU2B,KAAY,IAExDoQ,eAAiB3F,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACtCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMqF,YAAY1R,KAAKC,UAAU2B,KAAY,IAExDqQ,YAAc5F,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACnCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMsF,SAAS3R,KAAKC,UAAU2B,KAAY,IAErDsQ,UAAY7F,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACjCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2C,OAAOhP,KAAKC,UAAU2B,KAAY,IAEnDuQ,iBAAmB9F,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACxCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMuF,cAAc5R,KAAKC,UAAU2B,KAAY,IAE1DwQ,kBAAoB/F,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACzCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMwF,eAAe7R,KAAKC,UAAU2B,KAAY,IAE3DmL,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,iDACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,oBAAmB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACnI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYyD,aAAa/N,EAAI7C,QAAS6C,EAAIgO,QAAQzQ,KAIrE,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,UAAWpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACpEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,eAAgBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC5FvD,EAAQ,cAAc,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEnE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,2BAA4B,kDAAoDpL,EAAEwB,WAGhH1F,wBAAuB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACvI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYwD,iBAAiB9N,EAAI7C,QAASiE,IAAQ7D,KACrE,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYwD,iBAAiB9N,EAAI7C,QAAS,IAAKiE,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC/H+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,cAAepB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACxEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,mBAAoBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAChGvD,EAAQ,kBAAkB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEvE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,+BAAgC,kDAAoDpL,EAAEwB,WAGpH1F,wBAAuB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACvI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY8D,iBAAiBhN,IAAQ7D,KACxD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY8D,iBAAiB,IAAKhN,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAClH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,cAAepB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACxEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,mBAAoBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAChGvD,EAAQ,kBAAkB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEvE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,+BAAgC,kDAAoDpL,EAAEwB,WAGpH1F,qBAAoB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACpI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY+D,cAAcrO,EAAIgO,QAAQzQ,KAIzD,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,WAAYpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACrEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,gBAAiBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC7FvD,EAAQ,eAAe,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEpE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,4BAA6B,kDAAoDpL,EAAEwB,WAGjH1F,mBAAkB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAClI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY6D,eAAe5Q,KAI9C,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,SAAUpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACnEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,cAAeC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC3FvD,EAAQ,aAAa,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAElE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,0BAA2B,kDAAoDpL,EAAEwB,WAG/G1F,0BAAyB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACzI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY4D,mBAAmBlO,EAAIgO,QAAQzQ,KAI9D,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,gBAAiBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC1EmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,qBAAsBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAClGvD,EAAQ,oBAAoB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEzE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,iCAAkC,kDAAoDpL,EAAEwB,WAGtH1F,2BAA0B,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAC1I,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY2D,oBAAoB7M,IAAQ7D,KAC3D,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY2D,oBAAoB,IAAK7M,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KACrH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,iBAAkBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC3EmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,sBAAuBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACnGvD,EAAQ,qBAAqB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAE1E,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,kCAAmC,kDAAoDpL,EAAEwB,WAGvH1F,mBAAkB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACzD,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASkH,QAAQtO,GAC7BuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,wBAAyB,4DAGzC,IAAIA,EAAAA,GAAY,wBAAyB,2BAA6BpL,EAAEwB,WAI1F1F,wBAAuB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC9D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASmH,aAAavO,GAClCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,6BAA8B,4DAG9C,IAAIA,EAAAA,GAAY,6BAA8B,2BAA6BpL,EAAEwB,WAI/F1F,eAAc,YAAE4O,IAAe,MAAEvK,IAC7B,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASkH,QAAQtO,GACnC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,wBAAyB,4DAGzC,IAAIA,EAAAA,GAAY,0BAA2B,6BAA+BpL,EAAEwB,WAI9F1F,oBAAmB,YAAE4O,IAAe,MAAEvK,IAClC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASmH,aAAavO,GACxC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,6BAA8B,4DAG9C,IAAIA,EAAAA,GAAY,+BAAgC,6BAA+BpL,EAAEwB,cClU3G,SAAWnF,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KCb1B,MACDuT,GAAyB,CAAEC,OAAQ,GAAIC,oBAAqB,GAAIC,eAAgB,IACzEC,GAAqB,CAC9BzO,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATuB,KAAnBF,EAAQqO,QACRpO,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqO,QAED,KAAhCrO,EAAQsO,qBACRrO,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsO,qBAEN,KAA3BtO,EAAQuO,gBACRtO,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQuO,gBAE9BtO,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoO,IACrB,MAAO5N,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqO,OAAS7N,EAAO+B,SACxB,MACJ,KAAK,EACDvC,EAAQsO,oBAAsB9N,EAAO+B,SACrC,MACJ,KAAK,EACDvC,EAAQuO,eAAiB/N,EAAO+B,SAChC,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoO,IAmBrB,YAlBsBxN,IAAlBO,EAAOkN,QAA0C,OAAlBlN,EAAOkN,OACtCrO,EAAQqO,OAAS5L,OAAOtB,EAAOkN,QAG/BrO,EAAQqO,OAAS,QAEczN,IAA/BO,EAAOmN,qBAAoE,OAA/BnN,EAAOmN,oBACnDtO,EAAQsO,oBAAsB7L,OAAOtB,EAAOmN,qBAG5CtO,EAAQsO,oBAAsB,QAEJ1N,IAA1BO,EAAOoN,gBAA0D,OAA1BpN,EAAOoN,eAC9CvO,EAAQuO,eAAiB9L,OAAOtB,EAAOoN,gBAGvCvO,EAAQuO,eAAiB,GAEtBvO,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHmBV,IAAnBZ,EAAQqO,SAAyB/M,EAAI+M,OAASrO,EAAQqO,aACtBzN,IAAhCZ,EAAQsO,sBAAsChN,EAAIgN,oBAAsBtO,EAAQsO,0BACrD1N,IAA3BZ,EAAQuO,iBAAiCjN,EAAIiN,eAAiBvO,EAAQuO,gBAC/DjN,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoO,IAmBrB,YAlBsBxN,IAAlBO,EAAOkN,QAA0C,OAAlBlN,EAAOkN,OACtCrO,EAAQqO,OAASlN,EAAOkN,OAGxBrO,EAAQqO,OAAS,QAEczN,IAA/BO,EAAOmN,qBAAoE,OAA/BnN,EAAOmN,oBACnDtO,EAAQsO,oBAAsBnN,EAAOmN,oBAGrCtO,EAAQsO,oBAAsB,QAEJ1N,IAA1BO,EAAOoN,gBAA0D,OAA1BpN,EAAOoN,eAC9CvO,EAAQuO,eAAiBpN,EAAOoN,eAGhCvO,EAAQuO,eAAiB,GAEtBvO,ICpFf,MAAMwF,GAAQ,CACV,CAAC,4CAA6CgJ,KAErC/I,GAAqB,IAAI1D,MAAM,sBAC/B2D,GAAW,IAAIC,EAAAA,SAASH,IAC/BI,GAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,GAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,GACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAQA,WAGhES,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAQA,KAEnE,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,GAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvHkI,mBAAqB7U,IAAD,CAAayI,QAAS,4CAA6C1D,MAAO6P,GAAmBjN,YAAY3H,O,gBCxBrIU,eAAe4M,GAAaC,GACxB,aAAapB,GAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BA6B1B,MAAMW,GAAkB,KACb,CACHE,WAAY,GACZC,UAAWvC,GACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,ICjCWjN,GDiCX,IACIwN,YAAY,EACZD,MAFW,GAGXE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACL4O,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,mDACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,8BAA6B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACpE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS0I,mBAAmB9P,GACxCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,mCAAoC,4DAGpD,IAAIA,EAAAA,GAAY,mCAAoC,2BAA6BpL,EAAEwB,WAIrG1F,0BAAyB,YAAE4O,IAAe,MAAEvK,IACxC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS0I,mBAAmB9P,GAC9C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,mCAAoC,4DAGpD,IAAIA,EAAAA,GAAY,qCAAsC,6BAA+BpL,EAAEwB,cC/GjH,SAAWnF,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,MAAMC,GACTC,YAAYC,EAAY,IACpBjB,KAAKkB,QAAU,GACflB,KAAKmB,aAAe,KACpBnB,KAAKoB,eAAiB,KACtBpB,KAAKqB,iBAAmB,IAAIC,IAC5BtB,KAAKuB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpB3B,KAAK4B,gBAAmB/B,IACpBG,KAAKmB,aAAetB,GAExBG,KAAK6B,kBAAoB,CACrB,CAACf,GAAYgB,MAAQC,GAAoB,OAAVA,GAAoC,kBAAVA,GAAuC,kBAAVA,EAA8CA,EAAxBC,KAAKC,UAAUF,GAC3H,CAACjB,GAAYoB,UAAYH,GAAUI,OAAOC,KAAKL,GAAS,IAAIM,QAAO,CAACxC,EAAMyC,KACtEzC,EAAK0C,OAAOD,EAAKP,EAAMO,IAChBzC,IACR,IAAIqC,UACP,CAACpB,GAAY0B,YAAcT,GAAU/B,KAAKyC,cAAcV,IAE5D/B,KAAK0C,kBAAqBC,IACtB,GAAI3C,KAAKqB,iBAAiBuB,IAAID,GAAc,CACxC,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAClD,OAAIE,EACOA,EAAgBE,YAE3B,EAEJ,MAAMF,EAAkB,IAAIG,gBAE5B,OADAhD,KAAKqB,iBAAiB4B,IAAIN,EAAaE,GAChCA,EAAgBE,QAE3B/C,KAAKkD,aAAgBP,IACjB,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAC9CE,IACAA,EAAgBM,QAChBnD,KAAKqB,iBAAiB+B,OAAOT,KAGrC3C,KAAKqD,QAAU,EAAGC,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,EAAMC,KAAAA,EAAMC,MAAAA,EAAOC,OAAAA,EAAS,OAAQzC,QAAAA,EAASyB,YAAAA,KAAgBiB,MACzF,MAAMC,EAAgBN,GAAUvD,KAAKoB,gBAAkBpB,KAAKoB,eAAepB,KAAKmB,eAAkB,GAC5F2C,EAAgB9D,KAAK+D,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS1D,KAAKyC,cAAciB,GAC1CO,EAAmBjE,KAAK6B,kBAAkB4B,GAAQ3C,GAAYgB,MACpE,OAAOoC,MAAO,GAAEhD,GAAWlB,KAAKkB,SAAW,KAAKsC,IAAOQ,EAAe,IAAGA,IAAgB,KAAM,IACxFF,EACHrC,QAAS,IACDgC,GAAQA,IAAS3C,GAAYoB,SAAW,CAAE,eAAgBuB,GAAS,MACnEK,EAAcrC,SAAW,IAEjCsB,OAAQJ,EAAc3C,KAAK0C,kBAAkBC,QAAe,EAC5DW,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOW,EAAiBX,KAC9Ea,MAAK5D,MAAAA,IACJ,MAAM6D,EAAIC,EACVD,EAAEvE,KAAO,KACTuE,EAAEE,MAAQ,KACV,MAAMzE,QAAawE,EAASV,KACvBQ,MAAMtE,IACHuE,EAAEG,GACFH,EAAEvE,KAAOA,EAGTuE,EAAEE,MAAQzE,EAEPuE,KAENI,OAAOC,IACRL,EAAEE,MAAQG,EACHL,KAKX,GAHIzB,GACA3C,KAAKqB,iBAAiB+B,OAAOT,IAE5B0B,EAASE,GACV,MAAM1E,EACV,OAAOA,MAGfsC,OAAOuC,OAAO1E,KAAMiB,GAExB0D,cAAcjB,EAAOpB,GACjB,MAAMsC,EAAQlB,EAAMpB,GACpB,OAAQuC,mBAAmBvC,GACvB,IACAuC,mBAAmBC,MAAMC,QAAQH,GAASA,EAAMI,KAAK,KAAwB,kBAAVJ,EAAqBA,EAAS,GAAEA,KAE3GnC,cAAcwC,GACV,MAAMvB,EAAQuB,GAAY,GACpB7C,EAAOD,OAAOC,KAAKsB,GAAOwB,QAAQ5C,GAAQ,qBAAuBoB,EAAMpB,KAC7E,OAAOF,EACF+C,KAAK7C,GAA8B,kBAAfoB,EAAMpB,IAAsBwC,MAAMC,QAAQrB,EAAMpB,IAEnEtC,KAAK2E,cAAcjB,EAAOpB,GAD1BtC,KAAKyC,cAAciB,EAAMpB,MAE1B0C,KAAK,KAEdI,eAAeH,GACX,MAAMjB,EAAchE,KAAKyC,cAAcwC,GACvC,OAAOjB,EAAe,IAAGA,IAAgB,GAE7CD,mBAAmBsB,EAASC,GACxB,MAAO,IACAtF,KAAKuB,iBACL8D,KACCC,GAAW,GACf7D,QAAS,IACDzB,KAAKuB,cAAcE,SAAW,MAC9B4D,EAAQ5D,SAAW,MAClB6D,GAAWA,EAAQ7D,SAAY,MAS7C,MAAM8D,WAAYxE,GACrBC,cACIwE,SAASC,WASTzF,KAAK2U,mBAAqB,CAAC/Q,EAAS,KAAO5D,KAAKqD,QAAQ,CACpDG,KAAO,8CACPmC,OAAQ,MACRhC,OAAQ,UACLC,IAWP5D,KAAK4U,4BAA8B,CAACC,EAAkBjR,EAAS,KAAO5D,KAAKqD,QAAQ,CAC/EG,KAAO,2CAA0CqR,YACjDlP,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAK8U,uBAAyB,CAACD,EAAkBE,EAAkBnR,EAAS,KAAO5D,KAAKqD,QAAQ,CAC5FG,KAAO,2CAA0CqR,aAA4BE,IAC7EpP,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKgV,yBAA2B,CAACH,EAAkBjR,EAAS,KAAO5D,KAAKqD,QAAQ,CAC5EG,KAAO,2CAA0CqR,eACjDlP,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKiV,8BAAgC,CAACJ,EAAkBjR,EAAS,KAAO5D,KAAKqD,QAAQ,CACjFG,KAAO,2CAA0CqR,qBACjDlP,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKyQ,YAAc,CAAC7M,EAAS,KAAO5D,KAAKqD,QAAQ,CAC7CG,KAAO,sCACPmC,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKkV,yBAA2B,CAACH,EAAkBnR,EAAS,KAAO5D,KAAKqD,QAAQ,CAC5EG,KAAO,2CAA0CuR,eACjDpP,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKmV,iCAAmC,CAACJ,EAAkBnR,EAAS,KAAO5D,KAAKqD,QAAQ,CACpFG,KAAO,2CAA0CuR,wBACjDpP,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKoV,sBAAwB,CAACL,EAAkBrR,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAChFG,KAAO,2CAA0CuR,YACjDpP,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,KCtQR,MACDgN,GAAW,CAAEN,MAAO,GAAIxE,OAAQ,IACzB+E,GAAO,CAChB7K,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQqK,OACRpK,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqK,OAEd,KAAnBrK,EAAQ6F,QACR5F,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6F,QAE9B5F,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2K,IACrB,MAAOnK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqK,MAAQ7J,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6F,OAASrF,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQ5H,OAAOtB,EAAOkJ,OAG9BrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASpD,OAAOtB,EAAO0E,QAG/B7F,EAAQ6F,OAAS,GAEd7F,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQqK,QAAwB/I,EAAI+I,MAAQrK,EAAQqK,YACjCzJ,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,QAC/CvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQlJ,EAAOkJ,MAGvBrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,GAEd7F,IAGToP,GAAc,CAAE/E,MAAO,GAAIxE,OAAQ,IAC5BwJ,GAAU,CACnBtP,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQqK,OACRpK,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqK,OAEd,KAAnBrK,EAAQ6F,QACR5F,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6F,QAE9B5F,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoP,IACrB,MAAO5O,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqK,MAAQ7J,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6F,OAASrF,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoP,IAarB,YAZqBxO,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQ5H,OAAOtB,EAAOkJ,OAG9BrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASpD,OAAOtB,EAAO0E,QAG/B7F,EAAQ6F,OAAS,GAEd7F,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQqK,QAAwB/I,EAAI+I,MAAQrK,EAAQqK,YACjCzJ,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,QAC/CvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoP,IAarB,YAZqBxO,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQlJ,EAAOkJ,MAGvBrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,GAEd7F,ICxITsP,GAA4B,CAAEV,iBAAkB,GAAIW,gBAAiB,IAC9DC,GAAwB,CACjCzP,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANiC,KAA7BF,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAEL,KAA5B5O,EAAQuP,iBACRtP,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQuP,iBAE9BtP,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKsP,IACrB,MAAO9O,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQuP,gBAAkB/O,EAAO+B,SACjC,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKsP,IAarB,YAZgC1O,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEAhO,IAA3BO,EAAOoO,iBAA4D,OAA3BpO,EAAOoO,gBAC/CvP,EAAQuP,gBAAkB9M,OAAOtB,EAAOoO,iBAGxCvP,EAAQuP,gBAAkB,GAEvBvP,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF6BV,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC9ChO,IAA5BZ,EAAQuP,kBAAkCjO,EAAIiO,gBAAkBvP,EAAQuP,iBACjEjO,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKsP,IAarB,YAZgC1O,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEAhO,IAA3BO,EAAOoO,iBAA4D,OAA3BpO,EAAOoO,gBAC/CvP,EAAQuP,gBAAkBpO,EAAOoO,gBAGjCvP,EAAQuP,gBAAkB,GAEvBvP,IAmCTyP,GAAiC,CAAEb,iBAAkB,GAAIE,iBAAkB,IACpEY,GAA6B,CACtC3P,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANiC,KAA7BF,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAEJ,KAA7B5O,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,kBAE9B7O,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKyP,IACrB,MAAOjP,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKyP,IAarB,YAZgC7O,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,GAExB9O,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF6BV,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC7ChO,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,kBACnExN,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKyP,IAarB,YAZgC7O,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,GAExB9O,IAmCT2P,GAAqC,CAAEb,iBAAkB,IAClDc,GAAiC,CAC1C7P,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAIrB,MAHiC,KAA7BF,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,kBAE9B7O,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2P,IACrB,MAAOnP,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2P,IAOrB,YANgC/O,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,GAExB9O,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAEZ,YAD6BV,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,kBACnExN,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2P,IAOrB,YANgC/O,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,GAExB9O,IAmCT6P,GAA2B,CAAEC,UAAW,IACjCC,GAAuB,CAChChQ,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQ6F,OACpB+E,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAK7C,MAH0B,KAAtBhE,EAAQ8P,WACR7P,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8P,WAE9B7P,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6P,IACrB7P,EAAQ6F,OAAS,GACjB,MAAOrF,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6F,OAAOtC,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WAC/C,MACJ,KAAK,EACDH,EAAQ8P,UAAYtP,EAAO+B,SAC3B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6P,IAErB,GADA7P,EAAQ6F,OAAS,QACKjF,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAAA,SAAcpM,IAS1C,YANyBoC,IAArBO,EAAO2O,WAAgD,OAArB3O,EAAO2O,UACzC9P,EAAQ8P,UAAYrN,OAAOtB,EAAO2O,WAGlC9P,EAAQ8P,UAAY,GAEjB9P,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,OAPItB,EAAQ6F,OACRvE,EAAIuE,OAAS7F,EAAQ6F,OAAO3G,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAG7DU,EAAIuE,OAAS,QAEKjF,IAAtBZ,EAAQ8P,YAA4BxO,EAAIwO,UAAY9P,EAAQ8P,WACrDxO,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6P,IAErB,GADA7P,EAAQ6F,OAAS,QACKjF,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAAA,YAAiBpM,IAS7C,YANyBoC,IAArBO,EAAO2O,WAAgD,OAArB3O,EAAO2O,UACzC9P,EAAQ8P,UAAY3O,EAAO2O,UAG3B9P,EAAQ8P,UAAY,GAEjB9P,ICpWf,MAAMwF,GAAQ,CACV,CAAC,oDAAqDuK,IACtD,CAAC,8DAA+DH,IAChE,CAAC,qDAAsDJ,IACvD,CAAC,0DAA2DE,KAEnDjK,GAAqB,IAAI1D,MAAM,sBAC/B2D,GAAW,IAAIC,EAAAA,SAASH,IAC/BI,GAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,GAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,GACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAQA,WAGhES,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAQA,KAEnE,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,GAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvHyJ,qBAAuBpW,IAAD,CAAayI,QAAS,oDAAqD1D,MAAOoR,GAAqBxO,YAAY3H,KACzIqW,+BAAiCrW,IAAD,CAAayI,QAAS,8DAA+D1D,MAAOiR,GAA+BrO,YAAY3H,KACvKsW,sBAAwBtW,IAAD,CAAayI,QAAS,qDAAsD1D,MAAO6Q,GAAsBjO,YAAY3H,KAC5IuW,2BAA6BvW,IAAD,CAAayI,QAAS,0DAA2D1D,MAAO+Q,GAA2BnO,YAAY3H,OAG7J+M,GAAcrM,OAAS2L,KAAMA,GAAS,CAAEA,KAAM,2BACzC,IAAI3G,GAAI,CAAErE,QAASgL,ICnCxB4E,GAAa,CAAEuF,aAAc,GAAIC,mBAAoB,GAAIC,oBAAqB,GAAIC,qBAAqB,GAChGxF,GAAS,CAClBhL,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,MAZ6B,KAAzBF,EAAQoQ,cACRnQ,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQoQ,cAEF,KAA/BpQ,EAAQqQ,oBACRpQ,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqQ,oBAED,KAAhCrQ,EAAQsQ,qBACRrQ,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsQ,sBAED,IAAhCtQ,EAAQuQ,qBACRtQ,EAAOE,OAAO,IAAI+K,KAAKlL,EAAQuQ,qBAE5BtQ,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6K,IACrB,MAAOrK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQoQ,aAAe5P,EAAO+B,SAC9B,MACJ,KAAK,EACDvC,EAAQqQ,mBAAqB7P,EAAO+B,SACpC,MACJ,KAAK,EACDvC,EAAQsQ,oBAAsB9P,EAAO+B,SACrC,MACJ,KAAK,EACDvC,EAAQuQ,oBAAsB/P,EAAO0K,OACrC,MACJ,QACI1K,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6K,IAyBrB,YAxB4BjK,IAAxBO,EAAOiP,cAAsD,OAAxBjP,EAAOiP,aAC5CpQ,EAAQoQ,aAAe3N,OAAOtB,EAAOiP,cAGrCpQ,EAAQoQ,aAAe,QAEOxP,IAA9BO,EAAOkP,oBAAkE,OAA9BlP,EAAOkP,mBAClDrQ,EAAQqQ,mBAAqB5N,OAAOtB,EAAOkP,oBAG3CrQ,EAAQqQ,mBAAqB,QAEEzP,IAA/BO,EAAOmP,qBAAoE,OAA/BnP,EAAOmP,oBACnDtQ,EAAQsQ,oBAAsB7N,OAAOtB,EAAOmP,qBAG5CtQ,EAAQsQ,oBAAsB,QAEC1P,IAA/BO,EAAOoP,qBAAoE,OAA/BpP,EAAOoP,oBACnDvQ,EAAQuQ,oBAAsBpF,QAAQhK,EAAOoP,qBAG7CvQ,EAAQuQ,qBAAsB,EAE3BvQ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJyBV,IAAzBZ,EAAQoQ,eAA+B9O,EAAI8O,aAAepQ,EAAQoQ,mBACnCxP,IAA/BZ,EAAQqQ,qBAAqC/O,EAAI+O,mBAAqBrQ,EAAQqQ,yBAC9CzP,IAAhCZ,EAAQsQ,sBAAsChP,EAAIgP,oBAAsBtQ,EAAQsQ,0BAChD1P,IAAhCZ,EAAQuQ,sBAAsCjP,EAAIiP,oBAAsBvQ,EAAQuQ,qBACzEjP,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6K,IAyBrB,YAxB4BjK,IAAxBO,EAAOiP,cAAsD,OAAxBjP,EAAOiP,aAC5CpQ,EAAQoQ,aAAejP,EAAOiP,aAG9BpQ,EAAQoQ,aAAe,QAEOxP,IAA9BO,EAAOkP,oBAAkE,OAA9BlP,EAAOkP,mBAClDrQ,EAAQqQ,mBAAqBlP,EAAOkP,mBAGpCrQ,EAAQqQ,mBAAqB,QAEEzP,IAA/BO,EAAOmP,qBAAoE,OAA/BnP,EAAOmP,oBACnDtQ,EAAQsQ,oBAAsBnP,EAAOmP,oBAGrCtQ,EAAQsQ,oBAAsB,QAEC1P,IAA/BO,EAAOoP,qBAAoE,OAA/BpP,EAAOoP,oBACnDvQ,EAAQuQ,oBAAsBpP,EAAOoP,oBAGrCvQ,EAAQuQ,qBAAsB,EAE3BvQ,IAGTwQ,GAAiC,CAAEC,eAAgB,GAC5CC,GAA6B,CACtC3Q,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQ2Q,sBACpBtB,GAAAA,OAAelK,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAKhD,OAH+B,IAA3BhE,EAAQyQ,gBACRxQ,EAAOE,OAAO,IAAIA,OAAOH,EAAQyQ,gBAE9BxQ,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKwQ,IACrBxQ,EAAQ2Q,sBAAwB,GAChC,MAAOnQ,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ2Q,sBAAsBpN,KAAK8L,GAAAA,OAAe7O,EAAQA,EAAOL,WACjE,MACJ,KAAK,EACDH,EAAQyQ,eAAiBjQ,EAAOL,SAChC,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKwQ,IAErB,GADAxQ,EAAQ2Q,sBAAwB,QACK/P,IAAjCO,EAAOwP,uBAAwE,OAAjCxP,EAAOwP,sBACrD,IAAK,MAAMnS,KAAK2C,EAAOwP,sBACnB3Q,EAAQ2Q,sBAAsBpN,KAAK8L,GAAAA,SAAiB7Q,IAS5D,YAN8BoC,IAA1BO,EAAOsP,gBAA0D,OAA1BtP,EAAOsP,eAC9CzQ,EAAQyQ,eAAiBrP,OAAOD,EAAOsP,gBAGvCzQ,EAAQyQ,eAAiB,EAEtBzQ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,OAPItB,EAAQ2Q,sBACRrP,EAAIqP,sBAAwB3Q,EAAQ2Q,sBAAsBzR,KAAKV,GAAOA,EAAI6Q,GAAAA,OAAe7Q,QAAKoC,IAG9FU,EAAIqP,sBAAwB,QAEL/P,IAA3BZ,EAAQyQ,iBAAiCnP,EAAImP,eAAiBzQ,EAAQyQ,gBAC/DnP,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKwQ,IAErB,GADAxQ,EAAQ2Q,sBAAwB,QACK/P,IAAjCO,EAAOwP,uBAAwE,OAAjCxP,EAAOwP,sBACrD,IAAK,MAAMnS,KAAK2C,EAAOwP,sBACnB3Q,EAAQ2Q,sBAAsBpN,KAAK8L,GAAAA,YAAoB7Q,IAS/D,YAN8BoC,IAA1BO,EAAOsP,gBAA0D,OAA1BtP,EAAOsP,eAC9CzQ,EAAQyQ,eAAiBtP,EAAOsP,eAGhCzQ,EAAQyQ,eAAiB,EAEtBzQ,IAGT4Q,GAA8B,CAAEC,OAAQ,GACjCC,GAA0B,CACnC/Q,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQ+Q,QACpB1B,GAAAA,OAAelK,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAKhD,OAHuB,IAAnBhE,EAAQ6Q,QACR5Q,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQ6Q,QAE9B5Q,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK4Q,IACrB5Q,EAAQ+Q,QAAU,GAClB,MAAOvQ,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+Q,QAAQxN,KAAK8L,GAAAA,OAAe7O,EAAQA,EAAOL,WACnD,MACJ,KAAK,EACDH,EAAQ6Q,OAAS7P,GAAaR,EAAOwQ,UACrC,MACJ,QACIxQ,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK4Q,IAErB,GADA5Q,EAAQ+Q,QAAU,QACKnQ,IAAnBO,EAAO4P,SAA4C,OAAnB5P,EAAO4P,QACvC,IAAK,MAAMvS,KAAK2C,EAAO4P,QACnB/Q,EAAQ+Q,QAAQxN,KAAK8L,GAAAA,SAAiB7Q,IAS9C,YANsBoC,IAAlBO,EAAO0P,QAA0C,OAAlB1P,EAAO0P,OACtC7Q,EAAQ6Q,OAASzP,OAAOD,EAAO0P,QAG/B7Q,EAAQ6Q,OAAS,EAEd7Q,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,OAPItB,EAAQ+Q,QACRzP,EAAIyP,QAAU/Q,EAAQ+Q,QAAQ7R,KAAKV,GAAOA,EAAI6Q,GAAAA,OAAe7Q,QAAKoC,IAGlEU,EAAIyP,QAAU,QAECnQ,IAAnBZ,EAAQ6Q,SAAyBvP,EAAIuP,OAAS7Q,EAAQ6Q,QAC/CvP,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK4Q,IAErB,GADA5Q,EAAQ+Q,QAAU,QACKnQ,IAAnBO,EAAO4P,SAA4C,OAAnB5P,EAAO4P,QACvC,IAAK,MAAMvS,KAAK2C,EAAO4P,QACnB/Q,EAAQ+Q,QAAQxN,KAAK8L,GAAAA,YAAoB7Q,IASjD,YANsBoC,IAAlBO,EAAO0P,QAA0C,OAAlB1P,EAAO0P,OACtC7Q,EAAQ6Q,OAAS1P,EAAO0P,OAGxB7Q,EAAQ6Q,OAAS,EAEd7Q,IAGTiR,GAAqC,GAC9BC,GAAiC,CAC1CnR,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQmR,WACpB9B,GAAAA,OAAelK,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAEhD,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKiR,IACrBjR,EAAQmR,WAAa,GACrB,MAAO3Q,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmR,WAAW5N,KAAK8L,GAAAA,OAAe7O,EAAQA,EAAOL,WACtD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKiR,IAErB,GADAjR,EAAQmR,WAAa,QACKvQ,IAAtBO,EAAOgQ,YAAkD,OAAtBhQ,EAAOgQ,WAC1C,IAAK,MAAM3S,KAAK2C,EAAOgQ,WACnBnR,EAAQmR,WAAW5N,KAAK8L,GAAAA,SAAiB7Q,IAGjD,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAOZ,OANItB,EAAQmR,WACR7P,EAAI6P,WAAanR,EAAQmR,WAAWjS,KAAKV,GAAOA,EAAI6Q,GAAAA,OAAe7Q,QAAKoC,IAGxEU,EAAI6P,WAAa,GAEd7P,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKiR,IAErB,GADAjR,EAAQmR,WAAa,QACKvQ,IAAtBO,EAAOgQ,YAAkD,OAAtBhQ,EAAOgQ,WAC1C,IAAK,MAAM3S,KAAK2C,EAAOgQ,WACnBnR,EAAQmR,WAAW5N,KAAK8L,GAAAA,YAAoB7Q,IAGpD,OAAOwB,IAGToR,GAAkC,GAC3BC,GAA8B,CACvCtR,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQ+Q,QACpB1B,GAAAA,OAAelK,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAEhD,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoR,IACrBpR,EAAQ+Q,QAAU,GAClB,MAAOvQ,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+Q,QAAQxN,KAAK8L,GAAAA,OAAe7O,EAAQA,EAAOL,WACnD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoR,IAErB,GADApR,EAAQ+Q,QAAU,QACKnQ,IAAnBO,EAAO4P,SAA4C,OAAnB5P,EAAO4P,QACvC,IAAK,MAAMvS,KAAK2C,EAAO4P,QACnB/Q,EAAQ+Q,QAAQxN,KAAK8L,GAAAA,SAAiB7Q,IAG9C,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAOZ,OANItB,EAAQ+Q,QACRzP,EAAIyP,QAAU/Q,EAAQ+Q,QAAQ7R,KAAKV,GAAOA,EAAI6Q,GAAAA,OAAe7Q,QAAKoC,IAGlEU,EAAIyP,QAAU,GAEXzP,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoR,IAErB,GADApR,EAAQ+Q,QAAU,QACKnQ,IAAnBO,EAAO4P,SAA4C,OAAnB5P,EAAO4P,QACvC,IAAK,MAAMvS,KAAK2C,EAAO4P,QACnB/Q,EAAQ+Q,QAAQxN,KAAK8L,GAAAA,YAAoB7Q,IAGjD,OAAOwB,IAGTsR,GAA0B,CAAEC,gBAAiB,EAAGC,SAAU,IACnDC,GAAsB,CAC/B1R,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANgC,IAA5BF,EAAQuR,iBACRtR,EAAOE,OAAO,GAAG6Q,OAAOhR,EAAQuR,iBAEX,KAArBvR,EAAQwR,UACRvR,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQwR,UAE9BvR,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKsR,IACrB,MAAO9Q,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQuR,gBAAkBvQ,GAAaR,EAAOwQ,UAC9C,MACJ,KAAK,EACDhR,EAAQwR,SAAWhR,EAAO+B,SAC1B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKsR,IAarB,YAZ+B1Q,IAA3BO,EAAOoQ,iBAA4D,OAA3BpQ,EAAOoQ,gBAC/CvR,EAAQuR,gBAAkBnQ,OAAOD,EAAOoQ,iBAGxCvR,EAAQuR,gBAAkB,OAEN3Q,IAApBO,EAAOqQ,UAA8C,OAApBrQ,EAAOqQ,SACxCxR,EAAQwR,SAAW/O,OAAOtB,EAAOqQ,UAGjCxR,EAAQwR,SAAW,GAEhBxR,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF4BV,IAA5BZ,EAAQuR,kBAAkCjQ,EAAIiQ,gBAAkBvR,EAAQuR,sBACnD3Q,IAArBZ,EAAQwR,WAA2BlQ,EAAIkQ,SAAWxR,EAAQwR,UACnDlQ,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKsR,IAarB,YAZ+B1Q,IAA3BO,EAAOoQ,iBAA4D,OAA3BpQ,EAAOoQ,gBAC/CvR,EAAQuR,gBAAkBpQ,EAAOoQ,gBAGjCvR,EAAQuR,gBAAkB,OAEN3Q,IAApBO,EAAOqQ,UAA8C,OAApBrQ,EAAOqQ,SACxCxR,EAAQwR,SAAWrQ,EAAOqQ,SAG1BxR,EAAQwR,SAAW,GAEhBxR,IAGT0R,GAA2B,GACpBC,GAAuB,CAChC5R,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQ4R,qBACpBH,GAAoB1R,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE5D,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK0R,IACrB1R,EAAQ4R,qBAAuB,GAC/B,MAAOpR,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4R,qBAAqBrO,KAAKkO,GAAoBnR,OAAOE,EAAQA,EAAOL,WAC5E,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK0R,IAErB,GADA1R,EAAQ4R,qBAAuB,QACKhR,IAAhCO,EAAOyQ,sBAAsE,OAAhCzQ,EAAOyQ,qBACpD,IAAK,MAAMpT,KAAK2C,EAAOyQ,qBACnB5R,EAAQ4R,qBAAqBrO,KAAKkO,GAAoBvQ,SAAS1C,IAGvE,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAOZ,OANItB,EAAQ4R,qBACRtQ,EAAIsQ,qBAAuB5R,EAAQ4R,qBAAqB1S,KAAKV,GAAOA,EAAIiT,GAAoBpQ,OAAO7C,QAAKoC,IAGxGU,EAAIsQ,qBAAuB,GAExBtQ,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK0R,IAErB,GADA1R,EAAQ4R,qBAAuB,QACKhR,IAAhCO,EAAOyQ,sBAAsE,OAAhCzQ,EAAOyQ,qBACpD,IAAK,MAAMpT,KAAK2C,EAAOyQ,qBACnB5R,EAAQ4R,qBAAqBrO,KAAKkO,GAAoBlQ,YAAY/C,IAG1E,OAAOwB,IAGT6R,GAAc,GACPC,GAAU,CACnB/R,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQ+R,cACpB1C,GAAAA,OAAelK,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAEhD,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6R,IACrB7R,EAAQ+R,cAAgB,GACxB,MAAOvR,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+R,cAAcxO,KAAK8L,GAAAA,OAAe7O,EAAQA,EAAOL,WACzD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6R,IAErB,GADA7R,EAAQ+R,cAAgB,QACKnR,IAAzBO,EAAO4Q,eAAwD,OAAzB5Q,EAAO4Q,cAC7C,IAAK,MAAMvT,KAAK2C,EAAO4Q,cACnB/R,EAAQ+R,cAAcxO,KAAK8L,GAAAA,SAAiB7Q,IAGpD,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAOZ,OANItB,EAAQ+R,cACRzQ,EAAIyQ,cAAgB/R,EAAQ+R,cAAc7S,KAAKV,GAAOA,EAAI6Q,GAAAA,OAAe7Q,QAAKoC,IAG9EU,EAAIyQ,cAAgB,GAEjBzQ,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6R,IAErB,GADA7R,EAAQ+R,cAAgB,QACKnR,IAAzBO,EAAO4Q,eAAwD,OAAzB5Q,EAAO4Q,cAC7C,IAAK,MAAMvT,KAAK2C,EAAO4Q,cACnB/R,EAAQ+R,cAAcxO,KAAK8L,GAAAA,YAAoB7Q,IAGvD,OAAOwB,IAGTgS,GAAiC,CAAEC,MAAO,GAAI9F,YAAa,GAAI+F,UAAW,IACnEC,GAA6B,CACtCpS,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACC,KAAlBF,EAAQiS,OACRhS,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQiS,OAET,KAAxBjS,EAAQmM,aACRlM,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQmM,aAEX,KAAtBnM,EAAQkS,WACRjS,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQkS,WAErC,IAAK,MAAM/M,KAAKnF,EAAQ6F,OACpB+E,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKgS,IACrBhS,EAAQ6F,OAAS,GACjB,MAAOrF,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQiS,MAAQzR,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQmM,YAAc3L,EAAO+B,SAC7B,MACJ,KAAK,EACDvC,EAAQkS,UAAY1R,EAAO+B,SAC3B,MACJ,KAAK,EACDvC,EAAQ6F,OAAOtC,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WAC/C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKgS,IAoBrB,GAnBAhS,EAAQ6F,OAAS,QACIjF,IAAjBO,EAAO8Q,OAAwC,OAAjB9Q,EAAO8Q,MACrCjS,EAAQiS,MAAQxP,OAAOtB,EAAO8Q,OAG9BjS,EAAQiS,MAAQ,QAEOrR,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAc1J,OAAOtB,EAAOgL,aAGpCnM,EAAQmM,YAAc,QAEDvL,IAArBO,EAAO+Q,WAAgD,OAArB/Q,EAAO+Q,UACzClS,EAAQkS,UAAYzP,OAAOtB,EAAO+Q,WAGlClS,EAAQkS,UAAY,QAEFtR,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAAA,SAAcpM,IAG1C,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAUZ,YATkBV,IAAlBZ,EAAQiS,QAAwB3Q,EAAI2Q,MAAQjS,EAAQiS,YAC5BrR,IAAxBZ,EAAQmM,cAA8B7K,EAAI6K,YAAcnM,EAAQmM,kBAC1CvL,IAAtBZ,EAAQkS,YAA4B5Q,EAAI4Q,UAAYlS,EAAQkS,WACxDlS,EAAQ6F,OACRvE,EAAIuE,OAAS7F,EAAQ6F,OAAO3G,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAG7DU,EAAIuE,OAAS,GAEVvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKgS,IAoBrB,GAnBAhS,EAAQ6F,OAAS,QACIjF,IAAjBO,EAAO8Q,OAAwC,OAAjB9Q,EAAO8Q,MACrCjS,EAAQiS,MAAQ9Q,EAAO8Q,MAGvBjS,EAAQiS,MAAQ,QAEOrR,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAchL,EAAOgL,YAG7BnM,EAAQmM,YAAc,QAEDvL,IAArBO,EAAO+Q,WAAgD,OAArB/Q,EAAO+Q,UACzClS,EAAQkS,UAAY/Q,EAAO+Q,UAG3BlS,EAAQkS,UAAY,QAEFtR,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAAA,YAAiBpM,IAG7C,OAAOwB,IAGToS,GAA4B,CAAEC,eAAgB,EAAGC,MAAO,GAAIC,OAAQ,GAC7DC,GAAwB,CACjCzS,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,OAT+B,IAA3BF,EAAQqS,gBACRpS,EAAOE,OAAO,GAAG6Q,OAAOhR,EAAQqS,gBAEd,KAAlBrS,EAAQsS,OACRrS,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsS,OAEd,IAAnBtS,EAAQuS,QACRtS,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQuS,QAE9BtS,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoS,IACrB,MAAO5R,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqS,eAAiBrR,GAAaR,EAAOwQ,UAC7C,MACJ,KAAK,EACDhR,EAAQsS,MAAQ9R,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQuS,OAASvR,GAAaR,EAAOwQ,UACrC,MACJ,QACIxQ,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoS,IAmBrB,YAlB8BxR,IAA1BO,EAAOkR,gBAA0D,OAA1BlR,EAAOkR,eAC9CrS,EAAQqS,eAAiBjR,OAAOD,EAAOkR,gBAGvCrS,EAAQqS,eAAiB,OAERzR,IAAjBO,EAAOmR,OAAwC,OAAjBnR,EAAOmR,MACrCtS,EAAQsS,MAAQ7P,OAAOtB,EAAOmR,OAG9BtS,EAAQsS,MAAQ,QAEE1R,IAAlBO,EAAOoR,QAA0C,OAAlBpR,EAAOoR,OACtCvS,EAAQuS,OAASnR,OAAOD,EAAOoR,QAG/BvS,EAAQuS,OAAS,EAEdvS,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAH2BV,IAA3BZ,EAAQqS,iBAAiC/Q,EAAI+Q,eAAiBrS,EAAQqS,qBACpDzR,IAAlBZ,EAAQsS,QAAwBhR,EAAIgR,MAAQtS,EAAQsS,YACjC1R,IAAnBZ,EAAQuS,SAAyBjR,EAAIiR,OAASvS,EAAQuS,QAC/CjR,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoS,IAmBrB,YAlB8BxR,IAA1BO,EAAOkR,gBAA0D,OAA1BlR,EAAOkR,eAC9CrS,EAAQqS,eAAiBlR,EAAOkR,eAGhCrS,EAAQqS,eAAiB,OAERzR,IAAjBO,EAAOmR,OAAwC,OAAjBnR,EAAOmR,MACrCtS,EAAQsS,MAAQnR,EAAOmR,MAGvBtS,EAAQsS,MAAQ,QAEE1R,IAAlBO,EAAOoR,QAA0C,OAAlBpR,EAAOoR,OACtCvS,EAAQuS,OAASpR,EAAOoR,OAGxBvS,EAAQuS,OAAS,EAEdvS,IAGTyS,GAAgC,CAAE3D,iBAAkB,IAC7C4D,GAA4B,CACrC3S,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACY,KAA7BF,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,kBAErC,IAAK,MAAM3J,KAAKnF,EAAQ2S,OACpBtD,GAAAA,OAAelK,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAEhD,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKyS,IACrBzS,EAAQ2S,OAAS,GACjB,MAAOnS,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ2S,OAAOpP,KAAK8L,GAAAA,OAAe7O,EAAQA,EAAOL,WAClD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKyS,IAQrB,GAPAzS,EAAQ2S,OAAS,QACe/R,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAOwR,QAA0C,OAAlBxR,EAAOwR,OACtC,IAAK,MAAMnU,KAAK2C,EAAOwR,OACnB3S,EAAQ2S,OAAOpP,KAAK8L,GAAAA,SAAiB7Q,IAG7C,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAP6BV,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,kBACtE9O,EAAQ2S,OACRrR,EAAIqR,OAAS3S,EAAQ2S,OAAOzT,KAAKV,GAAOA,EAAI6Q,GAAAA,OAAe7Q,QAAKoC,IAGhEU,EAAIqR,OAAS,GAEVrR,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKyS,IAQrB,GAPAzS,EAAQ2S,OAAS,QACe/R,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAOwR,QAA0C,OAAlBxR,EAAOwR,OACtC,IAAK,MAAMnU,KAAK2C,EAAOwR,OACnB3S,EAAQ2S,OAAOpP,KAAK8L,GAAAA,YAAoB7Q,IAGhD,OAAOwB,IAGT4S,GAA4C,CAAEX,MAAO,GAAI9F,YAAa,GAAI+F,UAAW,GAAIrM,OAAQ,GAAIgN,QAAS,IACvGC,GAAwC,CACjD/S,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAgBrB,MAfsB,KAAlBF,EAAQiS,OACRhS,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQiS,OAET,KAAxBjS,EAAQmM,aACRlM,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQmM,aAEX,KAAtBnM,EAAQkS,WACRjS,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQkS,WAEd,KAAnBlS,EAAQ6F,QACR5F,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6F,QAEb,KAApB7F,EAAQ6S,SACR5S,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6S,SAE9B5S,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK4S,IACrB,MAAOpS,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQiS,MAAQzR,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQmM,YAAc3L,EAAO+B,SAC7B,MACJ,KAAK,EACDvC,EAAQkS,UAAY1R,EAAO+B,SAC3B,MACJ,KAAK,EACDvC,EAAQ6F,OAASrF,EAAO+B,SACxB,MACJ,KAAK,EACDvC,EAAQ6S,QAAUrS,EAAO+B,SACzB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK4S,IA+BrB,YA9BqBhS,IAAjBO,EAAO8Q,OAAwC,OAAjB9Q,EAAO8Q,MACrCjS,EAAQiS,MAAQxP,OAAOtB,EAAO8Q,OAG9BjS,EAAQiS,MAAQ,QAEOrR,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAc1J,OAAOtB,EAAOgL,aAGpCnM,EAAQmM,YAAc,QAEDvL,IAArBO,EAAO+Q,WAAgD,OAArB/Q,EAAO+Q,UACzClS,EAAQkS,UAAYzP,OAAOtB,EAAO+Q,WAGlClS,EAAQkS,UAAY,QAEFtR,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASpD,OAAOtB,EAAO0E,QAG/B7F,EAAQ6F,OAAS,QAEEjF,IAAnBO,EAAO0R,SAA4C,OAAnB1R,EAAO0R,QACvC7S,EAAQ6S,QAAUpQ,OAAOtB,EAAO0R,SAGhC7S,EAAQ6S,QAAU,GAEf7S,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAMZ,YALkBV,IAAlBZ,EAAQiS,QAAwB3Q,EAAI2Q,MAAQjS,EAAQiS,YAC5BrR,IAAxBZ,EAAQmM,cAA8B7K,EAAI6K,YAAcnM,EAAQmM,kBAC1CvL,IAAtBZ,EAAQkS,YAA4B5Q,EAAI4Q,UAAYlS,EAAQkS,gBACzCtR,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,aAClCjF,IAApBZ,EAAQ6S,UAA0BvR,EAAIuR,QAAU7S,EAAQ6S,SACjDvR,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK4S,IA+BrB,YA9BqBhS,IAAjBO,EAAO8Q,OAAwC,OAAjB9Q,EAAO8Q,MACrCjS,EAAQiS,MAAQ9Q,EAAO8Q,MAGvBjS,EAAQiS,MAAQ,QAEOrR,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAchL,EAAOgL,YAG7BnM,EAAQmM,YAAc,QAEDvL,IAArBO,EAAO+Q,WAAgD,OAArB/Q,EAAO+Q,UACzClS,EAAQkS,UAAY/Q,EAAO+Q,UAG3BlS,EAAQkS,UAAY,QAEFtR,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,QAEEjF,IAAnBO,EAAO0R,SAA4C,OAAnB1R,EAAO0R,QACvC7S,EAAQ6S,QAAU1R,EAAO0R,QAGzB7S,EAAQ6S,QAAU,GAEf7S,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCv9BG,MACD4Q,GAA4B,CAAEnE,iBAAkB,GAAIW,gBAAiB,IAC9DyD,GAAwB,CACjCjT,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANiC,KAA7BF,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAEL,KAA5B5O,EAAQuP,iBACRtP,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQuP,iBAE9BtP,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK+S,IACrB,MAAOvS,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQuP,gBAAkB/O,EAAO+B,SACjC,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK+S,IAarB,YAZgCnS,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEAhO,IAA3BO,EAAOoO,iBAA4D,OAA3BpO,EAAOoO,gBAC/CvP,EAAQuP,gBAAkB9M,OAAOtB,EAAOoO,iBAGxCvP,EAAQuP,gBAAkB,GAEvBvP,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF6BV,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC9ChO,IAA5BZ,EAAQuP,kBAAkCjO,EAAIiO,gBAAkBvP,EAAQuP,iBACjEjO,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK+S,IAarB,YAZgCnS,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEAhO,IAA3BO,EAAOoO,iBAA4D,OAA3BpO,EAAOoO,gBAC/CvP,EAAQuP,gBAAkBpO,EAAOoO,gBAGjCvP,EAAQuP,gBAAkB,GAEvBvP,IAGTiT,GAAwC,CAAEnE,iBAAkB,IACrDoE,GAAoC,CAC7CnT,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACY,KAA7BF,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,kBAErC,IAAK,MAAM3J,KAAKnF,EAAQmT,mBACpB9D,GAAAA,OAAelK,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAEhD,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKiT,IACrBjT,EAAQmT,mBAAqB,GAC7B,MAAO3S,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQmT,mBAAmB5P,KAAK8L,GAAAA,OAAe7O,EAAQA,EAAOL,WAC9D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKiT,IAQrB,GAPAjT,EAAQmT,mBAAqB,QACGvS,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAEGlO,IAA9BO,EAAOgS,oBAAkE,OAA9BhS,EAAOgS,mBAClD,IAAK,MAAM3U,KAAK2C,EAAOgS,mBACnBnT,EAAQmT,mBAAmB5P,KAAK8L,GAAAA,SAAiB7Q,IAGzD,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAP6BV,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,kBACtE9O,EAAQmT,mBACR7R,EAAI6R,mBAAqBnT,EAAQmT,mBAAmBjU,KAAKV,GAAOA,EAAI6Q,GAAAA,OAAe7Q,QAAKoC,IAGxFU,EAAI6R,mBAAqB,GAEtB7R,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKiT,IAQrB,GAPAjT,EAAQmT,mBAAqB,QACGvS,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAEGlO,IAA9BO,EAAOgS,oBAAkE,OAA9BhS,EAAOgS,mBAClD,IAAK,MAAM3U,KAAK2C,EAAOgS,mBACnBnT,EAAQmT,mBAAmB5P,KAAK8L,GAAAA,YAAoB7Q,IAG5D,OAAOwB,IAGToT,GAA2C,CAAEtE,iBAAkB,IACxDuE,GAAuC,CAChDtT,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANiC,KAA7BF,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,uBAETlO,IAAxBZ,EAAQsT,aACRpC,GAA+BnR,OAAOC,EAAQsT,YAAarT,EAAOE,OAAO,IAAI4D,QAAQC,SAElF/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoT,IACrB,MAAO5S,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQsT,YAAcpC,GAA+B5Q,OAAOE,EAAQA,EAAOL,UAC3E,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoT,IAarB,YAZgCxS,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAEJlO,IAAvBO,EAAOmS,aAAoD,OAAvBnS,EAAOmS,YAC3CtT,EAAQsT,YAAcpC,GAA+BhQ,SAASC,EAAOmS,aAGrEtT,EAAQsT,iBAAc1S,EAEnBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF6BV,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,uBAClDlO,IAAxBZ,EAAQsT,cAA8BhS,EAAIgS,YAActT,EAAQsT,YAAcpC,GAA+B7P,OAAOrB,EAAQsT,kBAAe1S,GACpIU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoT,IAarB,YAZgCxS,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAEJlO,IAAvBO,EAAOmS,aAAoD,OAAvBnS,EAAOmS,YAC3CtT,EAAQsT,YAAcpC,GAA+B3P,YAAYJ,EAAOmS,aAGxEtT,EAAQsT,iBAAc1S,EAEnBZ,IAGTuT,GAAuC,CAAEzE,iBAAkB,GAAI+B,OAAQ,GAChE2C,GAAmC,CAC5CzT,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATiC,KAA7BF,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,kBAEd,IAAnB9O,EAAQ6Q,QACR5Q,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQ6Q,aAEbjQ,IAApBZ,EAAQ+Q,SACRL,GAA2B3Q,OAAOC,EAAQ+Q,QAAS9Q,EAAOE,OAAO,IAAI4D,QAAQC,SAE1E/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKuT,IACrB,MAAO/S,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ6Q,OAAS7P,GAAaR,EAAOwQ,UACrC,MACJ,KAAK,EACDhR,EAAQ+Q,QAAUL,GAA2BpQ,OAAOE,EAAQA,EAAOL,UACnE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKuT,IAmBrB,YAlBgC3S,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAO0P,QAA0C,OAAlB1P,EAAO0P,OACtC7Q,EAAQ6Q,OAASzP,OAAOD,EAAO0P,QAG/B7Q,EAAQ6Q,OAAS,OAEEjQ,IAAnBO,EAAO4P,SAA4C,OAAnB5P,EAAO4P,QACvC/Q,EAAQ+Q,QAAUL,GAA2BxP,SAASC,EAAO4P,SAG7D/Q,EAAQ+Q,aAAUnQ,EAEfZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAH6BV,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,uBACvDlO,IAAnBZ,EAAQ6Q,SAAyBvP,EAAIuP,OAAS7Q,EAAQ6Q,aAClCjQ,IAApBZ,EAAQ+Q,UAA0BzP,EAAIyP,QAAU/Q,EAAQ+Q,QAAUL,GAA2BrP,OAAOrB,EAAQ+Q,cAAWnQ,GAChHU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKuT,IAmBrB,YAlBgC3S,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAO0P,QAA0C,OAAlB1P,EAAO0P,OACtC7Q,EAAQ6Q,OAAS1P,EAAO0P,OAGxB7Q,EAAQ6Q,OAAS,OAEEjQ,IAAnBO,EAAO4P,SAA4C,OAAnB5P,EAAO4P,QACvC/Q,EAAQ+Q,QAAUL,GAA2BnP,YAAYJ,EAAO4P,SAGhE/Q,EAAQ+Q,aAAUnQ,EAEfZ,IAGTyT,GAAoC,CAAE3E,iBAAkB,IACjD4E,GAAgC,CACzC3T,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANiC,KAA7BF,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,uBAEblO,IAApBZ,EAAQ+Q,SACRD,GAAwB/Q,OAAOC,EAAQ+Q,QAAS9Q,EAAOE,OAAO,IAAI4D,QAAQC,SAEvE/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKyT,IACrB,MAAOjT,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ+Q,QAAUD,GAAwBxQ,OAAOE,EAAQA,EAAOL,UAChE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKyT,IAarB,YAZgC7S,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAERlO,IAAnBO,EAAO4P,SAA4C,OAAnB5P,EAAO4P,QACvC/Q,EAAQ+Q,QAAUD,GAAwB5P,SAASC,EAAO4P,SAG1D/Q,EAAQ+Q,aAAUnQ,EAEfZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF6BV,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,uBACtDlO,IAApBZ,EAAQ+Q,UAA0BzP,EAAIyP,QAAU/Q,EAAQ+Q,QAAUD,GAAwBzP,OAAOrB,EAAQ+Q,cAAWnQ,GAC7GU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKyT,IAarB,YAZgC7S,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAERlO,IAAnBO,EAAO4P,SAA4C,OAAnB5P,EAAO4P,QACvC/Q,EAAQ+Q,QAAUD,GAAwBvP,YAAYJ,EAAO4P,SAG7D/Q,EAAQ+Q,aAAUnQ,EAEfZ,IAGT2T,GAAkC,CAAE/E,iBAAkB,GAAIE,iBAAkB,IACrE8E,GAA8B,CACvC7T,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATiC,KAA7BF,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAEJ,KAA7B5O,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,uBAERlO,IAAzBZ,EAAQ6T,cACRrB,GAAsBzS,OAAOC,EAAQ6T,aAAc5T,EAAOE,OAAO,IAAI4D,QAAQC,SAE1E/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2T,IACrB,MAAOnT,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ6T,aAAerB,GAAsBlS,OAAOE,EAAQA,EAAOL,UACnE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2T,IAmBrB,YAlBgC/S,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAEHlO,IAAxBO,EAAO0S,cAAsD,OAAxB1S,EAAO0S,aAC5C7T,EAAQ6T,aAAerB,GAAsBtR,SAASC,EAAO0S,cAG7D7T,EAAQ6T,kBAAejT,EAEpBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAH6BV,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC7ChO,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,uBACjDlO,IAAzBZ,EAAQ6T,eAA+BvS,EAAIuS,aAAe7T,EAAQ6T,aAAerB,GAAsBnR,OAAOrB,EAAQ6T,mBAAgBjT,GAC/HU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2T,IAmBrB,YAlBgC/S,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAEHlO,IAAxBO,EAAO0S,cAAsD,OAAxB1S,EAAO0S,aAC5C7T,EAAQ6T,aAAerB,GAAsBjR,YAAYJ,EAAO0S,cAGhE7T,EAAQ6T,kBAAejT,EAEpBZ,IAGT8T,GAAgC,CAAEhF,iBAAkB,GAAIyD,OAAQ,EAAG1B,OAAQ,GACpEkD,GAA4B,CACrChU,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,MAZiC,KAA7BF,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,kBAEd,IAAnB9O,EAAQuS,QACRtS,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQuS,QAEd,IAAnBvS,EAAQ6Q,QACR5Q,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQ6Q,aAEDjQ,IAAhCZ,EAAQgU,qBACRvC,GAAoB1R,OAAOC,EAAQgU,oBAAqB/T,EAAOE,OAAO,IAAI4D,QAAQC,SAE/E/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8T,IACrB,MAAOtT,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQuS,OAASvR,GAAaR,EAAOwQ,UACrC,MACJ,KAAK,EACDhR,EAAQ6Q,OAAS7P,GAAaR,EAAOwQ,UACrC,MACJ,KAAK,EACDhR,EAAQgU,oBAAsBvC,GAAoBnR,OAAOE,EAAQA,EAAOL,UACxE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8T,IAyBrB,YAxBgClT,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAOoR,QAA0C,OAAlBpR,EAAOoR,OACtCvS,EAAQuS,OAASnR,OAAOD,EAAOoR,QAG/BvS,EAAQuS,OAAS,OAEC3R,IAAlBO,EAAO0P,QAA0C,OAAlB1P,EAAO0P,OACtC7Q,EAAQ6Q,OAASzP,OAAOD,EAAO0P,QAG/B7Q,EAAQ6Q,OAAS,OAEcjQ,IAA/BO,EAAO6S,qBAAoE,OAA/B7S,EAAO6S,oBACnDhU,EAAQgU,oBAAsBvC,GAAoBvQ,SAASC,EAAO6S,qBAGlEhU,EAAQgU,yBAAsBpT,EAE3BZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAMZ,YAL6BV,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,uBACvDlO,IAAnBZ,EAAQuS,SAAyBjR,EAAIiR,OAASvS,EAAQuS,aACnC3R,IAAnBZ,EAAQ6Q,SAAyBvP,EAAIuP,OAAS7Q,EAAQ6Q,aACtBjQ,IAAhCZ,EAAQgU,sBACH1S,EAAI0S,oBAAsBhU,EAAQgU,oBAAsBvC,GAAoBpQ,OAAOrB,EAAQgU,0BAAuBpT,GAChHU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8T,IAyBrB,YAxBgClT,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAOoR,QAA0C,OAAlBpR,EAAOoR,OACtCvS,EAAQuS,OAASpR,EAAOoR,OAGxBvS,EAAQuS,OAAS,OAEC3R,IAAlBO,EAAO0P,QAA0C,OAAlB1P,EAAO0P,OACtC7Q,EAAQ6Q,OAAS1P,EAAO0P,OAGxB7Q,EAAQ6Q,OAAS,OAEcjQ,IAA/BO,EAAO6S,qBAAoE,OAA/B7S,EAAO6S,oBACnDhU,EAAQgU,oBAAsBvC,GAAoBlQ,YAAYJ,EAAO6S,qBAGrEhU,EAAQgU,yBAAsBpT,EAE3BZ,IA2Qf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,c,gBCv0BJ7H,eAAe4M,GAAaC,GACxB,aAAapB,GAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BAG1B7M,eAAe8M,GAAgBD,GAC3B,aAAaR,GAAY,CACrBV,KAAMkB,EAAY,0BAG1B,SAASE,GAAa1I,EAAO2I,GACzB,IAAK,IAAIC,KAAQrL,OAAOC,KAAKmL,GACrBzI,MAAMC,QAAQwI,EAAYC,IAC1B5I,EAAM4I,GAAQ,IAAI5I,EAAM4I,MAAUD,EAAYC,IAG9C5I,EAAM4I,GAAQD,EAAYC,GAGlC,OAAO5I,EAEX,SAAS6I,GAAaC,GAClB,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,IAAK,MAAOtL,EAAKsC,KAAUzC,OAAO0L,QAAQH,GAAW,CACjD,IAAII,EAAQ,GACZA,EAAMlO,KAAO0C,EACbwL,EAAMrK,YAAcmB,EACpB+I,EAAUC,OAAOpE,KAAKsE,GAE1B,OAAOH,EAEX,MAAMI,GAAkB,KACb,CACHiD,OAAQ,GACRsG,4BAA6B,GAC7B4C,oBAAqB,GACrBC,iBAAkB,GAClBC,kBAAmB,GACnBC,uBAAwB,GACxBC,oBAAqB,GACrBC,yBAA0B,GAC1BC,cAAe,GACfvM,WAAY,CACR+C,OAAQvD,GAAauD,GAAAA,YAAmB,KACxC2F,2BAA4BlJ,GAAakJ,GAA2BnP,YAAY,KAChFuP,wBAAyBtJ,GAAasJ,GAAwBvP,YAAY,KAC1E2P,+BAAgC1J,GAAa0J,GAA+B3P,YAAY,KACxF8P,4BAA6B7J,GAAa6J,GAA4B9P,YAAY,KAClFkQ,oBAAqBjK,GAAaiK,GAAoBlQ,YAAY,KAClEoQ,qBAAsBnK,GAAamK,GAAqBpQ,YAAY,KACpEuQ,QAAStK,GAAasK,GAAQvQ,YAAY,KAC1C4Q,2BAA4B3K,GAAa2K,GAA2B5Q,YAAY,KAChFiR,sBAAuBhL,GAAagL,GAAsBjR,YAAY,KACtEmR,0BAA2BlL,GAAakL,GAA0BnR,YAAY,KAC9EuR,sCAAuCtL,GAAasL,GAAsCvR,YAAY,KACtGyR,sBAAuBxL,GAAawL,GAAsBzR,YAAY,KACtE2R,kCAAmC1L,GAAa0L,GAAkC3R,YAAY,KAC9F8R,qCAAsC7L,GAAa6L,GAAqC9R,YAAY,KACpGiS,iCAAkChM,GAAagM,GAAiCjS,YAAY,KAC5FmS,8BAA+BlM,GAAakM,GAA8BnS,YAAY,KACtFqS,4BAA6BpM,GAAaoM,GAA4BrS,YAAY,KAClFwS,0BAA2BvM,GAAauM,GAA0BxS,YAAY,MAElF0G,UAAWvC,GACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,IClFWjN,GDkFX,IACIwN,YAAY,EACZD,MAFW,GAGXE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACL+T,UAAY7F,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACjCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2C,OAAOhP,KAAKC,UAAU2B,KAAY,IAEnD6W,+BAAiCpM,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACtDA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMiJ,4BAA4BtV,KAAKC,UAAU2B,KAAY,IAExE8W,uBAAyBrM,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC9CA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM6L,oBAAoBlY,KAAKC,UAAU2B,KAAY,IAEhE+W,oBAAsBtM,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC3CA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM8L,iBAAiBnY,KAAKC,UAAU2B,KAAY,IAE7DgX,qBAAuBvM,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC5CA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM+L,kBAAkBpY,KAAKC,UAAU2B,KAAY,IAE9DiX,0BAA4BxM,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACjDA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMgM,uBAAuBrY,KAAKC,UAAU2B,KAAY,IAEnEkX,uBAAyBzM,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC9CA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMiM,oBAAoBtY,KAAKC,UAAU2B,KAAY,IAEhEmX,4BAA8B1M,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACnDA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMkM,yBAAyBvY,KAAKC,UAAU2B,KAAY,IAErEoX,iBAAmB3M,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACxCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMmM,cAAcxY,KAAKC,UAAU2B,KAAY,IAE1DmL,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,yDACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,mBAAkB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAClI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY6D,eAAe5Q,KAI9C,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,SAAUpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACnEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,cAAeC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC3FvD,EAAQ,aAAa,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAElE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,0BAA2B,kDAAoDpL,EAAEwB,WAG/G1F,wCAAuC,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACvJ,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYuI,iCAAiC7S,EAAI2Y,oBAAoBpb,KAIxF,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,8BAA+BpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACxFmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,mCAAoCC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAChHvD,EAAQ,kCAAkC,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEvF,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,+CAAgD,kDAAoDpL,EAAEwB,WAGpI1F,gCAA+B,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAC/I,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYsI,yBAAyB5S,EAAI2Y,oBAAoBpb,KAIhF,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,sBAAuBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAChFmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,2BAA4BC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACxGvD,EAAQ,0BAA0B,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAE/E,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,uCAAwC,kDAAoDpL,EAAEwB,WAG5H1F,6BAA4B,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAC5I,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYwI,sBAAsB9S,EAAI2Y,kBAAmBvX,IAAQ7D,KACpF,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYwI,sBAAsB9S,EAAI2Y,kBAAmB,IAAKvX,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC9I+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,mBAAoBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC7EmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,wBAAyBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACrGvD,EAAQ,uBAAuB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAE5E,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,oCAAqC,kDAAoDpL,EAAEwB,WAGzH1F,8BAA6B,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAC7I,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYkI,uBAAuBxS,EAAI4Y,kBAAmB5Y,EAAI2Y,oBAAoBpb,KAIrG,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,oBAAqBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC9EmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,yBAA0BC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACtGvD,EAAQ,wBAAwB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAE7E,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,qCAAsC,kDAAoDpL,EAAEwB,WAG1H1F,mCAAkC,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAClJ,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYgI,4BAA4BtS,EAAI4Y,oBAAoBrb,KAInF,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,yBAA0BpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACnFmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,8BAA+BC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC3GvD,EAAQ,6BAA6B,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAElF,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,0CAA2C,kDAAoDpL,EAAEwB,WAG/H1F,gCAA+B,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAC/I,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYoI,yBAAyB1S,EAAI4Y,oBAAoBrb,KAIhF,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,sBAAuBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAChFmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,2BAA4BC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACxGvD,EAAQ,0BAA0B,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAE/E,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,uCAAwC,kDAAoDpL,EAAEwB,WAG5H1F,qCAAoC,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACpJ,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYqI,8BAA8B3S,EAAI4Y,oBAAoBrb,KAIrF,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,2BAA4BpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACrFmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,gCAAiCC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC7GvD,EAAQ,+BAA+B,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEpF,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,4CAA6C,kDAAoDpL,EAAEwB,WAGjI1F,0BAAyB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACzI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY+H,sBAAsB9U,KAIrD,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,gBAAiBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC1EmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,qBAAsBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAClGvD,EAAQ,oBAAoB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEzE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,iCAAkC,kDAAoDpL,EAAEwB,WAGtH1F,gCAA+B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACtE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASiK,qBAAqBrR,GAC1CuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,qCAAsC,4DAGtD,IAAIA,EAAAA,GAAY,qCAAsC,2BAA6BpL,EAAEwB,WAIvG1F,0CAAyC,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAChF,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASkK,+BAA+BtR,GACpDuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,+CAAgD,4DAGhE,IAAIA,EAAAA,GAAY,+CAAgD,2BAA6BpL,EAAEwB,WAIjH1F,iCAAgC,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACvE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASmK,sBAAsBvR,GAC3CuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,sCAAuC,4DAGvD,IAAIA,EAAAA,GAAY,sCAAuC,2BAA6BpL,EAAEwB,WAIxG1F,sCAAqC,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC5E,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASoK,2BAA2BxR,GAChDuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,2CAA4C,4DAG5D,IAAIA,EAAAA,GAAY,2CAA4C,2BAA6BpL,EAAEwB,WAI7G1F,4BAA2B,YAAE4O,IAAe,MAAEvK,IAC1C,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASiK,qBAAqBrR,GAChD,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,qCAAsC,4DAGtD,IAAIA,EAAAA,GAAY,uCAAwC,6BAA+BpL,EAAEwB,WAI3G1F,sCAAqC,YAAE4O,IAAe,MAAEvK,IACpD,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASkK,+BAA+BtR,GAC1D,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,+CAAgD,4DAGhE,IAAIA,EAAAA,GAAY,iDAAkD,6BAA+BpL,EAAEwB,WAIrH1F,6BAA4B,YAAE4O,IAAe,MAAEvK,IAC3C,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASmK,sBAAsBvR,GACjD,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,sCAAuC,4DAGvD,IAAIA,EAAAA,GAAY,wCAAyC,6BAA+BpL,EAAEwB,WAI5G1F,kCAAiC,YAAE4O,IAAe,MAAEvK,IAChD,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASoK,2BAA2BxR,GACtD,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,2CAA4C,4DAG5D,IAAIA,EAAAA,GAAY,6CAA8C,6BAA+BpL,EAAEwB,cCxbzH,SAAWnF,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,MAAMC,GACTC,YAAYC,EAAY,IACpBjB,KAAKkB,QAAU,GACflB,KAAKmB,aAAe,KACpBnB,KAAKoB,eAAiB,KACtBpB,KAAKqB,iBAAmB,IAAIC,IAC5BtB,KAAKuB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpB3B,KAAK4B,gBAAmB/B,IACpBG,KAAKmB,aAAetB,GAExBG,KAAK6B,kBAAoB,CACrB,CAACf,GAAYgB,MAAQC,GAAoB,OAAVA,GAAoC,kBAAVA,GAAuC,kBAAVA,EAA8CA,EAAxBC,KAAKC,UAAUF,GAC3H,CAACjB,GAAYoB,UAAYH,GAAUI,OAAOC,KAAKL,GAAS,IAAIM,QAAO,CAACxC,EAAMyC,KACtEzC,EAAK0C,OAAOD,EAAKP,EAAMO,IAChBzC,IACR,IAAIqC,UACP,CAACpB,GAAY0B,YAAcT,GAAU/B,KAAKyC,cAAcV,IAE5D/B,KAAK0C,kBAAqBC,IACtB,GAAI3C,KAAKqB,iBAAiBuB,IAAID,GAAc,CACxC,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAClD,OAAIE,EACOA,EAAgBE,YAE3B,EAEJ,MAAMF,EAAkB,IAAIG,gBAE5B,OADAhD,KAAKqB,iBAAiB4B,IAAIN,EAAaE,GAChCA,EAAgBE,QAE3B/C,KAAKkD,aAAgBP,IACjB,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAC9CE,IACAA,EAAgBM,QAChBnD,KAAKqB,iBAAiB+B,OAAOT,KAGrC3C,KAAKqD,QAAU,EAAGC,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,EAAMC,KAAAA,EAAMC,MAAAA,EAAOC,OAAAA,EAAS,OAAQzC,QAAAA,EAASyB,YAAAA,KAAgBiB,MACzF,MAAMC,EAAgBN,GAAUvD,KAAKoB,gBAAkBpB,KAAKoB,eAAepB,KAAKmB,eAAkB,GAC5F2C,EAAgB9D,KAAK+D,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS1D,KAAKyC,cAAciB,GAC1CO,EAAmBjE,KAAK6B,kBAAkB4B,GAAQ3C,GAAYgB,MACpE,OAAOoC,MAAO,GAAEhD,GAAWlB,KAAKkB,SAAW,KAAKsC,IAAOQ,EAAe,IAAGA,IAAgB,KAAM,IACxFF,EACHrC,QAAS,IACDgC,GAAQA,IAAS3C,GAAYoB,SAAW,CAAE,eAAgBuB,GAAS,MACnEK,EAAcrC,SAAW,IAEjCsB,OAAQJ,EAAc3C,KAAK0C,kBAAkBC,QAAe,EAC5DW,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOW,EAAiBX,KAC9Ea,MAAK5D,MAAAA,IACJ,MAAM6D,EAAIC,EACVD,EAAEvE,KAAO,KACTuE,EAAEE,MAAQ,KACV,MAAMzE,QAAawE,EAASV,KACvBQ,MAAMtE,IACHuE,EAAEG,GACFH,EAAEvE,KAAOA,EAGTuE,EAAEE,MAAQzE,EAEPuE,KAENI,OAAOC,IACRL,EAAEE,MAAQG,EACHL,KAKX,GAHIzB,GACA3C,KAAKqB,iBAAiB+B,OAAOT,IAE5B0B,EAASE,GACV,MAAM1E,EACV,OAAOA,MAGfsC,OAAOuC,OAAO1E,KAAMiB,GAExB0D,cAAcjB,EAAOpB,GACjB,MAAMsC,EAAQlB,EAAMpB,GACpB,OAAQuC,mBAAmBvC,GACvB,IACAuC,mBAAmBC,MAAMC,QAAQH,GAASA,EAAMI,KAAK,KAAwB,kBAAVJ,EAAqBA,EAAS,GAAEA,KAE3GnC,cAAcwC,GACV,MAAMvB,EAAQuB,GAAY,GACpB7C,EAAOD,OAAOC,KAAKsB,GAAOwB,QAAQ5C,GAAQ,qBAAuBoB,EAAMpB,KAC7E,OAAOF,EACF+C,KAAK7C,GAA8B,kBAAfoB,EAAMpB,IAAsBwC,MAAMC,QAAQrB,EAAMpB,IAEnEtC,KAAK2E,cAAcjB,EAAOpB,GAD1BtC,KAAKyC,cAAciB,EAAMpB,MAE1B0C,KAAK,KAEdI,eAAeH,GACX,MAAMjB,EAAchE,KAAKyC,cAAcwC,GACvC,OAAOjB,EAAe,IAAGA,IAAgB,GAE7CD,mBAAmBsB,EAASC,GACxB,MAAO,IACAtF,KAAKuB,iBACL8D,KACCC,GAAW,GACf7D,QAAS,IACDzB,KAAKuB,cAAcE,SAAW,MAC9B4D,EAAQ5D,SAAW,MAClB6D,GAAWA,EAAQ7D,SAAY,MAS7C,MAAM8D,WAAYxE,GACrBC,cACIwE,SAASC,WASTzF,KAAKmb,iBAAmB,CAACzX,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACzDG,KAAO,oCACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKob,cAAgB,CAACC,EAAczX,EAAS,KAAO5D,KAAKqD,QAAQ,CAC7DG,KAAO,qCAAoC6X,IAC3C1V,OAAQ,MACRhC,OAAQ,UACLC,KCnKR,MACDyE,GAAU,CAAEC,QAAS,IACdC,GAAM,CACfvC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQqC,SACRpC,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqC,SAER,IAAzBrC,EAAQrB,MAAM4B,QACdN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQrB,OAE7BsB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoC,IACrB,MAAO5B,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqC,QAAU7B,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQrB,MAAQ6B,EAAOgC,QACvB,MACJ,QACIhC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoC,IAUrB,YATuBxB,IAAnBO,EAAOkB,SAA4C,OAAnBlB,EAAOkB,QACvCrC,EAAQqC,QAAUI,OAAOtB,EAAOkB,SAGhCrC,EAAQqC,QAAU,QAEDzB,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,QACrCqB,EAAQrB,MAAQ+D,GAAgBvB,EAAOxC,QAEpCqB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQqC,UAA0Bf,EAAIe,QAAUrC,EAAQqC,cACtCzB,IAAlBZ,EAAQrB,QAAwB2C,EAAI3C,MAAQgE,QAAkC/B,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aACvGa,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoC,IAarB,YAZuBxB,IAAnBO,EAAOkB,SAA4C,OAAnBlB,EAAOkB,QACvCrC,EAAQqC,QAAUlB,EAAOkB,QAGzBrC,EAAQqC,QAAU,QAEDzB,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,MACrCqB,EAAQrB,MAAQwC,EAAOxC,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,MAAMiB,GAAOpB,GAAWoB,MAAX,CAAqBC,GAAQrB,GAAWsB,OAAOC,KAAKF,EAAK,UAAUG,SAAS,WACzF,SAASN,GAAgBG,GACrB,MAAMI,EAAML,GAAKC,GACXK,EAAM,IAAIzC,WAAWwC,EAAI1C,QAC/B,IAAK,IAAI4C,EAAI,EAAGA,EAAIF,EAAI1C,SAAU4C,EAC9BD,EAAIC,GAAKF,EAAIG,WAAWD,GAE5B,OAAOD,EAEX,MAAMG,GAAO7B,GAAW6B,MAAX,CAAqBJ,GAAQzB,GAAWsB,OAAOC,KAAKE,EAAK,UAAUD,SAAS,WACzF,SAASL,GAAgBO,GACrB,MAAMD,EAAM,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAII,aAAcH,EAClCF,EAAIM,KAAKd,OAAOe,aAAaN,EAAIC,KAErC,OAAOE,GAAKJ,EAAIlE,KAAK,KC7FlB,MACDsW,GAAwB,CAAEC,UAAW,IAC9BC,GAAoB,CAC7BxV,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MAN0B,KAAtBF,EAAQsV,WACRrV,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsV,gBAEZ1U,IAArBZ,EAAQwV,UACRlT,GAAAA,OAAWtC,EAAQwV,SAAUvV,EAAOE,OAAO,IAAI4D,QAAQC,SAEpD/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKqV,IACrB,MAAO7U,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsV,UAAY9U,EAAO+B,SAC3B,MACJ,KAAK,EACDvC,EAAQwV,SAAWlT,GAAAA,OAAW9B,EAAQA,EAAOL,UAC7C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKqV,IAarB,YAZyBzU,IAArBO,EAAOmU,WAAgD,OAArBnU,EAAOmU,UACzCtV,EAAQsV,UAAY7S,OAAOtB,EAAOmU,WAGlCtV,EAAQsV,UAAY,QAEA1U,IAApBO,EAAOqU,UAA8C,OAApBrU,EAAOqU,SACxCxV,EAAQwV,SAAWlT,GAAAA,SAAanB,EAAOqU,UAGvCxV,EAAQwV,cAAW5U,EAEhBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFsBV,IAAtBZ,EAAQsV,YAA4BhU,EAAIgU,UAAYtV,EAAQsV,gBACvC1U,IAArBZ,EAAQwV,WAA2BlU,EAAIkU,SAAWxV,EAAQwV,SAAWlT,GAAAA,OAAWtC,EAAQwV,eAAY5U,GAC7FU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKqV,IAarB,YAZyBzU,IAArBO,EAAOmU,WAAgD,OAArBnU,EAAOmU,UACzCtV,EAAQsV,UAAYnU,EAAOmU,UAG3BtV,EAAQsV,UAAY,QAEA1U,IAApBO,EAAOqU,UAA8C,OAApBrU,EAAOqU,SACxCxV,EAAQwV,SAAWlT,GAAAA,YAAgBnB,EAAOqU,UAG1CxV,EAAQwV,cAAW5U,EAEhBZ,IA6Df,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWJH,GAAWoB,KASXpB,GAAW6B,KCnJxB,MAAMmC,GAAQ,CACV,CAAC,6CAA8C+P,KAEtC9P,GAAqB,IAAI1D,MAAM,sBAC/B2D,GAAW,IAAIC,EAAAA,SAASH,IAC/BI,GAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,GAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,GACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAQA,WAGhES,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAQA,KAEnE,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,GAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvHkP,kBAAoB7b,IAAD,CAAayI,QAAS,6CAA8C1D,MAAO4W,GAAkBhU,YAAY3H,OAG9H+M,GAAcrM,OAAS2L,KAAMA,GAAS,CAAEA,KAAM,2BACzC,IAAI3G,GAAI,CAAErE,QAASgL,IC3BxBtG,GAAgB,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,GAAY,CACrBC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANwB,IAApBF,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKL,IACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,GAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKL,IAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUwB,OAAOD,EAAOvB,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQuB,OAAOD,EAAOtB,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQJ,UAA0B0B,EAAI1B,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwByB,EAAIzB,MAAQG,EAAQH,OAC7CyB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKL,IAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUuB,EAAOvB,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQsB,EAAOtB,MAGvBG,EAAQH,MAAQ,EAEbG,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCzFG,MACDuT,GAAmB,CAAEnD,OAAQ,EAAGoD,MAAO,EAAGC,iBAAkB,IACrDC,GAAe,CACxB9V,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,OAZuB,IAAnBF,EAAQuS,QACRtS,EAAOE,OAAO,GAAGC,MAAMJ,EAAQuS,aAEd3R,IAAjBZ,EAAQ8V,MACRhW,GAAAA,OAAiBoE,GAAYlE,EAAQ8V,MAAO7V,EAAOE,OAAO,IAAI4D,QAAQC,SAEpD,IAAlBhE,EAAQ2V,OACR1V,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ2V,OAEH,KAA7B3V,EAAQ4V,kBACR3V,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4V,kBAE9B3V,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK0V,IACrB,MAAOlV,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQuS,OAASvR,GAAaR,EAAOJ,SACrC,MACJ,KAAK,EACDJ,EAAQ8V,KAAO3R,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WAC7D,MACJ,KAAK,EACDH,EAAQ2V,MAAQ3U,GAAaR,EAAOJ,SACpC,MACJ,KAAK,EACDJ,EAAQ4V,iBAAmBpV,EAAO+B,SAClC,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK0V,IAyBrB,YAxBsB9U,IAAlBO,EAAOoR,QAA0C,OAAlBpR,EAAOoR,OACtCvS,EAAQuS,OAASnR,OAAOD,EAAOoR,QAG/BvS,EAAQuS,OAAS,OAED3R,IAAhBO,EAAO2U,MAAsC,OAAhB3U,EAAO2U,KACpC9V,EAAQ8V,KAAO1R,GAAkBjD,EAAO2U,MAGxC9V,EAAQ8V,UAAOlV,OAEEA,IAAjBO,EAAOwU,OAAwC,OAAjBxU,EAAOwU,MACrC3V,EAAQ2V,MAAQvU,OAAOD,EAAOwU,OAG9B3V,EAAQ2V,MAAQ,OAEY/U,IAA5BO,EAAOyU,kBAA8D,OAA5BzU,EAAOyU,iBAChD5V,EAAQ4V,iBAAmBnT,OAAOtB,EAAOyU,kBAGzC5V,EAAQ4V,iBAAmB,GAExB5V,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJmBV,IAAnBZ,EAAQuS,SAAyBjR,EAAIiR,OAASvS,EAAQuS,aACrC3R,IAAjBZ,EAAQ8V,OAAuBxU,EAAIwU,UAAwBlV,IAAjBZ,EAAQ8V,KAAqB9V,EAAQ8V,KAAKzR,cAAgB,WAClFzD,IAAlBZ,EAAQ2V,QAAwBrU,EAAIqU,MAAQ3V,EAAQ2V,YACvB/U,IAA7BZ,EAAQ4V,mBAAmCtU,EAAIsU,iBAAmB5V,EAAQ4V,kBACnEtU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK0V,IAyBrB,YAxBsB9U,IAAlBO,EAAOoR,QAA0C,OAAlBpR,EAAOoR,OACtCvS,EAAQuS,OAASpR,EAAOoR,OAGxBvS,EAAQuS,OAAS,OAED3R,IAAhBO,EAAO2U,MAAsC,OAAhB3U,EAAO2U,KACpC9V,EAAQ8V,KAAO3U,EAAO2U,KAGtB9V,EAAQ8V,UAAOlV,OAEEA,IAAjBO,EAAOwU,OAAwC,OAAjBxU,EAAOwU,MACrC3V,EAAQ2V,MAAQxU,EAAOwU,MAGvB3V,EAAQ2V,MAAQ,OAEY/U,IAA5BO,EAAOyU,kBAA8D,OAA5BzU,EAAOyU,iBAChD5V,EAAQ4V,iBAAmBzU,EAAOyU,iBAGlC5V,EAAQ4V,iBAAmB,GAExB5V,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASuC,GAAYI,GACjB,MAAM1E,EAAU0E,EAAKC,UAAY,IAC3B1E,EAASyE,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAE3E,QAAAA,EAASC,MAAAA,GAEtB,SAASsE,GAAcK,GACnB,IAAIC,EAAqB,IAAZD,EAAE5E,QAEf,OADA6E,GAAUD,EAAE3E,MAAQ,IACb,IAAI6E,KAAKD,GAEpB,SAASL,GAAkBO,GACvB,OAAIA,aAAaD,KACNC,EAEW,kBAANA,EACL,IAAID,KAAKC,GAGTR,GAAcrE,GAAAA,SAAmB6E,IAGhD,SAAS3D,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,c,gBCpJJ7H,eAAe4M,GAAaC,GACxB,aAAapB,GAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BAG1B7M,eAAe8M,GAAgBD,GAC3B,aAAaR,GAAY,CACrBV,KAAMkB,EAAY,0BAG1B,SAASE,GAAa1I,EAAO2I,GACzB,IAAK,IAAIC,KAAQrL,OAAOC,KAAKmL,GACrBzI,MAAMC,QAAQwI,EAAYC,IAC1B5I,EAAM4I,GAAQ,IAAI5I,EAAM4I,MAAUD,EAAYC,IAG9C5I,EAAM4I,GAAQD,EAAYC,GAGlC,OAAO5I,EAEX,SAAS6I,GAAaC,GAClB,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,IAAK,MAAOtL,EAAKsC,KAAUzC,OAAO0L,QAAQH,GAAW,CACjD,IAAII,EAAQ,GACZA,EAAMlO,KAAO0C,EACbwL,EAAMrK,YAAcmB,EACpB+I,EAAUC,OAAOpE,KAAKsE,GAE1B,OAAOH,EAEX,MAAMI,GAAkB,KACb,CACHiO,SAAU,GACVC,YAAa,GACbhO,WAAY,CACR6N,aAAcrO,GAAaqO,GAAatU,YAAY,MAExD0G,UAAWvC,GACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,ICvCWjN,GDuCX,IACIwN,YAAY,EACZD,MAFW,GAGXE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACL+b,YAAc7N,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACnCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2N,SAASha,KAAKC,UAAU2B,KAAY,IAErDuY,eAAiB9N,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACtCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM4N,YAAYja,KAAKC,UAAU2B,KAAY,IAExDmL,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,qDACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,qBAAoB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACpI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYwO,cAAc9Y,EAAI8Z,gBAAgBvc,KAIjE,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,WAAYpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACrEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,gBAAiBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC7FvD,EAAQ,eAAe,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEpE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,4BAA6B,kDAAoDpL,EAAEwB,WAGjH1F,wBAAuB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACvI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYuO,iBAAiBzX,IAAQ7D,KACxD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYuO,iBAAiB,IAAKzX,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAClH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,cAAepB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACxEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,mBAAoBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAChGvD,EAAQ,kBAAkB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEvE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,+BAAgC,kDAAoDpL,EAAEwB,WAGpH1F,6BAA4B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACnE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS0P,kBAAkB9W,GACvCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,kCAAmC,4DAGnD,IAAIA,EAAAA,GAAY,kCAAmC,2BAA6BpL,EAAEwB,WAIpG1F,yBAAwB,YAAE4O,IAAe,MAAEvK,IACvC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS0P,kBAAkB9W,GAC7C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,kCAAmC,4DAGnD,IAAIA,EAAAA,GAAY,oCAAqC,6BAA+BpL,EAAEwB,cCjKhH,SAAWnF,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,MAAMC,GACTC,YAAYC,EAAY,IACpBjB,KAAKkB,QAAU,GACflB,KAAKmB,aAAe,KACpBnB,KAAKoB,eAAiB,KACtBpB,KAAKqB,iBAAmB,IAAIC,IAC5BtB,KAAKuB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpB3B,KAAK4B,gBAAmB/B,IACpBG,KAAKmB,aAAetB,GAExBG,KAAK6B,kBAAoB,CACrB,CAACf,GAAYgB,MAAQC,GAAoB,OAAVA,GAAoC,kBAAVA,GAAuC,kBAAVA,EAA8CA,EAAxBC,KAAKC,UAAUF,GAC3H,CAACjB,GAAYoB,UAAYH,GAAUI,OAAOC,KAAKL,GAAS,IAAIM,QAAO,CAACxC,EAAMyC,KACtEzC,EAAK0C,OAAOD,EAAKP,EAAMO,IAChBzC,IACR,IAAIqC,UACP,CAACpB,GAAY0B,YAAcT,GAAU/B,KAAKyC,cAAcV,IAE5D/B,KAAK0C,kBAAqBC,IACtB,GAAI3C,KAAKqB,iBAAiBuB,IAAID,GAAc,CACxC,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAClD,OAAIE,EACOA,EAAgBE,YAE3B,EAEJ,MAAMF,EAAkB,IAAIG,gBAE5B,OADAhD,KAAKqB,iBAAiB4B,IAAIN,EAAaE,GAChCA,EAAgBE,QAE3B/C,KAAKkD,aAAgBP,IACjB,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAC9CE,IACAA,EAAgBM,QAChBnD,KAAKqB,iBAAiB+B,OAAOT,KAGrC3C,KAAKqD,QAAU,EAAGC,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,EAAMC,KAAAA,EAAMC,MAAAA,EAAOC,OAAAA,EAAS,OAAQzC,QAAAA,EAASyB,YAAAA,KAAgBiB,MACzF,MAAMC,EAAgBN,GAAUvD,KAAKoB,gBAAkBpB,KAAKoB,eAAepB,KAAKmB,eAAkB,GAC5F2C,EAAgB9D,KAAK+D,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS1D,KAAKyC,cAAciB,GAC1CO,EAAmBjE,KAAK6B,kBAAkB4B,GAAQ3C,GAAYgB,MACpE,OAAOoC,MAAO,GAAEhD,GAAWlB,KAAKkB,SAAW,KAAKsC,IAAOQ,EAAe,IAAGA,IAAgB,KAAM,IACxFF,EACHrC,QAAS,IACDgC,GAAQA,IAAS3C,GAAYoB,SAAW,CAAE,eAAgBuB,GAAS,MACnEK,EAAcrC,SAAW,IAEjCsB,OAAQJ,EAAc3C,KAAK0C,kBAAkBC,QAAe,EAC5DW,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOW,EAAiBX,KAC9Ea,MAAK5D,MAAAA,IACJ,MAAM6D,EAAIC,EACVD,EAAEvE,KAAO,KACTuE,EAAEE,MAAQ,KACV,MAAMzE,QAAawE,EAASV,KACvBQ,MAAMtE,IACHuE,EAAEG,GACFH,EAAEvE,KAAOA,EAGTuE,EAAEE,MAAQzE,EAEPuE,KAENI,OAAOC,IACRL,EAAEE,MAAQG,EACHL,KAKX,GAHIzB,GACA3C,KAAKqB,iBAAiB+B,OAAOT,IAE5B0B,EAASE,GACV,MAAM1E,EACV,OAAOA,MAGfsC,OAAOuC,OAAO1E,KAAMiB,GAExB0D,cAAcjB,EAAOpB,GACjB,MAAMsC,EAAQlB,EAAMpB,GACpB,OAAQuC,mBAAmBvC,GACvB,IACAuC,mBAAmBC,MAAMC,QAAQH,GAASA,EAAMI,KAAK,KAAwB,kBAAVJ,EAAqBA,EAAS,GAAEA,KAE3GnC,cAAcwC,GACV,MAAMvB,EAAQuB,GAAY,GACpB7C,EAAOD,OAAOC,KAAKsB,GAAOwB,QAAQ5C,GAAQ,qBAAuBoB,EAAMpB,KAC7E,OAAOF,EACF+C,KAAK7C,GAA8B,kBAAfoB,EAAMpB,IAAsBwC,MAAMC,QAAQrB,EAAMpB,IAEnEtC,KAAK2E,cAAcjB,EAAOpB,GAD1BtC,KAAKyC,cAAciB,EAAMpB,MAE1B0C,KAAK,KAEdI,eAAeH,GACX,MAAMjB,EAAchE,KAAKyC,cAAcwC,GACvC,OAAOjB,EAAe,IAAGA,IAAgB,GAE7CD,mBAAmBsB,EAASC,GACxB,MAAO,IACAtF,KAAKuB,iBACL8D,KACCC,GAAW,GACf7D,QAAS,IACDzB,KAAKuB,cAAcE,SAAW,MAC9B4D,EAAQ5D,SAAW,MAClB6D,GAAWA,EAAQ7D,SAAY,MAS7C,MAAM8D,WAAYxE,GACrBC,cACIwE,SAASC,WASTzF,KAAKqc,eAAiB,CAACvR,EAASC,EAASnH,EAAS,KAAO5D,KAAKqD,QAAQ,CAClEG,KAAO,sCAAqCsH,KAAWC,IACvDpF,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKsc,gBAAkB,CAACvR,EAASrH,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACjEG,KAAO,uCAAsCuH,IAC7CpF,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,KCnKR,MACDyE,GAAU,CAAEC,QAAS,IACdC,GAAM,CACfvC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQqC,SACRpC,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqC,SAER,IAAzBrC,EAAQrB,MAAM4B,QACdN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQrB,OAE7BsB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoC,IACrB,MAAO5B,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqC,QAAU7B,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQrB,MAAQ6B,EAAOgC,QACvB,MACJ,QACIhC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoC,IAUrB,YATuBxB,IAAnBO,EAAOkB,SAA4C,OAAnBlB,EAAOkB,QACvCrC,EAAQqC,QAAUI,OAAOtB,EAAOkB,SAGhCrC,EAAQqC,QAAU,QAEDzB,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,QACrCqB,EAAQrB,MAAQ+D,GAAgBvB,EAAOxC,QAEpCqB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQqC,UAA0Bf,EAAIe,QAAUrC,EAAQqC,cACtCzB,IAAlBZ,EAAQrB,QAAwB2C,EAAI3C,MAAQgE,QAAkC/B,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aACvGa,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoC,IAarB,YAZuBxB,IAAnBO,EAAOkB,SAA4C,OAAnBlB,EAAOkB,QACvCrC,EAAQqC,QAAUlB,EAAOkB,QAGzBrC,EAAQqC,QAAU,QAEDzB,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,MACrCqB,EAAQrB,MAAQwC,EAAOxC,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,MAAMiB,GAAOpB,GAAWoB,MAAX,CAAqBC,GAAQrB,GAAWsB,OAAOC,KAAKF,EAAK,UAAUG,SAAS,WACzF,SAASN,GAAgBG,GACrB,MAAMI,EAAML,GAAKC,GACXK,EAAM,IAAIzC,WAAWwC,EAAI1C,QAC/B,IAAK,IAAI4C,EAAI,EAAGA,EAAIF,EAAI1C,SAAU4C,EAC9BD,EAAIC,GAAKF,EAAIG,WAAWD,GAE5B,OAAOD,EAEX,MAAMG,GAAO7B,GAAW6B,MAAX,CAAqBJ,GAAQzB,GAAWsB,OAAOC,KAAKE,EAAK,UAAUD,SAAS,WACzF,SAASL,GAAgBO,GACrB,MAAMD,EAAM,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAII,aAAcH,EAClCF,EAAIM,KAAKd,OAAOe,aAAaN,EAAIC,KAErC,OAAOE,GAAKJ,EAAIlE,KAAK,KC7FlB,MACDuX,GAAwB,CAAEzR,QAAS,GAAIC,QAAS,IACzCyR,GAAoB,CAC7BxW,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATwB,KAApBF,EAAQ6E,SACR5E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6E,SAEb,KAApB7E,EAAQ8E,SACR7E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8E,cAEXlE,IAAtBZ,EAAQwW,WACRlU,GAAAA,OAAWtC,EAAQwW,UAAWvW,EAAOE,OAAO,IAAI4D,QAAQC,SAErD/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKsW,IACrB,MAAO9V,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6E,QAAUrE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ8E,QAAUtE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQwW,UAAYlU,GAAAA,OAAW9B,EAAQA,EAAOL,UAC9C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKsW,IAmBrB,YAlBuB1V,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAUpC,OAAOtB,EAAO0D,SAGhC7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAUrC,OAAOtB,EAAO2D,SAGhC9E,EAAQ8E,QAAU,QAEGlE,IAArBO,EAAOqV,WAAgD,OAArBrV,EAAOqV,UACzCxW,EAAQwW,UAAYlU,GAAAA,SAAanB,EAAOqV,WAGxCxW,EAAQwW,eAAY5V,EAEjBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHoBV,IAApBZ,EAAQ6E,UAA0BvD,EAAIuD,QAAU7E,EAAQ6E,cACpCjE,IAApBZ,EAAQ8E,UAA0BxD,EAAIwD,QAAU9E,EAAQ8E,cAClClE,IAAtBZ,EAAQwW,YAA4BlV,EAAIkV,UAAYxW,EAAQwW,UAAYlU,GAAAA,OAAWtC,EAAQwW,gBAAa5V,GACjGU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKsW,IAmBrB,YAlBuB1V,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAU1D,EAAO0D,QAGzB7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAU3D,EAAO2D,QAGzB9E,EAAQ8E,QAAU,QAEGlE,IAArBO,EAAOqV,WAAgD,OAArBrV,EAAOqV,UACzCxW,EAAQwW,UAAYlU,GAAAA,YAAgBnB,EAAOqV,WAG3CxW,EAAQwW,eAAY5V,EAEjBZ,IAmCTyW,GAAyB,CAAE5R,QAAS,GAAIC,QAAS,IAC1C4R,GAAqB,CAC9B3W,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQ6E,SACR5E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6E,SAEb,KAApB7E,EAAQ8E,SACR7E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8E,SAE9B7E,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKyW,IACrB,MAAOjW,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6E,QAAUrE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ8E,QAAUtE,EAAO+B,SACzB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKyW,IAarB,YAZuB7V,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAUpC,OAAOtB,EAAO0D,SAGhC7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAUrC,OAAOtB,EAAO2D,SAGhC9E,EAAQ8E,QAAU,GAEf9E,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQ6E,UAA0BvD,EAAIuD,QAAU7E,EAAQ6E,cACpCjE,IAApBZ,EAAQ8E,UAA0BxD,EAAIwD,QAAU9E,EAAQ8E,SACjDxD,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKyW,IAarB,YAZuB7V,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAU1D,EAAO0D,QAGzB7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAU3D,EAAO2D,QAGzB9E,EAAQ8E,QAAU,GAEf9E,IC1Lf,MAAMwF,GAAQ,CACV,CAAC,8CAA+CkR,IAChD,CAAC,6CAA8CH,KAEtC9Q,GAAqB,IAAI1D,MAAM,sBAC/B2D,GAAW,IAAIC,EAAAA,SAASH,IAC/BI,GAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,GAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,GACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAQA,WAGhES,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAQA,KAEnE,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,GAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvHoQ,mBAAqB/c,IAAD,CAAayI,QAAS,8CAA+C1D,MAAO+X,GAAmBnV,YAAY3H,KAC/Hgd,kBAAoBhd,IAAD,CAAayI,QAAS,6CAA8C1D,MAAO4X,GAAkBhV,YAAY3H,OAG9H+M,GAAcrM,OAAS2L,KAAMA,GAAS,CAAEA,KAAM,2BACzC,IAAI3G,GAAI,CAAErE,QAASgL,IC9BxBtG,GAAgB,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,GAAY,CACrBC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANwB,IAApBF,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKL,IACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,GAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKL,IAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUwB,OAAOD,EAAOvB,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQuB,OAAOD,EAAOtB,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQJ,UAA0B0B,EAAI1B,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwByB,EAAIzB,MAAQG,EAAQH,OAC7CyB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKL,IAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUuB,EAAOvB,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQsB,EAAOtB,MAGvBG,EAAQH,MAAQ,EAEbG,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cC3FG,MACDwI,GAAW,CAAEN,MAAO,GAAIxE,OAAQ,IACzB+E,GAAO,CAChB7K,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQqK,OACRpK,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqK,OAEd,KAAnBrK,EAAQ6F,QACR5F,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6F,QAE9B5F,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2K,IACrB,MAAOnK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqK,MAAQ7J,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6F,OAASrF,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQ5H,OAAOtB,EAAOkJ,OAG9BrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASpD,OAAOtB,EAAO0E,QAG/B7F,EAAQ6F,OAAS,GAEd7F,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQqK,QAAwB/I,EAAI+I,MAAQrK,EAAQqK,YACjCzJ,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,QAC/CvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQlJ,EAAOkJ,MAGvBrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,GAEd7F,IClET6W,GAAe,CAAEjX,QAAS,EAAGC,MAAO,GAC7BiX,GAAW,CACpB/W,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANwB,IAApBF,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6W,IACrB,MAAOrW,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,GAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6W,IAarB,YAZuBjW,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUwB,OAAOD,EAAOvB,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQuB,OAAOD,EAAOtB,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQJ,UAA0B0B,EAAI1B,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwByB,EAAIzB,MAAQG,EAAQH,OAC7CyB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6W,IAarB,YAZuBjW,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUuB,EAAOvB,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQsB,EAAOtB,MAGvBG,EAAQH,MAAQ,EAEbG,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCvFG,MACD4U,GAAqB,GACdC,GAAiB,CAC1BjX,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQqN,WACpBzC,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAK7C,YAH2BpD,IAAvBZ,EAAQiE,YACRnE,GAAAA,OAAiBoE,GAAYlE,EAAQiE,YAAahE,EAAOE,OAAO,IAAI4D,QAAQC,SAEzE/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK+W,IACrB/W,EAAQqN,WAAa,GACrB,MAAO7M,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqN,WAAW9J,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WACnD,MACJ,KAAK,EACDH,EAAQiE,WAAaE,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WACnE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK+W,IAErB,GADA/W,EAAQqN,WAAa,QACKzM,IAAtBO,EAAOkM,YAAkD,OAAtBlM,EAAOkM,WAC1C,IAAK,MAAM7O,KAAK2C,EAAOkM,WACnBrN,EAAQqN,WAAW9J,KAAKqH,GAAAA,SAAcpM,IAS9C,YAN0BoC,IAAtBO,EAAO8C,YAAkD,OAAtB9C,EAAO8C,WAC1CjE,EAAQiE,WAAaG,GAAkBjD,EAAO8C,YAG9CjE,EAAQiE,gBAAarD,EAElBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,OAPItB,EAAQqN,WACR/L,EAAI+L,WAAarN,EAAQqN,WAAWnO,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAGrEU,EAAI+L,WAAa,QAEEzM,IAAvBZ,EAAQiE,aAA6B3C,EAAI2C,gBAAoCrD,IAAvBZ,EAAQiE,WAA2BjE,EAAQiE,WAAWI,cAAgB,MACrH/C,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK+W,IAErB,GADA/W,EAAQqN,WAAa,QACKzM,IAAtBO,EAAOkM,YAAkD,OAAtBlM,EAAOkM,WAC1C,IAAK,MAAM7O,KAAK2C,EAAOkM,WACnBrN,EAAQqN,WAAW9J,KAAKqH,GAAAA,YAAiBpM,IASjD,YAN0BoC,IAAtBO,EAAO8C,YAAkD,OAAtB9C,EAAO8C,WAC1CjE,EAAQiE,WAAa9C,EAAO8C,WAG5BjE,EAAQiE,gBAAarD,EAElBZ,IAGTiX,GAAwB,GACjBC,GAAoB,CAC7BnX,OAAOC,EAASC,EAASC,EAAAA,OAAAA,eACCU,IAAlBZ,EAAQmX,OACRH,GAAejX,OAAOC,EAAQmX,MAAOlX,EAAOE,OAAO,IAAI4D,QAAQC,cAE5CpD,IAAnBZ,EAAQ6Q,QACRiG,GAAS/W,OAAOC,EAAQ6Q,OAAQ5Q,EAAOE,OAAO,IAAI4D,QAAQC,SAE9D,IAAK,MAAMmB,KAAKnF,EAAQoX,iBACpBxM,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,IAAK,MAAMmB,KAAKnF,EAAQqX,eACpBzM,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAK7C,YAH4BpD,IAAxBZ,EAAQsX,aACRxX,GAAAA,OAAiBoE,GAAYlE,EAAQsX,aAAcrX,EAAOE,OAAO,IAAI4D,QAAQC,SAE1E/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKiX,IACrBjX,EAAQoX,iBAAmB,GAC3BpX,EAAQqX,eAAiB,GACzB,MAAO7W,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmX,MAAQH,GAAe1W,OAAOE,EAAQA,EAAOL,UACrD,MACJ,KAAK,EACDH,EAAQ6Q,OAASiG,GAASxW,OAAOE,EAAQA,EAAOL,UAChD,MACJ,KAAK,EACDH,EAAQoX,iBAAiB7T,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WACzD,MACJ,KAAK,EACDH,EAAQqX,eAAe9T,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WACvD,MACJ,KAAK,EACDH,EAAQsX,YAAcnT,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WACpE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKiX,IAerB,GAdAjX,EAAQoX,iBAAmB,GAC3BpX,EAAQqX,eAAiB,QACJzW,IAAjBO,EAAOgW,OAAwC,OAAjBhW,EAAOgW,MACrCnX,EAAQmX,MAAQH,GAAe9V,SAASC,EAAOgW,OAG/CnX,EAAQmX,WAAQvW,OAEEA,IAAlBO,EAAO0P,QAA0C,OAAlB1P,EAAO0P,OACtC7Q,EAAQ6Q,OAASiG,GAAS5V,SAASC,EAAO0P,QAG1C7Q,EAAQ6Q,YAASjQ,OAEWA,IAA5BO,EAAOiW,kBAA8D,OAA5BjW,EAAOiW,iBAChD,IAAK,MAAM5Y,KAAK2C,EAAOiW,iBACnBpX,EAAQoX,iBAAiB7T,KAAKqH,GAAAA,SAAcpM,IAGpD,QAA8BoC,IAA1BO,EAAOkW,gBAA0D,OAA1BlW,EAAOkW,eAC9C,IAAK,MAAM7Y,KAAK2C,EAAOkW,eACnBrX,EAAQqX,eAAe9T,KAAKqH,GAAAA,SAAcpM,IASlD,YAN2BoC,IAAvBO,EAAOmW,aAAoD,OAAvBnW,EAAOmW,YAC3CtX,EAAQsX,YAAclT,GAAkBjD,EAAOmW,aAG/CtX,EAAQsX,iBAAc1W,EAEnBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAgBZ,YAfkBV,IAAlBZ,EAAQmX,QAAwB7V,EAAI6V,MAAQnX,EAAQmX,MAAQH,GAAe3V,OAAOrB,EAAQmX,YAASvW,QAChFA,IAAnBZ,EAAQ6Q,SAAyBvP,EAAIuP,OAAS7Q,EAAQ6Q,OAASiG,GAASzV,OAAOrB,EAAQ6Q,aAAUjQ,GAC7FZ,EAAQoX,iBACR9V,EAAI8V,iBAAmBpX,EAAQoX,iBAAiBlY,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAGjFU,EAAI8V,iBAAmB,GAEvBpX,EAAQqX,eACR/V,EAAI+V,eAAiBrX,EAAQqX,eAAenY,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAG7EU,EAAI+V,eAAiB,QAEDzW,IAAxBZ,EAAQsX,cAA8BhW,EAAIgW,iBAAsC1W,IAAxBZ,EAAQsX,YAA4BtX,EAAQsX,YAAYjT,cAAgB,MACzH/C,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKiX,IAerB,GAdAjX,EAAQoX,iBAAmB,GAC3BpX,EAAQqX,eAAiB,QACJzW,IAAjBO,EAAOgW,OAAwC,OAAjBhW,EAAOgW,MACrCnX,EAAQmX,MAAQH,GAAezV,YAAYJ,EAAOgW,OAGlDnX,EAAQmX,WAAQvW,OAEEA,IAAlBO,EAAO0P,QAA0C,OAAlB1P,EAAO0P,OACtC7Q,EAAQ6Q,OAASiG,GAASvV,YAAYJ,EAAO0P,QAG7C7Q,EAAQ6Q,YAASjQ,OAEWA,IAA5BO,EAAOiW,kBAA8D,OAA5BjW,EAAOiW,iBAChD,IAAK,MAAM5Y,KAAK2C,EAAOiW,iBACnBpX,EAAQoX,iBAAiB7T,KAAKqH,GAAAA,YAAiBpM,IAGvD,QAA8BoC,IAA1BO,EAAOkW,gBAA0D,OAA1BlW,EAAOkW,eAC9C,IAAK,MAAM7Y,KAAK2C,EAAOkW,eACnBrX,EAAQqX,eAAe9T,KAAKqH,GAAAA,YAAiBpM,IASrD,YAN2BoC,IAAvBO,EAAOmW,aAAoD,OAAvBnW,EAAOmW,YAC3CtX,EAAQsX,YAAcnW,EAAOmW,YAG7BtX,EAAQsX,iBAAc1W,EAEnBZ,IAGTuX,GAA0B,CAAEC,gBAAiB,IACtCC,GAAsB,CAC/B1X,OAAOC,EAASC,EAASC,EAAAA,OAAAA,eACKU,IAAtBZ,EAAQwW,WACRlU,GAAAA,OAAWtC,EAAQwW,UAAWvW,EAAOE,OAAO,IAAI4D,QAAQC,SAE5D,IAAK,MAAMmB,KAAKnF,EAAQwX,gBACpBvX,EAAOE,OAAO,IAAIoC,OAAO4C,GAE7B,OAAOlF,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKuX,IACrBvX,EAAQwX,gBAAkB,GAC1B,MAAOhX,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQwW,UAAYlU,GAAAA,OAAW9B,EAAQA,EAAOL,UAC9C,MACJ,KAAK,EACDH,EAAQwX,gBAAgBjU,KAAK/C,EAAO+B,UACpC,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKuX,IAQrB,GAPAvX,EAAQwX,gBAAkB,QACD5W,IAArBO,EAAOqV,WAAgD,OAArBrV,EAAOqV,UACzCxW,EAAQwW,UAAYlU,GAAAA,SAAanB,EAAOqV,WAGxCxW,EAAQwW,eAAY5V,OAEOA,IAA3BO,EAAOqW,iBAA4D,OAA3BrW,EAAOqW,gBAC/C,IAAK,MAAMhZ,KAAK2C,EAAOqW,gBACnBxX,EAAQwX,gBAAgBjU,KAAKd,OAAOjE,IAG5C,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPsBV,IAAtBZ,EAAQwW,YAA4BlV,EAAIkV,UAAYxW,EAAQwW,UAAYlU,GAAAA,OAAWtC,EAAQwW,gBAAa5V,GACpGZ,EAAQwX,gBACRlW,EAAIkW,gBAAkBxX,EAAQwX,gBAAgBtY,KAAKV,GAAMA,IAGzD8C,EAAIkW,gBAAkB,GAEnBlW,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKuX,IAQrB,GAPAvX,EAAQwX,gBAAkB,QACD5W,IAArBO,EAAOqV,WAAgD,OAArBrV,EAAOqV,UACzCxW,EAAQwW,UAAYlU,GAAAA,YAAgBnB,EAAOqV,WAG3CxW,EAAQwW,eAAY5V,OAEOA,IAA3BO,EAAOqW,iBAA4D,OAA3BrW,EAAOqW,gBAC/C,IAAK,MAAMhZ,KAAK2C,EAAOqW,gBACnBxX,EAAQwX,gBAAgBjU,KAAK/E,GAGrC,OAAOwB,IAGT4D,GAAY,CAAEiB,QAAS,GAAIC,QAAS,IAC7BjB,GAAQ,CACjB9D,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATwB,KAApBF,EAAQ6E,SACR5E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6E,SAEb,KAApB7E,EAAQ8E,SACR7E,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8E,cAEXlE,IAAtBZ,EAAQwW,WACRlU,GAAAA,OAAWtC,EAAQwW,UAAWvW,EAAOE,OAAO,IAAI4D,QAAQC,SAErD/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK4D,IACrB,MAAOpD,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6E,QAAUrE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ8E,QAAUtE,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQwW,UAAYlU,GAAAA,OAAW9B,EAAQA,EAAOL,UAC9C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK4D,IAmBrB,YAlBuBhD,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAUpC,OAAOtB,EAAO0D,SAGhC7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAUrC,OAAOtB,EAAO2D,SAGhC9E,EAAQ8E,QAAU,QAEGlE,IAArBO,EAAOqV,WAAgD,OAArBrV,EAAOqV,UACzCxW,EAAQwW,UAAYlU,GAAAA,SAAanB,EAAOqV,WAGxCxW,EAAQwW,eAAY5V,EAEjBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHoBV,IAApBZ,EAAQ6E,UAA0BvD,EAAIuD,QAAU7E,EAAQ6E,cACpCjE,IAApBZ,EAAQ8E,UAA0BxD,EAAIwD,QAAU9E,EAAQ8E,cAClClE,IAAtBZ,EAAQwW,YAA4BlV,EAAIkV,UAAYxW,EAAQwW,UAAYlU,GAAAA,OAAWtC,EAAQwW,gBAAa5V,GACjGU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK4D,IAmBrB,YAlBuBhD,IAAnBO,EAAO0D,SAA4C,OAAnB1D,EAAO0D,QACvC7E,EAAQ6E,QAAU1D,EAAO0D,QAGzB7E,EAAQ6E,QAAU,QAECjE,IAAnBO,EAAO2D,SAA4C,OAAnB3D,EAAO2D,QACvC9E,EAAQ8E,QAAU3D,EAAO2D,QAGzB9E,EAAQ8E,QAAU,QAEGlE,IAArBO,EAAOqV,WAAgD,OAArBrV,EAAOqV,UACzCxW,EAAQwW,UAAYlU,GAAAA,YAAgBnB,EAAOqV,WAG3CxW,EAAQwW,eAAY5V,EAEjBZ,IAGf,SAASkE,GAAYI,GACjB,MAAM1E,EAAU0E,EAAKC,UAAY,IAC3B1E,EAASyE,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAE3E,QAAAA,EAASC,MAAAA,GAEtB,SAASsE,GAAcK,GACnB,IAAIC,EAAqB,IAAZD,EAAE5E,QAEf,OADA6E,GAAUD,EAAE3E,MAAQ,IACb,IAAI6E,KAAKD,GAEpB,SAASL,GAAkBO,GACvB,OAAIA,aAAaD,KACNC,EAEW,kBAANA,EACL,IAAID,KAAKC,GAGTR,GAAcrE,GAAAA,SAAmB6E,I,gBC7YhDrK,eAAe4M,GAAaC,GACxB,aAAapB,GAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BAG1B7M,eAAe8M,GAAgBD,GAC3B,aAAaR,GAAY,CACrBV,KAAMkB,EAAY,0BAG1B,SAASE,GAAa1I,EAAO2I,GACzB,IAAK,IAAIC,KAAQrL,OAAOC,KAAKmL,GACrBzI,MAAMC,QAAQwI,EAAYC,IAC1B5I,EAAM4I,GAAQ,IAAI5I,EAAM4I,MAAUD,EAAYC,IAG9C5I,EAAM4I,GAAQD,EAAYC,GAGlC,OAAO5I,EAEX,SAAS6I,GAAaC,GAClB,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,IAAK,MAAOtL,EAAKsC,KAAUzC,OAAO0L,QAAQH,GAAW,CACjD,IAAII,EAAQ,GACZA,EAAMlO,KAAO0C,EACbwL,EAAMrK,YAAcmB,EACpB+I,EAAUC,OAAOpE,KAAKsE,GAE1B,OAAOH,EAEX,MAAMI,GAAkB,KACb,CACH4P,UAAW,GACXC,WAAY,GACZ3P,WAAY,CACRgP,eAAgBxP,GAAawP,GAAezV,YAAY,KACxD2V,kBAAmB1P,GAAa0P,GAAkB3V,YAAY,KAC9DkW,oBAAqBjQ,GAAaiQ,GAAoBlW,YAAY,KAClEsC,MAAO2D,GAAa3D,GAAAA,YAAkB,MAE1CoE,UAAWvC,GACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,IC9BW8P,GAkBAC,GAQAhd,GDIX,IACIwN,YAAY,EACZD,MAFW,GAGXE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACL4d,aAAe1P,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACpCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMsP,UAAU3b,KAAKC,UAAU2B,KAAY,IAEtDoa,cAAgB3P,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACrCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMuP,WAAW5b,KAAKC,UAAU2B,KAAY,IAEvDmL,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,qDACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,sBAAqB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACrI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYyP,eAAe/Z,EAAIwI,QAASxI,EAAIyI,UAAUlL,KAIzE,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,YAAapB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACtEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,iBAAkBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC9FvD,EAAQ,gBAAgB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAErE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,6BAA8B,kDAAoDpL,EAAEwB,WAGlH1F,uBAAsB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACtI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY0P,gBAAgBha,EAAIyI,QAASrH,IAAQ7D,KACpE,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY0P,gBAAgBha,EAAIyI,QAAS,IAAKrH,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC9H+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,aAAcpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACvEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,kBAAmBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC/FvD,EAAQ,iBAAiB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEtE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,8BAA+B,kDAAoDpL,EAAEwB,WAGnH1F,8BAA6B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACpE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS4Q,mBAAmBhY,GACxCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,mCAAoC,4DAGpD,IAAIA,EAAAA,GAAY,mCAAoC,2BAA6BpL,EAAEwB,WAIrG1F,6BAA4B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACnE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS6Q,kBAAkBjY,GACvCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,kCAAmC,4DAGnD,IAAIA,EAAAA,GAAY,kCAAmC,2BAA6BpL,EAAEwB,WAIpG1F,0BAAyB,YAAE4O,IAAe,MAAEvK,IACxC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS4Q,mBAAmBhY,GAC9C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,mCAAoC,4DAGpD,IAAIA,EAAAA,GAAY,qCAAsC,6BAA+BpL,EAAEwB,WAIzG1F,yBAAwB,YAAE4O,IAAe,MAAEvK,IACvC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS6Q,kBAAkBjY,GAC7C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,kCAAmC,4DAGnD,IAAIA,EAAAA,GAAY,oCAAqC,6BAA+BpL,EAAEwB,cCxLhH,SAAW4X,GACPA,EAAsB,+BAAiC,8BACvDA,EAAsB,kCAAoC,iCAC1DA,EAAsB,iCAAmC,gCACzDA,EAAsB,0BAA4B,yBAClDA,EAAsB,4BAA8B,2BACpDA,EAAsB,0BAA4B,0BANtD,CAOGA,KAA0BA,GAAwB,KAWrD,SAAWC,GACPA,EAAkB,2BAA6B,0BAC/CA,EAAkB,mBAAqB,kBACvCA,EAAkB,uBAAyB,sBAC3CA,EAAkB,kBAAoB,iBACtCA,EAAkB,4BAA8B,2BALpD,CAMGA,KAAsBA,GAAoB,KAE7C,SAAWhd,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,oCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,MAAMC,GACTC,YAAYC,EAAY,IACpBjB,KAAKkB,QAAU,GACflB,KAAKmB,aAAe,KACpBnB,KAAKoB,eAAiB,KACtBpB,KAAKqB,iBAAmB,IAAIC,IAC5BtB,KAAKuB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpB3B,KAAK4B,gBAAmB/B,IACpBG,KAAKmB,aAAetB,GAExBG,KAAK6B,kBAAoB,CACrB,CAACf,GAAYgB,MAAQC,GAAoB,OAAVA,GAAoC,kBAAVA,GAAuC,kBAAVA,EAA8CA,EAAxBC,KAAKC,UAAUF,GAC3H,CAACjB,GAAYoB,UAAYH,GAAUI,OAAOC,KAAKL,GAAS,IAAIM,QAAO,CAACxC,EAAMyC,KACtEzC,EAAK0C,OAAOD,EAAKP,EAAMO,IAChBzC,IACR,IAAIqC,UACP,CAACpB,GAAY0B,YAAcT,GAAU/B,KAAKyC,cAAcV,IAE5D/B,KAAK0C,kBAAqBC,IACtB,GAAI3C,KAAKqB,iBAAiBuB,IAAID,GAAc,CACxC,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAClD,OAAIE,EACOA,EAAgBE,YAE3B,EAEJ,MAAMF,EAAkB,IAAIG,gBAE5B,OADAhD,KAAKqB,iBAAiB4B,IAAIN,EAAaE,GAChCA,EAAgBE,QAE3B/C,KAAKkD,aAAgBP,IACjB,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAC9CE,IACAA,EAAgBM,QAChBnD,KAAKqB,iBAAiB+B,OAAOT,KAGrC3C,KAAKqD,QAAU,EAAGC,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,EAAMC,KAAAA,EAAMC,MAAAA,EAAOC,OAAAA,EAAS,OAAQzC,QAAAA,EAASyB,YAAAA,KAAgBiB,MACzF,MAAMC,EAAgBN,GAAUvD,KAAKoB,gBAAkBpB,KAAKoB,eAAepB,KAAKmB,eAAkB,GAC5F2C,EAAgB9D,KAAK+D,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS1D,KAAKyC,cAAciB,GAC1CO,EAAmBjE,KAAK6B,kBAAkB4B,GAAQ3C,GAAYgB,MACpE,OAAOoC,MAAO,GAAEhD,GAAWlB,KAAKkB,SAAW,KAAKsC,IAAOQ,EAAe,IAAGA,IAAgB,KAAM,IACxFF,EACHrC,QAAS,IACDgC,GAAQA,IAAS3C,GAAYoB,SAAW,CAAE,eAAgBuB,GAAS,MACnEK,EAAcrC,SAAW,IAEjCsB,OAAQJ,EAAc3C,KAAK0C,kBAAkBC,QAAe,EAC5DW,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOW,EAAiBX,KAC9Ea,MAAK5D,MAAAA,IACJ,MAAM6D,EAAIC,EACVD,EAAEvE,KAAO,KACTuE,EAAEE,MAAQ,KACV,MAAMzE,QAAawE,EAASV,KACvBQ,MAAMtE,IACHuE,EAAEG,GACFH,EAAEvE,KAAOA,EAGTuE,EAAEE,MAAQzE,EAEPuE,KAENI,OAAOC,IACRL,EAAEE,MAAQG,EACHL,KAKX,GAHIzB,GACA3C,KAAKqB,iBAAiB+B,OAAOT,IAE5B0B,EAASE,GACV,MAAM1E,EACV,OAAOA,MAGfsC,OAAOuC,OAAO1E,KAAMiB,GAExB0D,cAAcjB,EAAOpB,GACjB,MAAMsC,EAAQlB,EAAMpB,GACpB,OAAQuC,mBAAmBvC,GACvB,IACAuC,mBAAmBC,MAAMC,QAAQH,GAASA,EAAMI,KAAK,KAAwB,kBAAVJ,EAAqBA,EAAS,GAAEA,KAE3GnC,cAAcwC,GACV,MAAMvB,EAAQuB,GAAY,GACpB7C,EAAOD,OAAOC,KAAKsB,GAAOwB,QAAQ5C,GAAQ,qBAAuBoB,EAAMpB,KAC7E,OAAOF,EACF+C,KAAK7C,GAA8B,kBAAfoB,EAAMpB,IAAsBwC,MAAMC,QAAQrB,EAAMpB,IAEnEtC,KAAK2E,cAAcjB,EAAOpB,GAD1BtC,KAAKyC,cAAciB,EAAMpB,MAE1B0C,KAAK,KAEdI,eAAeH,GACX,MAAMjB,EAAchE,KAAKyC,cAAcwC,GACvC,OAAOjB,EAAe,IAAGA,IAAgB,GAE7CD,mBAAmBsB,EAASC,GACxB,MAAO,IACAtF,KAAKuB,iBACL8D,KACCC,GAAW,GACf7D,QAAS,IACDzB,KAAKuB,cAAcE,SAAW,MAC9B4D,EAAQ5D,SAAW,MAClB6D,GAAWA,EAAQ7D,SAAY,MAS7C,MAAM8D,WAAYxE,GACrBC,cACIwE,SAASC,WASTzF,KAAKyQ,YAAc,CAACwN,EAAYra,EAAS,KAAO5D,KAAKqD,QAAQ,CACzDG,KAAO,8BAA6Bya,IACpCtY,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKke,eAAiB,CAACxa,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACvDG,KAAO,gCACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKme,cAAgB,CAACC,EAAYxa,EAAS,KAAO5D,KAAKqD,QAAQ,CAC3DG,KAAO,iCAAgC4a,IACvCzY,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKqe,cAAgB,CAACD,EAAY1a,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAClEG,KAAO,iCAAgC4a,aACvCzY,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKse,aAAe,CAACF,EAAYrI,EAAWnS,EAAS,KAAO5D,KAAKqD,QAAQ,CACrEG,KAAO,iCAAgC4a,cAAuBrI,IAC9DpQ,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKue,iBAAmB,CAACH,EAAYxa,EAAS,KAAO5D,KAAKqD,QAAQ,CAC9DG,KAAO,iCAAgC4a,UACvCzY,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKwe,WAAa,CAACJ,EAAY1a,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAC/DG,KAAO,iCAAgC4a,UACvCzY,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKye,UAAY,CAACL,EAAYM,EAAO9a,EAAS,KAAO5D,KAAKqD,QAAQ,CAC9DG,KAAO,iCAAgC4a,WAAoBM,IAC3D/Y,OAAQ,MACRhC,OAAQ,UACLC,KCjSR,MACDgC,GAAgB,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,GAAY,CACrBC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANwB,IAApBF,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKL,IACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,GAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKL,IAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUwB,OAAOD,EAAOvB,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQuB,OAAOD,EAAOtB,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQJ,UAA0B0B,EAAI1B,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwByB,EAAIzB,MAAQG,EAAQH,OAC7CyB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKL,IAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUuB,EAAOvB,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQsB,EAAOtB,MAGvBG,EAAQH,MAAQ,EAEbG,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cC3FG,MACDwI,GAAW,CAAEN,MAAO,GAAIxE,OAAQ,IACzB+E,GAAO,CAChB7K,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQqK,OACRpK,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqK,OAEd,KAAnBrK,EAAQ6F,QACR5F,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6F,QAE9B5F,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2K,IACrB,MAAOnK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqK,MAAQ7J,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6F,OAASrF,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQ5H,OAAOtB,EAAOkJ,OAG9BrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASpD,OAAOtB,EAAO0E,QAG/B7F,EAAQ6F,OAAS,GAEd7F,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQqK,QAAwB/I,EAAI+I,MAAQrK,EAAQqK,YACjCzJ,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,QAC/CvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQlJ,EAAOkJ,MAGvBrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,GAEd7F,ICnEToC,GAAU,CAAEC,QAAS,IACdC,GAAM,CACfvC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQqC,SACRpC,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqC,SAER,IAAzBrC,EAAQrB,MAAM4B,QACdN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQrB,OAE7BsB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoC,IACrB,MAAO5B,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqC,QAAU7B,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQrB,MAAQ6B,EAAOgC,QACvB,MACJ,QACIhC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoC,IAUrB,YATuBxB,IAAnBO,EAAOkB,SAA4C,OAAnBlB,EAAOkB,QACvCrC,EAAQqC,QAAUI,OAAOtB,EAAOkB,SAGhCrC,EAAQqC,QAAU,QAEDzB,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,QACrCqB,EAAQrB,MAAQ+D,GAAgBvB,EAAOxC,QAEpCqB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQqC,UAA0Bf,EAAIe,QAAUrC,EAAQqC,cACtCzB,IAAlBZ,EAAQrB,QAAwB2C,EAAI3C,MAAQgE,QAAkC/B,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aACvGa,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoC,IAarB,YAZuBxB,IAAnBO,EAAOkB,SAA4C,OAAnBlB,EAAOkB,QACvCrC,EAAQqC,QAAUlB,EAAOkB,QAGzBrC,EAAQqC,QAAU,QAEDzB,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,MACrCqB,EAAQrB,MAAQwC,EAAOxC,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,MAAMiB,GAAOpB,GAAWoB,MAAX,CAAqBC,GAAQrB,GAAWsB,OAAOC,KAAKF,EAAK,UAAUG,SAAS,WACzF,SAASN,GAAgBG,GACrB,MAAMI,EAAML,GAAKC,GACXK,EAAM,IAAIzC,WAAWwC,EAAI1C,QAC/B,IAAK,IAAI4C,EAAI,EAAGA,EAAIF,EAAI1C,SAAU4C,EAC9BD,EAAIC,GAAKF,EAAIG,WAAWD,GAE5B,OAAOD,EAEX,MAAMG,GAAO7B,GAAW6B,MAAX,CAAqBJ,GAAQzB,GAAWsB,OAAOC,KAAKE,EAAK,UAAUD,SAAS,WACzF,SAASL,GAAgBO,GACrB,MAAMD,EAAM,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAII,aAAcH,EAClCF,EAAIM,KAAKd,OAAOe,aAAaN,EAAIC,KAErC,OAAOE,GAAKJ,EAAIlE,KAAK,KC7FlB,MACD8X,GAAe,CAAEjX,QAAS,EAAGC,MAAO,GAC7BiX,GAAW,CACpB/W,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANwB,IAApBF,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6W,IACrB,MAAOrW,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,GAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6W,IAarB,YAZuBjW,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUwB,OAAOD,EAAOvB,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQuB,OAAOD,EAAOtB,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQJ,UAA0B0B,EAAI1B,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwByB,EAAIzB,MAAQG,EAAQH,OAC7CyB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6W,IAarB,YAZuBjW,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUuB,EAAOvB,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQsB,EAAOtB,MAGvBG,EAAQH,MAAQ,EAEbG,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCpFG,IAAIuW,GAsDAC,GAxCJ,SAASC,GAAmBzX,GAC/B,OAAQA,GACJ,KAAK,EACL,IAAK,0BACD,OAAOuX,GAAWG,wBACtB,KAAK,EACL,IAAK,kBACD,OAAOH,GAAWI,gBACtB,KAAK,EACL,IAAK,sBACD,OAAOJ,GAAWK,oBACtB,KAAK,EACL,IAAK,iBACD,OAAOL,GAAWM,eACtB,KAAK,EACL,IAAK,2BACD,OAAON,GAAWO,yBACtB,KAAM,EACN,IAAK,eACL,QACI,OAAOP,GAAWQ,cAGvB,SAASC,GAAiBhY,GAC7B,OAAQA,GACJ,KAAKuX,GAAWG,wBACZ,MAAO,0BACX,KAAKH,GAAWI,gBACZ,MAAO,kBACX,KAAKJ,GAAWK,oBACZ,MAAO,sBACX,KAAKL,GAAWM,eACZ,MAAO,iBACX,KAAKN,GAAWO,yBACZ,MAAO,2BACX,QACI,MAAO,WAmCZ,SAASG,GAAuBjY,GACnC,OAAQA,GACJ,KAAK,EACL,IAAK,8BACD,OAAOwX,GAAeU,4BAC1B,KAAK,EACL,IAAK,iCACD,OAAOV,GAAeW,+BAC1B,KAAK,EACL,IAAK,gCACD,OAAOX,GAAeY,8BAC1B,KAAK,EACL,IAAK,yBACD,OAAOZ,GAAea,uBAC1B,KAAK,EACL,IAAK,2BACD,OAAOb,GAAec,yBAC1B,KAAK,EACL,IAAK,yBACD,OAAOd,GAAee,uBAC1B,KAAM,EACN,IAAK,eACL,QACI,OAAOf,GAAeO,cAG3B,SAASS,GAAqBxY,GACjC,OAAQA,GACJ,KAAKwX,GAAeU,4BAChB,MAAO,8BACX,KAAKV,GAAeW,+BAChB,MAAO,iCACX,KAAKX,GAAeY,8BAChB,MAAO,gCACX,KAAKZ,GAAea,uBAChB,MAAO,yBACX,KAAKb,GAAec,yBAChB,MAAO,2BACX,KAAKd,GAAee,uBAChB,MAAO,yBACX,QACI,MAAO,YA7HnB,SAAWhB,GAEPA,EAAWA,EAAW,2BAA6B,GAAK,0BAExDA,EAAWA,EAAW,mBAAqB,GAAK,kBAEhDA,EAAWA,EAAW,uBAAyB,GAAK,sBAEpDA,EAAWA,EAAW,kBAAoB,GAAK,iBAE/CA,EAAWA,EAAW,4BAA8B,GAAK,2BACzDA,EAAWA,EAAW,iBAAmB,GAAK,gBAXlD,CAYGA,KAAeA,GAAa,KA0C/B,SAAWC,GAEPA,EAAeA,EAAe,+BAAiC,GAAK,8BAKpEA,EAAeA,EAAe,kCAAoC,GAAK,iCAKvEA,EAAeA,EAAe,iCAAmC,GAAK,gCAKtEA,EAAeA,EAAe,0BAA4B,GAAK,yBAK/DA,EAAeA,EAAe,4BAA8B,GAAK,2BAKjEA,EAAeA,EAAe,0BAA4B,GAAK,yBAC/DA,EAAeA,EAAe,iBAAmB,GAAK,eA5B1D,CA6BGA,KAAmBA,GAAiB,KA6CvC,MAAMiB,GAAyB,CAAEC,OAAQ,EAAGC,OAAQ,IACvCC,GAAqB,CAC9Bha,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANuB,IAAnBF,EAAQ6Z,QACR5Z,EAAOE,OAAO,GAAGE,MAAML,EAAQ6Z,QAEZ,KAAnB7Z,EAAQ8Z,QACR7Z,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8Z,QAE9B7Z,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK4Z,IACrB,MAAOpZ,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6Z,OAASrZ,EAAOH,QACxB,MACJ,KAAK,EACDL,EAAQ8Z,OAAStZ,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK4Z,IAarB,YAZsBhZ,IAAlBO,EAAO0Y,QAA0C,OAAlB1Y,EAAO0Y,OACtC7Z,EAAQ6Z,OAASjB,GAAmBzX,EAAO0Y,QAG3C7Z,EAAQ6Z,OAAS,OAECjZ,IAAlBO,EAAO2Y,QAA0C,OAAlB3Y,EAAO2Y,OACtC9Z,EAAQ8Z,OAASrX,OAAOtB,EAAO2Y,QAG/B9Z,EAAQ8Z,OAAS,GAEd9Z,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFmBV,IAAnBZ,EAAQ6Z,SAAyBvY,EAAIuY,OAASV,GAAiBnZ,EAAQ6Z,cACpDjZ,IAAnBZ,EAAQ8Z,SAAyBxY,EAAIwY,OAAS9Z,EAAQ8Z,QAC/CxY,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK4Z,IAarB,YAZsBhZ,IAAlBO,EAAO0Y,QAA0C,OAAlB1Y,EAAO0Y,OACtC7Z,EAAQ6Z,OAAS1Y,EAAO0Y,OAGxB7Z,EAAQ6Z,OAAS,OAECjZ,IAAlBO,EAAO2Y,QAA0C,OAAlB3Y,EAAO2Y,OACtC9Z,EAAQ8Z,OAAS3Y,EAAO2Y,OAGxB9Z,EAAQ8Z,OAAS,GAEd9Z,IAGTga,GAAmB,CAAE/H,MAAO,GAAI9F,YAAa,IACtC8N,GAAe,CACxBla,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQiS,OACRhS,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQiS,OAET,KAAxBjS,EAAQmM,aACRlM,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQmM,aAE9BlM,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKga,IACrB,MAAOxZ,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQiS,MAAQzR,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQmM,YAAc3L,EAAO+B,SAC7B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKga,IAarB,YAZqBpZ,IAAjBO,EAAO8Q,OAAwC,OAAjB9Q,EAAO8Q,MACrCjS,EAAQiS,MAAQxP,OAAOtB,EAAO8Q,OAG9BjS,EAAQiS,MAAQ,QAEOrR,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAc1J,OAAOtB,EAAOgL,aAGpCnM,EAAQmM,YAAc,GAEnBnM,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQiS,QAAwB3Q,EAAI2Q,MAAQjS,EAAQiS,YAC5BrR,IAAxBZ,EAAQmM,cAA8B7K,EAAI6K,YAAcnM,EAAQmM,aACzD7K,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKga,IAarB,YAZqBpZ,IAAjBO,EAAO8Q,OAAwC,OAAjB9Q,EAAO8Q,MACrCjS,EAAQiS,MAAQ9Q,EAAO8Q,MAGvBjS,EAAQiS,MAAQ,QAEOrR,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAchL,EAAOgL,YAG7BnM,EAAQmM,YAAc,GAEnBnM,IAGTka,GAAc,CAAE/B,WAAY,EAAGrI,UAAW,IACnCqK,GAAU,CACnBpa,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACM,IAAvBF,EAAQmY,YACRlY,EAAOE,OAAO,GAAG6Q,OAAOhR,EAAQmY,YAEV,KAAtBnY,EAAQ8P,WACR7P,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8P,WAErC,IAAK,MAAM3K,KAAKnF,EAAQ6F,OACpB+E,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKka,IACrBla,EAAQ6F,OAAS,GACjB,MAAOrF,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmY,WAAanX,GAAaR,EAAOwQ,UACzC,MACJ,KAAK,EACDhR,EAAQ8P,UAAYtP,EAAO+B,SAC3B,MACJ,KAAK,EACDvC,EAAQ6F,OAAOtC,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WAC/C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKka,IAcrB,GAbAla,EAAQ6F,OAAS,QACSjF,IAAtBO,EAAOgX,YAAkD,OAAtBhX,EAAOgX,WAC1CnY,EAAQmY,WAAa/W,OAAOD,EAAOgX,YAGnCnY,EAAQmY,WAAa,OAEAvX,IAArBO,EAAO2O,WAAgD,OAArB3O,EAAO2O,UACzC9P,EAAQ8P,UAAYrN,OAAOtB,EAAO2O,WAGlC9P,EAAQ8P,UAAY,QAEFlP,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAAA,SAAcpM,IAG1C,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GASZ,YARuBV,IAAvBZ,EAAQmY,aAA6B7W,EAAI6W,WAAanY,EAAQmY,iBACxCvX,IAAtBZ,EAAQ8P,YAA4BxO,EAAIwO,UAAY9P,EAAQ8P,WACxD9P,EAAQ6F,OACRvE,EAAIuE,OAAS7F,EAAQ6F,OAAO3G,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAG7DU,EAAIuE,OAAS,GAEVvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKka,IAcrB,GAbAla,EAAQ6F,OAAS,QACSjF,IAAtBO,EAAOgX,YAAkD,OAAtBhX,EAAOgX,WAC1CnY,EAAQmY,WAAahX,EAAOgX,WAG5BnY,EAAQmY,WAAa,OAEAvX,IAArBO,EAAO2O,WAAgD,OAArB3O,EAAO2O,UACzC9P,EAAQ8P,UAAY3O,EAAO2O,UAG3B9P,EAAQ8P,UAAY,QAEFlP,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAAA,YAAiBpM,IAG7C,OAAOwB,IAGToa,GAAe,CAAEjC,WAAY,EAAGkC,OAAQ,GACjCC,GAAW,CACpBva,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACM,IAAvBF,EAAQmY,YACRlY,EAAOE,OAAO,GAAG6Q,OAAOhR,EAAQmY,iBAEZvX,IAApBZ,EAAQ9G,SACRoJ,GAAAA,OAAWtC,EAAQ9G,QAAS+G,EAAOE,OAAO,IAAI4D,QAAQC,SAEnC,IAAnBhE,EAAQqa,QACRpa,EAAOE,OAAO,IAAIE,MAAML,EAAQqa,aAEHzZ,IAA7BZ,EAAQua,kBACRC,GAAYza,OAAOC,EAAQua,iBAAkBta,EAAOE,OAAO,IAAI4D,QAAQC,cAEhDpD,IAAvBZ,EAAQya,YACR3a,GAAAA,OAAiBoE,GAAYlE,EAAQya,YAAaxa,EAAOE,OAAO,IAAI4D,QAAQC,cAEjDpD,IAA3BZ,EAAQ0a,gBACR5a,GAAAA,OAAiBoE,GAAYlE,EAAQ0a,gBAAiBza,EAAOE,OAAO,IAAI4D,QAAQC,SAEpF,IAAK,MAAMmB,KAAKnF,EAAQ2a,aACpB/P,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAQ7C,YANgCpD,IAA5BZ,EAAQ4a,iBACR9a,GAAAA,OAAiBoE,GAAYlE,EAAQ4a,iBAAkB3a,EAAOE,OAAO,IAAI4D,QAAQC,cAEvDpD,IAA1BZ,EAAQ6a,eACR/a,GAAAA,OAAiBoE,GAAYlE,EAAQ6a,eAAgB5a,EAAOE,OAAO,IAAI4D,QAAQC,SAE5E/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoa,IACrBpa,EAAQ2a,aAAe,GACvB,MAAOna,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmY,WAAanX,GAAaR,EAAOwQ,UACzC,MACJ,KAAK,EACDhR,EAAQ9G,QAAUoJ,GAAAA,OAAW9B,EAAQA,EAAOL,UAC5C,MACJ,KAAK,EACDH,EAAQqa,OAAS7Z,EAAOH,QACxB,MACJ,KAAK,EACDL,EAAQua,iBAAmBC,GAAYla,OAAOE,EAAQA,EAAOL,UAC7D,MACJ,KAAK,EACDH,EAAQya,WAAatW,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WACnE,MACJ,KAAK,EACDH,EAAQ0a,eAAiBvW,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WACvE,MACJ,KAAK,EACDH,EAAQ2a,aAAapX,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WACrD,MACJ,KAAK,EACDH,EAAQ4a,gBAAkBzW,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WACxE,MACJ,KAAK,EACDH,EAAQ6a,cAAgB1W,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WACtE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoa,IAsCrB,GArCApa,EAAQ2a,aAAe,QACG/Z,IAAtBO,EAAOgX,YAAkD,OAAtBhX,EAAOgX,WAC1CnY,EAAQmY,WAAa/W,OAAOD,EAAOgX,YAGnCnY,EAAQmY,WAAa,OAEFvX,IAAnBO,EAAOjI,SAA4C,OAAnBiI,EAAOjI,QACvC8G,EAAQ9G,QAAUoJ,GAAAA,SAAanB,EAAOjI,SAGtC8G,EAAQ9G,aAAU0H,OAEAA,IAAlBO,EAAOkZ,QAA0C,OAAlBlZ,EAAOkZ,OACtCra,EAAQqa,OAASjB,GAAuBjY,EAAOkZ,QAG/Cra,EAAQqa,OAAS,OAEWzZ,IAA5BO,EAAOoZ,kBAA8D,OAA5BpZ,EAAOoZ,iBAChDva,EAAQua,iBAAmBC,GAAYtZ,SAASC,EAAOoZ,kBAGvDva,EAAQua,sBAAmB3Z,OAELA,IAAtBO,EAAOsZ,YAAkD,OAAtBtZ,EAAOsZ,WAC1Cza,EAAQya,WAAarW,GAAkBjD,EAAOsZ,YAG9Cza,EAAQya,gBAAa7Z,OAEKA,IAA1BO,EAAOuZ,gBAA0D,OAA1BvZ,EAAOuZ,eAC9C1a,EAAQ0a,eAAiBtW,GAAkBjD,EAAOuZ,gBAGlD1a,EAAQ0a,oBAAiB9Z,OAEDA,IAAxBO,EAAOwZ,cAAsD,OAAxBxZ,EAAOwZ,aAC5C,IAAK,MAAMnc,KAAK2C,EAAOwZ,aACnB3a,EAAQ2a,aAAapX,KAAKqH,GAAAA,SAAcpM,IAehD,YAZ+BoC,IAA3BO,EAAOyZ,iBAA4D,OAA3BzZ,EAAOyZ,gBAC/C5a,EAAQ4a,gBAAkBxW,GAAkBjD,EAAOyZ,iBAGnD5a,EAAQ4a,qBAAkBha,OAEDA,IAAzBO,EAAO0Z,eAAwD,OAAzB1Z,EAAO0Z,cAC7C7a,EAAQ6a,cAAgBzW,GAAkBjD,EAAO0Z,eAGjD7a,EAAQ6a,mBAAgBja,EAErBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAeZ,YAduBV,IAAvBZ,EAAQmY,aAA6B7W,EAAI6W,WAAanY,EAAQmY,iBAC1CvX,IAApBZ,EAAQ9G,UAA0BoI,EAAIpI,QAAU8G,EAAQ9G,QAAUoJ,GAAAA,OAAWtC,EAAQ9G,cAAW0H,QAC7EA,IAAnBZ,EAAQqa,SAAyB/Y,EAAI+Y,OAASV,GAAqB3Z,EAAQqa,cAC9CzZ,IAA7BZ,EAAQua,mBAAmCjZ,EAAIiZ,iBAAmBva,EAAQua,iBAAmBC,GAAYnZ,OAAOrB,EAAQua,uBAAoB3Z,QACrHA,IAAvBZ,EAAQya,aAA6BnZ,EAAImZ,gBAAoC7Z,IAAvBZ,EAAQya,WAA2Bza,EAAQya,WAAWpW,cAAgB,WACjGzD,IAA3BZ,EAAQ0a,iBAAiCpZ,EAAIoZ,oBAA4C9Z,IAA3BZ,EAAQ0a,eAA+B1a,EAAQ0a,eAAerW,cAAgB,MACxIrE,EAAQ2a,aACRrZ,EAAIqZ,aAAe3a,EAAQ2a,aAAazb,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAGzEU,EAAIqZ,aAAe,QAEK/Z,IAA5BZ,EAAQ4a,kBAAkCtZ,EAAIsZ,qBAA8Cha,IAA5BZ,EAAQ4a,gBAAgC5a,EAAQ4a,gBAAgBvW,cAAgB,WACtHzD,IAA1BZ,EAAQ6a,gBAAgCvZ,EAAIuZ,mBAA0Cja,IAA1BZ,EAAQ6a,cAA8B7a,EAAQ6a,cAAcxW,cAAgB,MACjI/C,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoa,IAsCrB,GArCApa,EAAQ2a,aAAe,QACG/Z,IAAtBO,EAAOgX,YAAkD,OAAtBhX,EAAOgX,WAC1CnY,EAAQmY,WAAahX,EAAOgX,WAG5BnY,EAAQmY,WAAa,OAEFvX,IAAnBO,EAAOjI,SAA4C,OAAnBiI,EAAOjI,QACvC8G,EAAQ9G,QAAUoJ,GAAAA,YAAgBnB,EAAOjI,SAGzC8G,EAAQ9G,aAAU0H,OAEAA,IAAlBO,EAAOkZ,QAA0C,OAAlBlZ,EAAOkZ,OACtCra,EAAQqa,OAASlZ,EAAOkZ,OAGxBra,EAAQqa,OAAS,OAEWzZ,IAA5BO,EAAOoZ,kBAA8D,OAA5BpZ,EAAOoZ,iBAChDva,EAAQua,iBAAmBC,GAAYjZ,YAAYJ,EAAOoZ,kBAG1Dva,EAAQua,sBAAmB3Z,OAELA,IAAtBO,EAAOsZ,YAAkD,OAAtBtZ,EAAOsZ,WAC1Cza,EAAQya,WAAatZ,EAAOsZ,WAG5Bza,EAAQya,gBAAa7Z,OAEKA,IAA1BO,EAAOuZ,gBAA0D,OAA1BvZ,EAAOuZ,eAC9C1a,EAAQ0a,eAAiBvZ,EAAOuZ,eAGhC1a,EAAQ0a,oBAAiB9Z,OAEDA,IAAxBO,EAAOwZ,cAAsD,OAAxBxZ,EAAOwZ,aAC5C,IAAK,MAAMnc,KAAK2C,EAAOwZ,aACnB3a,EAAQ2a,aAAapX,KAAKqH,GAAAA,YAAiBpM,IAenD,YAZ+BoC,IAA3BO,EAAOyZ,iBAA4D,OAA3BzZ,EAAOyZ,gBAC/C5a,EAAQ4a,gBAAkBzZ,EAAOyZ,gBAGjC5a,EAAQ4a,qBAAkBha,OAEDA,IAAzBO,EAAO0Z,eAAwD,OAAzB1Z,EAAO0Z,cAC7C7a,EAAQ6a,cAAgB1Z,EAAO0Z,cAG/B7a,EAAQ6a,mBAAgBja,EAErBZ,IAGT8a,GAAkB,CAAEC,IAAK,GAAIC,QAAS,GAAIC,GAAI,GAAIC,WAAY,IACvDV,GAAc,CACvBza,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,MAZoB,KAAhBF,EAAQ+a,KACR9a,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+a,KAEb,KAApB/a,EAAQgb,SACR/a,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQgb,SAElB,KAAfhb,EAAQib,IACRhb,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQib,IAEV,KAAvBjb,EAAQkb,YACRjb,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQkb,YAE9Bjb,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8a,IACrB,MAAOta,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+a,IAAMva,EAAO+B,SACrB,MACJ,KAAK,EACDvC,EAAQgb,QAAUxa,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQib,GAAKza,EAAO+B,SACpB,MACJ,KAAK,EACDvC,EAAQkb,WAAa1a,EAAO+B,SAC5B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8a,IAyBrB,YAxBmBla,IAAfO,EAAO4Z,KAAoC,OAAf5Z,EAAO4Z,IACnC/a,EAAQ+a,IAAMtY,OAAOtB,EAAO4Z,KAG5B/a,EAAQ+a,IAAM,QAEKna,IAAnBO,EAAO6Z,SAA4C,OAAnB7Z,EAAO6Z,QACvChb,EAAQgb,QAAUvY,OAAOtB,EAAO6Z,SAGhChb,EAAQgb,QAAU,QAEJpa,IAAdO,EAAO8Z,IAAkC,OAAd9Z,EAAO8Z,GAClCjb,EAAQib,GAAKxY,OAAOtB,EAAO8Z,IAG3Bjb,EAAQib,GAAK,QAESra,IAAtBO,EAAO+Z,YAAkD,OAAtB/Z,EAAO+Z,WAC1Clb,EAAQkb,WAAazY,OAAOtB,EAAO+Z,YAGnClb,EAAQkb,WAAa,GAElBlb,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJgBV,IAAhBZ,EAAQ+a,MAAsBzZ,EAAIyZ,IAAM/a,EAAQ+a,UAC5Bna,IAApBZ,EAAQgb,UAA0B1Z,EAAI0Z,QAAUhb,EAAQgb,cACzCpa,IAAfZ,EAAQib,KAAqB3Z,EAAI2Z,GAAKjb,EAAQib,SACvBra,IAAvBZ,EAAQkb,aAA6B5Z,EAAI4Z,WAAalb,EAAQkb,YACvD5Z,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8a,IAyBrB,YAxBmBla,IAAfO,EAAO4Z,KAAoC,OAAf5Z,EAAO4Z,IACnC/a,EAAQ+a,IAAM5Z,EAAO4Z,IAGrB/a,EAAQ+a,IAAM,QAEKna,IAAnBO,EAAO6Z,SAA4C,OAAnB7Z,EAAO6Z,QACvChb,EAAQgb,QAAU7Z,EAAO6Z,QAGzBhb,EAAQgb,QAAU,QAEJpa,IAAdO,EAAO8Z,IAAkC,OAAd9Z,EAAO8Z,GAClCjb,EAAQib,GAAK9Z,EAAO8Z,GAGpBjb,EAAQib,GAAK,QAESra,IAAtBO,EAAO+Z,YAAkD,OAAtB/Z,EAAO+Z,WAC1Clb,EAAQkb,WAAa/Z,EAAO+Z,WAG5Blb,EAAQkb,WAAa,GAElBlb,IAGTmb,GAAW,CAAEhD,WAAY,EAAGM,MAAO,GAAIoB,OAAQ,GACxCuB,GAAO,CAChBrb,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACM,IAAvBF,EAAQmY,YACRlY,EAAOE,OAAO,GAAG6Q,OAAOhR,EAAQmY,YAEd,KAAlBnY,EAAQyY,OACRxY,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQyY,OAEd,IAAnBzY,EAAQ6Z,QACR5Z,EAAOE,OAAO,IAAIE,MAAML,EAAQ6Z,QAEpC,IAAK,MAAM1U,KAAKnF,EAAQ6J,QACpBkQ,GAAmBha,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE3D,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKmb,IACrBnb,EAAQ6J,QAAU,GAClB,MAAOrJ,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmY,WAAanX,GAAaR,EAAOwQ,UACzC,MACJ,KAAK,EACDhR,EAAQyY,MAAQjY,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6Z,OAASrZ,EAAOH,QACxB,MACJ,KAAK,EACDL,EAAQ6J,QAAQtG,KAAKwW,GAAmBzZ,OAAOE,EAAQA,EAAOL,WAC9D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKmb,IAoBrB,GAnBAnb,EAAQ6J,QAAU,QACQjJ,IAAtBO,EAAOgX,YAAkD,OAAtBhX,EAAOgX,WAC1CnY,EAAQmY,WAAa/W,OAAOD,EAAOgX,YAGnCnY,EAAQmY,WAAa,OAEJvX,IAAjBO,EAAOsX,OAAwC,OAAjBtX,EAAOsX,MACrCzY,EAAQyY,MAAQhW,OAAOtB,EAAOsX,OAG9BzY,EAAQyY,MAAQ,QAEE7X,IAAlBO,EAAO0Y,QAA0C,OAAlB1Y,EAAO0Y,OACtC7Z,EAAQ6Z,OAASjB,GAAmBzX,EAAO0Y,QAG3C7Z,EAAQ6Z,OAAS,OAEEjZ,IAAnBO,EAAO0I,SAA4C,OAAnB1I,EAAO0I,QACvC,IAAK,MAAMrL,KAAK2C,EAAO0I,QACnB7J,EAAQ6J,QAAQtG,KAAKwW,GAAmB7Y,SAAS1C,IAGzD,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAUZ,YATuBV,IAAvBZ,EAAQmY,aAA6B7W,EAAI6W,WAAanY,EAAQmY,iBAC5CvX,IAAlBZ,EAAQyY,QAAwBnX,EAAImX,MAAQzY,EAAQyY,YACjC7X,IAAnBZ,EAAQ6Z,SAAyBvY,EAAIuY,OAASV,GAAiBnZ,EAAQ6Z,SACnE7Z,EAAQ6J,QACRvI,EAAIuI,QAAU7J,EAAQ6J,QAAQ3K,KAAKV,GAAOA,EAAIub,GAAmB1Y,OAAO7C,QAAKoC,IAG7EU,EAAIuI,QAAU,GAEXvI,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKmb,IAoBrB,GAnBAnb,EAAQ6J,QAAU,QACQjJ,IAAtBO,EAAOgX,YAAkD,OAAtBhX,EAAOgX,WAC1CnY,EAAQmY,WAAahX,EAAOgX,WAG5BnY,EAAQmY,WAAa,OAEJvX,IAAjBO,EAAOsX,OAAwC,OAAjBtX,EAAOsX,MACrCzY,EAAQyY,MAAQtX,EAAOsX,MAGvBzY,EAAQyY,MAAQ,QAEE7X,IAAlBO,EAAO0Y,QAA0C,OAAlB1Y,EAAO0Y,OACtC7Z,EAAQ6Z,OAAS1Y,EAAO0Y,OAGxB7Z,EAAQ6Z,OAAS,OAEEjZ,IAAnBO,EAAO0I,SAA4C,OAAnB1I,EAAO0I,QACvC,IAAK,MAAMrL,KAAK2C,EAAO0I,QACnB7J,EAAQ6J,QAAQtG,KAAKwW,GAAmBxY,YAAY/C,IAG5D,OAAOwB,IAGTqb,GAAoB,GACbC,GAAgB,CACzBvb,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQub,WACpB3Q,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAK7C,YAHiCpD,IAA7BZ,EAAQwb,kBACR1E,GAAAA,OAAgB9W,EAAQwb,iBAAkBvb,EAAOE,OAAO,IAAI4D,QAAQC,SAEjE/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKqb,IACrBrb,EAAQub,WAAa,GACrB,MAAO/a,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQub,WAAWhY,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WACnD,MACJ,KAAK,EACDH,EAAQwb,iBAAmB1E,GAAAA,OAAgBtW,EAAQA,EAAOL,UAC1D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKqb,IAErB,GADArb,EAAQub,WAAa,QACK3a,IAAtBO,EAAOoa,YAAkD,OAAtBpa,EAAOoa,WAC1C,IAAK,MAAM/c,KAAK2C,EAAOoa,WACnBvb,EAAQub,WAAWhY,KAAKqH,GAAAA,SAAcpM,IAS9C,YANgCoC,IAA5BO,EAAOqa,kBAA8D,OAA5Bra,EAAOqa,iBAChDxb,EAAQwb,iBAAmB1E,GAAAA,SAAkB3V,EAAOqa,kBAGpDxb,EAAQwb,sBAAmB5a,EAExBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,OAPItB,EAAQub,WACRja,EAAIia,WAAavb,EAAQub,WAAWrc,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAGrEU,EAAIia,WAAa,QAEQ3a,IAA7BZ,EAAQwb,mBAAmCla,EAAIka,iBAAmBxb,EAAQwb,iBAAmB1E,GAAAA,OAAgB9W,EAAQwb,uBAAoB5a,GAClIU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKqb,IAErB,GADArb,EAAQub,WAAa,QACK3a,IAAtBO,EAAOoa,YAAkD,OAAtBpa,EAAOoa,WAC1C,IAAK,MAAM/c,KAAK2C,EAAOoa,WACnBvb,EAAQub,WAAWhY,KAAKqH,GAAAA,YAAiBpM,IASjD,YANgCoC,IAA5BO,EAAOqa,kBAA8D,OAA5Bra,EAAOqa,iBAChDxb,EAAQwb,iBAAmB1E,GAAAA,YAAqB3V,EAAOqa,kBAGvDxb,EAAQwb,sBAAmB5a,EAExBZ,IAGTyb,GAAmB,GACZC,GAAe,CACxB3b,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAIrB,YAH6BU,IAAzBZ,EAAQ2b,cACR7E,GAAAA,OAAgB9W,EAAQ2b,aAAc1b,EAAOE,OAAO,IAAI4D,QAAQC,SAE7D/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKyb,IACrB,MAAOjb,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ2b,aAAe7E,GAAAA,OAAgBtW,EAAQA,EAAOL,UACtD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKyb,IAOrB,YAN4B7a,IAAxBO,EAAOwa,cAAsD,OAAxBxa,EAAOwa,aAC5C3b,EAAQ2b,aAAe7E,GAAAA,SAAkB3V,EAAOwa,cAGhD3b,EAAQ2b,kBAAe/a,EAEpBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAEZ,YADyBV,IAAzBZ,EAAQ2b,eAA+Bra,EAAIqa,aAAe3b,EAAQ2b,aAAe7E,GAAAA,OAAgB9W,EAAQ2b,mBAAgB/a,GAClHU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKyb,IAOrB,YAN4B7a,IAAxBO,EAAOwa,cAAsD,OAAxBxa,EAAOwa,aAC5C3b,EAAQ2b,aAAe7E,GAAAA,YAAqB3V,EAAOwa,cAGnD3b,EAAQ2b,kBAAe/a,EAEpBZ,IAGT4b,GAAkB,GACXC,GAAc,CACvB9b,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,OAT8B,IAA1BF,EAAQ8b,OAAOvb,QACfN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQ8b,QAEH,IAA7B9b,EAAQ+b,UAAUxb,QAClBN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQ+b,WAEC,IAAjC/b,EAAQgc,cAAczb,QACtBN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQgc,eAE7B/b,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK4b,IACrB,MAAOpb,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8b,OAAStb,EAAOgC,QACxB,MACJ,KAAK,EACDxC,EAAQ+b,UAAYvb,EAAOgC,QAC3B,MACJ,KAAK,EACDxC,EAAQgc,cAAgBxb,EAAOgC,QAC/B,MACJ,QACIhC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK4b,IAUrB,YATsBhb,IAAlBO,EAAO2a,QAA0C,OAAlB3a,EAAO2a,SACtC9b,EAAQ8b,OAASpZ,GAAgBvB,EAAO2a,cAEnBlb,IAArBO,EAAO4a,WAAgD,OAArB5a,EAAO4a,YACzC/b,EAAQ+b,UAAYrZ,GAAgBvB,EAAO4a,iBAElBnb,IAAzBO,EAAO6a,eAAwD,OAAzB7a,EAAO6a,gBAC7Chc,EAAQgc,cAAgBtZ,GAAgBvB,EAAO6a,gBAE5Chc,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHmBV,IAAnBZ,EAAQ8b,SAAyBxa,EAAIwa,OAASnZ,QAAmC/B,IAAnBZ,EAAQ8b,OAAuB9b,EAAQ8b,OAAS,IAAIrb,kBAC5FG,IAAtBZ,EAAQ+b,YAA4Bza,EAAIya,UAAYpZ,QAAsC/B,IAAtBZ,EAAQ+b,UAA0B/b,EAAQ+b,UAAY,IAAItb,kBACpGG,IAA1BZ,EAAQgc,gBAAgC1a,EAAI0a,cAAgBrZ,QAA0C/B,IAA1BZ,EAAQgc,cAA8Bhc,EAAQgc,cAAgB,IAAIvb,aACvIa,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK4b,IAmBrB,YAlBsBhb,IAAlBO,EAAO2a,QAA0C,OAAlB3a,EAAO2a,OACtC9b,EAAQ8b,OAAS3a,EAAO2a,OAGxB9b,EAAQ8b,OAAS,IAAIrb,gBAEAG,IAArBO,EAAO4a,WAAgD,OAArB5a,EAAO4a,UACzC/b,EAAQ+b,UAAY5a,EAAO4a,UAG3B/b,EAAQ+b,UAAY,IAAItb,gBAECG,IAAzBO,EAAO6a,eAAwD,OAAzB7a,EAAO6a,cAC7Chc,EAAQgc,cAAgB7a,EAAO6a,cAG/Bhc,EAAQgc,cAAgB,IAAIvb,WAEzBT,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,MAAMiB,GAAOpB,GAAWoB,MAAX,CAAqBC,GAAQrB,GAAWsB,OAAOC,KAAKF,EAAK,UAAUG,SAAS,WACzF,SAASN,GAAgBG,GACrB,MAAMI,EAAML,GAAKC,GACXK,EAAM,IAAIzC,WAAWwC,EAAI1C,QAC/B,IAAK,IAAI4C,EAAI,EAAGA,EAAIF,EAAI1C,SAAU4C,EAC9BD,EAAIC,GAAKF,EAAIG,WAAWD,GAE5B,OAAOD,EAEX,MAAMG,GAAO7B,GAAW6B,MAAX,CAAqBJ,GAAQzB,GAAWsB,OAAOC,KAAKE,EAAK,UAAUD,SAAS,WACzF,SAASL,GAAgBO,GACrB,MAAMD,EAAM,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAII,aAAcH,EAClCF,EAAIM,KAAKd,OAAOe,aAAaN,EAAIC,KAErC,OAAOE,GAAKJ,EAAIlE,KAAK,KAEzB,SAASmF,GAAYI,GACjB,MAAM1E,EAAU0E,EAAKC,UAAY,IAC3B1E,EAASyE,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAE3E,QAAAA,EAASC,MAAAA,GAEtB,SAASsE,GAAcK,GACnB,IAAIC,EAAqB,IAAZD,EAAE5E,QAEf,OADA6E,GAAUD,EAAE3E,MAAQ,IACb,IAAI6E,KAAKD,GAEpB,SAASL,GAAkBO,GACvB,OAAIA,aAAaD,KACNC,EAEW,kBAANA,EACL,IAAID,KAAKC,GAGTR,GAAcrE,GAAAA,SAAmB6E,IAGhD,SAAS3D,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCtiCG,MACD8Z,GAAwB,CAAEC,SAAU,IAC7BC,GAAoB,CAC7Bpc,OAAOC,EAASC,EAASC,EAAAA,OAAAA,eACGU,IAApBZ,EAAQ9G,SACRoJ,GAAAA,OAAWtC,EAAQ9G,QAAS+G,EAAOE,OAAO,IAAI4D,QAAQC,SAE1D,IAAK,MAAMmB,KAAKnF,EAAQoc,eACpBxR,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAK7C,MAHyB,KAArBhE,EAAQkc,UACRjc,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQkc,UAE9Bjc,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKic,IACrBjc,EAAQoc,eAAiB,GACzB,MAAO5b,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ9G,QAAUoJ,GAAAA,OAAW9B,EAAQA,EAAOL,UAC5C,MACJ,KAAK,EACDH,EAAQoc,eAAe7Y,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WACvD,MACJ,KAAK,EACDH,EAAQkc,SAAW1b,EAAO+B,SAC1B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKic,IAQrB,GAPAjc,EAAQoc,eAAiB,QACFxb,IAAnBO,EAAOjI,SAA4C,OAAnBiI,EAAOjI,QACvC8G,EAAQ9G,QAAUoJ,GAAAA,SAAanB,EAAOjI,SAGtC8G,EAAQ9G,aAAU0H,OAEQA,IAA1BO,EAAOib,gBAA0D,OAA1Bjb,EAAOib,eAC9C,IAAK,MAAM5d,KAAK2C,EAAOib,eACnBpc,EAAQoc,eAAe7Y,KAAKqH,GAAAA,SAAcpM,IASlD,YANwBoC,IAApBO,EAAO+a,UAA8C,OAApB/a,EAAO+a,SACxClc,EAAQkc,SAAWzZ,OAAOtB,EAAO+a,UAGjClc,EAAQkc,SAAW,GAEhBlc,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GASZ,YARoBV,IAApBZ,EAAQ9G,UAA0BoI,EAAIpI,QAAU8G,EAAQ9G,QAAUoJ,GAAAA,OAAWtC,EAAQ9G,cAAW0H,GAC5FZ,EAAQoc,eACR9a,EAAI8a,eAAiBpc,EAAQoc,eAAeld,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAG7EU,EAAI8a,eAAiB,QAEJxb,IAArBZ,EAAQkc,WAA2B5a,EAAI4a,SAAWlc,EAAQkc,UACnD5a,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKic,IAQrB,GAPAjc,EAAQoc,eAAiB,QACFxb,IAAnBO,EAAOjI,SAA4C,OAAnBiI,EAAOjI,QACvC8G,EAAQ9G,QAAUoJ,GAAAA,YAAgBnB,EAAOjI,SAGzC8G,EAAQ9G,aAAU0H,OAEQA,IAA1BO,EAAOib,gBAA0D,OAA1Bjb,EAAOib,eAC9C,IAAK,MAAM5d,KAAK2C,EAAOib,eACnBpc,EAAQoc,eAAe7Y,KAAKqH,GAAAA,YAAiBpM,IASrD,YANwBoC,IAApBO,EAAO+a,UAA8C,OAApB/a,EAAO+a,SACxClc,EAAQkc,SAAW/a,EAAO+a,SAG1Blc,EAAQkc,SAAW,GAEhBlc,IAsDTqc,GAAc,CAAElE,WAAY,EAAGM,MAAO,GAAIoB,OAAQ,GAC3CyC,GAAU,CACnBvc,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,OAT2B,IAAvBF,EAAQmY,YACRlY,EAAOE,OAAO,GAAG6Q,OAAOhR,EAAQmY,YAEd,KAAlBnY,EAAQyY,OACRxY,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQyY,OAEd,IAAnBzY,EAAQ6Z,QACR5Z,EAAOE,OAAO,IAAIE,MAAML,EAAQ6Z,QAE7B5Z,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKqc,IACrB,MAAO7b,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmY,WAAanX,GAAaR,EAAOwQ,UACzC,MACJ,KAAK,EACDhR,EAAQyY,MAAQjY,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6Z,OAASrZ,EAAOH,QACxB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKqc,IAmBrB,YAlB0Bzb,IAAtBO,EAAOgX,YAAkD,OAAtBhX,EAAOgX,WAC1CnY,EAAQmY,WAAa/W,OAAOD,EAAOgX,YAGnCnY,EAAQmY,WAAa,OAEJvX,IAAjBO,EAAOsX,OAAwC,OAAjBtX,EAAOsX,MACrCzY,EAAQyY,MAAQhW,OAAOtB,EAAOsX,OAG9BzY,EAAQyY,MAAQ,QAEE7X,IAAlBO,EAAO0Y,QAA0C,OAAlB1Y,EAAO0Y,OACtC7Z,EAAQ6Z,OAASjB,GAAmBzX,EAAO0Y,QAG3C7Z,EAAQ6Z,OAAS,EAEd7Z,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHuBV,IAAvBZ,EAAQmY,aAA6B7W,EAAI6W,WAAanY,EAAQmY,iBAC5CvX,IAAlBZ,EAAQyY,QAAwBnX,EAAImX,MAAQzY,EAAQyY,YACjC7X,IAAnBZ,EAAQ6Z,SAAyBvY,EAAIuY,OAASV,GAAiBnZ,EAAQ6Z,SAChEvY,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKqc,IAmBrB,YAlB0Bzb,IAAtBO,EAAOgX,YAAkD,OAAtBhX,EAAOgX,WAC1CnY,EAAQmY,WAAahX,EAAOgX,WAG5BnY,EAAQmY,WAAa,OAEJvX,IAAjBO,EAAOsX,OAAwC,OAAjBtX,EAAOsX,MACrCzY,EAAQyY,MAAQtX,EAAOsX,MAGvBzY,EAAQyY,MAAQ,QAEE7X,IAAlBO,EAAO0Y,QAA0C,OAAlB1Y,EAAO0Y,OACtC7Z,EAAQ6Z,OAAS1Y,EAAO0Y,OAGxB7Z,EAAQ6Z,OAAS,EAEd7Z,IAmCTuc,GAAsB,CAAEpE,WAAY,EAAGM,MAAO,IACvC+D,GAAkB,CAC3Bzc,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACM,IAAvBF,EAAQmY,YACRlY,EAAOE,OAAO,GAAG6Q,OAAOhR,EAAQmY,YAEd,KAAlBnY,EAAQyY,OACRxY,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQyY,OAErC,IAAK,MAAMtT,KAAKnF,EAAQ6J,QACpBkQ,GAAmBha,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE3D,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKuc,IACrBvc,EAAQ6J,QAAU,GAClB,MAAOrJ,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmY,WAAanX,GAAaR,EAAOwQ,UACzC,MACJ,KAAK,EACDhR,EAAQyY,MAAQjY,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6J,QAAQtG,KAAKwW,GAAmBzZ,OAAOE,EAAQA,EAAOL,WAC9D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKuc,IAcrB,GAbAvc,EAAQ6J,QAAU,QACQjJ,IAAtBO,EAAOgX,YAAkD,OAAtBhX,EAAOgX,WAC1CnY,EAAQmY,WAAa/W,OAAOD,EAAOgX,YAGnCnY,EAAQmY,WAAa,OAEJvX,IAAjBO,EAAOsX,OAAwC,OAAjBtX,EAAOsX,MACrCzY,EAAQyY,MAAQhW,OAAOtB,EAAOsX,OAG9BzY,EAAQyY,MAAQ,QAEG7X,IAAnBO,EAAO0I,SAA4C,OAAnB1I,EAAO0I,QACvC,IAAK,MAAMrL,KAAK2C,EAAO0I,QACnB7J,EAAQ6J,QAAQtG,KAAKwW,GAAmB7Y,SAAS1C,IAGzD,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GASZ,YARuBV,IAAvBZ,EAAQmY,aAA6B7W,EAAI6W,WAAanY,EAAQmY,iBAC5CvX,IAAlBZ,EAAQyY,QAAwBnX,EAAImX,MAAQzY,EAAQyY,OAChDzY,EAAQ6J,QACRvI,EAAIuI,QAAU7J,EAAQ6J,QAAQ3K,KAAKV,GAAOA,EAAIub,GAAmB1Y,OAAO7C,QAAKoC,IAG7EU,EAAIuI,QAAU,GAEXvI,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKuc,IAcrB,GAbAvc,EAAQ6J,QAAU,QACQjJ,IAAtBO,EAAOgX,YAAkD,OAAtBhX,EAAOgX,WAC1CnY,EAAQmY,WAAahX,EAAOgX,WAG5BnY,EAAQmY,WAAa,OAEJvX,IAAjBO,EAAOsX,OAAwC,OAAjBtX,EAAOsX,MACrCzY,EAAQyY,MAAQtX,EAAOsX,MAGvBzY,EAAQyY,MAAQ,QAEG7X,IAAnBO,EAAO0I,SAA4C,OAAnB1I,EAAO0I,QACvC,IAAK,MAAMrL,KAAK2C,EAAO0I,QACnB7J,EAAQ6J,QAAQtG,KAAKwW,GAAmBxY,YAAY/C,IAG5D,OAAOwB,IAmCTyc,GAAiB,CAAEtE,WAAY,EAAGrI,UAAW,IACtC4M,GAAa,CACtB3c,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACM,IAAvBF,EAAQmY,YACRlY,EAAOE,OAAO,GAAG6Q,OAAOhR,EAAQmY,YAEV,KAAtBnY,EAAQ8P,WACR7P,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8P,WAErC,IAAK,MAAM3K,KAAKnF,EAAQ6F,OACpB+E,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKyc,IACrBzc,EAAQ6F,OAAS,GACjB,MAAOrF,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmY,WAAanX,GAAaR,EAAOwQ,UACzC,MACJ,KAAK,EACDhR,EAAQ8P,UAAYtP,EAAO+B,SAC3B,MACJ,KAAK,EACDvC,EAAQ6F,OAAOtC,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WAC/C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKyc,IAcrB,GAbAzc,EAAQ6F,OAAS,QACSjF,IAAtBO,EAAOgX,YAAkD,OAAtBhX,EAAOgX,WAC1CnY,EAAQmY,WAAa/W,OAAOD,EAAOgX,YAGnCnY,EAAQmY,WAAa,OAEAvX,IAArBO,EAAO2O,WAAgD,OAArB3O,EAAO2O,UACzC9P,EAAQ8P,UAAYrN,OAAOtB,EAAO2O,WAGlC9P,EAAQ8P,UAAY,QAEFlP,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAAA,SAAcpM,IAG1C,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GASZ,YARuBV,IAAvBZ,EAAQmY,aAA6B7W,EAAI6W,WAAanY,EAAQmY,iBACxCvX,IAAtBZ,EAAQ8P,YAA4BxO,EAAIwO,UAAY9P,EAAQ8P,WACxD9P,EAAQ6F,OACRvE,EAAIuE,OAAS7F,EAAQ6F,OAAO3G,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAG7DU,EAAIuE,OAAS,GAEVvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKyc,IAcrB,GAbAzc,EAAQ6F,OAAS,QACSjF,IAAtBO,EAAOgX,YAAkD,OAAtBhX,EAAOgX,WAC1CnY,EAAQmY,WAAahX,EAAOgX,WAG5BnY,EAAQmY,WAAa,OAEAvX,IAArBO,EAAO2O,WAAgD,OAArB3O,EAAO2O,UACzC9P,EAAQ8P,UAAY3O,EAAO2O,UAG3B9P,EAAQ8P,UAAY,QAEFlP,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAAA,YAAiBpM,IAG7C,OAAOwB,IA4Df,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCpjBJ,MAAMqD,GAAQ,CACV,CAAC,8BAA+B8W,IAChC,CAAC,iCAAkCI,IACnC,CAAC,wCAAyCP,IAC1C,CAAC,sCAAuCK,KAE/B/W,GAAqB,IAAI1D,MAAM,sBAC/B2D,GAAW,IAAIC,EAAAA,SAASH,IAC/BI,GAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,GAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,GACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAQA,WAGhES,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAQA,KAEnE,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,GAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvHoW,QAAU/iB,IAAD,CAAayI,QAAS,8BAA+B1D,MAAO2d,GAAQ/a,YAAY3H,KACzFgjB,WAAahjB,IAAD,CAAayI,QAAS,iCAAkC1D,MAAO+d,GAAWnb,YAAY3H,KAClGijB,kBAAoBjjB,IAAD,CAAayI,QAAS,wCAAyC1D,MAAOwd,GAAkB5a,YAAY3H,KACvHkjB,gBAAkBljB,IAAD,CAAayI,QAAS,sCAAuC1D,MAAO6d,GAAgBjb,YAAY3H,OAGnH+M,GAAcrM,OAAS2L,KAAMA,GAAS,CAAEA,KAAM,2BACzC,IAAI3G,GAAI,CAAErE,QAASgL,I,gBC3B9B3L,eAAe4M,GAAaC,GACxB,aAAapB,GAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BAG1B7M,eAAe8M,GAAgBD,GAC3B,aAAaR,GAAY,CACrBV,KAAMkB,EAAY,0BAG1B,SAASE,GAAa1I,EAAO2I,GACzB,IAAK,IAAIC,KAAQrL,OAAOC,KAAKmL,GACrBzI,MAAMC,QAAQwI,EAAYC,IAC1B5I,EAAM4I,GAAQ,IAAI5I,EAAM4I,MAAUD,EAAYC,IAG9C5I,EAAM4I,GAAQD,EAAYC,GAGlC,OAAO5I,EAEX,SAAS6I,GAAaC,GAClB,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,IAAK,MAAOtL,EAAKsC,KAAUzC,OAAO0L,QAAQH,GAAW,CACjD,IAAII,EAAQ,GACZA,EAAMlO,KAAO0C,EACbwL,EAAMrK,YAAcmB,EACpB+I,EAAUC,OAAOpE,KAAKsE,GAE1B,OAAOH,EAEX,MAAMI,GAAkB,KACb,CACHwS,SAAU,GACVyC,UAAW,GACX3B,KAAM,GACN4B,MAAO,GACPjS,OAAQ,GACRoP,QAAS,GACT8C,SAAU,GACVzC,YAAa,GACbxS,WAAY,CACR+R,mBAAoBvS,GAAauS,GAAmBxY,YAAY,KAChE0Y,aAAczS,GAAayS,GAAa1Y,YAAY,KACpD4Y,QAAS3S,GAAa2S,GAAQ5Y,YAAY,KAC1C+Y,SAAU9S,GAAa8S,GAAS/Y,YAAY,KAC5CiZ,YAAahT,GAAagT,GAAYjZ,YAAY,KAClD6Z,KAAM5T,GAAa4T,GAAK7Z,YAAY,KACpC+Z,cAAe9T,GAAa8T,GAAc/Z,YAAY,KACtDma,aAAclU,GAAakU,GAAana,YAAY,KACpDsa,YAAarU,GAAaqU,GAAYta,YAAY,MAEtD0G,UAAWvC,GACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,IC7DWjN,GD6DX,IACIwN,YAAY,EACZD,MAFW,GAGXE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACLgjB,YAAc9U,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACnCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMkS,SAASve,KAAKC,UAAU2B,KAAY,IAErDwf,aAAe/U,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACpCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2U,UAAUhhB,KAAKC,UAAU2B,KAAY,IAEtDyf,QAAUhV,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC/BA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMgT,KAAKrf,KAAKC,UAAU2B,KAAY,IAEjD0f,SAAWjV,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAChCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM4U,MAAMjhB,KAAKC,UAAU2B,KAAY,IAElDsQ,UAAY7F,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACjCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2C,OAAOhP,KAAKC,UAAU2B,KAAY,IAEnD2f,WAAalV,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAClCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM+R,QAAQpe,KAAKC,UAAU2B,KAAY,IAEpD4f,YAAcnV,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACnCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM6U,SAASlhB,KAAKC,UAAU2B,KAAY,IAErD6f,eAAiBpV,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACtCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMoS,YAAYze,KAAKC,UAAU2B,KAAY,IAExDmL,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,gDACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,qBAAoB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACpI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYuR,cAAc7b,EAAIohB,cAAc7jB,KAI/D,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,WAAYpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACrEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,gBAAiBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC7FvD,EAAQ,eAAe,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEpE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,4BAA6B,kDAAoDpL,EAAEwB,WAGjH1F,sBAAqB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACrI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYsR,eAAexa,IAAQ7D,KACtD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYsR,eAAe,IAAKxa,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAChH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,YAAapB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACtEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,iBAAkBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC9FvD,EAAQ,gBAAgB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAErE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,6BAA8B,kDAAoDpL,EAAEwB,WAGlH1F,iBAAgB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAChI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY6R,UAAUnc,EAAIohB,YAAaphB,EAAIoc,QAAQ7e,KAItE,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,OAAQpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACjEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,YAAaC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACzFvD,EAAQ,WAAW,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEhE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,wBAAyB,kDAAoDpL,EAAEwB,WAG7G1F,kBAAiB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACjI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY4R,WAAWlc,EAAIohB,YAAahgB,IAAQ7D,KACnE,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY4R,WAAWlc,EAAIohB,YAAa,IAAKhgB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC7H+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,QAASpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAClEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,aAAcC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC1FvD,EAAQ,YAAY,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEjE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,yBAA0B,kDAAoDpL,EAAEwB,WAG9G1F,mBAAkB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAClI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY6D,YAAYnO,EAAIqhB,cAAc9jB,KAI7D,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,SAAUpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACnEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,cAAeC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC3FvD,EAAQ,aAAa,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAElE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,0BAA2B,kDAAoDpL,EAAEwB,WAG/G1F,oBAAmB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACnI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY0R,aAAahc,EAAIohB,YAAaphB,EAAIyT,YAAYlW,KAI7E,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,UAAWpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACpEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,eAAgBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC5FvD,EAAQ,cAAc,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEnE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,2BAA4B,kDAAoDpL,EAAEwB,WAGhH1F,qBAAoB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACpI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYyR,cAAc/b,EAAIohB,YAAahgB,IAAQ7D,KACtE,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYyR,cAAc/b,EAAIohB,YAAa,IAAKhgB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAChI+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,WAAYpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACrEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,gBAAiBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC7FvD,EAAQ,eAAe,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEpE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,4BAA6B,kDAAoDpL,EAAEwB,WAGjH1F,wBAAuB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACvI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY2R,iBAAiBjc,EAAIohB,cAAc7jB,KAIlE,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,cAAepB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACxEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,mBAAoBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAChGvD,EAAQ,kBAAkB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEvE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,+BAAgC,kDAAoDpL,EAAEwB,WAGpH1F,mBAAkB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACzD,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS4W,QAAQhe,GAC7BuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,wBAAyB,4DAGzC,IAAIA,EAAAA,GAAY,wBAAyB,2BAA6BpL,EAAEwB,WAI1F1F,sBAAqB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC5D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS6W,WAAWje,GAChCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,2BAA4B,4DAG5C,IAAIA,EAAAA,GAAY,2BAA4B,2BAA6BpL,EAAEwB,WAI7F1F,6BAA4B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACnE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS8W,kBAAkBle,GACvCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,kCAAmC,4DAGnD,IAAIA,EAAAA,GAAY,kCAAmC,2BAA6BpL,EAAEwB,WAIpG1F,2BAA0B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACjE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS+W,gBAAgBne,GACrCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,gCAAiC,4DAGjD,IAAIA,EAAAA,GAAY,gCAAiC,2BAA6BpL,EAAEwB,WAIlG1F,eAAc,YAAE4O,IAAe,MAAEvK,IAC7B,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS4W,QAAQhe,GACnC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,wBAAyB,4DAGzC,IAAIA,EAAAA,GAAY,0BAA2B,6BAA+BpL,EAAEwB,WAI9F1F,kBAAiB,YAAE4O,IAAe,MAAEvK,IAChC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS6W,WAAWje,GACtC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,2BAA4B,4DAG5C,IAAIA,EAAAA,GAAY,6BAA8B,6BAA+BpL,EAAEwB,WAIjG1F,yBAAwB,YAAE4O,IAAe,MAAEvK,IACvC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS8W,kBAAkBle,GAC7C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,kCAAmC,4DAGnD,IAAIA,EAAAA,GAAY,oCAAqC,6BAA+BpL,EAAEwB,WAIxG1F,uBAAsB,YAAE4O,IAAe,MAAEvK,IACrC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS+W,gBAAgBne,GAC3C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,gCAAiC,4DAGjD,IAAIA,EAAAA,GAAY,kCAAmC,6BAA+BpL,EAAEwB,cCvZ9G,SAAWnF,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,MAAMC,GACTC,YAAYC,EAAY,IACpBjB,KAAKkB,QAAU,GACflB,KAAKmB,aAAe,KACpBnB,KAAKoB,eAAiB,KACtBpB,KAAKqB,iBAAmB,IAAIC,IAC5BtB,KAAKuB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpB3B,KAAK4B,gBAAmB/B,IACpBG,KAAKmB,aAAetB,GAExBG,KAAK6B,kBAAoB,CACrB,CAACf,GAAYgB,MAAQC,GAAoB,OAAVA,GAAoC,kBAAVA,GAAuC,kBAAVA,EAA8CA,EAAxBC,KAAKC,UAAUF,GAC3H,CAACjB,GAAYoB,UAAYH,GAAUI,OAAOC,KAAKL,GAAS,IAAIM,QAAO,CAACxC,EAAMyC,KACtEzC,EAAK0C,OAAOD,EAAKP,EAAMO,IAChBzC,IACR,IAAIqC,UACP,CAACpB,GAAY0B,YAAcT,GAAU/B,KAAKyC,cAAcV,IAE5D/B,KAAK0C,kBAAqBC,IACtB,GAAI3C,KAAKqB,iBAAiBuB,IAAID,GAAc,CACxC,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAClD,OAAIE,EACOA,EAAgBE,YAE3B,EAEJ,MAAMF,EAAkB,IAAIG,gBAE5B,OADAhD,KAAKqB,iBAAiB4B,IAAIN,EAAaE,GAChCA,EAAgBE,QAE3B/C,KAAKkD,aAAgBP,IACjB,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAC9CE,IACAA,EAAgBM,QAChBnD,KAAKqB,iBAAiB+B,OAAOT,KAGrC3C,KAAKqD,QAAU,EAAGC,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,EAAMC,KAAAA,EAAMC,MAAAA,EAAOC,OAAAA,EAAS,OAAQzC,QAAAA,EAASyB,YAAAA,KAAgBiB,MACzF,MAAMC,EAAgBN,GAAUvD,KAAKoB,gBAAkBpB,KAAKoB,eAAepB,KAAKmB,eAAkB,GAC5F2C,EAAgB9D,KAAK+D,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS1D,KAAKyC,cAAciB,GAC1CO,EAAmBjE,KAAK6B,kBAAkB4B,GAAQ3C,GAAYgB,MACpE,OAAOoC,MAAO,GAAEhD,GAAWlB,KAAKkB,SAAW,KAAKsC,IAAOQ,EAAe,IAAGA,IAAgB,KAAM,IACxFF,EACHrC,QAAS,IACDgC,GAAQA,IAAS3C,GAAYoB,SAAW,CAAE,eAAgBuB,GAAS,MACnEK,EAAcrC,SAAW,IAEjCsB,OAAQJ,EAAc3C,KAAK0C,kBAAkBC,QAAe,EAC5DW,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOW,EAAiBX,KAC9Ea,MAAK5D,MAAAA,IACJ,MAAM6D,EAAIC,EACVD,EAAEvE,KAAO,KACTuE,EAAEE,MAAQ,KACV,MAAMzE,QAAawE,EAASV,KACvBQ,MAAMtE,IACHuE,EAAEG,GACFH,EAAEvE,KAAOA,EAGTuE,EAAEE,MAAQzE,EAEPuE,KAENI,OAAOC,IACRL,EAAEE,MAAQG,EACHL,KAKX,GAHIzB,GACA3C,KAAKqB,iBAAiB+B,OAAOT,IAE5B0B,EAASE,GACV,MAAM1E,EACV,OAAOA,MAGfsC,OAAOuC,OAAO1E,KAAMiB,GAExB0D,cAAcjB,EAAOpB,GACjB,MAAMsC,EAAQlB,EAAMpB,GACpB,OAAQuC,mBAAmBvC,GACvB,IACAuC,mBAAmBC,MAAMC,QAAQH,GAASA,EAAMI,KAAK,KAAwB,kBAAVJ,EAAqBA,EAAS,GAAEA,KAE3GnC,cAAcwC,GACV,MAAMvB,EAAQuB,GAAY,GACpB7C,EAAOD,OAAOC,KAAKsB,GAAOwB,QAAQ5C,GAAQ,qBAAuBoB,EAAMpB,KAC7E,OAAOF,EACF+C,KAAK7C,GAA8B,kBAAfoB,EAAMpB,IAAsBwC,MAAMC,QAAQrB,EAAMpB,IAEnEtC,KAAK2E,cAAcjB,EAAOpB,GAD1BtC,KAAKyC,cAAciB,EAAMpB,MAE1B0C,KAAK,KAEdI,eAAeH,GACX,MAAMjB,EAAchE,KAAKyC,cAAcwC,GACvC,OAAOjB,EAAe,IAAGA,IAAgB,GAE7CD,mBAAmBsB,EAASC,GACxB,MAAO,IACAtF,KAAKuB,iBACL8D,KACCC,GAAW,GACf7D,QAAS,IACDzB,KAAKuB,cAAcE,SAAW,MAC9B4D,EAAQ5D,SAAW,MAClB6D,GAAWA,EAAQ7D,SAAY,MAS7C,MAAM8D,WAAYxE,GACrBC,cACIwE,SAASC,WASTzF,KAAKyQ,YAAc,CAAC7M,EAAS,KAAO5D,KAAKqD,QAAQ,CAC7CG,KAAO,kCACPmC,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAK4jB,kBAAoB,CAAClgB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAC1DG,KAAO,yCACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAK6jB,iBAAmB,CAACC,EAAalgB,EAAS,KAAO5D,KAAKqD,QAAQ,CAC/DG,KAAO,0CAAyCsgB,IAChDne,OAAQ,MACRhC,OAAQ,UACLC,KCjLR,MACDmgB,GAAgB,CAAEC,cAAe,IAC1BC,GAAY,CACrBje,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAIrB,MAH8B,KAA1BF,EAAQ+d,eACR9d,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+d,eAE9B9d,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8d,IACrB,MAAOtd,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+d,cAAgBvd,EAAO+B,SAC/B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8d,IAOrB,YAN6Bld,IAAzBO,EAAO4c,eAAwD,OAAzB5c,EAAO4c,cAC7C/d,EAAQ+d,cAAgBtb,OAAOtB,EAAO4c,eAGtC/d,EAAQ+d,cAAgB,GAErB/d,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAEZ,YAD0BV,IAA1BZ,EAAQ+d,gBAAgCzc,EAAIyc,cAAgB/d,EAAQ+d,eAC7Dzc,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8d,IAOrB,YAN6Bld,IAAzBO,EAAO4c,eAAwD,OAAzB5c,EAAO4c,cAC7C/d,EAAQ+d,cAAgB5c,EAAO4c,cAG/B/d,EAAQ+d,cAAgB,GAErB/d,IC9Cf,MAAMwF,GAAQ,CACV,CAAC,qCAAsCwY,KAE9BvY,GAAqB,IAAI1D,MAAM,sBAC/B2D,GAAW,IAAIC,EAAAA,SAASH,IAC/BI,GAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,GAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,GACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAQA,WAGhES,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAQA,KAEnE,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,GAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvH0X,UAAYrkB,IAAD,CAAayI,QAAS,qCAAsC1D,MAAOqf,GAAUzc,YAAY3H,OAGtG+M,GAAcrM,OAAS2L,KAAMA,GAAS,CAAEA,KAAM,2BACzC,IAAI3G,GAAI,CAAErE,QAASgL,IC3BxBtG,GAAgB,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,GAAY,CACrBC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANwB,IAApBF,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKL,IACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,GAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKL,IAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUwB,OAAOD,EAAOvB,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQuB,OAAOD,EAAOtB,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQJ,UAA0B0B,EAAI1B,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwByB,EAAIzB,MAAQG,EAAQH,OAC7CyB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKL,IAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUuB,EAAOvB,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQsB,EAAOtB,MAGvBG,EAAQH,MAAQ,EAEbG,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cC1FG,MACD0U,GAAe,CAAEjX,QAAS,EAAGC,MAAO,GAC7BiX,GAAW,CACpB/W,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANwB,IAApBF,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6W,IACrB,MAAOrW,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,GAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6W,IAarB,YAZuBjW,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUwB,OAAOD,EAAOvB,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQuB,OAAOD,EAAOtB,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQJ,UAA0B0B,EAAI1B,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwByB,EAAIzB,MAAQG,EAAQH,OAC7CyB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6W,IAarB,YAZuBjW,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUuB,EAAOvB,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQsB,EAAOtB,MAGvBG,EAAQH,MAAQ,EAEbG,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCxFG,MACD+b,GAA2B,CAAE1kB,QAAS,GAAI2kB,YAAa,EAAGC,YAAa,EAAGC,YAAY,EAAOC,oBAAqB,GAC3GC,GAAuB,CAChCxe,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAmBrB,MAlBwB,KAApBF,EAAQxG,SACRyG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQxG,SAET,IAAxBwG,EAAQme,aACRle,EAAOE,OAAO,IAAIC,MAAMJ,EAAQme,aAER,IAAxBne,EAAQoe,aACRne,EAAOE,OAAO,IAAIC,MAAMJ,EAAQoe,kBAERxd,IAAxBZ,EAAQwe,aACR1e,GAAAA,OAAiBoE,GAAYlE,EAAQwe,aAAcve,EAAOE,OAAO,IAAI4D,QAAQC,UAEtD,IAAvBhE,EAAQqe,YACRpe,EAAOE,OAAO,IAAI+K,KAAKlL,EAAQqe,YAEC,IAAhCre,EAAQse,qBACRre,EAAOE,OAAO,IAAIC,MAAMJ,EAAQse,qBAE7Bre,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKke,IACrB,MAAO1d,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQxG,QAAUgH,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQme,YAAcnd,GAAaR,EAAOJ,SAC1C,MACJ,KAAK,EACDJ,EAAQoe,YAAcpd,GAAaR,EAAOJ,SAC1C,MACJ,KAAK,EACDJ,EAAQwe,YAAcra,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WACpE,MACJ,KAAK,EACDH,EAAQqe,WAAa7d,EAAO0K,OAC5B,MACJ,KAAK,EACDlL,EAAQse,oBAAsBtd,GAAaR,EAAOJ,SAClD,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKke,IAqCrB,YApCuBtd,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAUiJ,OAAOtB,EAAO3H,SAGhCwG,EAAQxG,QAAU,QAEKoH,IAAvBO,EAAOgd,aAAoD,OAAvBhd,EAAOgd,YAC3Cne,EAAQme,YAAc/c,OAAOD,EAAOgd,aAGpCne,EAAQme,YAAc,OAECvd,IAAvBO,EAAOid,aAAoD,OAAvBjd,EAAOid,YAC3Cpe,EAAQoe,YAAchd,OAAOD,EAAOid,aAGpCpe,EAAQoe,YAAc,OAECxd,IAAvBO,EAAOqd,aAAoD,OAAvBrd,EAAOqd,YAC3Cxe,EAAQwe,YAAcpa,GAAkBjD,EAAOqd,aAG/Cxe,EAAQwe,iBAAc5d,OAEAA,IAAtBO,EAAOkd,YAAkD,OAAtBld,EAAOkd,WAC1Cre,EAAQqe,WAAalT,QAAQhK,EAAOkd,YAGpCre,EAAQqe,YAAa,OAEUzd,IAA/BO,EAAOmd,qBAAoE,OAA/Bnd,EAAOmd,oBACnDte,EAAQse,oBAAsBld,OAAOD,EAAOmd,qBAG5Cte,EAAQse,oBAAsB,EAE3Bte,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAOZ,YANoBV,IAApBZ,EAAQxG,UAA0B8H,EAAI9H,QAAUwG,EAAQxG,cAChCoH,IAAxBZ,EAAQme,cAA8B7c,EAAI6c,YAAcne,EAAQme,kBACxCvd,IAAxBZ,EAAQoe,cAA8B9c,EAAI8c,YAAcpe,EAAQoe,kBACxCxd,IAAxBZ,EAAQwe,cAA8Bld,EAAIkd,iBAAsC5d,IAAxBZ,EAAQwe,YAA4Bxe,EAAQwe,YAAYna,cAAgB,WACzGzD,IAAvBZ,EAAQqe,aAA6B/c,EAAI+c,WAAare,EAAQqe,iBAC9Bzd,IAAhCZ,EAAQse,sBAAsChd,EAAIgd,oBAAsBte,EAAQse,qBACzEhd,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKke,IAqCrB,YApCuBtd,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAU2H,EAAO3H,QAGzBwG,EAAQxG,QAAU,QAEKoH,IAAvBO,EAAOgd,aAAoD,OAAvBhd,EAAOgd,YAC3Cne,EAAQme,YAAchd,EAAOgd,YAG7Bne,EAAQme,YAAc,OAECvd,IAAvBO,EAAOid,aAAoD,OAAvBjd,EAAOid,YAC3Cpe,EAAQoe,YAAcjd,EAAOid,YAG7Bpe,EAAQoe,YAAc,OAECxd,IAAvBO,EAAOqd,aAAoD,OAAvBrd,EAAOqd,YAC3Cxe,EAAQwe,YAAcrd,EAAOqd,YAG7Bxe,EAAQwe,iBAAc5d,OAEAA,IAAtBO,EAAOkd,YAAkD,OAAtBld,EAAOkd,WAC1Cre,EAAQqe,WAAald,EAAOkd,WAG5Bre,EAAQqe,YAAa,OAEUzd,IAA/BO,EAAOmd,qBAAoE,OAA/Bnd,EAAOmd,oBACnDte,EAAQse,oBAAsBnd,EAAOmd,oBAGrCte,EAAQse,oBAAsB,EAE3Bte,IAGT6K,GAAa,CAAE4T,mBAAoB,GAC5B1T,GAAS,CAClBhL,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAgBrB,OAfmC,IAA/BF,EAAQye,oBACRxe,EAAOE,OAAO,GAAGC,MAAMJ,EAAQye,oBAEO,IAAtCze,EAAQ0e,mBAAmBne,QAC3BN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQ0e,yBAEC9d,IAAjCZ,EAAQ2e,sBACR7H,GAAAA,OAAgB9W,EAAQ2e,qBAAsB1e,EAAOE,OAAO,IAAI4D,QAAQC,SAE7B,IAA3ChE,EAAQ4e,wBAAwBre,QAChCN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQ4e,yBAES,IAAzC5e,EAAQ6e,sBAAsBte,QAC9BN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQ6e,uBAE7B5e,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6K,IACrB,MAAOrK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQye,mBAAqBzd,GAAaR,EAAOJ,SACjD,MACJ,KAAK,EACDJ,EAAQ0e,mBAAqBle,EAAOgC,QACpC,MACJ,KAAK,EACDxC,EAAQ2e,qBAAuB7H,GAAAA,OAAgBtW,EAAQA,EAAOL,UAC9D,MACJ,KAAK,EACDH,EAAQ4e,wBAA0Bpe,EAAOgC,QACzC,MACJ,KAAK,EACDxC,EAAQ6e,sBAAwBre,EAAOgC,QACvC,MACJ,QACIhC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6K,IAsBrB,YArBkCjK,IAA9BO,EAAOsd,oBAAkE,OAA9Btd,EAAOsd,mBAClDze,EAAQye,mBAAqBrd,OAAOD,EAAOsd,oBAG3Cze,EAAQye,mBAAqB,OAEC7d,IAA9BO,EAAOud,oBAAkE,OAA9Bvd,EAAOud,qBAClD1e,EAAQ0e,mBAAqBhc,GAAgBvB,EAAOud,0BAEpB9d,IAAhCO,EAAOwd,sBAAsE,OAAhCxd,EAAOwd,qBACpD3e,EAAQ2e,qBAAuB7H,GAAAA,SAAkB3V,EAAOwd,sBAGxD3e,EAAQ2e,0BAAuB/d,OAEIA,IAAnCO,EAAOyd,yBAA4E,OAAnCzd,EAAOyd,0BACvD5e,EAAQ4e,wBAA0Blc,GAAgBvB,EAAOyd,+BAExBhe,IAAjCO,EAAO0d,uBAAwE,OAAjC1d,EAAO0d,wBACrD7e,EAAQ6e,sBAAwBnc,GAAgBvB,EAAO0d,wBAEpD7e,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAUZ,YAT+BV,IAA/BZ,EAAQye,qBAAqCnd,EAAImd,mBAAqBze,EAAQye,yBAC/C7d,IAA/BZ,EAAQ0e,qBACHpd,EAAIod,mBAAqB/b,QAA+C/B,IAA/BZ,EAAQ0e,mBAAmC1e,EAAQ0e,mBAAqB,IAAIje,kBACzFG,IAAjCZ,EAAQ2e,uBACHrd,EAAIqd,qBAAuB3e,EAAQ2e,qBAAuB7H,GAAAA,OAAgB9W,EAAQ2e,2BAAwB/d,QAC3EA,IAApCZ,EAAQ4e,0BACHtd,EAAIsd,wBAA0Bjc,QAAoD/B,IAApCZ,EAAQ4e,wBAAwC5e,EAAQ4e,wBAA0B,IAAIne,kBACvGG,IAAlCZ,EAAQ6e,wBACHvd,EAAIud,sBAAwBlc,QAAkD/B,IAAlCZ,EAAQ6e,sBAAsC7e,EAAQ6e,sBAAwB,IAAIpe,aAC5Ha,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6K,IA+BrB,YA9BkCjK,IAA9BO,EAAOsd,oBAAkE,OAA9Btd,EAAOsd,mBAClDze,EAAQye,mBAAqBtd,EAAOsd,mBAGpCze,EAAQye,mBAAqB,OAEC7d,IAA9BO,EAAOud,oBAAkE,OAA9Bvd,EAAOud,mBAClD1e,EAAQ0e,mBAAqBvd,EAAOud,mBAGpC1e,EAAQ0e,mBAAqB,IAAIje,gBAEDG,IAAhCO,EAAOwd,sBAAsE,OAAhCxd,EAAOwd,qBACpD3e,EAAQ2e,qBAAuB7H,GAAAA,YAAqB3V,EAAOwd,sBAG3D3e,EAAQ2e,0BAAuB/d,OAEIA,IAAnCO,EAAOyd,yBAA4E,OAAnCzd,EAAOyd,wBACvD5e,EAAQ4e,wBAA0Bzd,EAAOyd,wBAGzC5e,EAAQ4e,wBAA0B,IAAIne,gBAELG,IAAjCO,EAAO0d,uBAAwE,OAAjC1d,EAAO0d,sBACrD7e,EAAQ6e,sBAAwB1d,EAAO0d,sBAGvC7e,EAAQ6e,sBAAwB,IAAIpe,WAEjCT,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,MAAMiB,GAAOpB,GAAWoB,MAAX,CAAqBC,GAAQrB,GAAWsB,OAAOC,KAAKF,EAAK,UAAUG,SAAS,WACzF,SAASN,GAAgBG,GACrB,MAAMI,EAAML,GAAKC,GACXK,EAAM,IAAIzC,WAAWwC,EAAI1C,QAC/B,IAAK,IAAI4C,EAAI,EAAGA,EAAIF,EAAI1C,SAAU4C,EAC9BD,EAAIC,GAAKF,EAAIG,WAAWD,GAE5B,OAAOD,EAEX,MAAMG,GAAO7B,GAAW6B,MAAX,CAAqBJ,GAAQzB,GAAWsB,OAAOC,KAAKE,EAAK,UAAUD,SAAS,WACzF,SAASL,GAAgBO,GACrB,MAAMD,EAAM,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAII,aAAcH,EAClCF,EAAIM,KAAKd,OAAOe,aAAaN,EAAIC,KAErC,OAAOE,GAAKJ,EAAIlE,KAAK,KAEzB,SAASmF,GAAYI,GACjB,MAAM1E,EAAU0E,EAAKC,UAAY,IAC3B1E,EAASyE,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAE3E,QAAAA,EAASC,MAAAA,GAEtB,SAASsE,GAAcK,GACnB,IAAIC,EAAqB,IAAZD,EAAE5E,QAEf,OADA6E,GAAUD,EAAE3E,MAAQ,IACb,IAAI6E,KAAKD,GAEpB,SAASL,GAAkBO,GACvB,OAAIA,aAAaD,KACNC,EAEW,kBAANA,EACL,IAAID,KAAKC,GAGTR,GAAcrE,GAAAA,SAAmB6E,IAGhD,SAAS3D,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCvUG,MAsGD2c,GAAkB,CAAEtlB,QAAS,IACtBulB,GAAc,CACvBhf,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQxG,SACRyG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQxG,cAEAoH,IAAjCZ,EAAQgf,sBACRT,GAAqBxe,OAAOC,EAAQgf,qBAAsB/e,EAAOE,OAAO,IAAI4D,QAAQC,SAEjF/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8e,IACrB,MAAOte,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQxG,QAAUgH,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQgf,qBAAuBT,GAAqBje,OAAOE,EAAQA,EAAOL,UAC1E,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8e,IAarB,YAZuBle,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAUiJ,OAAOtB,EAAO3H,SAGhCwG,EAAQxG,QAAU,QAEcoH,IAAhCO,EAAO6d,sBAAsE,OAAhC7d,EAAO6d,qBACpDhf,EAAQgf,qBAAuBT,GAAqBrd,SAASC,EAAO6d,sBAGpEhf,EAAQgf,0BAAuBpe,EAE5BZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHoBV,IAApBZ,EAAQxG,UAA0B8H,EAAI9H,QAAUwG,EAAQxG,cACvBoH,IAAjCZ,EAAQgf,uBACH1d,EAAI0d,qBAAuBhf,EAAQgf,qBAAuBT,GAAqBld,OAAOrB,EAAQgf,2BAAwBpe,GACpHU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8e,IAarB,YAZuBle,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAU2H,EAAO3H,QAGzBwG,EAAQxG,QAAU,QAEcoH,IAAhCO,EAAO6d,sBAAsE,OAAhC7d,EAAO6d,qBACpDhf,EAAQgf,qBAAuBT,GAAqBhd,YAAYJ,EAAO6d,sBAGvEhf,EAAQgf,0BAAuBpe,EAE5BZ,IAGTif,GAA4B,CAAEzlB,QAAS,IAChC0lB,GAAwB,CACjCnf,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACG,KAApBF,EAAQxG,SACRyG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQxG,SAErC,IAAK,MAAM2L,KAAKnF,EAAQmf,aACpBC,GAAYrf,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAEpD,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKif,IACrBjf,EAAQmf,aAAe,GACvB,MAAO3e,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQxG,QAAUgH,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQmf,aAAa5b,KAAK6b,GAAY9e,OAAOE,EAAQA,EAAOL,WAC5D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKif,IAQrB,GAPAjf,EAAQmf,aAAe,QACAve,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAUiJ,OAAOtB,EAAO3H,SAGhCwG,EAAQxG,QAAU,QAEMoH,IAAxBO,EAAOge,cAAsD,OAAxBhe,EAAOge,aAC5C,IAAK,MAAM3gB,KAAK2C,EAAOge,aACnBnf,EAAQmf,aAAa5b,KAAK6b,GAAYle,SAAS1C,IAGvD,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPoBV,IAApBZ,EAAQxG,UAA0B8H,EAAI9H,QAAUwG,EAAQxG,SACpDwG,EAAQmf,aACR7d,EAAI6d,aAAenf,EAAQmf,aAAajgB,KAAKV,GAAOA,EAAI4gB,GAAY/d,OAAO7C,QAAKoC,IAGhFU,EAAI6d,aAAe,GAEhB7d,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKif,IAQrB,GAPAjf,EAAQmf,aAAe,QACAve,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAU2H,EAAO3H,QAGzBwG,EAAQxG,QAAU,QAEMoH,IAAxBO,EAAOge,cAAsD,OAAxBhe,EAAOge,aAC5C,IAAK,MAAM3gB,KAAK2C,EAAOge,aACnBnf,EAAQmf,aAAa5b,KAAK6b,GAAY7d,YAAY/C,IAG1D,OAAOwB,IAGTqf,GAAkB,CAAEC,MAAO,EAAGC,QAAQ,GAC/BH,GAAc,CACvBrf,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANsB,IAAlBF,EAAQsf,OACRrf,EAAOE,OAAO,GAAGC,MAAMJ,EAAQsf,QAEZ,IAAnBtf,EAAQuf,QACRtf,EAAOE,OAAO,IAAI+K,KAAKlL,EAAQuf,QAE5Btf,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKqf,IACrB,MAAO7e,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsf,MAAQte,GAAaR,EAAOJ,SACpC,MACJ,KAAK,EACDJ,EAAQuf,OAAS/e,EAAO0K,OACxB,MACJ,QACI1K,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKqf,IAarB,YAZqBze,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQle,OAAOD,EAAOme,OAG9Btf,EAAQsf,MAAQ,OAEE1e,IAAlBO,EAAOoe,QAA0C,OAAlBpe,EAAOoe,OACtCvf,EAAQuf,OAASpU,QAAQhK,EAAOoe,QAGhCvf,EAAQuf,QAAS,EAEdvf,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQsf,QAAwBhe,EAAIge,MAAQtf,EAAQsf,YACjC1e,IAAnBZ,EAAQuf,SAAyBje,EAAIie,OAASvf,EAAQuf,QAC/Cje,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKqf,IAarB,YAZqBze,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQne,EAAOme,MAGvBtf,EAAQsf,MAAQ,OAEE1e,IAAlBO,EAAOoe,QAA0C,OAAlBpe,EAAOoe,OACtCvf,EAAQuf,OAASpe,EAAOoe,OAGxBvf,EAAQuf,QAAS,EAEdvf,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,c,gBC7UJ7H,eAAe4M,GAAaC,GACxB,aAAapB,GAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BAG1B7M,eAAe8M,GAAgBD,GAC3B,aAAaR,GAAY,CACrBV,KAAMkB,EAAY,0BAG1B,SAASE,GAAa1I,EAAO2I,GACzB,IAAK,IAAIC,KAAQrL,OAAOC,KAAKmL,GACrBzI,MAAMC,QAAQwI,EAAYC,IAC1B5I,EAAM4I,GAAQ,IAAI5I,EAAM4I,MAAUD,EAAYC,IAG9C5I,EAAM4I,GAAQD,EAAYC,GAGlC,OAAO5I,EAEX,SAAS6I,GAAaC,GAClB,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,IAAK,MAAOtL,EAAKsC,KAAUzC,OAAO0L,QAAQH,GAAW,CACjD,IAAII,EAAQ,GACZA,EAAMlO,KAAO0C,EACbwL,EAAMrK,YAAcmB,EACpB+I,EAAUC,OAAOpE,KAAKsE,GAE1B,OAAOH,EAEX,MAAMI,GAAkB,KACb,CACHiD,OAAQ,GACRgU,YAAa,GACbS,aAAc,GACdxX,WAAY,CACR+W,YAAavX,GAAauX,GAAYxd,YAAY,KAClD2d,sBAAuB1X,GAAa0X,GAAsB3d,YAAY,KACtE6d,YAAa5X,GAAa4X,GAAY7d,YAAY,KAClDgd,qBAAsB/W,GAAa+W,GAAqBhd,YAAY,KACpEwJ,OAAQvD,GAAauD,GAAAA,YAAmB,MAE5C9C,UAAWvC,GACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,ICxCW2X,GAOA5kB,GDiCX,IACIwN,YAAY,EACZD,MAFW,GAGXE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACL+T,UAAY7F,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACjCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2C,OAAOhP,KAAKC,UAAU2B,KAAY,IAEnD+hB,eAAiBtX,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACtCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2W,YAAYhjB,KAAKC,UAAU2B,KAAY,IAExDgiB,gBAAkBvX,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACvCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMoX,aAAazjB,KAAKC,UAAU2B,KAAY,IAEzDmL,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,qDACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,mBAAkB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAClI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY6D,eAAe5Q,KAI9C,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,SAAUpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACnEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,cAAeC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC3FvD,EAAQ,aAAa,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAElE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,0BAA2B,kDAAoDpL,EAAEwB,WAG/G1F,wBAAuB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACvI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYiX,iBAAiBvhB,EAAIujB,eAAehmB,KAInE,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,cAAepB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACxEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,mBAAoBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAChGvD,EAAQ,kBAAkB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEvE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,+BAAgC,kDAAoDpL,EAAEwB,WAGpH1F,yBAAwB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACxI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYgX,kBAAkBlgB,IAAQ7D,KACzD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYgX,kBAAkB,IAAKlgB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KACnH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,eAAgBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACzEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,oBAAqBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACjGvD,EAAQ,mBAAmB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAExE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,gCAAiC,kDAAoDpL,EAAEwB,WAGrH1F,qBAAoB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC3D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASkY,UAAUtf,GAC/BuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,0BAA2B,4DAG3C,IAAIA,EAAAA,GAAY,0BAA2B,2BAA6BpL,EAAEwB,WAI5F1F,iBAAgB,YAAE4O,IAAe,MAAEvK,IAC/B,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASkY,UAAUtf,GACrC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,0BAA2B,4DAG3C,IAAIA,EAAAA,GAAY,4BAA6B,6BAA+BpL,EAAEwB,cCtLxG,SAAWyf,GACPA,EAAkB,2BAA6B,0BAC/CA,EAAkB,wBAA0B,uBAC5CA,EAAkB,yBAA2B,wBAC7CA,EAAkB,sBAAwB,sBAJ9C,CAKGA,KAAsBA,GAAoB,KAE7C,SAAW5kB,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,oCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,MAAMC,GACTC,YAAYC,EAAY,IACpBjB,KAAKkB,QAAU,GACflB,KAAKmB,aAAe,KACpBnB,KAAKoB,eAAiB,KACtBpB,KAAKqB,iBAAmB,IAAIC,IAC5BtB,KAAKuB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpB3B,KAAK4B,gBAAmB/B,IACpBG,KAAKmB,aAAetB,GAExBG,KAAK6B,kBAAoB,CACrB,CAACf,GAAYgB,MAAQC,GAAoB,OAAVA,GAAoC,kBAAVA,GAAuC,kBAAVA,EAA8CA,EAAxBC,KAAKC,UAAUF,GAC3H,CAACjB,GAAYoB,UAAYH,GAAUI,OAAOC,KAAKL,GAAS,IAAIM,QAAO,CAACxC,EAAMyC,KACtEzC,EAAK0C,OAAOD,EAAKP,EAAMO,IAChBzC,IACR,IAAIqC,UACP,CAACpB,GAAY0B,YAAcT,GAAU/B,KAAKyC,cAAcV,IAE5D/B,KAAK0C,kBAAqBC,IACtB,GAAI3C,KAAKqB,iBAAiBuB,IAAID,GAAc,CACxC,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAClD,OAAIE,EACOA,EAAgBE,YAE3B,EAEJ,MAAMF,EAAkB,IAAIG,gBAE5B,OADAhD,KAAKqB,iBAAiB4B,IAAIN,EAAaE,GAChCA,EAAgBE,QAE3B/C,KAAKkD,aAAgBP,IACjB,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAC9CE,IACAA,EAAgBM,QAChBnD,KAAKqB,iBAAiB+B,OAAOT,KAGrC3C,KAAKqD,QAAU,EAAGC,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,EAAMC,KAAAA,EAAMC,MAAAA,EAAOC,OAAAA,EAAS,OAAQzC,QAAAA,EAASyB,YAAAA,KAAgBiB,MACzF,MAAMC,EAAgBN,GAAUvD,KAAKoB,gBAAkBpB,KAAKoB,eAAepB,KAAKmB,eAAkB,GAC5F2C,EAAgB9D,KAAK+D,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS1D,KAAKyC,cAAciB,GAC1CO,EAAmBjE,KAAK6B,kBAAkB4B,GAAQ3C,GAAYgB,MACpE,OAAOoC,MAAO,GAAEhD,GAAWlB,KAAKkB,SAAW,KAAKsC,IAAOQ,EAAe,IAAGA,IAAgB,KAAM,IACxFF,EACHrC,QAAS,IACDgC,GAAQA,IAAS3C,GAAYoB,SAAW,CAAE,eAAgBuB,GAAS,MACnEK,EAAcrC,SAAW,IAEjCsB,OAAQJ,EAAc3C,KAAK0C,kBAAkBC,QAAe,EAC5DW,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOW,EAAiBX,KAC9Ea,MAAK5D,MAAAA,IACJ,MAAM6D,EAAIC,EACVD,EAAEvE,KAAO,KACTuE,EAAEE,MAAQ,KACV,MAAMzE,QAAawE,EAASV,KACvBQ,MAAMtE,IACHuE,EAAEG,GACFH,EAAEvE,KAAOA,EAGTuE,EAAEE,MAAQzE,EAEPuE,KAENI,OAAOC,IACRL,EAAEE,MAAQG,EACHL,KAKX,GAHIzB,GACA3C,KAAKqB,iBAAiB+B,OAAOT,IAE5B0B,EAASE,GACV,MAAM1E,EACV,OAAOA,MAGfsC,OAAOuC,OAAO1E,KAAMiB,GAExB0D,cAAcjB,EAAOpB,GACjB,MAAMsC,EAAQlB,EAAMpB,GACpB,OAAQuC,mBAAmBvC,GACvB,IACAuC,mBAAmBC,MAAMC,QAAQH,GAASA,EAAMI,KAAK,KAAwB,kBAAVJ,EAAqBA,EAAS,GAAEA,KAE3GnC,cAAcwC,GACV,MAAMvB,EAAQuB,GAAY,GACpB7C,EAAOD,OAAOC,KAAKsB,GAAOwB,QAAQ5C,GAAQ,qBAAuBoB,EAAMpB,KAC7E,OAAOF,EACF+C,KAAK7C,GAA8B,kBAAfoB,EAAMpB,IAAsBwC,MAAMC,QAAQrB,EAAMpB,IAEnEtC,KAAK2E,cAAcjB,EAAOpB,GAD1BtC,KAAKyC,cAAciB,EAAMpB,MAE1B0C,KAAK,KAEdI,eAAeH,GACX,MAAMjB,EAAchE,KAAKyC,cAAcwC,GACvC,OAAOjB,EAAe,IAAGA,IAAgB,GAE7CD,mBAAmBsB,EAASC,GACxB,MAAO,IACAtF,KAAKuB,iBACL8D,KACCC,GAAW,GACf7D,QAAS,IACDzB,KAAKuB,cAAcE,SAAW,MAC9B4D,EAAQ5D,SAAW,MAClB6D,GAAWA,EAAQ7D,SAAY,MAS7C,MAAM8D,WAAYxE,GACrBC,cACIwE,SAASC,WASTzF,KAAK8lB,0BAA4B,CAACC,EAAeriB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACjFG,KAAO,uCAAsCuiB,IAC7CpgB,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKgmB,mBAAqB,CAACD,EAAeriB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAC1EG,KAAO,sCAAqCuiB,kBAC5CpgB,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAWP5D,KAAKimB,mCAAqC,CAACF,EAAeriB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAC1FG,KAAO,sCAAqCuiB,0BAC5CpgB,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAWP5D,KAAKgV,yBAA2B,CAAC+Q,EAAeriB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAChFG,KAAO,sCAAqCuiB,eAC5CpgB,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAWP5D,KAAKkmB,wBAA0B,CAACH,EAAe/B,EAAepgB,EAAS,KAAO5D,KAAKqD,QAAQ,CACvFG,KAAO,sCAAqCuiB,gBAA4B/B,IACxEre,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKmmB,oBAAsB,CAAC3N,EAAQ5U,EAAS,KAAO5D,KAAKqD,QAAQ,CAC7DG,KAAO,2CAA0CgV,IACjD7S,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKyQ,YAAc,CAAC7M,EAAS,KAAO5D,KAAKqD,QAAQ,CAC7CG,KAAO,iCACPmC,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKomB,UAAY,CAACxiB,EAAS,KAAO5D,KAAKqD,QAAQ,CAC3CG,KAAO,+BACPmC,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKqmB,gBAAkB,CAAC3iB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACxDG,KAAO,qCACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKsmB,eAAiB,CAACtC,EAAepgB,EAAS,KAAO5D,KAAKqD,QAAQ,CAC/DG,KAAO,sCAAqCwgB,IAC5Cre,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKumB,0BAA4B,CAACvC,EAAetgB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACjFG,KAAO,sCAAqCwgB,gBAC5Cre,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKwmB,gBAAkB,CAACxC,EAAe+B,EAAeniB,EAAS,KAAO5D,KAAKqD,QAAQ,CAC/EG,KAAO,sCAAqCwgB,iBAA6B+B,IACzEpgB,OAAQ,MACRhC,OAAQ,UACLC,IAWP5D,KAAKymB,yBAA2B,CAACzC,EAAe+B,EAAeniB,EAAS,KAAO5D,KAAKqD,QAAQ,CACxFG,KAAO,sCAAqCwgB,iBAA6B+B,yBACzEpgB,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAK0mB,mCAAqC,CAAC1C,EAAetgB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAC1FG,KAAO,sCAAqCwgB,0BAC5Cre,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,KCnWR,MACDgC,GAAgB,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,GAAY,CACrBC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANwB,IAApBF,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKL,IACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,GAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKL,IAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUwB,OAAOD,EAAOvB,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQuB,OAAOD,EAAOtB,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQJ,UAA0B0B,EAAI1B,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwByB,EAAIzB,MAAQG,EAAQH,OAC7CyB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKL,IAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUuB,EAAOvB,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQsB,EAAOtB,MAGvBG,EAAQH,MAAQ,EAEbG,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cC8TJ,IAAIX,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWJH,GAAWoB,KASXpB,GAAW6B,KAcpBpB,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cC5bG,MAuEDue,GAAgB,CAAEC,MAAO,EAAGC,IAAK,GAC1BC,GAAY,CACrB9gB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANsB,IAAlBF,EAAQ2gB,OACR1gB,EAAOE,OAAO,GAAG6Q,OAAOhR,EAAQ2gB,OAEhB,IAAhB3gB,EAAQ4gB,KACR3gB,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQ4gB,KAE9B3gB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK0gB,IACrB,MAAOlgB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ2gB,MAAQ3f,GAAaR,EAAOwQ,UACpC,MACJ,KAAK,EACDhR,EAAQ4gB,IAAM5f,GAAaR,EAAOwQ,UAClC,MACJ,QACIxQ,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK0gB,IAarB,YAZqB9f,IAAjBO,EAAOwf,OAAwC,OAAjBxf,EAAOwf,MACrC3gB,EAAQ2gB,MAAQvf,OAAOD,EAAOwf,OAG9B3gB,EAAQ2gB,MAAQ,OAED/f,IAAfO,EAAOyf,KAAoC,OAAfzf,EAAOyf,IACnC5gB,EAAQ4gB,IAAMxf,OAAOD,EAAOyf,KAG5B5gB,EAAQ4gB,IAAM,EAEX5gB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQ2gB,QAAwBrf,EAAIqf,MAAQ3gB,EAAQ2gB,YACpC/f,IAAhBZ,EAAQ4gB,MAAsBtf,EAAIsf,IAAM5gB,EAAQ4gB,KACzCtf,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK0gB,IAarB,YAZqB9f,IAAjBO,EAAOwf,OAAwC,OAAjBxf,EAAOwf,MACrC3gB,EAAQ2gB,MAAQxf,EAAOwf,MAGvB3gB,EAAQ2gB,MAAQ,OAED/f,IAAfO,EAAOyf,KAAoC,OAAfzf,EAAOyf,IACnC5gB,EAAQ4gB,IAAMzf,EAAOyf,IAGrB5gB,EAAQ4gB,IAAM,EAEX5gB,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cChGJ,IAAIX,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWJH,GAAWoB,KASXpB,GAAW6B,KC4LxB,IAAI7B,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWJH,GAAWoB,KASXpB,GAAW6B,KAcpBpB,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cC9SG,IAAI2e,GA2CAC,IA1CX,SAAWD,GACPA,EAAYA,EAAY,yBAA2B,GAAK,wBACxDA,EAAYA,EAAY,wBAA0B,GAAK,uBACvDA,EAAYA,EAAY,wBAA0B,GAAK,uBACvDA,EAAYA,EAAY,qBAAuB,GAAK,oBACpDA,EAAYA,EAAY,iBAAmB,GAAK,gBALpD,CAMGA,KAAgBA,GAAc,KAqCjC,SAAWC,GACPA,EAAcA,EAAc,2BAA6B,GAAK,0BAE9DA,EAAcA,EAAc,2BAA6B,GAAK,0BAC9DA,EAAcA,EAAc,6BAA+B,GAAK,4BAEhEA,EAAcA,EAAc,4BAA8B,IAAM,2BAChEA,EAAcA,EAAc,iBAAmB,GAAK,eAPxD,CAQGA,KAAkBA,GAAgB,KAmCrC,MAAMC,GAAoB,CAAEnV,MAAO,GACtBoV,GAAgB,CACzBlhB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANsB,IAAlBF,EAAQ6L,OACR5L,EAAOE,OAAO,GAAGA,OAAOH,EAAQ6L,OAER,IAAxB7L,EAAQkhB,KAAK3gB,QACbN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQkhB,MAE7BjhB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKghB,IACrB,MAAOxgB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6L,MAAQrL,EAAOL,SACvB,MACJ,KAAK,EACDH,EAAQkhB,KAAO1gB,EAAOgC,QACtB,MACJ,QACIhC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKghB,IAUrB,YATqBpgB,IAAjBO,EAAO0K,OAAwC,OAAjB1K,EAAO0K,MACrC7L,EAAQ6L,MAAQzK,OAAOD,EAAO0K,OAG9B7L,EAAQ6L,MAAQ,OAEAjL,IAAhBO,EAAO+f,MAAsC,OAAhB/f,EAAO+f,OACpClhB,EAAQkhB,KAAOxe,GAAgBvB,EAAO+f,OAEnClhB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQ6L,QAAwBvK,EAAIuK,MAAQ7L,EAAQ6L,YACnCjL,IAAjBZ,EAAQkhB,OAAuB5f,EAAI4f,KAAOve,QAAiC/B,IAAjBZ,EAAQkhB,KAAqBlhB,EAAQkhB,KAAO,IAAIzgB,aACnGa,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKghB,IAarB,YAZqBpgB,IAAjBO,EAAO0K,OAAwC,OAAjB1K,EAAO0K,MACrC7L,EAAQ6L,MAAQ1K,EAAO0K,MAGvB7L,EAAQ6L,MAAQ,OAEAjL,IAAhBO,EAAO+f,MAAsC,OAAhB/f,EAAO+f,KACpClhB,EAAQkhB,KAAO/f,EAAO+f,KAGtBlhB,EAAQkhB,KAAO,IAAIzgB,WAEhBT,IAyFTmhB,GAAc,GACPC,GAAU,CACnBrhB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OAN4B,IAAxBF,EAAQkhB,KAAK3gB,QACbN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQkhB,WAENtgB,IAA1BZ,EAAQqhB,eACRJ,GAAclhB,OAAOC,EAAQqhB,cAAephB,EAAOE,OAAO,IAAI4D,QAAQC,SAEnE/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKmhB,IACrB,MAAO3gB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQkhB,KAAO1gB,EAAOgC,QACtB,MACJ,KAAK,EACDxC,EAAQqhB,cAAgBJ,GAAc3gB,OAAOE,EAAQA,EAAOL,UAC5D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKmhB,IAUrB,YAToBvgB,IAAhBO,EAAO+f,MAAsC,OAAhB/f,EAAO+f,OACpClhB,EAAQkhB,KAAOxe,GAAgBvB,EAAO+f,YAEbtgB,IAAzBO,EAAOkgB,eAAwD,OAAzBlgB,EAAOkgB,cAC7CrhB,EAAQqhB,cAAgBJ,GAAc/f,SAASC,EAAOkgB,eAGtDrhB,EAAQqhB,mBAAgBzgB,EAErBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFiBV,IAAjBZ,EAAQkhB,OAAuB5f,EAAI4f,KAAOve,QAAiC/B,IAAjBZ,EAAQkhB,KAAqBlhB,EAAQkhB,KAAO,IAAIzgB,kBAChFG,IAA1BZ,EAAQqhB,gBAAgC/f,EAAI+f,cAAgBrhB,EAAQqhB,cAAgBJ,GAAc5f,OAAOrB,EAAQqhB,oBAAiBzgB,GAC3HU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKmhB,IAarB,YAZoBvgB,IAAhBO,EAAO+f,MAAsC,OAAhB/f,EAAO+f,KACpClhB,EAAQkhB,KAAO/f,EAAO+f,KAGtBlhB,EAAQkhB,KAAO,IAAIzgB,gBAEMG,IAAzBO,EAAOkgB,eAAwD,OAAzBlgB,EAAOkgB,cAC7CrhB,EAAQqhB,cAAgBJ,GAAc1f,YAAYJ,EAAOkgB,eAGzDrhB,EAAQqhB,mBAAgBzgB,EAErBZ,IAGTshB,GAAa,CAAEC,QAAS,GAAIhP,OAAQ,GAC7BiP,GAAS,CAClBzhB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UA2CrB,YA1CwBU,IAApBZ,EAAQyhB,SACRZ,GAAU9gB,OAAOC,EAAQyhB,QAASxhB,EAAOE,OAAO,IAAI4D,QAAQC,SAExC,KAApBhE,EAAQuhB,SACRthB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQuhB,SAEd,IAAnBvhB,EAAQuS,QACRtS,EAAOE,OAAO,IAAIC,MAAMJ,EAAQuS,aAEf3R,IAAjBZ,EAAQ8V,MACRhW,GAAAA,OAAiBoE,GAAYlE,EAAQ8V,MAAO7V,EAAOE,OAAO,IAAI4D,QAAQC,cAE9CpD,IAAxBZ,EAAQ0hB,aACRN,GAAQrhB,OAAOC,EAAQ0hB,YAAazhB,EAAOE,OAAO,IAAI4D,QAAQC,SAE5B,IAAlChE,EAAQ2hB,eAAephB,QACvBN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQ2hB,gBAEJ,IAA5B3hB,EAAQ4hB,SAASrhB,QACjBN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQ4hB,UAEE,IAAlC5hB,EAAQ6hB,eAAethB,QACvBN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQ6hB,gBAEM,IAAtC7hB,EAAQ8hB,mBAAmBvhB,QAC3BN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQ8hB,oBAEC,IAAjC9hB,EAAQ+hB,cAAcxhB,QACtBN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQ+hB,eAEL,IAA3B/hB,EAAQgiB,QAAQzhB,QAChBN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQgiB,SAEG,IAAnChiB,EAAQiiB,gBAAgB1hB,QACxBN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQiiB,iBAEA,IAAhCjiB,EAAQoV,aAAa7U,QACrBN,EAAOE,OAAO,KAAKqC,MAAMxC,EAAQoV,cAEE,IAAnCpV,EAAQkiB,gBAAgB3hB,QACxBN,EAAOE,OAAO,KAAKqC,MAAMxC,EAAQkiB,iBAE9BjiB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKshB,IACrB,MAAO9gB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyhB,QAAUZ,GAAUvgB,OAAOE,EAAQA,EAAOL,UAClD,MACJ,KAAK,EACDH,EAAQuhB,QAAU/gB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQuS,OAASvR,GAAaR,EAAOJ,SACrC,MACJ,KAAK,EACDJ,EAAQ8V,KAAO3R,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WAC7D,MACJ,KAAK,EACDH,EAAQ0hB,YAAcN,GAAQ9gB,OAAOE,EAAQA,EAAOL,UACpD,MACJ,KAAK,EACDH,EAAQ2hB,eAAiBnhB,EAAOgC,QAChC,MACJ,KAAK,EACDxC,EAAQ4hB,SAAWphB,EAAOgC,QAC1B,MACJ,KAAK,EACDxC,EAAQ6hB,eAAiBrhB,EAAOgC,QAChC,MACJ,KAAK,EACDxC,EAAQ8hB,mBAAqBthB,EAAOgC,QACpC,MACJ,KAAK,GACDxC,EAAQ+hB,cAAgBvhB,EAAOgC,QAC/B,MACJ,KAAK,GACDxC,EAAQgiB,QAAUxhB,EAAOgC,QACzB,MACJ,KAAK,GACDxC,EAAQiiB,gBAAkBzhB,EAAOgC,QACjC,MACJ,KAAK,GACDxC,EAAQoV,aAAe5U,EAAOgC,QAC9B,MACJ,KAAK,GACDxC,EAAQkiB,gBAAkB1hB,EAAOgC,QACjC,MACJ,QACIhC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKshB,IA0DrB,YAzDuB1gB,IAAnBO,EAAOsgB,SAA4C,OAAnBtgB,EAAOsgB,QACvCzhB,EAAQyhB,QAAUZ,GAAU3f,SAASC,EAAOsgB,SAG5CzhB,EAAQyhB,aAAU7gB,OAECA,IAAnBO,EAAOogB,SAA4C,OAAnBpgB,EAAOogB,QACvCvhB,EAAQuhB,QAAU9e,OAAOtB,EAAOogB,SAGhCvhB,EAAQuhB,QAAU,QAEA3gB,IAAlBO,EAAOoR,QAA0C,OAAlBpR,EAAOoR,OACtCvS,EAAQuS,OAASnR,OAAOD,EAAOoR,QAG/BvS,EAAQuS,OAAS,OAED3R,IAAhBO,EAAO2U,MAAsC,OAAhB3U,EAAO2U,KACpC9V,EAAQ8V,KAAO1R,GAAkBjD,EAAO2U,MAGxC9V,EAAQ8V,UAAOlV,OAEQA,IAAvBO,EAAOugB,aAAoD,OAAvBvgB,EAAOugB,YAC3C1hB,EAAQ0hB,YAAcN,GAAQlgB,SAASC,EAAOugB,aAG9C1hB,EAAQ0hB,iBAAc9gB,OAEIA,IAA1BO,EAAOwgB,gBAA0D,OAA1BxgB,EAAOwgB,iBAC9C3hB,EAAQ2hB,eAAiBjf,GAAgBvB,EAAOwgB,sBAE5B/gB,IAApBO,EAAOygB,UAA8C,OAApBzgB,EAAOygB,WACxC5hB,EAAQ4hB,SAAWlf,GAAgBvB,EAAOygB,gBAEhBhhB,IAA1BO,EAAO0gB,gBAA0D,OAA1B1gB,EAAO0gB,iBAC9C7hB,EAAQ6hB,eAAiBnf,GAAgBvB,EAAO0gB,sBAElBjhB,IAA9BO,EAAO2gB,oBAAkE,OAA9B3gB,EAAO2gB,qBAClD9hB,EAAQ8hB,mBAAqBpf,GAAgBvB,EAAO2gB,0BAE3BlhB,IAAzBO,EAAO4gB,eAAwD,OAAzB5gB,EAAO4gB,gBAC7C/hB,EAAQ+hB,cAAgBrf,GAAgBvB,EAAO4gB,qBAE5BnhB,IAAnBO,EAAO6gB,SAA4C,OAAnB7gB,EAAO6gB,UACvChiB,EAAQgiB,QAAUtf,GAAgBvB,EAAO6gB,eAEdphB,IAA3BO,EAAO8gB,iBAA4D,OAA3B9gB,EAAO8gB,kBAC/CjiB,EAAQiiB,gBAAkBvf,GAAgBvB,EAAO8gB,uBAEzBrhB,IAAxBO,EAAOiU,cAAsD,OAAxBjU,EAAOiU,eAC5CpV,EAAQoV,aAAe1S,GAAgBvB,EAAOiU,oBAEnBxU,IAA3BO,EAAO+gB,iBAA4D,OAA3B/gB,EAAO+gB,kBAC/CliB,EAAQkiB,gBAAkBxf,GAAgBvB,EAAO+gB,kBAE9CliB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAoBZ,YAnBoBV,IAApBZ,EAAQyhB,UAA0BngB,EAAImgB,QAAUzhB,EAAQyhB,QAAUZ,GAAUxf,OAAOrB,EAAQyhB,cAAW7gB,QAClFA,IAApBZ,EAAQuhB,UAA0BjgB,EAAIigB,QAAUvhB,EAAQuhB,cACrC3gB,IAAnBZ,EAAQuS,SAAyBjR,EAAIiR,OAASvS,EAAQuS,aACrC3R,IAAjBZ,EAAQ8V,OAAuBxU,EAAIwU,UAAwBlV,IAAjBZ,EAAQ8V,KAAqB9V,EAAQ8V,KAAKzR,cAAgB,WAC5EzD,IAAxBZ,EAAQ0hB,cAA8BpgB,EAAIogB,YAAc1hB,EAAQ0hB,YAAcN,GAAQ/f,OAAOrB,EAAQ0hB,kBAAe9gB,QACzFA,IAA3BZ,EAAQ2hB,iBACHrgB,EAAIqgB,eAAiBhf,QAA2C/B,IAA3BZ,EAAQ2hB,eAA+B3hB,EAAQ2hB,eAAiB,IAAIlhB,kBACzFG,IAArBZ,EAAQ4hB,WAA2BtgB,EAAIsgB,SAAWjf,QAAqC/B,IAArBZ,EAAQ4hB,SAAyB5hB,EAAQ4hB,SAAW,IAAInhB,kBAC/FG,IAA3BZ,EAAQ6hB,iBACHvgB,EAAIugB,eAAiBlf,QAA2C/B,IAA3BZ,EAAQ6hB,eAA+B7hB,EAAQ6hB,eAAiB,IAAIphB,kBAC/EG,IAA/BZ,EAAQ8hB,qBACHxgB,EAAIwgB,mBAAqBnf,QAA+C/B,IAA/BZ,EAAQ8hB,mBAAmC9hB,EAAQ8hB,mBAAqB,IAAIrhB,kBAChGG,IAA1BZ,EAAQ+hB,gBAAgCzgB,EAAIygB,cAAgBpf,QAA0C/B,IAA1BZ,EAAQ+hB,cAA8B/hB,EAAQ+hB,cAAgB,IAAIthB,kBAC1HG,IAApBZ,EAAQgiB,UAA0B1gB,EAAI0gB,QAAUrf,QAAoC/B,IAApBZ,EAAQgiB,QAAwBhiB,EAAQgiB,QAAU,IAAIvhB,kBAC1FG,IAA5BZ,EAAQiiB,kBACH3gB,EAAI2gB,gBAAkBtf,QAA4C/B,IAA5BZ,EAAQiiB,gBAAgCjiB,EAAQiiB,gBAAkB,IAAIxhB,kBACxFG,IAAzBZ,EAAQoV,eAA+B9T,EAAI8T,aAAezS,QAAyC/B,IAAzBZ,EAAQoV,aAA6BpV,EAAQoV,aAAe,IAAI3U,kBAC9GG,IAA5BZ,EAAQkiB,kBACH5gB,EAAI4gB,gBAAkBvf,QAA4C/B,IAA5BZ,EAAQkiB,gBAAgCliB,EAAQkiB,gBAAkB,IAAIzhB,aAC1Ga,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKshB,IAqFrB,YApFuB1gB,IAAnBO,EAAOsgB,SAA4C,OAAnBtgB,EAAOsgB,QACvCzhB,EAAQyhB,QAAUZ,GAAUtf,YAAYJ,EAAOsgB,SAG/CzhB,EAAQyhB,aAAU7gB,OAECA,IAAnBO,EAAOogB,SAA4C,OAAnBpgB,EAAOogB,QACvCvhB,EAAQuhB,QAAUpgB,EAAOogB,QAGzBvhB,EAAQuhB,QAAU,QAEA3gB,IAAlBO,EAAOoR,QAA0C,OAAlBpR,EAAOoR,OACtCvS,EAAQuS,OAASpR,EAAOoR,OAGxBvS,EAAQuS,OAAS,OAED3R,IAAhBO,EAAO2U,MAAsC,OAAhB3U,EAAO2U,KACpC9V,EAAQ8V,KAAO3U,EAAO2U,KAGtB9V,EAAQ8V,UAAOlV,OAEQA,IAAvBO,EAAOugB,aAAoD,OAAvBvgB,EAAOugB,YAC3C1hB,EAAQ0hB,YAAcN,GAAQ7f,YAAYJ,EAAOugB,aAGjD1hB,EAAQ0hB,iBAAc9gB,OAEIA,IAA1BO,EAAOwgB,gBAA0D,OAA1BxgB,EAAOwgB,eAC9C3hB,EAAQ2hB,eAAiBxgB,EAAOwgB,eAGhC3hB,EAAQ2hB,eAAiB,IAAIlhB,gBAETG,IAApBO,EAAOygB,UAA8C,OAApBzgB,EAAOygB,SACxC5hB,EAAQ4hB,SAAWzgB,EAAOygB,SAG1B5hB,EAAQ4hB,SAAW,IAAInhB,gBAEGG,IAA1BO,EAAO0gB,gBAA0D,OAA1B1gB,EAAO0gB,eAC9C7hB,EAAQ6hB,eAAiB1gB,EAAO0gB,eAGhC7hB,EAAQ6hB,eAAiB,IAAIphB,gBAECG,IAA9BO,EAAO2gB,oBAAkE,OAA9B3gB,EAAO2gB,mBAClD9hB,EAAQ8hB,mBAAqB3gB,EAAO2gB,mBAGpC9hB,EAAQ8hB,mBAAqB,IAAIrhB,gBAERG,IAAzBO,EAAO4gB,eAAwD,OAAzB5gB,EAAO4gB,cAC7C/hB,EAAQ+hB,cAAgB5gB,EAAO4gB,cAG/B/hB,EAAQ+hB,cAAgB,IAAIthB,gBAETG,IAAnBO,EAAO6gB,SAA4C,OAAnB7gB,EAAO6gB,QACvChiB,EAAQgiB,QAAU7gB,EAAO6gB,QAGzBhiB,EAAQgiB,QAAU,IAAIvhB,gBAEKG,IAA3BO,EAAO8gB,iBAA4D,OAA3B9gB,EAAO8gB,gBAC/CjiB,EAAQiiB,gBAAkB9gB,EAAO8gB,gBAGjCjiB,EAAQiiB,gBAAkB,IAAIxhB,gBAENG,IAAxBO,EAAOiU,cAAsD,OAAxBjU,EAAOiU,aAC5CpV,EAAQoV,aAAejU,EAAOiU,aAG9BpV,EAAQoV,aAAe,IAAI3U,gBAEAG,IAA3BO,EAAO+gB,iBAA4D,OAA3B/gB,EAAO+gB,gBAC/CliB,EAAQkiB,gBAAkB/gB,EAAO+gB,gBAGjCliB,EAAQkiB,gBAAkB,IAAIzhB,WAE3BT,IAq7Bf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,MAAMiB,GAAOpB,GAAWoB,MAAX,CAAqBC,GAAQrB,GAAWsB,OAAOC,KAAKF,EAAK,UAAUG,SAAS,WACzF,SAASN,GAAgBG,GACrB,MAAMI,EAAML,GAAKC,GACXK,EAAM,IAAIzC,WAAWwC,EAAI1C,QAC/B,IAAK,IAAI4C,EAAI,EAAGA,EAAIF,EAAI1C,SAAU4C,EAC9BD,EAAIC,GAAKF,EAAIG,WAAWD,GAE5B,OAAOD,EAEX,MAAMG,GAAO7B,GAAW6B,MAAX,CAAqBJ,GAAQzB,GAAWsB,OAAOC,KAAKE,EAAK,UAAUD,SAAS,WACzF,SAASL,GAAgBO,GACrB,MAAMD,EAAM,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAII,aAAcH,EAClCF,EAAIM,KAAKd,OAAOe,aAAaN,EAAIC,KAErC,OAAOE,GAAKJ,EAAIlE,KAAK,KAEzB,SAASmF,GAAYI,GACjB,MAAM1E,EAAU0E,EAAKC,UAAY,IAC3B1E,EAASyE,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAE3E,QAAAA,EAASC,MAAAA,GAEtB,SAASsE,GAAcK,GACnB,IAAIC,EAAqB,IAAZD,EAAE5E,QAEf,OADA6E,GAAUD,EAAE3E,MAAQ,IACb,IAAI6E,KAAKD,GAEpB,SAASL,GAAkBO,GACvB,OAAIA,aAAaD,KACNC,EAEW,kBAANA,EACL,IAAID,KAAKC,GAGTR,GAAcrE,GAAAA,SAAmB6E,IAGhD,SAAS3D,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCzjDG,MACDC,GAAU,CAAEC,QAAS,IACdC,GAAM,CACfvC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQqC,SACRpC,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqC,SAER,IAAzBrC,EAAQrB,MAAM4B,QACdN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQrB,OAE7BsB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoC,IACrB,MAAO5B,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqC,QAAU7B,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQrB,MAAQ6B,EAAOgC,QACvB,MACJ,QACIhC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoC,IAUrB,YATuBxB,IAAnBO,EAAOkB,SAA4C,OAAnBlB,EAAOkB,QACvCrC,EAAQqC,QAAUI,OAAOtB,EAAOkB,SAGhCrC,EAAQqC,QAAU,QAEDzB,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,QACrCqB,EAAQrB,MAAQ+D,GAAgBvB,EAAOxC,QAEpCqB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQqC,UAA0Bf,EAAIe,QAAUrC,EAAQqC,cACtCzB,IAAlBZ,EAAQrB,QAAwB2C,EAAI3C,MAAQgE,QAAkC/B,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aACvGa,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoC,IAarB,YAZuBxB,IAAnBO,EAAOkB,SAA4C,OAAnBlB,EAAOkB,QACvCrC,EAAQqC,QAAUlB,EAAOkB,QAGzBrC,EAAQqC,QAAU,QAEDzB,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,MACrCqB,EAAQrB,MAAQwC,EAAOxC,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,MAAMiB,GAAOpB,GAAWoB,MAAX,CAAqBC,GAAQrB,GAAWsB,OAAOC,KAAKF,EAAK,UAAUG,SAAS,WACzF,SAASN,GAAgBG,GACrB,MAAMI,EAAML,GAAKC,GACXK,EAAM,IAAIzC,WAAWwC,EAAI1C,QAC/B,IAAK,IAAI4C,EAAI,EAAGA,EAAIF,EAAI1C,SAAU4C,EAC9BD,EAAIC,GAAKF,EAAIG,WAAWD,GAE5B,OAAOD,EAEX,MAAMG,GAAO7B,GAAW6B,MAAX,CAAqBJ,GAAQzB,GAAWsB,OAAOC,KAAKE,EAAK,UAAUD,SAAS,WACzF,SAASL,GAAgBO,GACrB,MAAMD,EAAM,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAII,aAAcH,EAClCF,EAAIM,KAAKd,OAAOe,aAAaN,EAAIC,KAErC,OAAOE,GAAKJ,EAAIlE,KAAK,KC7FlB,MACD8X,GAAe,CAAEjX,QAAS,EAAGC,MAAO,GAC7BiX,GAAW,CACpB/W,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANwB,IAApBF,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6W,IACrB,MAAOrW,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,GAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6W,IAarB,YAZuBjW,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUwB,OAAOD,EAAOvB,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQuB,OAAOD,EAAOtB,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQJ,UAA0B0B,EAAI1B,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwByB,EAAIzB,MAAQG,EAAQH,OAC7CyB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6W,IAarB,YAZuBjW,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUuB,EAAOvB,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQsB,EAAOtB,MAGvBG,EAAQH,MAAQ,EAEbG,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cC3FG,MACDwI,GAAW,CAAEN,MAAO,GAAIxE,OAAQ,IACzB+E,GAAO,CAChB7K,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQqK,OACRpK,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqK,OAEd,KAAnBrK,EAAQ6F,QACR5F,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6F,QAE9B5F,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2K,IACrB,MAAOnK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqK,MAAQ7J,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6F,OAASrF,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQ5H,OAAOtB,EAAOkJ,OAG9BrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASpD,OAAOtB,EAAO0E,QAG/B7F,EAAQ6F,OAAS,GAEd7F,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQqK,QAAwB/I,EAAI+I,MAAQrK,EAAQqK,YACjCzJ,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,QAC/CvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQlJ,EAAOkJ,MAGvBrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,GAEd7F,IC5DR,IAAImiB,GAYJ,SAASC,GAAmBjhB,GAC/B,OAAQA,GACJ,KAAK,EACL,IAAK,0BACD,OAAOghB,GAAWE,wBACtB,KAAK,EACL,IAAK,uBACD,OAAOF,GAAWG,qBACtB,KAAK,EACL,IAAK,wBACD,OAAOH,GAAWI,sBACtB,KAAK,EACL,IAAK,qBACD,OAAOJ,GAAWK,mBACtB,KAAM,EACN,IAAK,eACL,QACI,OAAOL,GAAWjJ,cAGvB,SAASuJ,GAAiBthB,GAC7B,OAAQA,GACJ,KAAKghB,GAAWE,wBACZ,MAAO,0BACX,KAAKF,GAAWG,qBACZ,MAAO,uBACX,KAAKH,GAAWI,sBACZ,MAAO,wBACX,KAAKJ,GAAWK,mBACZ,MAAO,qBACX,QACI,MAAO,YA1CnB,SAAWL,GAEPA,EAAWA,EAAW,2BAA6B,GAAK,0BAExDA,EAAWA,EAAW,wBAA0B,GAAK,uBAErDA,EAAWA,EAAW,yBAA2B,GAAK,wBAEtDA,EAAWA,EAAW,sBAAwB,GAAK,qBACnDA,EAAWA,EAAW,iBAAmB,GAAK,gBATlD,CAUGA,KAAeA,GAAa,KAmC/B,MAAMO,GAAqB,GACdC,GAAiB,CAC1B5iB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,eACEU,IAAnBZ,EAAQ4iB,QACRpB,GAAOzhB,OAAOC,EAAQ4iB,OAAQ3iB,EAAOE,OAAO,IAAI4D,QAAQC,SAE5D,IAAK,MAAMmB,KAAKnF,EAAQ6iB,OACpBC,GAAU/iB,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAElD,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK0iB,IACrB1iB,EAAQ6iB,OAAS,GACjB,MAAOriB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4iB,OAASpB,GAAOlhB,OAAOE,EAAQA,EAAOL,UAC9C,MACJ,KAAK,EACDH,EAAQ6iB,OAAOtf,KAAKuf,GAAUxiB,OAAOE,EAAQA,EAAOL,WACpD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK0iB,IAQrB,GAPA1iB,EAAQ6iB,OAAS,QACKjiB,IAAlBO,EAAOyhB,QAA0C,OAAlBzhB,EAAOyhB,OACtC5iB,EAAQ4iB,OAASpB,GAAOtgB,SAASC,EAAOyhB,QAGxC5iB,EAAQ4iB,YAAShiB,OAECA,IAAlBO,EAAO0hB,QAA0C,OAAlB1hB,EAAO0hB,OACtC,IAAK,MAAMrkB,KAAK2C,EAAO0hB,OACnB7iB,EAAQ6iB,OAAOtf,KAAKuf,GAAU5hB,SAAS1C,IAG/C,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPmBV,IAAnBZ,EAAQ4iB,SAAyBthB,EAAIshB,OAAS5iB,EAAQ4iB,OAASpB,GAAOngB,OAAOrB,EAAQ4iB,aAAUhiB,GAC3FZ,EAAQ6iB,OACRvhB,EAAIuhB,OAAS7iB,EAAQ6iB,OAAO3jB,KAAKV,GAAOA,EAAIskB,GAAUzhB,OAAO7C,QAAKoC,IAGlEU,EAAIuhB,OAAS,GAEVvhB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK0iB,IAQrB,GAPA1iB,EAAQ6iB,OAAS,QACKjiB,IAAlBO,EAAOyhB,QAA0C,OAAlBzhB,EAAOyhB,OACtC5iB,EAAQ4iB,OAASpB,GAAOjgB,YAAYJ,EAAOyhB,QAG3C5iB,EAAQ4iB,YAAShiB,OAECA,IAAlBO,EAAO0hB,QAA0C,OAAlB1hB,EAAO0hB,OACtC,IAAK,MAAMrkB,KAAK2C,EAAO0hB,OACnB7iB,EAAQ6iB,OAAOtf,KAAKuf,GAAUvhB,YAAY/C,IAGlD,OAAOwB,IAGT+iB,GAAsB,CAAEC,KAAM,GAAIC,QAAS,GAAIC,cAAe,IACvDC,GAAkB,CAC3BpjB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATqB,KAAjBF,EAAQgjB,MACR/iB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQgjB,MAEb,KAApBhjB,EAAQijB,SACRhjB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQijB,SAEP,KAA1BjjB,EAAQkjB,eACRjjB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQkjB,eAE9BjjB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK+iB,IACrB,MAAOviB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgjB,KAAOxiB,EAAO+B,SACtB,MACJ,KAAK,EACDvC,EAAQijB,QAAUziB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQkjB,cAAgB1iB,EAAO+B,SAC/B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK+iB,IAmBrB,YAlBoBniB,IAAhBO,EAAO6hB,MAAsC,OAAhB7hB,EAAO6hB,KACpChjB,EAAQgjB,KAAOvgB,OAAOtB,EAAO6hB,MAG7BhjB,EAAQgjB,KAAO,QAEIpiB,IAAnBO,EAAO8hB,SAA4C,OAAnB9hB,EAAO8hB,QACvCjjB,EAAQijB,QAAUxgB,OAAOtB,EAAO8hB,SAGhCjjB,EAAQijB,QAAU,QAEOriB,IAAzBO,EAAO+hB,eAAwD,OAAzB/hB,EAAO+hB,cAC7CljB,EAAQkjB,cAAgBzgB,OAAOtB,EAAO+hB,eAGtCljB,EAAQkjB,cAAgB,GAErBljB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHiBV,IAAjBZ,EAAQgjB,OAAuB1hB,EAAI0hB,KAAOhjB,EAAQgjB,WAC9BpiB,IAApBZ,EAAQijB,UAA0B3hB,EAAI2hB,QAAUjjB,EAAQijB,cAC9BriB,IAA1BZ,EAAQkjB,gBAAgC5hB,EAAI4hB,cAAgBljB,EAAQkjB,eAC7D5hB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK+iB,IAmBrB,YAlBoBniB,IAAhBO,EAAO6hB,MAAsC,OAAhB7hB,EAAO6hB,KACpChjB,EAAQgjB,KAAO7hB,EAAO6hB,KAGtBhjB,EAAQgjB,KAAO,QAEIpiB,IAAnBO,EAAO8hB,SAA4C,OAAnB9hB,EAAO8hB,QACvCjjB,EAAQijB,QAAU9hB,EAAO8hB,QAGzBjjB,EAAQijB,QAAU,QAEOriB,IAAzBO,EAAO+hB,eAAwD,OAAzB/hB,EAAO+hB,cAC7CljB,EAAQkjB,cAAgB/hB,EAAO+hB,cAG/BljB,EAAQkjB,cAAgB,GAErBljB,IAGTojB,GAAiB,GACVC,GAAa,CACtBtjB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,YANgCU,IAA5BZ,EAAQsjB,iBACRH,GAAgBpjB,OAAOC,EAAQsjB,gBAAiBrjB,EAAOE,OAAO,IAAI4D,QAAQC,cAEnDpD,IAAvBZ,EAAQujB,YACRzjB,GAAAA,OAAiBoE,GAAYlE,EAAQujB,YAAatjB,EAAOE,OAAO,IAAI4D,QAAQC,SAEzE/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKojB,IACrB,MAAO5iB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsjB,gBAAkBH,GAAgB7iB,OAAOE,EAAQA,EAAOL,UAChE,MACJ,KAAK,EACDH,EAAQujB,WAAapf,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WACnE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKojB,IAarB,YAZ+BxiB,IAA3BO,EAAOmiB,iBAA4D,OAA3BniB,EAAOmiB,gBAC/CtjB,EAAQsjB,gBAAkBH,GAAgBjiB,SAASC,EAAOmiB,iBAG1DtjB,EAAQsjB,qBAAkB1iB,OAEJA,IAAtBO,EAAOoiB,YAAkD,OAAtBpiB,EAAOoiB,WAC1CvjB,EAAQujB,WAAanf,GAAkBjD,EAAOoiB,YAG9CvjB,EAAQujB,gBAAa3iB,EAElBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF4BV,IAA5BZ,EAAQsjB,kBAAkChiB,EAAIgiB,gBAAkBtjB,EAAQsjB,gBAAkBH,GAAgB9hB,OAAOrB,EAAQsjB,sBAAmB1iB,QACrHA,IAAvBZ,EAAQujB,aAA6BjiB,EAAIiiB,gBAAoC3iB,IAAvBZ,EAAQujB,WAA2BvjB,EAAQujB,WAAWlf,cAAgB,MACrH/C,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKojB,IAarB,YAZ+BxiB,IAA3BO,EAAOmiB,iBAA4D,OAA3BniB,EAAOmiB,gBAC/CtjB,EAAQsjB,gBAAkBH,GAAgB5hB,YAAYJ,EAAOmiB,iBAG7DtjB,EAAQsjB,qBAAkB1iB,OAEJA,IAAtBO,EAAOoiB,YAAkD,OAAtBpiB,EAAOoiB,WAC1CvjB,EAAQujB,WAAapiB,EAAOoiB,WAG5BvjB,EAAQujB,gBAAa3iB,EAElBZ,IAGTwjB,GAAkB,CAAEC,QAAS,GAAIC,SAAU,GAAIC,QAAS,GAAIC,gBAAiB,GAAIC,QAAS,IACnFC,GAAc,CACvB/jB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAgBrB,MAfwB,KAApBF,EAAQyjB,SACRxjB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQyjB,SAEZ,KAArBzjB,EAAQ0jB,UACRzjB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ0jB,UAEb,KAApB1jB,EAAQ2jB,SACR1jB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ2jB,SAEL,KAA5B3jB,EAAQ4jB,iBACR3jB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4jB,iBAEb,KAApB5jB,EAAQ6jB,SACR5jB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6jB,SAE9B5jB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKwjB,IACrB,MAAOhjB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQyjB,QAAUjjB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ0jB,SAAWljB,EAAO+B,SAC1B,MACJ,KAAK,EACDvC,EAAQ2jB,QAAUnjB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ4jB,gBAAkBpjB,EAAO+B,SACjC,MACJ,KAAK,EACDvC,EAAQ6jB,QAAUrjB,EAAO+B,SACzB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKwjB,IA+BrB,YA9BuB5iB,IAAnBO,EAAOsiB,SAA4C,OAAnBtiB,EAAOsiB,QACvCzjB,EAAQyjB,QAAUhhB,OAAOtB,EAAOsiB,SAGhCzjB,EAAQyjB,QAAU,QAEE7iB,IAApBO,EAAOuiB,UAA8C,OAApBviB,EAAOuiB,SACxC1jB,EAAQ0jB,SAAWjhB,OAAOtB,EAAOuiB,UAGjC1jB,EAAQ0jB,SAAW,QAEA9iB,IAAnBO,EAAOwiB,SAA4C,OAAnBxiB,EAAOwiB,QACvC3jB,EAAQ2jB,QAAUlhB,OAAOtB,EAAOwiB,SAGhC3jB,EAAQ2jB,QAAU,QAES/iB,IAA3BO,EAAOyiB,iBAA4D,OAA3BziB,EAAOyiB,gBAC/C5jB,EAAQ4jB,gBAAkBnhB,OAAOtB,EAAOyiB,iBAGxC5jB,EAAQ4jB,gBAAkB,QAEPhjB,IAAnBO,EAAO0iB,SAA4C,OAAnB1iB,EAAO0iB,QACvC7jB,EAAQ6jB,QAAUphB,OAAOtB,EAAO0iB,SAGhC7jB,EAAQ6jB,QAAU,GAEf7jB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAMZ,YALoBV,IAApBZ,EAAQyjB,UAA0BniB,EAAImiB,QAAUzjB,EAAQyjB,cACnC7iB,IAArBZ,EAAQ0jB,WAA2BpiB,EAAIoiB,SAAW1jB,EAAQ0jB,eACtC9iB,IAApBZ,EAAQ2jB,UAA0BriB,EAAIqiB,QAAU3jB,EAAQ2jB,cAC5B/iB,IAA5BZ,EAAQ4jB,kBAAkCtiB,EAAIsiB,gBAAkB5jB,EAAQ4jB,sBACpDhjB,IAApBZ,EAAQ6jB,UAA0BviB,EAAIuiB,QAAU7jB,EAAQ6jB,SACjDviB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKwjB,IA+BrB,YA9BuB5iB,IAAnBO,EAAOsiB,SAA4C,OAAnBtiB,EAAOsiB,QACvCzjB,EAAQyjB,QAAUtiB,EAAOsiB,QAGzBzjB,EAAQyjB,QAAU,QAEE7iB,IAApBO,EAAOuiB,UAA8C,OAApBviB,EAAOuiB,SACxC1jB,EAAQ0jB,SAAWviB,EAAOuiB,SAG1B1jB,EAAQ0jB,SAAW,QAEA9iB,IAAnBO,EAAOwiB,SAA4C,OAAnBxiB,EAAOwiB,QACvC3jB,EAAQ2jB,QAAUxiB,EAAOwiB,QAGzB3jB,EAAQ2jB,QAAU,QAES/iB,IAA3BO,EAAOyiB,iBAA4D,OAA3BziB,EAAOyiB,gBAC/C5jB,EAAQ4jB,gBAAkBziB,EAAOyiB,gBAGjC5jB,EAAQ4jB,gBAAkB,QAEPhjB,IAAnBO,EAAO0iB,SAA4C,OAAnB1iB,EAAO0iB,QACvC7jB,EAAQ6jB,QAAU1iB,EAAO0iB,QAGzB7jB,EAAQ6jB,QAAU,GAEf7jB,IAGT+jB,GAAgB,CAAEC,gBAAiB,GAAIC,QAAQ,EAAO5J,OAAQ,EAAG6J,OAAQ,GAAIC,gBAAiB,GAAIC,gBAAiB,EAAGC,kBAAmB,IAClIvB,GAAY,CACrB/iB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAkCrB,MAjCgC,KAA5BF,EAAQgkB,iBACR/jB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQgkB,sBAELpjB,IAA5BZ,EAAQskB,iBACRhiB,GAAAA,OAAWtC,EAAQskB,gBAAiBrkB,EAAOE,OAAO,IAAI4D,QAAQC,UAE3C,IAAnBhE,EAAQikB,QACRhkB,EAAOE,OAAO,IAAI+K,KAAKlL,EAAQikB,QAEZ,IAAnBjkB,EAAQqa,QACRpa,EAAOE,OAAO,IAAIE,MAAML,EAAQqa,QAEb,KAAnBra,EAAQkkB,QACRjkB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQkkB,QAEL,KAA5BlkB,EAAQmkB,iBACRlkB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQmkB,sBAETvjB,IAAxBZ,EAAQmM,aACR2X,GAAY/jB,OAAOC,EAAQmM,YAAalM,EAAOE,OAAO,IAAI4D,QAAQC,SAEtC,IAA5BhE,EAAQokB,iBACRnkB,EAAOE,OAAO,IAAIC,MAAMJ,EAAQokB,sBAENxjB,IAA1BZ,EAAQukB,eACRzkB,GAAAA,OAAiBoE,GAAYlE,EAAQukB,eAAgBtkB,EAAOE,OAAO,IAAI4D,QAAQC,cAExDpD,IAAvBZ,EAAQmR,YACRkS,GAAWtjB,OAAOC,EAAQmR,WAAYlR,EAAOE,OAAO,IAAI4D,QAAQC,SAElC,KAA9BhE,EAAQqkB,mBACRpkB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqkB,mBAE9BpkB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK+jB,IACrB,MAAOvjB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgkB,gBAAkBxjB,EAAO+B,SACjC,MACJ,KAAK,EACDvC,EAAQskB,gBAAkBhiB,GAAAA,OAAW9B,EAAQA,EAAOL,UACpD,MACJ,KAAK,EACDH,EAAQikB,OAASzjB,EAAO0K,OACxB,MACJ,KAAK,EACDlL,EAAQqa,OAAS7Z,EAAOH,QACxB,MACJ,KAAK,EACDL,EAAQkkB,OAAS1jB,EAAO+B,SACxB,MACJ,KAAK,EACDvC,EAAQmkB,gBAAkB3jB,EAAO+B,SACjC,MACJ,KAAK,EACDvC,EAAQmM,YAAc2X,GAAYxjB,OAAOE,EAAQA,EAAOL,UACxD,MACJ,KAAK,EACDH,EAAQokB,gBAAkBpjB,GAAaR,EAAOJ,SAC9C,MACJ,KAAK,EACDJ,EAAQukB,cAAgBpgB,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WACtE,MACJ,KAAK,GACDH,EAAQmR,WAAakS,GAAW/iB,OAAOE,EAAQA,EAAOL,UACtD,MACJ,KAAK,GACDH,EAAQqkB,kBAAoB7jB,EAAO+B,SACnC,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK+jB,IAmErB,YAlE+BnjB,IAA3BO,EAAO6iB,iBAA4D,OAA3B7iB,EAAO6iB,gBAC/ChkB,EAAQgkB,gBAAkBvhB,OAAOtB,EAAO6iB,iBAGxChkB,EAAQgkB,gBAAkB,QAECpjB,IAA3BO,EAAOmjB,iBAA4D,OAA3BnjB,EAAOmjB,gBAC/CtkB,EAAQskB,gBAAkBhiB,GAAAA,SAAanB,EAAOmjB,iBAG9CtkB,EAAQskB,qBAAkB1jB,OAERA,IAAlBO,EAAO8iB,QAA0C,OAAlB9iB,EAAO8iB,OACtCjkB,EAAQikB,OAAS9Y,QAAQhK,EAAO8iB,QAGhCjkB,EAAQikB,QAAS,OAECrjB,IAAlBO,EAAOkZ,QAA0C,OAAlBlZ,EAAOkZ,OACtCra,EAAQqa,OAAS+H,GAAmBjhB,EAAOkZ,QAG3Cra,EAAQqa,OAAS,OAECzZ,IAAlBO,EAAO+iB,QAA0C,OAAlB/iB,EAAO+iB,OACtClkB,EAAQkkB,OAASzhB,OAAOtB,EAAO+iB,QAG/BlkB,EAAQkkB,OAAS,QAEUtjB,IAA3BO,EAAOgjB,iBAA4D,OAA3BhjB,EAAOgjB,gBAC/CnkB,EAAQmkB,gBAAkB1hB,OAAOtB,EAAOgjB,iBAGxCnkB,EAAQmkB,gBAAkB,QAEHvjB,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAc2X,GAAY5iB,SAASC,EAAOgL,aAGlDnM,EAAQmM,iBAAcvL,OAEKA,IAA3BO,EAAOijB,iBAA4D,OAA3BjjB,EAAOijB,gBAC/CpkB,EAAQokB,gBAAkBhjB,OAAOD,EAAOijB,iBAGxCpkB,EAAQokB,gBAAkB,OAEDxjB,IAAzBO,EAAOojB,eAAwD,OAAzBpjB,EAAOojB,cAC7CvkB,EAAQukB,cAAgBngB,GAAkBjD,EAAOojB,eAGjDvkB,EAAQukB,mBAAgB3jB,OAEFA,IAAtBO,EAAOgQ,YAAkD,OAAtBhQ,EAAOgQ,WAC1CnR,EAAQmR,WAAakS,GAAWniB,SAASC,EAAOgQ,YAGhDnR,EAAQmR,gBAAavQ,OAEQA,IAA7BO,EAAOkjB,mBAAgE,OAA7BljB,EAAOkjB,kBACjDrkB,EAAQqkB,kBAAoB5hB,OAAOtB,EAAOkjB,mBAG1CrkB,EAAQqkB,kBAAoB,GAEzBrkB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAYZ,YAX4BV,IAA5BZ,EAAQgkB,kBAAkC1iB,EAAI0iB,gBAAkBhkB,EAAQgkB,sBAC5CpjB,IAA5BZ,EAAQskB,kBAAkChjB,EAAIgjB,gBAAkBtkB,EAAQskB,gBAAkBhiB,GAAAA,OAAWtC,EAAQskB,sBAAmB1jB,QAC7GA,IAAnBZ,EAAQikB,SAAyB3iB,EAAI2iB,OAASjkB,EAAQikB,aACnCrjB,IAAnBZ,EAAQqa,SAAyB/Y,EAAI+Y,OAASoI,GAAiBziB,EAAQqa,cACpDzZ,IAAnBZ,EAAQkkB,SAAyB5iB,EAAI4iB,OAASlkB,EAAQkkB,aAC1BtjB,IAA5BZ,EAAQmkB,kBAAkC7iB,EAAI6iB,gBAAkBnkB,EAAQmkB,sBAChDvjB,IAAxBZ,EAAQmM,cAA8B7K,EAAI6K,YAAcnM,EAAQmM,YAAc2X,GAAYziB,OAAOrB,EAAQmM,kBAAevL,QAC5FA,IAA5BZ,EAAQokB,kBAAkC9iB,EAAI8iB,gBAAkBpkB,EAAQokB,sBAC9CxjB,IAA1BZ,EAAQukB,gBAAgCjjB,EAAIijB,mBAA0C3jB,IAA1BZ,EAAQukB,cAA8BvkB,EAAQukB,cAAclgB,cAAgB,WACjHzD,IAAvBZ,EAAQmR,aAA6B7P,EAAI6P,WAAanR,EAAQmR,WAAakS,GAAWhiB,OAAOrB,EAAQmR,iBAAcvQ,QACrFA,IAA9BZ,EAAQqkB,oBAAoC/iB,EAAI+iB,kBAAoBrkB,EAAQqkB,mBACrE/iB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK+jB,IAmErB,YAlE+BnjB,IAA3BO,EAAO6iB,iBAA4D,OAA3B7iB,EAAO6iB,gBAC/ChkB,EAAQgkB,gBAAkB7iB,EAAO6iB,gBAGjChkB,EAAQgkB,gBAAkB,QAECpjB,IAA3BO,EAAOmjB,iBAA4D,OAA3BnjB,EAAOmjB,gBAC/CtkB,EAAQskB,gBAAkBhiB,GAAAA,YAAgBnB,EAAOmjB,iBAGjDtkB,EAAQskB,qBAAkB1jB,OAERA,IAAlBO,EAAO8iB,QAA0C,OAAlB9iB,EAAO8iB,OACtCjkB,EAAQikB,OAAS9iB,EAAO8iB,OAGxBjkB,EAAQikB,QAAS,OAECrjB,IAAlBO,EAAOkZ,QAA0C,OAAlBlZ,EAAOkZ,OACtCra,EAAQqa,OAASlZ,EAAOkZ,OAGxBra,EAAQqa,OAAS,OAECzZ,IAAlBO,EAAO+iB,QAA0C,OAAlB/iB,EAAO+iB,OACtClkB,EAAQkkB,OAAS/iB,EAAO+iB,OAGxBlkB,EAAQkkB,OAAS,QAEUtjB,IAA3BO,EAAOgjB,iBAA4D,OAA3BhjB,EAAOgjB,gBAC/CnkB,EAAQmkB,gBAAkBhjB,EAAOgjB,gBAGjCnkB,EAAQmkB,gBAAkB,QAEHvjB,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAc2X,GAAYviB,YAAYJ,EAAOgL,aAGrDnM,EAAQmM,iBAAcvL,OAEKA,IAA3BO,EAAOijB,iBAA4D,OAA3BjjB,EAAOijB,gBAC/CpkB,EAAQokB,gBAAkBjjB,EAAOijB,gBAGjCpkB,EAAQokB,gBAAkB,OAEDxjB,IAAzBO,EAAOojB,eAAwD,OAAzBpjB,EAAOojB,cAC7CvkB,EAAQukB,cAAgBpjB,EAAOojB,cAG/BvkB,EAAQukB,mBAAgB3jB,OAEFA,IAAtBO,EAAOgQ,YAAkD,OAAtBhQ,EAAOgQ,WAC1CnR,EAAQmR,WAAakS,GAAW9hB,YAAYJ,EAAOgQ,YAGnDnR,EAAQmR,gBAAavQ,OAEQA,IAA7BO,EAAOkjB,mBAAgE,OAA7BljB,EAAOkjB,kBACjDrkB,EAAQqkB,kBAAoBljB,EAAOkjB,kBAGnCrkB,EAAQqkB,kBAAoB,GAEzBrkB,IAGTwkB,GAAmB,CAAEC,UAAW,IACzBC,GAAe,CACxB3kB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQykB,UACpBxkB,EAAOE,OAAO,IAAIoC,OAAO4C,GAE7B,OAAOlF,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKwkB,IACrBxkB,EAAQykB,UAAY,GACpB,MAAOjkB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQykB,UAAUlhB,KAAK/C,EAAO+B,UAC9B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKwkB,IAErB,GADAxkB,EAAQykB,UAAY,QACK7jB,IAArBO,EAAOsjB,WAAgD,OAArBtjB,EAAOsjB,UACzC,IAAK,MAAMjmB,KAAK2C,EAAOsjB,UACnBzkB,EAAQykB,UAAUlhB,KAAKd,OAAOjE,IAGtC,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAOZ,OANItB,EAAQykB,UACRnjB,EAAImjB,UAAYzkB,EAAQykB,UAAUvlB,KAAKV,GAAMA,IAG7C8C,EAAImjB,UAAY,GAEbnjB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKwkB,IAErB,GADAxkB,EAAQykB,UAAY,QACK7jB,IAArBO,EAAOsjB,WAAgD,OAArBtjB,EAAOsjB,UACzC,IAAK,MAAMjmB,KAAK2C,EAAOsjB,UACnBzkB,EAAQykB,UAAUlhB,KAAK/E,GAG/B,OAAOwB,IAGT2kB,GAAa,CAAE/V,iBAAkB,GAAIE,iBAAkB,IAChD8V,GAAS,CAClB7kB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANiC,KAA7BF,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAEJ,KAA7B5O,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,kBAE9B7O,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2kB,IACrB,MAAOnkB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2kB,IAarB,YAZgC/jB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,GAExB9O,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF6BV,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC7ChO,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,kBACnExN,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2kB,IAarB,YAZgC/jB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,GAExB9O,IAGT6kB,GAAc,GACPC,GAAU,CACnB/kB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQ+kB,MACpBH,GAAO7kB,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE/C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6kB,IACrB7kB,EAAQ+kB,MAAQ,GAChB,MAAOvkB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+kB,MAAMxhB,KAAKqhB,GAAOtkB,OAAOE,EAAQA,EAAOL,WAChD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6kB,IAErB,GADA7kB,EAAQ+kB,MAAQ,QACKnkB,IAAjBO,EAAO4jB,OAAwC,OAAjB5jB,EAAO4jB,MACrC,IAAK,MAAMvmB,KAAK2C,EAAO4jB,MACnB/kB,EAAQ+kB,MAAMxhB,KAAKqhB,GAAO1jB,SAAS1C,IAG3C,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAOZ,OANItB,EAAQ+kB,MACRzjB,EAAIyjB,MAAQ/kB,EAAQ+kB,MAAM7lB,KAAKV,GAAOA,EAAIomB,GAAOvjB,OAAO7C,QAAKoC,IAG7DU,EAAIyjB,MAAQ,GAETzjB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6kB,IAErB,GADA7kB,EAAQ+kB,MAAQ,QACKnkB,IAAjBO,EAAO4jB,OAAwC,OAAjB5jB,EAAO4jB,MACrC,IAAK,MAAMvmB,KAAK2C,EAAO4jB,MACnB/kB,EAAQ+kB,MAAMxhB,KAAKqhB,GAAOrjB,YAAY/C,IAG9C,OAAOwB,IAGTglB,GAAiB,CAAEpW,iBAAkB,GAAIqW,oBAAqB,GAAIC,oBAAqB,IAChFC,GAAa,CACtBplB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATiC,KAA7BF,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAED,KAAhC5O,EAAQilB,qBACRhlB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQilB,qBAED,KAAhCjlB,EAAQklB,qBACRjlB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQklB,qBAE9BjlB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKglB,IACrB,MAAOxkB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQilB,oBAAsBzkB,EAAO+B,SACrC,MACJ,KAAK,EACDvC,EAAQklB,oBAAsB1kB,EAAO+B,SACrC,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKglB,IAmBrB,YAlBgCpkB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEIhO,IAA/BO,EAAO8jB,qBAAoE,OAA/B9jB,EAAO8jB,oBACnDjlB,EAAQilB,oBAAsBxiB,OAAOtB,EAAO8jB,qBAG5CjlB,EAAQilB,oBAAsB,QAECrkB,IAA/BO,EAAO+jB,qBAAoE,OAA/B/jB,EAAO+jB,oBACnDllB,EAAQklB,oBAAsBziB,OAAOtB,EAAO+jB,qBAG5CllB,EAAQklB,oBAAsB,GAE3BllB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAH6BV,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC1ChO,IAAhCZ,EAAQilB,sBAAsC3jB,EAAI2jB,oBAAsBjlB,EAAQilB,0BAChDrkB,IAAhCZ,EAAQklB,sBAAsC5jB,EAAI4jB,oBAAsBllB,EAAQklB,qBACzE5jB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKglB,IAmBrB,YAlBgCpkB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEIhO,IAA/BO,EAAO8jB,qBAAoE,OAA/B9jB,EAAO8jB,oBACnDjlB,EAAQilB,oBAAsB9jB,EAAO8jB,oBAGrCjlB,EAAQilB,oBAAsB,QAECrkB,IAA/BO,EAAO+jB,qBAAoE,OAA/B/jB,EAAO+jB,oBACnDllB,EAAQklB,oBAAsB/jB,EAAO+jB,oBAGrCllB,EAAQklB,oBAAsB,GAE3BllB,IAGTolB,GAAkB,GACXC,GAAc,CACvBtlB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQslB,SACpBH,GAAWplB,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAEnD,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKolB,IACrBplB,EAAQslB,SAAW,GACnB,MAAO9kB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQslB,SAAS/hB,KAAK4hB,GAAW7kB,OAAOE,EAAQA,EAAOL,WACvD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKolB,IAErB,GADAplB,EAAQslB,SAAW,QACK1kB,IAApBO,EAAOmkB,UAA8C,OAApBnkB,EAAOmkB,SACxC,IAAK,MAAM9mB,KAAK2C,EAAOmkB,SACnBtlB,EAAQslB,SAAS/hB,KAAK4hB,GAAWjkB,SAAS1C,IAGlD,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAOZ,OANItB,EAAQslB,SACRhkB,EAAIgkB,SAAWtlB,EAAQslB,SAASpmB,KAAKV,GAAOA,EAAI2mB,GAAW9jB,OAAO7C,QAAKoC,IAGvEU,EAAIgkB,SAAW,GAEZhkB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKolB,IAErB,GADAplB,EAAQslB,SAAW,QACK1kB,IAApBO,EAAOmkB,UAA8C,OAApBnkB,EAAOmkB,SACxC,IAAK,MAAM9mB,KAAK2C,EAAOmkB,SACnBtlB,EAAQslB,SAAS/hB,KAAK4hB,GAAW5jB,YAAY/C,IAGrD,OAAOwB,IAGTulB,GAAiB,CAAE3W,iBAAkB,GAAIE,iBAAkB,GAAI0W,OAAQ,IAChEC,GAAa,CACtB1lB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATiC,KAA7BF,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAEJ,KAA7B5O,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,kBAEd,KAAnB9O,EAAQwlB,QACRvlB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQwlB,QAE9BvlB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKulB,IACrB,MAAO/kB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQwlB,OAAShlB,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKulB,IAmBrB,YAlBgC3kB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAOqkB,QAA0C,OAAlBrkB,EAAOqkB,OACtCxlB,EAAQwlB,OAAS/iB,OAAOtB,EAAOqkB,QAG/BxlB,EAAQwlB,OAAS,GAEdxlB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAH6BV,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC7ChO,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,uBACvDlO,IAAnBZ,EAAQwlB,SAAyBlkB,EAAIkkB,OAASxlB,EAAQwlB,QAC/ClkB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKulB,IAmBrB,YAlBgC3kB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAOqkB,QAA0C,OAAlBrkB,EAAOqkB,OACtCxlB,EAAQwlB,OAASrkB,EAAOqkB,OAGxBxlB,EAAQwlB,OAAS,GAEdxlB,IAGT0lB,GAA0B,CAAE9W,iBAAkB,GAAIE,iBAAkB,IAC7D6W,GAAsB,CAC/B5lB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACY,KAA7BF,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAEJ,KAA7B5O,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,kBAErC,IAAK,MAAM3J,KAAKnF,EAAQ4H,QACpBge,GAAyB7lB,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAEjE,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK0lB,IACrB1lB,EAAQ4H,QAAU,GAClB,MAAOpH,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ4H,QAAQrE,KAAKqiB,GAAyBtlB,OAAOE,EAAQA,EAAOL,WACpE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK0lB,IAcrB,GAbA1lB,EAAQ4H,QAAU,QACchH,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAERlO,IAAnBO,EAAOyG,SAA4C,OAAnBzG,EAAOyG,QACvC,IAAK,MAAMpJ,KAAK2C,EAAOyG,QACnB5H,EAAQ4H,QAAQrE,KAAKqiB,GAAyB1kB,SAAS1C,IAG/D,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GASZ,YAR6BV,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC7ChO,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,kBACtE9O,EAAQ4H,QACRtG,EAAIsG,QAAU5H,EAAQ4H,QAAQ1I,KAAKV,GAAOA,EAAIonB,GAAyBvkB,OAAO7C,QAAKoC,IAGnFU,EAAIsG,QAAU,GAEXtG,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK0lB,IAcrB,GAbA1lB,EAAQ4H,QAAU,QACchH,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAERlO,IAAnBO,EAAOyG,SAA4C,OAAnBzG,EAAOyG,QACvC,IAAK,MAAMpJ,KAAK2C,EAAOyG,QACnB5H,EAAQ4H,QAAQrE,KAAKqiB,GAAyBrkB,YAAY/C,IAGlE,OAAOwB,IAGT6lB,GAA+B,CAAEC,eAAgB,EAAGC,eAAgB,GAAIC,QAAS,IAC1EJ,GAA2B,CACpC7lB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,OAZ+B,IAA3BF,EAAQ8lB,gBACR7lB,EAAOE,OAAO,GAAGC,MAAMJ,EAAQ8lB,qBAEJllB,IAA3BZ,EAAQimB,gBACRnmB,GAAAA,OAAiBoE,GAAYlE,EAAQimB,gBAAiBhmB,EAAOE,OAAO,IAAI4D,QAAQC,SAErD,KAA3BhE,EAAQ+lB,gBACR9lB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+lB,gBAEb,KAApB/lB,EAAQgmB,SACR/lB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQgmB,SAE9B/lB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6lB,IACrB,MAAOrlB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8lB,eAAiB9kB,GAAaR,EAAOJ,SAC7C,MACJ,KAAK,EACDJ,EAAQimB,eAAiB9hB,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WACvE,MACJ,KAAK,EACDH,EAAQ+lB,eAAiBvlB,EAAO+B,SAChC,MACJ,KAAK,EACDvC,EAAQgmB,QAAUxlB,EAAO+B,SACzB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6lB,IAyBrB,YAxB8BjlB,IAA1BO,EAAO2kB,gBAA0D,OAA1B3kB,EAAO2kB,eAC9C9lB,EAAQ8lB,eAAiB1kB,OAAOD,EAAO2kB,gBAGvC9lB,EAAQ8lB,eAAiB,OAECllB,IAA1BO,EAAO8kB,gBAA0D,OAA1B9kB,EAAO8kB,eAC9CjmB,EAAQimB,eAAiB7hB,GAAkBjD,EAAO8kB,gBAGlDjmB,EAAQimB,oBAAiBrlB,OAECA,IAA1BO,EAAO4kB,gBAA0D,OAA1B5kB,EAAO4kB,eAC9C/lB,EAAQ+lB,eAAiBtjB,OAAOtB,EAAO4kB,gBAGvC/lB,EAAQ+lB,eAAiB,QAENnlB,IAAnBO,EAAO6kB,SAA4C,OAAnB7kB,EAAO6kB,QACvChmB,EAAQgmB,QAAUvjB,OAAOtB,EAAO6kB,SAGhChmB,EAAQgmB,QAAU,GAEfhmB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJ2BV,IAA3BZ,EAAQ8lB,iBAAiCxkB,EAAIwkB,eAAiB9lB,EAAQ8lB,qBAC3CllB,IAA3BZ,EAAQimB,iBAAiC3kB,EAAI2kB,oBAA4CrlB,IAA3BZ,EAAQimB,eAA+BjmB,EAAQimB,eAAe5hB,cAAgB,WACjHzD,IAA3BZ,EAAQ+lB,iBAAiCzkB,EAAIykB,eAAiB/lB,EAAQ+lB,qBAClDnlB,IAApBZ,EAAQgmB,UAA0B1kB,EAAI0kB,QAAUhmB,EAAQgmB,SACjD1kB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6lB,IAyBrB,YAxB8BjlB,IAA1BO,EAAO2kB,gBAA0D,OAA1B3kB,EAAO2kB,eAC9C9lB,EAAQ8lB,eAAiB3kB,EAAO2kB,eAGhC9lB,EAAQ8lB,eAAiB,OAECllB,IAA1BO,EAAO8kB,gBAA0D,OAA1B9kB,EAAO8kB,eAC9CjmB,EAAQimB,eAAiB9kB,EAAO8kB,eAGhCjmB,EAAQimB,oBAAiBrlB,OAECA,IAA1BO,EAAO4kB,gBAA0D,OAA1B5kB,EAAO4kB,eAC9C/lB,EAAQ+lB,eAAiB5kB,EAAO4kB,eAGhC/lB,EAAQ+lB,eAAiB,QAENnlB,IAAnBO,EAAO6kB,SAA4C,OAAnB7kB,EAAO6kB,QACvChmB,EAAQgmB,QAAU7kB,EAAO6kB,QAGzBhmB,EAAQgmB,QAAU,GAEfhmB,IAGTkmB,GAAwB,CAAEJ,eAAgB,EAAGC,eAAgB,GAAII,UAAW,IACrEC,GAAoB,CAC7BrmB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,OAZ+B,IAA3BF,EAAQ8lB,gBACR7lB,EAAOE,OAAO,GAAGC,MAAMJ,EAAQ8lB,qBAEJllB,IAA3BZ,EAAQimB,gBACRnmB,GAAAA,OAAiBoE,GAAYlE,EAAQimB,gBAAiBhmB,EAAOE,OAAO,IAAI4D,QAAQC,SAErD,KAA3BhE,EAAQ+lB,gBACR9lB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+lB,gBAEX,KAAtB/lB,EAAQmmB,WACRlmB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQmmB,WAE9BlmB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKkmB,IACrB,MAAO1lB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ8lB,eAAiB9kB,GAAaR,EAAOJ,SAC7C,MACJ,KAAK,EACDJ,EAAQimB,eAAiB9hB,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WACvE,MACJ,KAAK,EACDH,EAAQ+lB,eAAiBvlB,EAAO+B,SAChC,MACJ,KAAK,EACDvC,EAAQmmB,UAAY3lB,EAAO+B,SAC3B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKkmB,IAyBrB,YAxB8BtlB,IAA1BO,EAAO2kB,gBAA0D,OAA1B3kB,EAAO2kB,eAC9C9lB,EAAQ8lB,eAAiB1kB,OAAOD,EAAO2kB,gBAGvC9lB,EAAQ8lB,eAAiB,OAECllB,IAA1BO,EAAO8kB,gBAA0D,OAA1B9kB,EAAO8kB,eAC9CjmB,EAAQimB,eAAiB7hB,GAAkBjD,EAAO8kB,gBAGlDjmB,EAAQimB,oBAAiBrlB,OAECA,IAA1BO,EAAO4kB,gBAA0D,OAA1B5kB,EAAO4kB,eAC9C/lB,EAAQ+lB,eAAiBtjB,OAAOtB,EAAO4kB,gBAGvC/lB,EAAQ+lB,eAAiB,QAEJnlB,IAArBO,EAAOglB,WAAgD,OAArBhlB,EAAOglB,UACzCnmB,EAAQmmB,UAAY1jB,OAAOtB,EAAOglB,WAGlCnmB,EAAQmmB,UAAY,GAEjBnmB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJ2BV,IAA3BZ,EAAQ8lB,iBAAiCxkB,EAAIwkB,eAAiB9lB,EAAQ8lB,qBAC3CllB,IAA3BZ,EAAQimB,iBAAiC3kB,EAAI2kB,oBAA4CrlB,IAA3BZ,EAAQimB,eAA+BjmB,EAAQimB,eAAe5hB,cAAgB,WACjHzD,IAA3BZ,EAAQ+lB,iBAAiCzkB,EAAIykB,eAAiB/lB,EAAQ+lB,qBAChDnlB,IAAtBZ,EAAQmmB,YAA4B7kB,EAAI6kB,UAAYnmB,EAAQmmB,WACrD7kB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKkmB,IAyBrB,YAxB8BtlB,IAA1BO,EAAO2kB,gBAA0D,OAA1B3kB,EAAO2kB,eAC9C9lB,EAAQ8lB,eAAiB3kB,EAAO2kB,eAGhC9lB,EAAQ8lB,eAAiB,OAECllB,IAA1BO,EAAO8kB,gBAA0D,OAA1B9kB,EAAO8kB,eAC9CjmB,EAAQimB,eAAiB9kB,EAAO8kB,eAGhCjmB,EAAQimB,oBAAiBrlB,OAECA,IAA1BO,EAAO4kB,gBAA0D,OAA1B5kB,EAAO4kB,eAC9C/lB,EAAQ+lB,eAAiB5kB,EAAO4kB,eAGhC/lB,EAAQ+lB,eAAiB,QAEJnlB,IAArBO,EAAOglB,WAAgD,OAArBhlB,EAAOglB,UACzCnmB,EAAQmmB,UAAYhlB,EAAOglB,UAG3BnmB,EAAQmmB,UAAY,GAEjBnmB,IAGTqmB,GAAmB,CAAEzX,iBAAkB,GAAIqW,oBAAqB,GAAIC,oBAAqB,IAClFoB,GAAe,CACxBvmB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACY,KAA7BF,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAED,KAAhC5O,EAAQilB,qBACRhlB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQilB,qBAED,KAAhCjlB,EAAQklB,qBACRjlB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQklB,qBAErC,IAAK,MAAM/f,KAAKnF,EAAQ4H,QACpBwe,GAAkBrmB,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE1D,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKqmB,IACrBrmB,EAAQ4H,QAAU,GAClB,MAAOpH,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQilB,oBAAsBzkB,EAAO+B,SACrC,MACJ,KAAK,EACDvC,EAAQklB,oBAAsB1kB,EAAO+B,SACrC,MACJ,KAAK,EACDvC,EAAQ4H,QAAQrE,KAAK6iB,GAAkB9lB,OAAOE,EAAQA,EAAOL,WAC7D,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKqmB,IAoBrB,GAnBArmB,EAAQ4H,QAAU,QACchH,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEIhO,IAA/BO,EAAO8jB,qBAAoE,OAA/B9jB,EAAO8jB,oBACnDjlB,EAAQilB,oBAAsBxiB,OAAOtB,EAAO8jB,qBAG5CjlB,EAAQilB,oBAAsB,QAECrkB,IAA/BO,EAAO+jB,qBAAoE,OAA/B/jB,EAAO+jB,oBACnDllB,EAAQklB,oBAAsBziB,OAAOtB,EAAO+jB,qBAG5CllB,EAAQklB,oBAAsB,QAEXtkB,IAAnBO,EAAOyG,SAA4C,OAAnBzG,EAAOyG,QACvC,IAAK,MAAMpJ,KAAK2C,EAAOyG,QACnB5H,EAAQ4H,QAAQrE,KAAK6iB,GAAkBllB,SAAS1C,IAGxD,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAUZ,YAT6BV,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC1ChO,IAAhCZ,EAAQilB,sBAAsC3jB,EAAI2jB,oBAAsBjlB,EAAQilB,0BAChDrkB,IAAhCZ,EAAQklB,sBAAsC5jB,EAAI4jB,oBAAsBllB,EAAQklB,qBAC5EllB,EAAQ4H,QACRtG,EAAIsG,QAAU5H,EAAQ4H,QAAQ1I,KAAKV,GAAOA,EAAI4nB,GAAkB/kB,OAAO7C,QAAKoC,IAG5EU,EAAIsG,QAAU,GAEXtG,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKqmB,IAoBrB,GAnBArmB,EAAQ4H,QAAU,QACchH,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEIhO,IAA/BO,EAAO8jB,qBAAoE,OAA/B9jB,EAAO8jB,oBACnDjlB,EAAQilB,oBAAsB9jB,EAAO8jB,oBAGrCjlB,EAAQilB,oBAAsB,QAECrkB,IAA/BO,EAAO+jB,qBAAoE,OAA/B/jB,EAAO+jB,oBACnDllB,EAAQklB,oBAAsB/jB,EAAO+jB,oBAGrCllB,EAAQklB,oBAAsB,QAEXtkB,IAAnBO,EAAOyG,SAA4C,OAAnBzG,EAAOyG,QACvC,IAAK,MAAMpJ,KAAK2C,EAAOyG,QACnB5H,EAAQ4H,QAAQrE,KAAK6iB,GAAkB7kB,YAAY/C,IAG3D,OAAOwB,IAGT6K,GAAa,CAAE0b,cAAe,EAAGC,WAAY,EAAGC,kBAAmB,EAAGC,UAAW,IAC1E3b,GAAS,CAClBhL,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAgBrB,YAf8BU,IAA1BZ,EAAQukB,eACRzN,GAAAA,OAAgB9W,EAAQukB,cAAetkB,EAAOE,OAAO,IAAI4D,QAAQC,SAEvC,IAA1BhE,EAAQumB,eACRtmB,EAAOE,OAAO,IAAIA,OAAOH,EAAQumB,eAEV,IAAvBvmB,EAAQwmB,YACRvmB,EAAOE,OAAO,IAAIA,OAAOH,EAAQwmB,YAEH,IAA9BxmB,EAAQymB,mBACRxmB,EAAOE,OAAO,IAAIA,OAAOH,EAAQymB,mBAEX,KAAtBzmB,EAAQ0mB,WACRzmB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ0mB,WAE9BzmB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6K,IACrB,MAAOrK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQukB,cAAgBzN,GAAAA,OAAgBtW,EAAQA,EAAOL,UACvD,MACJ,KAAK,EACDH,EAAQumB,cAAgB/lB,EAAOL,SAC/B,MACJ,KAAK,EACDH,EAAQwmB,WAAahmB,EAAOL,SAC5B,MACJ,KAAK,EACDH,EAAQymB,kBAAoBjmB,EAAOL,SACnC,MACJ,KAAK,EACDH,EAAQ0mB,UAAYlmB,EAAO+B,SAC3B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6K,IA+BrB,YA9B6BjK,IAAzBO,EAAOojB,eAAwD,OAAzBpjB,EAAOojB,cAC7CvkB,EAAQukB,cAAgBzN,GAAAA,SAAkB3V,EAAOojB,eAGjDvkB,EAAQukB,mBAAgB3jB,OAECA,IAAzBO,EAAOolB,eAAwD,OAAzBplB,EAAOolB,cAC7CvmB,EAAQumB,cAAgBnlB,OAAOD,EAAOolB,eAGtCvmB,EAAQumB,cAAgB,OAEF3lB,IAAtBO,EAAOqlB,YAAkD,OAAtBrlB,EAAOqlB,WAC1CxmB,EAAQwmB,WAAaplB,OAAOD,EAAOqlB,YAGnCxmB,EAAQwmB,WAAa,OAEQ5lB,IAA7BO,EAAOslB,mBAAgE,OAA7BtlB,EAAOslB,kBACjDzmB,EAAQymB,kBAAoBrlB,OAAOD,EAAOslB,mBAG1CzmB,EAAQymB,kBAAoB,OAEP7lB,IAArBO,EAAOulB,WAAgD,OAArBvlB,EAAOulB,UACzC1mB,EAAQ0mB,UAAYjkB,OAAOtB,EAAOulB,WAGlC1mB,EAAQ0mB,UAAY,GAEjB1mB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAMZ,YAL0BV,IAA1BZ,EAAQukB,gBAAgCjjB,EAAIijB,cAAgBvkB,EAAQukB,cAAgBzN,GAAAA,OAAgB9W,EAAQukB,oBAAiB3jB,QACnGA,IAA1BZ,EAAQumB,gBAAgCjlB,EAAIilB,cAAgBvmB,EAAQumB,oBAC7C3lB,IAAvBZ,EAAQwmB,aAA6BllB,EAAIklB,WAAaxmB,EAAQwmB,iBAChC5lB,IAA9BZ,EAAQymB,oBAAoCnlB,EAAImlB,kBAAoBzmB,EAAQymB,wBACtD7lB,IAAtBZ,EAAQ0mB,YAA4BplB,EAAIolB,UAAY1mB,EAAQ0mB,WACrDplB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6K,IA+BrB,YA9B6BjK,IAAzBO,EAAOojB,eAAwD,OAAzBpjB,EAAOojB,cAC7CvkB,EAAQukB,cAAgBzN,GAAAA,YAAqB3V,EAAOojB,eAGpDvkB,EAAQukB,mBAAgB3jB,OAECA,IAAzBO,EAAOolB,eAAwD,OAAzBplB,EAAOolB,cAC7CvmB,EAAQumB,cAAgBplB,EAAOolB,cAG/BvmB,EAAQumB,cAAgB,OAEF3lB,IAAtBO,EAAOqlB,YAAkD,OAAtBrlB,EAAOqlB,WAC1CxmB,EAAQwmB,WAAarlB,EAAOqlB,WAG5BxmB,EAAQwmB,WAAa,OAEQ5lB,IAA7BO,EAAOslB,mBAAgE,OAA7BtlB,EAAOslB,kBACjDzmB,EAAQymB,kBAAoBtlB,EAAOslB,kBAGnCzmB,EAAQymB,kBAAoB,OAEP7lB,IAArBO,EAAOulB,WAAgD,OAArBvlB,EAAOulB,UACzC1mB,EAAQ0mB,UAAYvlB,EAAOulB,UAG3B1mB,EAAQ0mB,UAAY,GAEjB1mB,IAGT2mB,GAAyB,GAClBC,GAAqB,CAC9B7mB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,YAN2BU,IAAvBZ,EAAQ6mB,YACRpB,GAAW1lB,OAAOC,EAAQ6mB,WAAY5mB,EAAOE,OAAO,IAAI4D,QAAQC,cAE5CpD,IAApBZ,EAAQgmB,SACRpb,GAAAA,OAAY5K,EAAQgmB,QAAS/lB,EAAOE,OAAO,IAAI4D,QAAQC,SAEpD/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2mB,IACrB,MAAOnmB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ6mB,WAAapB,GAAWnlB,OAAOE,EAAQA,EAAOL,UACtD,MACJ,KAAK,EACDH,EAAQgmB,QAAUpb,GAAAA,OAAYpK,EAAQA,EAAOL,UAC7C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2mB,IAarB,YAZ0B/lB,IAAtBO,EAAO0lB,YAAkD,OAAtB1lB,EAAO0lB,WAC1C7mB,EAAQ6mB,WAAapB,GAAWvkB,SAASC,EAAO0lB,YAGhD7mB,EAAQ6mB,gBAAajmB,OAEFA,IAAnBO,EAAO6kB,SAA4C,OAAnB7kB,EAAO6kB,QACvChmB,EAAQgmB,QAAUpb,GAAAA,SAAczJ,EAAO6kB,SAGvChmB,EAAQgmB,aAAUplB,EAEfZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFuBV,IAAvBZ,EAAQ6mB,aAA6BvlB,EAAIulB,WAAa7mB,EAAQ6mB,WAAapB,GAAWpkB,OAAOrB,EAAQ6mB,iBAAcjmB,QAC/FA,IAApBZ,EAAQgmB,UAA0B1kB,EAAI0kB,QAAUhmB,EAAQgmB,QAAUpb,GAAAA,OAAY5K,EAAQgmB,cAAWplB,GAC1FU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2mB,IAarB,YAZ0B/lB,IAAtBO,EAAO0lB,YAAkD,OAAtB1lB,EAAO0lB,WAC1C7mB,EAAQ6mB,WAAapB,GAAWlkB,YAAYJ,EAAO0lB,YAGnD7mB,EAAQ6mB,gBAAajmB,OAEFA,IAAnBO,EAAO6kB,SAA4C,OAAnB7kB,EAAO6kB,QACvChmB,EAAQgmB,QAAUpb,GAAAA,YAAiBzJ,EAAO6kB,SAG1ChmB,EAAQgmB,aAAUplB,EAEfZ,IAGT8mB,GAAgC,CAAEd,QAAS,IACpCe,GAA4B,CACrChnB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,YANkCU,IAA9BZ,EAAQgnB,mBACRZ,GAAkBrmB,OAAOC,EAAQgnB,kBAAmB/mB,EAAOE,OAAO,IAAI4D,QAAQC,SAE1D,KAApBhE,EAAQgmB,SACR/lB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQgmB,SAE9B/lB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8mB,IACrB,MAAOtmB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgnB,kBAAoBZ,GAAkB9lB,OAAOE,EAAQA,EAAOL,UACpE,MACJ,KAAK,EACDH,EAAQgmB,QAAUxlB,EAAO+B,SACzB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8mB,IAarB,YAZiClmB,IAA7BO,EAAO6lB,mBAAgE,OAA7B7lB,EAAO6lB,kBACjDhnB,EAAQgnB,kBAAoBZ,GAAkBllB,SAASC,EAAO6lB,mBAG9DhnB,EAAQgnB,uBAAoBpmB,OAETA,IAAnBO,EAAO6kB,SAA4C,OAAnB7kB,EAAO6kB,QACvChmB,EAAQgmB,QAAUvjB,OAAOtB,EAAO6kB,SAGhChmB,EAAQgmB,QAAU,GAEfhmB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAH8BV,IAA9BZ,EAAQgnB,oBACH1lB,EAAI0lB,kBAAoBhnB,EAAQgnB,kBAAoBZ,GAAkB/kB,OAAOrB,EAAQgnB,wBAAqBpmB,QAC3FA,IAApBZ,EAAQgmB,UAA0B1kB,EAAI0kB,QAAUhmB,EAAQgmB,SACjD1kB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8mB,IAarB,YAZiClmB,IAA7BO,EAAO6lB,mBAAgE,OAA7B7lB,EAAO6lB,kBACjDhnB,EAAQgnB,kBAAoBZ,GAAkB7kB,YAAYJ,EAAO6lB,mBAGjEhnB,EAAQgnB,uBAAoBpmB,OAETA,IAAnBO,EAAO6kB,SAA4C,OAAnB7kB,EAAO6kB,QACvChmB,EAAQgmB,QAAU7kB,EAAO6kB,QAGzBhmB,EAAQgmB,QAAU,GAEfhmB,IAGTinB,GAA2B,GACpBC,GAAuB,CAChCnnB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,eACQU,IAAzBZ,EAAQmnB,cACRb,GAAavmB,OAAOC,EAAQmnB,aAAclnB,EAAOE,OAAO,IAAI4D,QAAQC,SAExE,IAAK,MAAMmB,KAAKnF,EAAQ4H,QACpBmf,GAA0BhnB,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAElE,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKinB,IACrBjnB,EAAQ4H,QAAU,GAClB,MAAOpH,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmnB,aAAeb,GAAahmB,OAAOE,EAAQA,EAAOL,UAC1D,MACJ,KAAK,EACDH,EAAQ4H,QAAQrE,KAAKwjB,GAA0BzmB,OAAOE,EAAQA,EAAOL,WACrE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKinB,IAQrB,GAPAjnB,EAAQ4H,QAAU,QACUhH,IAAxBO,EAAOgmB,cAAsD,OAAxBhmB,EAAOgmB,aAC5CnnB,EAAQmnB,aAAeb,GAAaplB,SAASC,EAAOgmB,cAGpDnnB,EAAQmnB,kBAAevmB,OAEJA,IAAnBO,EAAOyG,SAA4C,OAAnBzG,EAAOyG,QACvC,IAAK,MAAMpJ,KAAK2C,EAAOyG,QACnB5H,EAAQ4H,QAAQrE,KAAKwjB,GAA0B7lB,SAAS1C,IAGhE,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPyBV,IAAzBZ,EAAQmnB,eAA+B7lB,EAAI6lB,aAAennB,EAAQmnB,aAAeb,GAAajlB,OAAOrB,EAAQmnB,mBAAgBvmB,GACzHZ,EAAQ4H,QACRtG,EAAIsG,QAAU5H,EAAQ4H,QAAQ1I,KAAKV,GAAOA,EAAIuoB,GAA0B1lB,OAAO7C,QAAKoC,IAGpFU,EAAIsG,QAAU,GAEXtG,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKinB,IAQrB,GAPAjnB,EAAQ4H,QAAU,QACUhH,IAAxBO,EAAOgmB,cAAsD,OAAxBhmB,EAAOgmB,aAC5CnnB,EAAQmnB,aAAeb,GAAa/kB,YAAYJ,EAAOgmB,cAGvDnnB,EAAQmnB,kBAAevmB,OAEJA,IAAnBO,EAAOyG,SAA4C,OAAnBzG,EAAOyG,QACvC,IAAK,MAAMpJ,KAAK2C,EAAOyG,QACnB5H,EAAQ4H,QAAQrE,KAAKwjB,GAA0BxlB,YAAY/C,IAGnE,OAAOwB,IAGTonB,GAAW,CAAEC,gBAAiB,GAAIC,aAAc,IACzCC,GAAO,CAChBxnB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANgC,KAA5BF,EAAQqnB,iBACRpnB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqnB,iBAER,KAAzBrnB,EAAQsnB,cACRrnB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsnB,cAE9BrnB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKonB,IACrB,MAAO5mB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqnB,gBAAkB7mB,EAAO+B,SACjC,MACJ,KAAK,EACDvC,EAAQsnB,aAAe9mB,EAAO+B,SAC9B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKonB,IAarB,YAZ+BxmB,IAA3BO,EAAOkmB,iBAA4D,OAA3BlmB,EAAOkmB,gBAC/CrnB,EAAQqnB,gBAAkB5kB,OAAOtB,EAAOkmB,iBAGxCrnB,EAAQqnB,gBAAkB,QAEFzmB,IAAxBO,EAAOmmB,cAAsD,OAAxBnmB,EAAOmmB,aAC5CtnB,EAAQsnB,aAAe7kB,OAAOtB,EAAOmmB,cAGrCtnB,EAAQsnB,aAAe,GAEpBtnB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF4BV,IAA5BZ,EAAQqnB,kBAAkC/lB,EAAI+lB,gBAAkBrnB,EAAQqnB,sBAC/CzmB,IAAzBZ,EAAQsnB,eAA+BhmB,EAAIgmB,aAAetnB,EAAQsnB,cAC3DhmB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKonB,IAarB,YAZ+BxmB,IAA3BO,EAAOkmB,iBAA4D,OAA3BlmB,EAAOkmB,gBAC/CrnB,EAAQqnB,gBAAkBlmB,EAAOkmB,gBAGjCrnB,EAAQqnB,gBAAkB,QAEFzmB,IAAxBO,EAAOmmB,cAAsD,OAAxBnmB,EAAOmmB,aAC5CtnB,EAAQsnB,aAAenmB,EAAOmmB,aAG9BtnB,EAAQsnB,aAAe,GAEpBtnB,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASuC,GAAYI,GACjB,MAAM1E,EAAU0E,EAAKC,UAAY,IAC3B1E,EAASyE,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAE3E,QAAAA,EAASC,MAAAA,GAEtB,SAASsE,GAAcK,GACnB,IAAIC,EAAqB,IAAZD,EAAE5E,QAEf,OADA6E,GAAUD,EAAE3E,MAAQ,IACb,IAAI6E,KAAKD,GAEpB,SAASL,GAAkBO,GACvB,OAAIA,aAAaD,KACNC,EAEW,kBAANA,EACL,IAAID,KAAKC,GAGTR,GAAcrE,GAAAA,SAAmB6E,IAGhD,SAAS3D,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cC/5DG,MACDqlB,GAAyB,CAAEnD,kBAAmB,GAAIzV,iBAAkB,GAAIE,iBAAkB,IACnF2Y,GAAqB,CAC9B1nB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAsBrB,YArB4BU,IAAxBZ,EAAQmM,aACR2X,GAAY/jB,OAAOC,EAAQmM,YAAalM,EAAOE,OAAO,IAAI4D,QAAQC,cAE3CpD,IAAvBZ,EAAQmR,YACRgS,GAAgBpjB,OAAOC,EAAQmR,WAAYlR,EAAOE,OAAO,IAAI4D,QAAQC,SAEvC,KAA9BhE,EAAQqkB,mBACRpkB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqkB,mBAEJ,KAA7BrkB,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAEJ,KAA7B5O,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,uBAEdlO,IAAnBZ,EAAQ0nB,QACRplB,GAAAA,OAAWtC,EAAQ0nB,OAAQznB,EAAOE,OAAO,IAAI4D,QAAQC,cAEnCpD,IAAlBZ,EAAQrB,OACRiM,GAAAA,OAAY5K,EAAQrB,MAAOsB,EAAOE,OAAO,IAAI4D,QAAQC,SAElD/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKwnB,IACrB,MAAOhnB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmM,YAAc2X,GAAYxjB,OAAOE,EAAQA,EAAOL,UACxD,MACJ,KAAK,EACDH,EAAQmR,WAAagS,GAAgB7iB,OAAOE,EAAQA,EAAOL,UAC3D,MACJ,KAAK,EACDH,EAAQqkB,kBAAoB7jB,EAAO+B,SACnC,MACJ,KAAK,EACDvC,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ0nB,OAASplB,GAAAA,OAAW9B,EAAQA,EAAOL,UAC3C,MACJ,KAAK,EACDH,EAAQrB,MAAQiM,GAAAA,OAAYpK,EAAQA,EAAOL,UAC3C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKwnB,IA2CrB,YA1C2B5mB,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAc2X,GAAY5iB,SAASC,EAAOgL,aAGlDnM,EAAQmM,iBAAcvL,OAEAA,IAAtBO,EAAOgQ,YAAkD,OAAtBhQ,EAAOgQ,WAC1CnR,EAAQmR,WAAagS,GAAgBjiB,SAASC,EAAOgQ,YAGrDnR,EAAQmR,gBAAavQ,OAEQA,IAA7BO,EAAOkjB,mBAAgE,OAA7BljB,EAAOkjB,kBACjDrkB,EAAQqkB,kBAAoB5hB,OAAOtB,EAAOkjB,mBAG1CrkB,EAAQqkB,kBAAoB,QAEAzjB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAOumB,QAA0C,OAAlBvmB,EAAOumB,OACtC1nB,EAAQ0nB,OAASplB,GAAAA,SAAanB,EAAOumB,QAGrC1nB,EAAQ0nB,YAAS9mB,OAEAA,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,MACrCqB,EAAQrB,MAAQiM,GAAAA,SAAczJ,EAAOxC,OAGrCqB,EAAQrB,WAAQiC,EAEbZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPwBV,IAAxBZ,EAAQmM,cAA8B7K,EAAI6K,YAAcnM,EAAQmM,YAAc2X,GAAYziB,OAAOrB,EAAQmM,kBAAevL,QACjGA,IAAvBZ,EAAQmR,aAA6B7P,EAAI6P,WAAanR,EAAQmR,WAAagS,GAAgB9hB,OAAOrB,EAAQmR,iBAAcvQ,QAC1FA,IAA9BZ,EAAQqkB,oBAAoC/iB,EAAI+iB,kBAAoBrkB,EAAQqkB,wBAC/CzjB,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC7ChO,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,uBACvDlO,IAAnBZ,EAAQ0nB,SAAyBpmB,EAAIomB,OAAS1nB,EAAQ0nB,OAASplB,GAAAA,OAAWtC,EAAQ0nB,aAAU9mB,QAC1EA,IAAlBZ,EAAQrB,QAAwB2C,EAAI3C,MAAQqB,EAAQrB,MAAQiM,GAAAA,OAAY5K,EAAQrB,YAASiC,GAClFU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKwnB,IA2CrB,YA1C2B5mB,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAc2X,GAAYviB,YAAYJ,EAAOgL,aAGrDnM,EAAQmM,iBAAcvL,OAEAA,IAAtBO,EAAOgQ,YAAkD,OAAtBhQ,EAAOgQ,WAC1CnR,EAAQmR,WAAagS,GAAgB5hB,YAAYJ,EAAOgQ,YAGxDnR,EAAQmR,gBAAavQ,OAEQA,IAA7BO,EAAOkjB,mBAAgE,OAA7BljB,EAAOkjB,kBACjDrkB,EAAQqkB,kBAAoBljB,EAAOkjB,kBAGnCrkB,EAAQqkB,kBAAoB,QAEAzjB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAOumB,QAA0C,OAAlBvmB,EAAOumB,OACtC1nB,EAAQ0nB,OAASplB,GAAAA,YAAgBnB,EAAOumB,QAGxC1nB,EAAQ0nB,YAAS9mB,OAEAA,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,MACrCqB,EAAQrB,MAAQiM,GAAAA,YAAiBzJ,EAAOxC,OAGxCqB,EAAQrB,WAAQiC,EAEbZ,IAmCT2nB,GAAuB,CAAE7Y,iBAAkB,GAAI8Y,eAAgB,GAAIvD,kBAAmB,IAC/EwD,GAAmB,CAC5B9nB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,YAZ4BU,IAAxBZ,EAAQmM,aACR2X,GAAY/jB,OAAOC,EAAQmM,YAAalM,EAAOE,OAAO,IAAI4D,QAAQC,SAErC,KAA7BhE,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,kBAEN,KAA3B9O,EAAQ4nB,gBACR3nB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4nB,gBAEH,KAA9B5nB,EAAQqkB,mBACRpkB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqkB,mBAE9BpkB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2nB,IACrB,MAAOnnB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmM,YAAc2X,GAAYxjB,OAAOE,EAAQA,EAAOL,UACxD,MACJ,KAAK,EACDH,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ4nB,eAAiBpnB,EAAO+B,SAChC,MACJ,KAAK,EACDvC,EAAQqkB,kBAAoB7jB,EAAO+B,SACnC,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2nB,IAyBrB,YAxB2B/mB,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAc2X,GAAY5iB,SAASC,EAAOgL,aAGlDnM,EAAQmM,iBAAcvL,OAEMA,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAEDlO,IAA1BO,EAAOymB,gBAA0D,OAA1BzmB,EAAOymB,eAC9C5nB,EAAQ4nB,eAAiBnlB,OAAOtB,EAAOymB,gBAGvC5nB,EAAQ4nB,eAAiB,QAEIhnB,IAA7BO,EAAOkjB,mBAAgE,OAA7BljB,EAAOkjB,kBACjDrkB,EAAQqkB,kBAAoB5hB,OAAOtB,EAAOkjB,mBAG1CrkB,EAAQqkB,kBAAoB,GAEzBrkB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJwBV,IAAxBZ,EAAQmM,cAA8B7K,EAAI6K,YAAcnM,EAAQmM,YAAc2X,GAAYziB,OAAOrB,EAAQmM,kBAAevL,QAC3FA,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,uBAC/ClO,IAA3BZ,EAAQ4nB,iBAAiCtmB,EAAIsmB,eAAiB5nB,EAAQ4nB,qBACxChnB,IAA9BZ,EAAQqkB,oBAAoC/iB,EAAI+iB,kBAAoBrkB,EAAQqkB,mBACrE/iB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2nB,IAyBrB,YAxB2B/mB,IAAvBO,EAAOgL,aAAoD,OAAvBhL,EAAOgL,YAC3CnM,EAAQmM,YAAc2X,GAAYviB,YAAYJ,EAAOgL,aAGrDnM,EAAQmM,iBAAcvL,OAEMA,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAEDlO,IAA1BO,EAAOymB,gBAA0D,OAA1BzmB,EAAOymB,eAC9C5nB,EAAQ4nB,eAAiBzmB,EAAOymB,eAGhC5nB,EAAQ4nB,eAAiB,QAEIhnB,IAA7BO,EAAOkjB,mBAAgE,OAA7BljB,EAAOkjB,kBACjDrkB,EAAQqkB,kBAAoBljB,EAAOkjB,kBAGnCrkB,EAAQqkB,kBAAoB,GAEzBrkB,IAmCT8nB,GAAkB,CAAElZ,iBAAkB,GAAIE,iBAAkB,IACrDiZ,GAAc,CACvBhoB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATiC,KAA7BF,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAEJ,KAA7B5O,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,uBAEdlO,IAAnBZ,EAAQ6F,QACR+E,GAAAA,OAAY5K,EAAQ6F,OAAQ5F,EAAOE,OAAO,IAAI4D,QAAQC,SAEnD/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8nB,IACrB,MAAOtnB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ6F,OAAS+E,GAAAA,OAAYpK,EAAQA,EAAOL,UAC5C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8nB,IAmBrB,YAlBgClnB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS+E,GAAAA,SAAczJ,EAAO0E,QAGtC7F,EAAQ6F,YAASjF,EAEdZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAH6BV,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC7ChO,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,uBACvDlO,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,OAAS+E,GAAAA,OAAY5K,EAAQ6F,aAAUjF,GACtFU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8nB,IAmBrB,YAlBgClnB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS+E,GAAAA,YAAiBzJ,EAAO0E,QAGzC7F,EAAQ6F,YAASjF,EAEdZ,IAmCTgoB,GAAyB,CAAEpZ,iBAAkB,GAAIqW,oBAAqB,GAAIC,oBAAqB,IACxF+C,GAAqB,CAC9BloB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,MAZiC,KAA7BF,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAED,KAAhC5O,EAAQilB,qBACRhlB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQilB,qBAED,KAAhCjlB,EAAQklB,qBACRjlB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQklB,0BAEdtkB,IAAnBZ,EAAQ6F,QACR+E,GAAAA,OAAY5K,EAAQ6F,OAAQ5F,EAAOE,OAAO,IAAI4D,QAAQC,SAEnD/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKgoB,IACrB,MAAOxnB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQilB,oBAAsBzkB,EAAO+B,SACrC,MACJ,KAAK,EACDvC,EAAQklB,oBAAsB1kB,EAAO+B,SACrC,MACJ,KAAK,EACDvC,EAAQ6F,OAAS+E,GAAAA,OAAYpK,EAAQA,EAAOL,UAC5C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKgoB,IAyBrB,YAxBgCpnB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEIhO,IAA/BO,EAAO8jB,qBAAoE,OAA/B9jB,EAAO8jB,oBACnDjlB,EAAQilB,oBAAsBxiB,OAAOtB,EAAO8jB,qBAG5CjlB,EAAQilB,oBAAsB,QAECrkB,IAA/BO,EAAO+jB,qBAAoE,OAA/B/jB,EAAO+jB,oBACnDllB,EAAQklB,oBAAsBziB,OAAOtB,EAAO+jB,qBAG5CllB,EAAQklB,oBAAsB,QAEZtkB,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS+E,GAAAA,SAAczJ,EAAO0E,QAGtC7F,EAAQ6F,YAASjF,EAEdZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJ6BV,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC1ChO,IAAhCZ,EAAQilB,sBAAsC3jB,EAAI2jB,oBAAsBjlB,EAAQilB,0BAChDrkB,IAAhCZ,EAAQklB,sBAAsC5jB,EAAI4jB,oBAAsBllB,EAAQklB,0BAC7DtkB,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,OAAS+E,GAAAA,OAAY5K,EAAQ6F,aAAUjF,GACtFU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKgoB,IAyBrB,YAxBgCpnB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEIhO,IAA/BO,EAAO8jB,qBAAoE,OAA/B9jB,EAAO8jB,oBACnDjlB,EAAQilB,oBAAsB9jB,EAAO8jB,oBAGrCjlB,EAAQilB,oBAAsB,QAECrkB,IAA/BO,EAAO+jB,qBAAoE,OAA/B/jB,EAAO+jB,oBACnDllB,EAAQklB,oBAAsB/jB,EAAO+jB,oBAGrCllB,EAAQklB,oBAAsB,QAEZtkB,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS+E,GAAAA,YAAiBzJ,EAAO0E,QAGzC7F,EAAQ6F,YAASjF,EAEdZ,IAsDTkoB,GAAoB,CAAEtZ,iBAAkB,GAAIE,iBAAkB,IACvDqZ,GAAgB,CACzBpoB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATiC,KAA7BF,EAAQ4O,kBACR3O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4O,kBAEJ,KAA7B5O,EAAQ8O,kBACR7O,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8O,uBAEdlO,IAAnBZ,EAAQ6F,QACR+E,GAAAA,OAAY5K,EAAQ6F,OAAQ5F,EAAOE,OAAO,IAAI4D,QAAQC,SAEnD/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKkoB,IACrB,MAAO1nB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ4O,iBAAmBpO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ8O,iBAAmBtO,EAAO+B,SAClC,MACJ,KAAK,EACDvC,EAAQ6F,OAAS+E,GAAAA,OAAYpK,EAAQA,EAAOL,UAC5C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKkoB,IAmBrB,YAlBgCtnB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBnM,OAAOtB,EAAOyN,kBAGzC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmBrM,OAAOtB,EAAO2N,kBAGzC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS+E,GAAAA,SAAczJ,EAAO0E,QAGtC7F,EAAQ6F,YAASjF,EAEdZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAH6BV,IAA7BZ,EAAQ4O,mBAAmCtN,EAAIsN,iBAAmB5O,EAAQ4O,uBAC7ChO,IAA7BZ,EAAQ8O,mBAAmCxN,EAAIwN,iBAAmB9O,EAAQ8O,uBACvDlO,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,OAAS+E,GAAAA,OAAY5K,EAAQ6F,aAAUjF,GACtFU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKkoB,IAmBrB,YAlBgCtnB,IAA5BO,EAAOyN,kBAA8D,OAA5BzN,EAAOyN,iBAChD5O,EAAQ4O,iBAAmBzN,EAAOyN,iBAGlC5O,EAAQ4O,iBAAmB,QAEChO,IAA5BO,EAAO2N,kBAA8D,OAA5B3N,EAAO2N,iBAChD9O,EAAQ8O,iBAAmB3N,EAAO2N,iBAGlC9O,EAAQ8O,iBAAmB,QAETlO,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS+E,GAAAA,YAAiBzJ,EAAO0E,QAGzC7F,EAAQ6F,YAASjF,EAEdZ,IC7rBf,MAAMwF,GAAQ,CACV,CAAC,6CAA8CyiB,IAC/C,CAAC,sCAAuCF,IACxC,CAAC,wCAAyCI,IAC1C,CAAC,6CAA8CV,IAC/C,CAAC,2CAA4CI,KAEpCpiB,GAAqB,IAAI1D,MAAM,sBAC/B2D,GAAW,IAAIC,EAAAA,SAASH,IAC/BI,GAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,GAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,GACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAQA,WAGhES,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAQA,KAEnE,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,GAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvH6hB,mBAAqBxuB,IAAD,CAAayI,QAAS,6CAA8C1D,MAAOspB,GAAmB1mB,YAAY3H,KAC9HyuB,YAAczuB,IAAD,CAAayI,QAAS,sCAAuC1D,MAAOopB,GAAYxmB,YAAY3H,KACzG0uB,cAAgB1uB,IAAD,CAAayI,QAAS,wCAAyC1D,MAAOwpB,GAAc5mB,YAAY3H,KAC/G2uB,mBAAqB3uB,IAAD,CAAayI,QAAS,6CAA8C1D,MAAO8oB,GAAmBlmB,YAAY3H,KAC9H4uB,iBAAmB5uB,IAAD,CAAayI,QAAS,2CAA4C1D,MAAOkpB,GAAiBtmB,YAAY3H,OAG1H+M,GAAcrM,OAAS2L,KAAMA,GAAS,CAAEA,KAAM,2BACzC,IAAI3G,GAAI,CAAErE,QAASgL,ICtCvB,IAAIwiB,GAYJ,SAASC,GAA0BvnB,GACtC,OAAQA,GACJ,KAAK,EACL,IAAK,iCACD,OAAOsnB,GAAkBE,+BAC7B,KAAK,EACL,IAAK,8BACD,OAAOF,GAAkBG,4BAC7B,KAAK,EACL,IAAK,gCACD,OAAOH,GAAkBI,8BAC7B,KAAK,EACL,IAAK,gCACD,OAAOJ,GAAkBK,8BAC7B,KAAM,EACN,IAAK,eACL,QACI,OAAOL,GAAkBvP,cAG9B,SAAS6P,GAAwB5nB,GACpC,OAAQA,GACJ,KAAKsnB,GAAkBE,+BACnB,MAAO,iCACX,KAAKF,GAAkBG,4BACnB,MAAO,8BACX,KAAKH,GAAkBI,8BACnB,MAAO,gCACX,KAAKJ,GAAkBK,8BACnB,MAAO,gCACX,QACI,MAAO,YA1CnB,SAAWL,GAEPA,EAAkBA,EAAkB,kCAAoC,GAAK,iCAE7EA,EAAkBA,EAAkB,+BAAiC,GAAK,8BAE1EA,EAAkBA,EAAkB,iCAAmC,GAAK,gCAE5EA,EAAkBA,EAAkB,iCAAmC,GAAK,gCAC5EA,EAAkBA,EAAkB,iBAAmB,GAAK,gBAThE,CAUGA,KAAsBA,GAAoB,KAmC7C,MAAMO,GAAyB,CAAEC,kBAAmB,GACvCC,GAAqB,CAC9BnpB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,YAZ0BU,IAAtBZ,EAAQmpB,WACRve,GAAAA,OAAY5K,EAAQmpB,UAAWlpB,EAAOE,OAAO,IAAI4D,QAAQC,cAEnCpD,IAAtBZ,EAAQopB,WACRC,GAA8BtpB,OAAOC,EAAQopB,UAAWnpB,EAAOE,OAAO,IAAI4D,QAAQC,cAE7DpD,IAArBZ,EAAQspB,UACRD,GAA8BtpB,OAAOC,EAAQspB,SAAUrpB,EAAOE,OAAO,IAAI4D,QAAQC,SAEnD,IAA9BhE,EAAQipB,mBACRhpB,EAAOE,OAAO,IAAIE,MAAML,EAAQipB,mBAE7BhpB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKgpB,IACrB,MAAOxoB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmpB,UAAYve,GAAAA,OAAYpK,EAAQA,EAAOL,UAC/C,MACJ,KAAK,EACDH,EAAQopB,UAAYC,GAA8B/oB,OAAOE,EAAQA,EAAOL,UACxE,MACJ,KAAK,EACDH,EAAQspB,SAAWD,GAA8B/oB,OAAOE,EAAQA,EAAOL,UACvE,MACJ,KAAK,EACDH,EAAQipB,kBAAoBzoB,EAAOH,QACnC,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKgpB,IAyBrB,YAxByBpoB,IAArBO,EAAOgoB,WAAgD,OAArBhoB,EAAOgoB,UACzCnpB,EAAQmpB,UAAYve,GAAAA,SAAczJ,EAAOgoB,WAGzCnpB,EAAQmpB,eAAYvoB,OAECA,IAArBO,EAAOioB,WAAgD,OAArBjoB,EAAOioB,UACzCppB,EAAQopB,UAAYC,GAA8BnoB,SAASC,EAAOioB,WAGlEppB,EAAQopB,eAAYxoB,OAEAA,IAApBO,EAAOmoB,UAA8C,OAApBnoB,EAAOmoB,SACxCtpB,EAAQspB,SAAWD,GAA8BnoB,SAASC,EAAOmoB,UAGjEtpB,EAAQspB,cAAW1oB,OAEUA,IAA7BO,EAAO8nB,mBAAgE,OAA7B9nB,EAAO8nB,kBACjDjpB,EAAQipB,kBAAoBP,GAA0BvnB,EAAO8nB,mBAG7DjpB,EAAQipB,kBAAoB,EAEzBjpB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJsBV,IAAtBZ,EAAQmpB,YAA4B7nB,EAAI6nB,UAAYnpB,EAAQmpB,UAAYve,GAAAA,OAAY5K,EAAQmpB,gBAAavoB,QACnFA,IAAtBZ,EAAQopB,YAA4B9nB,EAAI8nB,UAAYppB,EAAQopB,UAAYC,GAA8BhoB,OAAOrB,EAAQopB,gBAAaxoB,QAC7GA,IAArBZ,EAAQspB,WAA2BhoB,EAAIgoB,SAAWtpB,EAAQspB,SAAWD,GAA8BhoB,OAAOrB,EAAQspB,eAAY1oB,QAChGA,IAA9BZ,EAAQipB,oBAAoC3nB,EAAI2nB,kBAAoBF,GAAwB/oB,EAAQipB,oBAC7F3nB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKgpB,IAyBrB,YAxByBpoB,IAArBO,EAAOgoB,WAAgD,OAArBhoB,EAAOgoB,UACzCnpB,EAAQmpB,UAAYve,GAAAA,YAAiBzJ,EAAOgoB,WAG5CnpB,EAAQmpB,eAAYvoB,OAECA,IAArBO,EAAOioB,WAAgD,OAArBjoB,EAAOioB,UACzCppB,EAAQopB,UAAYC,GAA8B9nB,YAAYJ,EAAOioB,WAGrEppB,EAAQopB,eAAYxoB,OAEAA,IAApBO,EAAOmoB,UAA8C,OAApBnoB,EAAOmoB,SACxCtpB,EAAQspB,SAAWD,GAA8B9nB,YAAYJ,EAAOmoB,UAGpEtpB,EAAQspB,cAAW1oB,OAEUA,IAA7BO,EAAO8nB,mBAAgE,OAA7B9nB,EAAO8nB,kBACjDjpB,EAAQipB,kBAAoB9nB,EAAO8nB,kBAGnCjpB,EAAQipB,kBAAoB,EAEzBjpB,IAGTupB,GAAoC,CAAE/vB,QAAS,IACxC6vB,GAAgC,CACzCtpB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACrB,IAAK,MAAMiF,KAAKnF,EAAQxG,QACpByG,EAAOE,OAAO,IAAIoC,OAAO4C,GAE7B,OAAOlF,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKupB,IACrBvpB,EAAQxG,QAAU,GAClB,MAAOgH,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQxG,QAAQ+J,KAAK/C,EAAO+B,UAC5B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKupB,IAErB,GADAvpB,EAAQxG,QAAU,QACKoH,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvC,IAAK,MAAMgF,KAAK2C,EAAO3H,QACnBwG,EAAQxG,QAAQ+J,KAAKd,OAAOjE,IAGpC,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAOZ,OANItB,EAAQxG,QACR8H,EAAI9H,QAAUwG,EAAQxG,QAAQ0F,KAAKV,GAAMA,IAGzC8C,EAAI9H,QAAU,GAEX8H,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKupB,IAErB,GADAvpB,EAAQxG,QAAU,QACKoH,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvC,IAAK,MAAMgF,KAAK2C,EAAO3H,QACnBwG,EAAQxG,QAAQ+J,KAAK/E,GAG7B,OAAOwB,ICITwpB,GAAyB,CAAEhwB,QAAS,GAAImc,MAAO,GACxC8T,GAAqB,CAC9B1pB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQxG,SACRyG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQxG,SAEf,IAAlBwG,EAAQ2V,OACR1V,EAAOE,OAAO,IAAIC,MAAMJ,EAAQ2V,OAE7B1V,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKwpB,IACrB,MAAOhpB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQxG,QAAUgH,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ2V,MAAQ3U,GAAaR,EAAOJ,SACpC,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKwpB,IAarB,YAZuB5oB,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAUiJ,OAAOtB,EAAO3H,SAGhCwG,EAAQxG,QAAU,QAEDoH,IAAjBO,EAAOwU,OAAwC,OAAjBxU,EAAOwU,MACrC3V,EAAQ2V,MAAQvU,OAAOD,EAAOwU,OAG9B3V,EAAQ2V,MAAQ,EAEb3V,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQxG,UAA0B8H,EAAI9H,QAAUwG,EAAQxG,cACtCoH,IAAlBZ,EAAQ2V,QAAwBrU,EAAIqU,MAAQ3V,EAAQ2V,OAC7CrU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKwpB,IAarB,YAZuB5oB,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAU2H,EAAO3H,QAGzBwG,EAAQxG,QAAU,QAEDoH,IAAjBO,EAAOwU,OAAwC,OAAjBxU,EAAOwU,MACrC3V,EAAQ2V,MAAQxU,EAAOwU,MAGvB3V,EAAQ2V,MAAQ,EAEb3V,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWJH,GAAWoB,KASXpB,GAAW6B,KAQxB,SAASrC,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,c,gBCxSJ7H,eAAe4M,GAAaC,GACxB,aAAapB,GAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BAG1B7M,eAAe8M,GAAgBD,GAC3B,aAAaR,GAAY,CACrBV,KAAMkB,EAAY,0BAG1B,SAASE,GAAa1I,EAAO2I,GACzB,IAAK,IAAIC,KAAQrL,OAAOC,KAAKmL,GACrBzI,MAAMC,QAAQwI,EAAYC,IAC1B5I,EAAM4I,GAAQ,IAAI5I,EAAM4I,MAAUD,EAAYC,IAG9C5I,EAAM4I,GAAQD,EAAYC,GAGlC,OAAO5I,EAEX,SAAS6I,GAAaC,GAClB,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,IAAK,MAAOtL,EAAKsC,KAAUzC,OAAO0L,QAAQH,GAAW,CACjD,IAAII,EAAQ,GACZA,EAAMlO,KAAO0C,EACbwL,EAAMrK,YAAcmB,EACpB+I,EAAUC,OAAOpE,KAAKsE,GAE1B,OAAOH,EAEX,MAAMI,GAAkB,KACb,CACH4hB,WAAY,GACZ5G,UAAW,GACX6G,qBAAsB,GACtBC,8BAA+B,GAC/BnE,WAAY,GACZE,oBAAqB,GACrBkE,qBAAsB,GACtBC,8BAA+B,GAC/BC,cAAe,GACf1V,oBAAqB,GACrB2V,mBAAoB,GACpBrH,eAAgB,GAChB4E,KAAM,GACNxc,OAAQ,GACR/C,WAAY,CACRkhB,mBAAoB1hB,GAAa0hB,GAAmB3nB,YAAY,KAChE8nB,8BAA+B7hB,GAAa6hB,GAA8B9nB,YAAY,KACtFkoB,mBAAoBjiB,GAAaiiB,GAAmBloB,YAAY,KAChEohB,eAAgBnb,GAAamb,GAAephB,YAAY,KACxD4hB,gBAAiB3b,GAAa2b,GAAgB5hB,YAAY,KAC1D8hB,WAAY7b,GAAa6b,GAAW9hB,YAAY,KAChDuiB,YAAatc,GAAasc,GAAYviB,YAAY,KAClDuhB,UAAWtb,GAAasb,GAAAA,YAAsB,KAC9C4B,aAAcld,GAAakd,GAAanjB,YAAY,KACpDqjB,OAAQpd,GAAaod,GAAOrjB,YAAY,KACxCujB,QAAStd,GAAasd,GAAQvjB,YAAY,KAC1C4jB,WAAY3d,GAAa2d,GAAW5jB,YAAY,KAChD8jB,YAAa7d,GAAa6d,GAAY9jB,YAAY,KAClDkkB,WAAYje,GAAaie,GAAWlkB,YAAY,KAChDokB,oBAAqBne,GAAame,GAAoBpkB,YAAY,KAClEqkB,yBAA0Bpe,GAAaoe,GAAyBrkB,YAAY,KAC5E6kB,kBAAmB5e,GAAa4e,GAAkB7kB,YAAY,KAC9D+kB,aAAc9e,GAAa8e,GAAa/kB,YAAY,KACpDwJ,OAAQvD,GAAauD,GAAAA,YAAmB,KACxC6b,mBAAoBpf,GAAaof,GAAmBrlB,YAAY,KAChEwlB,0BAA2Bvf,GAAauf,GAA0BxlB,YAAY,KAC9E2lB,qBAAsB1f,GAAa0f,GAAqB3lB,YAAY,KACpEgmB,KAAM/f,GAAa+f,GAAKhmB,YAAY,MAExC0G,UAAWvC,GACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,IC/FWjN,GD+FX,IACIwN,YAAY,EACZD,MAFW,GAGXE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACL+vB,cAAgB7hB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACrCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMshB,WAAW3tB,KAAKC,UAAU2B,KAAY,IAEvDusB,aAAe9hB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACpCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM0a,UAAU/mB,KAAKC,UAAU2B,KAAY,IAEtDwsB,wBAA0B/hB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC/CA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMuhB,qBAAqB5tB,KAAKC,UAAU2B,KAAY,IAEjEysB,iCAAmChiB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACxDA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMwhB,8BAA8B7tB,KAAKC,UAAU2B,KAAY,IAE1E0sB,cAAgBjiB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACrCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMqd,WAAW1pB,KAAKC,UAAU2B,KAAY,IAEvD2sB,uBAAyBliB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC9CA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMud,oBAAoB5pB,KAAKC,UAAU2B,KAAY,IAEhE4sB,wBAA0BniB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC/CA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMyhB,qBAAqB9tB,KAAKC,UAAU2B,KAAY,IAEjE6sB,iCAAmCpiB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACxDA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM0hB,8BAA8B/tB,KAAKC,UAAU2B,KAAY,IAE1E8sB,iBAAmBriB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACxCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2hB,cAAchuB,KAAKC,UAAU2B,KAAY,IAE1DkX,uBAAyBzM,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC9CA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMiM,oBAAoBtY,KAAKC,UAAU2B,KAAY,IAEhE+sB,sBAAwBtiB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC7CA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM4hB,mBAAmBjuB,KAAKC,UAAU2B,KAAY,IAE/DgtB,kBAAoBviB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACzCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMua,eAAe5mB,KAAKC,UAAU2B,KAAY,IAE3DitB,QAAUxiB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC/BA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMmf,KAAKxrB,KAAKC,UAAU2B,KAAY,IAEjDsQ,UAAY7F,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACjCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2C,OAAOhP,KAAKC,UAAU2B,KAAY,IAEnDmL,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,oDACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,uBAAsB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACtI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYyZ,gBAAgB3iB,IAAQ7D,KACvD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYyZ,gBAAgB,IAAK3iB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KACjH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,aAAcpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACvEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,kBAAmBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC/FvD,EAAQ,iBAAiB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEtE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,8BAA+B,kDAAoDpL,EAAEwB,WAGnH1F,sBAAqB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACrI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY0Z,eAAehkB,EAAIwuB,iBAAiBjxB,KAInE,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,YAAapB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACtEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,iBAAkBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC9FvD,EAAQ,gBAAgB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAErE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,6BAA8B,kDAAoDpL,EAAEwB,WAGlH1F,iCAAgC,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAChJ,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY2Z,0BAA0BjkB,EAAIwuB,eAAgBptB,IAAQ7D,KACrF,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY2Z,0BAA0BjkB,EAAIwuB,eAAgB,IAAKptB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC/I+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,uBAAwBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACjFmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,4BAA6BC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACzGvD,EAAQ,2BAA2B,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEhF,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,wCAAyC,kDAAoDpL,EAAEwB,WAG7H1F,0CAAyC,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACzJ,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY8Z,mCAAmCpkB,EAAIwuB,eAAgBptB,IAAQ7D,KAC9F,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY8Z,mCAAmCpkB,EAAIwuB,eAAgB,IAAKptB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KACxJ+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,gCAAiCpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC1FmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,qCAAsCC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAClHvD,EAAQ,oCAAoC,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEzF,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,iDAAkD,kDAAoDpL,EAAEwB,WAGtI1F,uBAAsB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACtI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY4Z,gBAAgBlkB,EAAIwuB,eAAgBxuB,EAAIyuB,iBAAiBlxB,KAIxF,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,aAAcpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACvEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,kBAAmBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC/FvD,EAAQ,iBAAiB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEtE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,8BAA+B,kDAAoDpL,EAAEwB,WAGnH1F,gCAA+B,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAC/I,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY6Z,yBAAyBnkB,EAAIwuB,eAAgBxuB,EAAIyuB,iBAAiBlxB,KAIjG,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,sBAAuBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAChFmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,2BAA4BC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACxGvD,EAAQ,0BAA0B,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAE/E,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,uCAAwC,kDAAoDpL,EAAEwB,WAG5H1F,iCAAgC,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAChJ,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYkZ,0BAA0BxjB,EAAIyuB,eAAgBrtB,IAAQ7D,KACrF,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYkZ,0BAA0BxjB,EAAIyuB,eAAgB,IAAKrtB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC/I+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,uBAAwBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACjFmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,4BAA6BC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACzGvD,EAAQ,2BAA2B,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEhF,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,wCAAyC,kDAAoDpL,EAAEwB,WAG7H1F,0CAAyC,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACzJ,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYqZ,mCAAmC3jB,EAAIyuB,eAAgBrtB,IAAQ7D,KAC9F,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYqZ,mCAAmC3jB,EAAIyuB,eAAgB,IAAKrtB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KACxJ+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,gCAAiCpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC1FmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,qCAAsCC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAClHvD,EAAQ,oCAAoC,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEzF,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,iDAAkD,kDAAoDpL,EAAEwB,WAGtI1F,0BAAyB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACzI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYoZ,mBAAmB1jB,EAAIyuB,eAAgBrtB,IAAQ7D,KAC9E,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYoZ,mBAAmB1jB,EAAIyuB,eAAgB,IAAKrtB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KACxI+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,gBAAiBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC1EmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,qBAAsBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAClGvD,EAAQ,oBAAoB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEzE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,iCAAkC,kDAAoDpL,EAAEwB,WAGtH1F,gCAA+B,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAC/I,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYoI,yBAAyB1S,EAAIyuB,eAAgBrtB,IAAQ7D,KACpF,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYoI,yBAAyB1S,EAAIyuB,eAAgB,IAAKrtB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC9I+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,sBAAuBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAChFmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,2BAA4BC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACxGvD,EAAQ,0BAA0B,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAE/E,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,uCAAwC,kDAAoDpL,EAAEwB,WAG5H1F,+BAA8B,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAC9I,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYsZ,wBAAwB5jB,EAAIyuB,eAAgBzuB,EAAIwuB,iBAAiBjxB,KAIhG,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,qBAAsBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC/EmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,0BAA2BC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACvGvD,EAAQ,yBAAyB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAE9E,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,sCAAuC,kDAAoDpL,EAAEwB,WAG3H1F,2BAA0B,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAC1I,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYuZ,oBAAoB7jB,EAAIkW,SAAS3Y,KAIhE,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,iBAAkBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC3EmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,sBAAuBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACnGvD,EAAQ,qBAAqB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAE1E,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,kCAAmC,kDAAoDpL,EAAEwB,WAGvH1F,iBAAgB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAChI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYwZ,aAAavmB,KAI5C,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,OAAQpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACjEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,YAAaC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACzFvD,EAAQ,WAAW,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEhE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,wBAAyB,kDAAoDpL,EAAEwB,WAG7G1F,mBAAkB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAClI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY6D,eAAe5Q,KAI9C,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,SAAUpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACnEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,cAAeC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC3FvD,EAAQ,aAAa,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAElE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,0BAA2B,kDAAoDpL,EAAEwB,WAG/G1F,8BAA6B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACpE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASqiB,mBAAmBzpB,GACxCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,mCAAoC,4DAGpD,IAAIA,EAAAA,GAAY,mCAAoC,2BAA6BpL,EAAEwB,WAIrG1F,uBAAsB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC7D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASsiB,YAAY1pB,GACjCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,4BAA6B,4DAG7C,IAAIA,EAAAA,GAAY,4BAA6B,2BAA6BpL,EAAEwB,WAI9F1F,yBAAwB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC/D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASuiB,cAAc3pB,GACnCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,8BAA+B,4DAG/C,IAAIA,EAAAA,GAAY,8BAA+B,2BAA6BpL,EAAEwB,WAIhG1F,8BAA6B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACpE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASwiB,mBAAmB5pB,GACxCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,mCAAoC,4DAGpD,IAAIA,EAAAA,GAAY,mCAAoC,2BAA6BpL,EAAEwB,WAIrG1F,4BAA2B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAClE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASyiB,iBAAiB7pB,GACtCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,iCAAkC,4DAGlD,IAAIA,EAAAA,GAAY,iCAAkC,2BAA6BpL,EAAEwB,WAInG1F,0BAAyB,YAAE4O,IAAe,MAAEvK,IACxC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASqiB,mBAAmBzpB,GAC9C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,mCAAoC,4DAGpD,IAAIA,EAAAA,GAAY,qCAAsC,6BAA+BpL,EAAEwB,WAIzG1F,mBAAkB,YAAE4O,IAAe,MAAEvK,IACjC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASsiB,YAAY1pB,GACvC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,4BAA6B,4DAG7C,IAAIA,EAAAA,GAAY,8BAA+B,6BAA+BpL,EAAEwB,WAIlG1F,qBAAoB,YAAE4O,IAAe,MAAEvK,IACnC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASuiB,cAAc3pB,GACzC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,8BAA+B,4DAG/C,IAAIA,EAAAA,GAAY,gCAAiC,6BAA+BpL,EAAEwB,WAIpG1F,0BAAyB,YAAE4O,IAAe,MAAEvK,IACxC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASwiB,mBAAmB5pB,GAC9C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,mCAAoC,4DAGpD,IAAIA,EAAAA,GAAY,qCAAsC,6BAA+BpL,EAAEwB,WAIzG1F,wBAAuB,YAAE4O,IAAe,MAAEvK,IACtC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASyiB,iBAAiB7pB,GAC5C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,iCAAkC,4DAGlD,IAAIA,EAAAA,GAAY,mCAAoC,6BAA+BpL,EAAEwB,cCjmB/G,SAAWnF,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KCb1B,MACD8P,GAAW,CAAEN,MAAO,GAAIxE,OAAQ,IACzB+E,GAAO,CAChB7K,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQqK,OACRpK,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqK,OAEd,KAAnBrK,EAAQ6F,QACR5F,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6F,QAE9B5F,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2K,IACrB,MAAOnK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqK,MAAQ7J,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6F,OAASrF,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQ5H,OAAOtB,EAAOkJ,OAG9BrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASpD,OAAOtB,EAAO0E,QAG/B7F,EAAQ6F,OAAS,GAEd7F,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQqK,QAAwB/I,EAAI+I,MAAQrK,EAAQqK,YACjCzJ,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,QAC/CvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQlJ,EAAOkJ,MAGvBrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,GAEd7F,ICjET+qB,GAA8B,CAAEre,YAAa,GAAIC,UAAW,GAAIqe,QAAS,EAAGC,SAAS,GAC9EC,GAA0B,CACnCnrB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACO,KAAxBF,EAAQ0M,aACRzM,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ0M,aAEX,KAAtB1M,EAAQ2M,WACR1M,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ2M,WAErC,IAAK,MAAMxH,KAAKnF,EAAQ6F,OACpB+E,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAQ7C,OANwB,IAApBhE,EAAQgrB,SACR/qB,EAAOE,OAAO,IAAIC,MAAMJ,EAAQgrB,UAEZ,IAApBhrB,EAAQirB,SACRhrB,EAAOE,OAAO,IAAI+K,KAAKlL,EAAQirB,SAE5BhrB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK+qB,IACrB/qB,EAAQ6F,OAAS,GACjB,MAAOrF,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ0M,YAAclM,EAAO+B,SAC7B,MACJ,KAAK,EACDvC,EAAQ2M,UAAYnM,EAAO+B,SAC3B,MACJ,KAAK,EACDvC,EAAQ6F,OAAOtC,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WAC/C,MACJ,KAAK,EACDH,EAAQgrB,QAAUhqB,GAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQirB,QAAUzqB,EAAO0K,OACzB,MACJ,QACI1K,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK+qB,IAcrB,GAbA/qB,EAAQ6F,OAAS,QACUjF,IAAvBO,EAAOuL,aAAoD,OAAvBvL,EAAOuL,YAC3C1M,EAAQ0M,YAAcjK,OAAOtB,EAAOuL,aAGpC1M,EAAQ0M,YAAc,QAED9L,IAArBO,EAAOwL,WAAgD,OAArBxL,EAAOwL,UACzC3M,EAAQ2M,UAAYlK,OAAOtB,EAAOwL,WAGlC3M,EAAQ2M,UAAY,QAEF/L,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAAA,SAAcpM,IAe1C,YAZuBoC,IAAnBO,EAAO6pB,SAA4C,OAAnB7pB,EAAO6pB,QACvChrB,EAAQgrB,QAAU5pB,OAAOD,EAAO6pB,SAGhChrB,EAAQgrB,QAAU,OAECpqB,IAAnBO,EAAO8pB,SAA4C,OAAnB9pB,EAAO8pB,QACvCjrB,EAAQirB,QAAU9f,QAAQhK,EAAO8pB,SAGjCjrB,EAAQirB,SAAU,EAEfjrB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAWZ,YAVwBV,IAAxBZ,EAAQ0M,cAA8BpL,EAAIoL,YAAc1M,EAAQ0M,kBAC1C9L,IAAtBZ,EAAQ2M,YAA4BrL,EAAIqL,UAAY3M,EAAQ2M,WACxD3M,EAAQ6F,OACRvE,EAAIuE,OAAS7F,EAAQ6F,OAAO3G,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAG7DU,EAAIuE,OAAS,QAEGjF,IAApBZ,EAAQgrB,UAA0B1pB,EAAI0pB,QAAUhrB,EAAQgrB,cACpCpqB,IAApBZ,EAAQirB,UAA0B3pB,EAAI2pB,QAAUjrB,EAAQirB,SACjD3pB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK+qB,IAcrB,GAbA/qB,EAAQ6F,OAAS,QACUjF,IAAvBO,EAAOuL,aAAoD,OAAvBvL,EAAOuL,YAC3C1M,EAAQ0M,YAAcvL,EAAOuL,YAG7B1M,EAAQ0M,YAAc,QAED9L,IAArBO,EAAOwL,WAAgD,OAArBxL,EAAOwL,UACzC3M,EAAQ2M,UAAYxL,EAAOwL,UAG3B3M,EAAQ2M,UAAY,QAEF/L,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAAA,YAAiBpM,IAe7C,YAZuBoC,IAAnBO,EAAO6pB,SAA4C,OAAnB7pB,EAAO6pB,QACvChrB,EAAQgrB,QAAU7pB,EAAO6pB,QAGzBhrB,EAAQgrB,QAAU,OAECpqB,IAAnBO,EAAO8pB,SAA4C,OAAnB9pB,EAAO8pB,QACvCjrB,EAAQirB,QAAU9pB,EAAO8pB,QAGzBjrB,EAAQirB,SAAU,EAEfjrB,IA6Cf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cClMJ,MAAMqD,GAAQ,CACV,CAAC,kDAAmD0lB,KAE3CzlB,GAAqB,IAAI1D,MAAM,sBAC/B2D,GAAW,IAAIC,EAAAA,SAASH,IAC/BI,GAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,GAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,GACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAQA,WAGhES,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAQA,KAEnE,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,GAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvH4kB,wBAA0BvxB,IAAD,CAAayI,QAAS,kDAAmD1D,MAAOusB,GAAwB3pB,YAAY3H,OCxB/IwI,GAAU,CAAEC,QAAS,IACdC,GAAM,CACfvC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQqC,SACRpC,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqC,SAER,IAAzBrC,EAAQrB,MAAM4B,QACdN,EAAOE,OAAO,IAAIqC,MAAMxC,EAAQrB,OAE7BsB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKoC,IACrB,MAAO5B,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqC,QAAU7B,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQrB,MAAQ6B,EAAOgC,QACvB,MACJ,QACIhC,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKoC,IAUrB,YATuBxB,IAAnBO,EAAOkB,SAA4C,OAAnBlB,EAAOkB,QACvCrC,EAAQqC,QAAUI,OAAOtB,EAAOkB,SAGhCrC,EAAQqC,QAAU,QAEDzB,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,QACrCqB,EAAQrB,MAAQ+D,GAAgBvB,EAAOxC,QAEpCqB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQqC,UAA0Bf,EAAIe,QAAUrC,EAAQqC,cACtCzB,IAAlBZ,EAAQrB,QAAwB2C,EAAI3C,MAAQgE,QAAkC/B,IAAlBZ,EAAQrB,MAAsBqB,EAAQrB,MAAQ,IAAI8B,aACvGa,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKoC,IAarB,YAZuBxB,IAAnBO,EAAOkB,SAA4C,OAAnBlB,EAAOkB,QACvCrC,EAAQqC,QAAUlB,EAAOkB,QAGzBrC,EAAQqC,QAAU,QAEDzB,IAAjBO,EAAOxC,OAAwC,OAAjBwC,EAAOxC,MACrCqB,EAAQrB,MAAQwC,EAAOxC,MAGvBqB,EAAQrB,MAAQ,IAAI8B,WAEjBT,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,MAAMiB,GAAOpB,GAAWoB,MAAX,CAAqBC,GAAQrB,GAAWsB,OAAOC,KAAKF,EAAK,UAAUG,SAAS,WACzF,SAASN,GAAgBG,GACrB,MAAMI,EAAML,GAAKC,GACXK,EAAM,IAAIzC,WAAWwC,EAAI1C,QAC/B,IAAK,IAAI4C,EAAI,EAAGA,EAAIF,EAAI1C,SAAU4C,EAC9BD,EAAIC,GAAKF,EAAIG,WAAWD,GAE5B,OAAOD,EAEX,MAAMG,GAAO7B,GAAW6B,MAAX,CAAqBJ,GAAQzB,GAAWsB,OAAOC,KAAKE,EAAK,UAAUD,SAAS,WACzF,SAASL,GAAgBO,GACrB,MAAMD,EAAM,GACZ,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAII,aAAcH,EAClCF,EAAIM,KAAKd,OAAOe,aAAaN,EAAIC,KAErC,OAAOE,GAAKJ,EAAIlE,KAAK,KC5FlB,MACDqsB,GAAkB,CAAE5xB,QAAS,GAAI6xB,cAAe,EAAGC,SAAU,GACtDC,GAAc,CACvBxrB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,MAZwB,KAApBF,EAAQxG,SACRyG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQxG,cAEdoH,IAAnBZ,EAAQwrB,QACRlpB,GAAAA,OAAWtC,EAAQwrB,OAAQvrB,EAAOE,OAAO,IAAI4D,QAAQC,SAE3B,IAA1BhE,EAAQqrB,eACRprB,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQqrB,eAEZ,IAArBrrB,EAAQsrB,UACRrrB,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQsrB,UAE9BrrB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKorB,IACrB,MAAO5qB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQxG,QAAUgH,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQwrB,OAASlpB,GAAAA,OAAW9B,EAAQA,EAAOL,UAC3C,MACJ,KAAK,EACDH,EAAQqrB,cAAgBrqB,GAAaR,EAAOwQ,UAC5C,MACJ,KAAK,EACDhR,EAAQsrB,SAAWtqB,GAAaR,EAAOwQ,UACvC,MACJ,QACIxQ,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKorB,IAyBrB,YAxBuBxqB,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAUiJ,OAAOtB,EAAO3H,SAGhCwG,EAAQxG,QAAU,QAEAoH,IAAlBO,EAAOqqB,QAA0C,OAAlBrqB,EAAOqqB,OACtCxrB,EAAQwrB,OAASlpB,GAAAA,SAAanB,EAAOqqB,QAGrCxrB,EAAQwrB,YAAS5qB,OAEQA,IAAzBO,EAAOkqB,eAAwD,OAAzBlqB,EAAOkqB,cAC7CrrB,EAAQqrB,cAAgBjqB,OAAOD,EAAOkqB,eAGtCrrB,EAAQqrB,cAAgB,OAEJzqB,IAApBO,EAAOmqB,UAA8C,OAApBnqB,EAAOmqB,SACxCtrB,EAAQsrB,SAAWlqB,OAAOD,EAAOmqB,UAGjCtrB,EAAQsrB,SAAW,EAEhBtrB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJoBV,IAApBZ,EAAQxG,UAA0B8H,EAAI9H,QAAUwG,EAAQxG,cACrCoH,IAAnBZ,EAAQwrB,SAAyBlqB,EAAIkqB,OAASxrB,EAAQwrB,OAASlpB,GAAAA,OAAWtC,EAAQwrB,aAAU5qB,QAClEA,IAA1BZ,EAAQqrB,gBAAgC/pB,EAAI+pB,cAAgBrrB,EAAQqrB,oBAC/CzqB,IAArBZ,EAAQsrB,WAA2BhqB,EAAIgqB,SAAWtrB,EAAQsrB,UACnDhqB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKorB,IAyBrB,YAxBuBxqB,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAU2H,EAAO3H,QAGzBwG,EAAQxG,QAAU,QAEAoH,IAAlBO,EAAOqqB,QAA0C,OAAlBrqB,EAAOqqB,OACtCxrB,EAAQwrB,OAASlpB,GAAAA,YAAgBnB,EAAOqqB,QAGxCxrB,EAAQwrB,YAAS5qB,OAEQA,IAAzBO,EAAOkqB,eAAwD,OAAzBlqB,EAAOkqB,cAC7CrrB,EAAQqrB,cAAgBlqB,EAAOkqB,cAG/BrrB,EAAQqrB,cAAgB,OAEJzqB,IAApBO,EAAOmqB,UAA8C,OAApBnqB,EAAOmqB,SACxCtrB,EAAQsrB,SAAWnqB,EAAOmqB,SAG1BtrB,EAAQsrB,SAAW,EAEhBtrB,IAiOf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cC7VG,MACDspB,GAAyB,CAAET,QAAS,GAC7BU,GAAqB,CAC9B3rB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,eACOU,IAAxBZ,EAAQ2rB,aACRJ,GAAYxrB,OAAOC,EAAQ2rB,YAAa1rB,EAAOE,OAAO,IAAI4D,QAAQC,SAEtE,IAAK,MAAMmB,KAAKnF,EAAQ4rB,gBACpBhhB,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,IAAK,MAAMmB,KAAKnF,EAAQ6rB,cACpBjhB,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,IAAK,MAAMmB,KAAKnF,EAAQ8rB,iBACpBlhB,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAK7C,OAHwB,IAApBhE,EAAQgrB,SACR/qB,EAAOE,OAAO,IAAIC,MAAMJ,EAAQgrB,SAE7B/qB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKyrB,IACrBzrB,EAAQ4rB,gBAAkB,GAC1B5rB,EAAQ6rB,cAAgB,GACxB7rB,EAAQ8rB,iBAAmB,GAC3B,MAAOtrB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ2rB,YAAcJ,GAAYjrB,OAAOE,EAAQA,EAAOL,UACxD,MACJ,KAAK,EACDH,EAAQ4rB,gBAAgBroB,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WACxD,MACJ,KAAK,EACDH,EAAQ6rB,cAActoB,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WACtD,MACJ,KAAK,EACDH,EAAQ8rB,iBAAiBvoB,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WACzD,MACJ,KAAK,EACDH,EAAQgrB,QAAUhqB,GAAaR,EAAOJ,SACtC,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKyrB,IAUrB,GATAzrB,EAAQ4rB,gBAAkB,GAC1B5rB,EAAQ6rB,cAAgB,GACxB7rB,EAAQ8rB,iBAAmB,QACAlrB,IAAvBO,EAAOwqB,aAAoD,OAAvBxqB,EAAOwqB,YAC3C3rB,EAAQ2rB,YAAcJ,GAAYrqB,SAASC,EAAOwqB,aAGlD3rB,EAAQ2rB,iBAAc/qB,OAEKA,IAA3BO,EAAOyqB,iBAA4D,OAA3BzqB,EAAOyqB,gBAC/C,IAAK,MAAMptB,KAAK2C,EAAOyqB,gBACnB5rB,EAAQ4rB,gBAAgBroB,KAAKqH,GAAAA,SAAcpM,IAGnD,QAA6BoC,IAAzBO,EAAO0qB,eAAwD,OAAzB1qB,EAAO0qB,cAC7C,IAAK,MAAMrtB,KAAK2C,EAAO0qB,cACnB7rB,EAAQ6rB,cAActoB,KAAKqH,GAAAA,SAAcpM,IAGjD,QAAgCoC,IAA5BO,EAAO2qB,kBAA8D,OAA5B3qB,EAAO2qB,iBAChD,IAAK,MAAMttB,KAAK2C,EAAO2qB,iBACnB9rB,EAAQ8rB,iBAAiBvoB,KAAKqH,GAAAA,SAAcpM,IASpD,YANuBoC,IAAnBO,EAAO6pB,SAA4C,OAAnB7pB,EAAO6pB,QACvChrB,EAAQgrB,QAAU5pB,OAAOD,EAAO6pB,SAGhChrB,EAAQgrB,QAAU,EAEfhrB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAqBZ,YApBwBV,IAAxBZ,EAAQ2rB,cAA8BrqB,EAAIqqB,YAAc3rB,EAAQ2rB,YAAcJ,GAAYlqB,OAAOrB,EAAQ2rB,kBAAe/qB,GACpHZ,EAAQ4rB,gBACRtqB,EAAIsqB,gBAAkB5rB,EAAQ4rB,gBAAgB1sB,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAG/EU,EAAIsqB,gBAAkB,GAEtB5rB,EAAQ6rB,cACRvqB,EAAIuqB,cAAgB7rB,EAAQ6rB,cAAc3sB,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAG3EU,EAAIuqB,cAAgB,GAEpB7rB,EAAQ8rB,iBACRxqB,EAAIwqB,iBAAmB9rB,EAAQ8rB,iBAAiB5sB,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAGjFU,EAAIwqB,iBAAmB,QAEPlrB,IAApBZ,EAAQgrB,UAA0B1pB,EAAI0pB,QAAUhrB,EAAQgrB,SACjD1pB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKyrB,IAUrB,GATAzrB,EAAQ4rB,gBAAkB,GAC1B5rB,EAAQ6rB,cAAgB,GACxB7rB,EAAQ8rB,iBAAmB,QACAlrB,IAAvBO,EAAOwqB,aAAoD,OAAvBxqB,EAAOwqB,YAC3C3rB,EAAQ2rB,YAAcJ,GAAYhqB,YAAYJ,EAAOwqB,aAGrD3rB,EAAQ2rB,iBAAc/qB,OAEKA,IAA3BO,EAAOyqB,iBAA4D,OAA3BzqB,EAAOyqB,gBAC/C,IAAK,MAAMptB,KAAK2C,EAAOyqB,gBACnB5rB,EAAQ4rB,gBAAgBroB,KAAKqH,GAAAA,YAAiBpM,IAGtD,QAA6BoC,IAAzBO,EAAO0qB,eAAwD,OAAzB1qB,EAAO0qB,cAC7C,IAAK,MAAMrtB,KAAK2C,EAAO0qB,cACnB7rB,EAAQ6rB,cAActoB,KAAKqH,GAAAA,YAAiBpM,IAGpD,QAAgCoC,IAA5BO,EAAO2qB,kBAA8D,OAA5B3qB,EAAO2qB,iBAChD,IAAK,MAAMttB,KAAK2C,EAAO2qB,iBACnB9rB,EAAQ8rB,iBAAiBvoB,KAAKqH,GAAAA,YAAiBpM,IASvD,YANuBoC,IAAnBO,EAAO6pB,SAA4C,OAAnB7pB,EAAO6pB,QACvChrB,EAAQgrB,QAAU7pB,EAAO6pB,QAGzBhrB,EAAQgrB,QAAU,EAEfhrB,IAGT+rB,GAA+B,CAAEC,UAAW,GACrCC,GAA2B,CACpClsB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,YANmCU,IAA/BZ,EAAQksB,oBACRR,GAAmB3rB,OAAOC,EAAQksB,mBAAoBjsB,EAAOE,OAAO,IAAI4D,QAAQC,SAE1D,IAAtBhE,EAAQgsB,WACR/rB,EAAOE,OAAO,IAAIC,MAAMJ,EAAQgsB,WAE7B/rB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK+rB,IACrB,MAAOvrB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQksB,mBAAqBR,GAAmBprB,OAAOE,EAAQA,EAAOL,UACtE,MACJ,KAAK,EACDH,EAAQgsB,UAAYhrB,GAAaR,EAAOJ,SACxC,MACJ,QACII,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK+rB,IAarB,YAZkCnrB,IAA9BO,EAAO+qB,oBAAkE,OAA9B/qB,EAAO+qB,mBAClDlsB,EAAQksB,mBAAqBR,GAAmBxqB,SAASC,EAAO+qB,oBAGhElsB,EAAQksB,wBAAqBtrB,OAERA,IAArBO,EAAO6qB,WAAgD,OAArB7qB,EAAO6qB,UACzChsB,EAAQgsB,UAAY5qB,OAAOD,EAAO6qB,WAGlChsB,EAAQgsB,UAAY,EAEjBhsB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAH+BV,IAA/BZ,EAAQksB,qBACH5qB,EAAI4qB,mBAAqBlsB,EAAQksB,mBAAqBR,GAAmBrqB,OAAOrB,EAAQksB,yBAAsBtrB,QAC7FA,IAAtBZ,EAAQgsB,YAA4B1qB,EAAI0qB,UAAYhsB,EAAQgsB,WACrD1qB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK+rB,IAarB,YAZkCnrB,IAA9BO,EAAO+qB,oBAAkE,OAA9B/qB,EAAO+qB,mBAClDlsB,EAAQksB,mBAAqBR,GAAmBnqB,YAAYJ,EAAO+qB,oBAGnElsB,EAAQksB,wBAAqBtrB,OAERA,IAArBO,EAAO6qB,WAAgD,OAArB7qB,EAAO6qB,UACzChsB,EAAQgsB,UAAY7qB,EAAO6qB,UAG3BhsB,EAAQgsB,UAAY,EAEjBhsB,IAGTmsB,GAA4B,GACrBC,GAAwB,CACjCrsB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAIrB,YAHmCU,IAA/BZ,EAAQksB,oBACRR,GAAmB3rB,OAAOC,EAAQksB,mBAAoBjsB,EAAOE,OAAO,IAAI4D,QAAQC,SAE7E/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKmsB,IACrB,MAAO3rB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQksB,mBAAqBR,GAAmBprB,OAAOE,EAAQA,EAAOL,UACtE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKmsB,IAOrB,YANkCvrB,IAA9BO,EAAO+qB,oBAAkE,OAA9B/qB,EAAO+qB,mBAClDlsB,EAAQksB,mBAAqBR,GAAmBxqB,SAASC,EAAO+qB,oBAGhElsB,EAAQksB,wBAAqBtrB,EAE1BZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF+BV,IAA/BZ,EAAQksB,qBACH5qB,EAAI4qB,mBAAqBlsB,EAAQksB,mBAAqBR,GAAmBrqB,OAAOrB,EAAQksB,yBAAsBtrB,GAC5GU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKmsB,IAOrB,YANkCvrB,IAA9BO,EAAO+qB,oBAAkE,OAA9B/qB,EAAO+qB,mBAClDlsB,EAAQksB,mBAAqBR,GAAmBnqB,YAAYJ,EAAO+qB,oBAGnElsB,EAAQksB,wBAAqBtrB,EAE1BZ,IAGTqsB,GAAa,CAAE9rB,OAAQ,GAChB+rB,GAAS,CAClBvsB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UACE,IAAnBF,EAAQO,QACRN,EAAOE,OAAO,GAAGC,MAAMJ,EAAQO,QAEnC,IAAK,MAAM4E,KAAKnF,EAAQ6F,OACpB+E,GAAAA,OAAYzF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE7C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKqsB,IACrBrsB,EAAQ6F,OAAS,GACjB,MAAOrF,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQO,OAASS,GAAaR,EAAOJ,SACrC,MACJ,KAAK,EACDJ,EAAQ6F,OAAOtC,KAAKqH,GAAAA,OAAYpK,EAAQA,EAAOL,WAC/C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKqsB,IAQrB,GAPArsB,EAAQ6F,OAAS,QACKjF,IAAlBO,EAAOZ,QAA0C,OAAlBY,EAAOZ,OACtCP,EAAQO,OAASa,OAAOD,EAAOZ,QAG/BP,EAAQO,OAAS,OAECK,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAAA,SAAcpM,IAG1C,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPmBV,IAAnBZ,EAAQO,SAAyBe,EAAIf,OAASP,EAAQO,QAClDP,EAAQ6F,OACRvE,EAAIuE,OAAS7F,EAAQ6F,OAAO3G,KAAKV,GAAOA,EAAIoM,GAAAA,OAAYpM,QAAKoC,IAG7DU,EAAIuE,OAAS,GAEVvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKqsB,IAQrB,GAPArsB,EAAQ6F,OAAS,QACKjF,IAAlBO,EAAOZ,QAA0C,OAAlBY,EAAOZ,OACtCP,EAAQO,OAASY,EAAOZ,OAGxBP,EAAQO,OAAS,OAECK,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC,IAAK,MAAMrH,KAAK2C,EAAO0E,OACnB7F,EAAQ6F,OAAOtC,KAAKqH,GAAAA,YAAiBpM,IAG7C,OAAOwB,IAGTusB,GAA6B,CAAEP,UAAW,GACnCQ,GAAyB,CAClCzsB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,eACcU,IAA/BZ,EAAQksB,oBACRR,GAAmB3rB,OAAOC,EAAQksB,mBAAoBjsB,EAAOE,OAAO,IAAI4D,QAAQC,SAE1D,IAAtBhE,EAAQgsB,WACR/rB,EAAOE,OAAO,IAAIC,MAAMJ,EAAQgsB,WAEpC,IAAK,MAAM7mB,KAAKnF,EAAQysB,eACpBH,GAAOvsB,OAAOoF,EAAGlF,EAAOE,OAAO,IAAI4D,QAAQC,SAE/C,OAAO/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKusB,IACrBvsB,EAAQysB,eAAiB,GACzB,MAAOjsB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQksB,mBAAqBR,GAAmBprB,OAAOE,EAAQA,EAAOL,UACtE,MACJ,KAAK,EACDH,EAAQgsB,UAAYhrB,GAAaR,EAAOJ,SACxC,MACJ,KAAK,EACDJ,EAAQysB,eAAelpB,KAAK+oB,GAAOhsB,OAAOE,EAAQA,EAAOL,WACzD,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKusB,IAcrB,GAbAvsB,EAAQysB,eAAiB,QACS7rB,IAA9BO,EAAO+qB,oBAAkE,OAA9B/qB,EAAO+qB,mBAClDlsB,EAAQksB,mBAAqBR,GAAmBxqB,SAASC,EAAO+qB,oBAGhElsB,EAAQksB,wBAAqBtrB,OAERA,IAArBO,EAAO6qB,WAAgD,OAArB7qB,EAAO6qB,UACzChsB,EAAQgsB,UAAY5qB,OAAOD,EAAO6qB,WAGlChsB,EAAQgsB,UAAY,OAEMprB,IAA1BO,EAAOsrB,gBAA0D,OAA1BtrB,EAAOsrB,eAC9C,IAAK,MAAMjuB,KAAK2C,EAAOsrB,eACnBzsB,EAAQysB,eAAelpB,KAAK+oB,GAAOprB,SAAS1C,IAGpD,OAAOwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAUZ,YAT+BV,IAA/BZ,EAAQksB,qBACH5qB,EAAI4qB,mBAAqBlsB,EAAQksB,mBAAqBR,GAAmBrqB,OAAOrB,EAAQksB,yBAAsBtrB,QAC7FA,IAAtBZ,EAAQgsB,YAA4B1qB,EAAI0qB,UAAYhsB,EAAQgsB,WACxDhsB,EAAQysB,eACRnrB,EAAImrB,eAAiBzsB,EAAQysB,eAAevtB,KAAKV,GAAOA,EAAI8tB,GAAOjrB,OAAO7C,QAAKoC,IAG/EU,EAAImrB,eAAiB,GAElBnrB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKusB,IAcrB,GAbAvsB,EAAQysB,eAAiB,QACS7rB,IAA9BO,EAAO+qB,oBAAkE,OAA9B/qB,EAAO+qB,mBAClDlsB,EAAQksB,mBAAqBR,GAAmBnqB,YAAYJ,EAAO+qB,oBAGnElsB,EAAQksB,wBAAqBtrB,OAERA,IAArBO,EAAO6qB,WAAgD,OAArB7qB,EAAO6qB,UACzChsB,EAAQgsB,UAAY7qB,EAAO6qB,UAG3BhsB,EAAQgsB,UAAY,OAEMprB,IAA1BO,EAAOsrB,gBAA0D,OAA1BtrB,EAAOsrB,eAC9C,IAAK,MAAMjuB,KAAK2C,EAAOsrB,eACnBzsB,EAAQysB,eAAelpB,KAAK+oB,GAAO/qB,YAAY/C,IAGvD,OAAOwB,IAGT0sB,GAA6B,GACtBC,GAAyB,CAClC5sB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAIrB,YAHmCU,IAA/BZ,EAAQksB,oBACRR,GAAmB3rB,OAAOC,EAAQksB,mBAAoBjsB,EAAOE,OAAO,IAAI4D,QAAQC,SAE7E/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK0sB,IACrB,MAAOlsB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQksB,mBAAqBR,GAAmBprB,OAAOE,EAAQA,EAAOL,UACtE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK0sB,IAOrB,YANkC9rB,IAA9BO,EAAO+qB,oBAAkE,OAA9B/qB,EAAO+qB,mBAClDlsB,EAAQksB,mBAAqBR,GAAmBxqB,SAASC,EAAO+qB,oBAGhElsB,EAAQksB,wBAAqBtrB,EAE1BZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF+BV,IAA/BZ,EAAQksB,qBACH5qB,EAAI4qB,mBAAqBlsB,EAAQksB,mBAAqBR,GAAmBrqB,OAAOrB,EAAQksB,yBAAsBtrB,GAC5GU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK0sB,IAOrB,YANkC9rB,IAA9BO,EAAO+qB,oBAAkE,OAA9B/qB,EAAO+qB,mBAClDlsB,EAAQksB,mBAAqBR,GAAmBnqB,YAAYJ,EAAO+qB,oBAGnElsB,EAAQksB,wBAAqBtrB,EAE1BZ,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,c,gBC3fJ7H,eAAe4M,GAAaC,GACxB,aAAapB,GAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BAmB1B,SAASK,GAAaC,GAClB,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,IAAK,MAAOtL,EAAKsC,KAAUzC,OAAO0L,QAAQH,GAAW,CACjD,IAAII,EAAQ,GACZA,EAAMlO,KAAO0C,EACbwL,EAAMrK,YAAcmB,EACpB+I,EAAUC,OAAOpE,KAAKsE,GAE1B,OAAOH,EAEX,MAAMI,GAAkB,KACb,CACHE,WAAY,CACR0jB,mBAAoBlkB,GAAakkB,GAAmBnqB,YAAY,KAChE0qB,yBAA0BzkB,GAAaykB,GAAyB1qB,YAAY,KAC5E6qB,sBAAuB5kB,GAAa4kB,GAAsB7qB,YAAY,KACtE+qB,OAAQ9kB,GAAa8kB,GAAO/qB,YAAY,KACxCirB,uBAAwBhlB,GAAaglB,GAAuBjrB,YAAY,KACxEorB,uBAAwBnlB,GAAamlB,GAAuBprB,YAAY,MAE5E0G,UAAWvC,GACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,IC/CWjN,GD+CX,IACIwN,YAAY,EACZD,MAFW,GAGXE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACL4O,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,oDACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,mCAAkC,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACzE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASolB,wBAAwBxsB,GAC7CuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,wCAAyC,4DAGzD,IAAIA,EAAAA,GAAY,wCAAyC,2BAA6BpL,EAAEwB,WAI1G1F,+BAA8B,YAAE4O,IAAe,MAAEvK,IAC7C,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASolB,wBAAwBxsB,GACnD,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,wCAAyC,4DAGzD,IAAIA,EAAAA,GAAY,0CAA2C,6BAA+BpL,EAAEwB,cC7HtH,SAAWnF,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,MAAMC,GACTC,YAAYC,EAAY,IACpBjB,KAAKkB,QAAU,GACflB,KAAKmB,aAAe,KACpBnB,KAAKoB,eAAiB,KACtBpB,KAAKqB,iBAAmB,IAAIC,IAC5BtB,KAAKuB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpB3B,KAAK4B,gBAAmB/B,IACpBG,KAAKmB,aAAetB,GAExBG,KAAK6B,kBAAoB,CACrB,CAACf,GAAYgB,MAAQC,GAAoB,OAAVA,GAAoC,kBAAVA,GAAuC,kBAAVA,EAA8CA,EAAxBC,KAAKC,UAAUF,GAC3H,CAACjB,GAAYoB,UAAYH,GAAUI,OAAOC,KAAKL,GAAS,IAAIM,QAAO,CAACxC,EAAMyC,KACtEzC,EAAK0C,OAAOD,EAAKP,EAAMO,IAChBzC,IACR,IAAIqC,UACP,CAACpB,GAAY0B,YAAcT,GAAU/B,KAAKyC,cAAcV,IAE5D/B,KAAK0C,kBAAqBC,IACtB,GAAI3C,KAAKqB,iBAAiBuB,IAAID,GAAc,CACxC,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAClD,OAAIE,EACOA,EAAgBE,YAE3B,EAEJ,MAAMF,EAAkB,IAAIG,gBAE5B,OADAhD,KAAKqB,iBAAiB4B,IAAIN,EAAaE,GAChCA,EAAgBE,QAE3B/C,KAAKkD,aAAgBP,IACjB,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAC9CE,IACAA,EAAgBM,QAChBnD,KAAKqB,iBAAiB+B,OAAOT,KAGrC3C,KAAKqD,QAAU,EAAGC,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,EAAMC,KAAAA,EAAMC,MAAAA,EAAOC,OAAAA,EAAS,OAAQzC,QAAAA,EAASyB,YAAAA,KAAgBiB,MACzF,MAAMC,EAAgBN,GAAUvD,KAAKoB,gBAAkBpB,KAAKoB,eAAepB,KAAKmB,eAAkB,GAC5F2C,EAAgB9D,KAAK+D,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS1D,KAAKyC,cAAciB,GAC1CO,EAAmBjE,KAAK6B,kBAAkB4B,GAAQ3C,GAAYgB,MACpE,OAAOoC,MAAO,GAAEhD,GAAWlB,KAAKkB,SAAW,KAAKsC,IAAOQ,EAAe,IAAGA,IAAgB,KAAM,IACxFF,EACHrC,QAAS,IACDgC,GAAQA,IAAS3C,GAAYoB,SAAW,CAAE,eAAgBuB,GAAS,MACnEK,EAAcrC,SAAW,IAEjCsB,OAAQJ,EAAc3C,KAAK0C,kBAAkBC,QAAe,EAC5DW,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOW,EAAiBX,KAC9Ea,MAAK5D,MAAAA,IACJ,MAAM6D,EAAIC,EACVD,EAAEvE,KAAO,KACTuE,EAAEE,MAAQ,KACV,MAAMzE,QAAawE,EAASV,KACvBQ,MAAMtE,IACHuE,EAAEG,GACFH,EAAEvE,KAAOA,EAGTuE,EAAEE,MAAQzE,EAEPuE,KAENI,OAAOC,IACRL,EAAEE,MAAQG,EACHL,KAKX,GAHIzB,GACA3C,KAAKqB,iBAAiB+B,OAAOT,IAE5B0B,EAASE,GACV,MAAM1E,EACV,OAAOA,MAGfsC,OAAOuC,OAAO1E,KAAMiB,GAExB0D,cAAcjB,EAAOpB,GACjB,MAAMsC,EAAQlB,EAAMpB,GACpB,OAAQuC,mBAAmBvC,GACvB,IACAuC,mBAAmBC,MAAMC,QAAQH,GAASA,EAAMI,KAAK,KAAwB,kBAAVJ,EAAqBA,EAAS,GAAEA,KAE3GnC,cAAcwC,GACV,MAAMvB,EAAQuB,GAAY,GACpB7C,EAAOD,OAAOC,KAAKsB,GAAOwB,QAAQ5C,GAAQ,qBAAuBoB,EAAMpB,KAC7E,OAAOF,EACF+C,KAAK7C,GAA8B,kBAAfoB,EAAMpB,IAAsBwC,MAAMC,QAAQrB,EAAMpB,IAEnEtC,KAAK2E,cAAcjB,EAAOpB,GAD1BtC,KAAKyC,cAAciB,EAAMpB,MAE1B0C,KAAK,KAEdI,eAAeH,GACX,MAAMjB,EAAchE,KAAKyC,cAAcwC,GACvC,OAAOjB,EAAe,IAAGA,IAAgB,GAE7CD,mBAAmBsB,EAASC,GACxB,MAAO,IACAtF,KAAKuB,iBACL8D,KACCC,GAAW,GACf7D,QAAS,IACDzB,KAAKuB,cAAcE,SAAW,MAC9B4D,EAAQ5D,SAAW,MAClB6D,GAAWA,EAAQ7D,SAAY,MAS7C,MAAM8D,WAAYxE,GACrBC,cACIwE,SAASC,WASTzF,KAAK6yB,iBAAmB,CAACnvB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACzDG,KAAO,qCACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAK8yB,gBAAkB,CAAC3L,EAAMvjB,EAAS,KAAO5D,KAAKqD,QAAQ,CACvDG,KAAO,sCAAqC2jB,IAC5CxhB,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKyQ,YAAc,CAAC7M,EAAS,KAAO5D,KAAKqD,QAAQ,CAC7CG,KAAO,+BACPmC,OAAQ,MACRhC,OAAQ,UACLC,KCjLR,MACDgN,GAAW,CAAEN,MAAO,GAAIxE,OAAQ,IACzB+E,GAAO,CAChB7K,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQqK,OACRpK,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqK,OAEd,KAAnBrK,EAAQ6F,QACR5F,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6F,QAE9B5F,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2K,IACrB,MAAOnK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqK,MAAQ7J,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6F,OAASrF,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQ5H,OAAOtB,EAAOkJ,OAG9BrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASpD,OAAOtB,EAAO0E,QAG/B7F,EAAQ6F,OAAS,GAEd7F,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQqK,QAAwB/I,EAAI+I,MAAQrK,EAAQqK,YACjCzJ,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,QAC/CvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQlJ,EAAOkJ,MAGvBrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,GAEd7F,ICAf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWJH,GAAWoB,KASXpB,GAAW6B,KChBxB,IAAI7B,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAiBbM,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCmLJ,IAAIX,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAsCbM,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCnTG,MAibD2qB,GAAa,CAAEC,eAAgB,EAAGC,eAAgB,GAC3CC,GAAS,CAClBltB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OAN+B,IAA3BF,EAAQ+sB,gBACR9sB,EAAOE,OAAO,GAAG6Q,OAAOhR,EAAQ+sB,gBAEL,IAA3B/sB,EAAQgtB,gBACR/sB,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQgtB,gBAE9B/sB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8sB,IACrB,MAAOtsB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+sB,eAAiB/rB,GAAaR,EAAOwQ,UAC7C,MACJ,KAAK,EACDhR,EAAQgtB,eAAiBhsB,GAAaR,EAAOwQ,UAC7C,MACJ,QACIxQ,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8sB,IAarB,YAZ8BlsB,IAA1BO,EAAO4rB,gBAA0D,OAA1B5rB,EAAO4rB,eAC9C/sB,EAAQ+sB,eAAiB3rB,OAAOD,EAAO4rB,gBAGvC/sB,EAAQ+sB,eAAiB,OAECnsB,IAA1BO,EAAO6rB,gBAA0D,OAA1B7rB,EAAO6rB,eAC9ChtB,EAAQgtB,eAAiB5rB,OAAOD,EAAO6rB,gBAGvChtB,EAAQgtB,eAAiB,EAEtBhtB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAF2BV,IAA3BZ,EAAQ+sB,iBAAiCzrB,EAAIyrB,eAAiB/sB,EAAQ+sB,qBAC3CnsB,IAA3BZ,EAAQgtB,iBAAiC1rB,EAAI0rB,eAAiBhtB,EAAQgtB,gBAC/D1rB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8sB,IAarB,YAZ8BlsB,IAA1BO,EAAO4rB,gBAA0D,OAA1B5rB,EAAO4rB,eAC9C/sB,EAAQ+sB,eAAiB5rB,EAAO4rB,eAGhC/sB,EAAQ+sB,eAAiB,OAECnsB,IAA1BO,EAAO6rB,gBAA0D,OAA1B7rB,EAAO6rB,eAC9ChtB,EAAQgtB,eAAiB7rB,EAAO6rB,eAGhChtB,EAAQgtB,eAAiB,EAEtBhtB,IA4Df,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCnkBG,MACD+qB,GAAkB,CAAEC,WAAY,GAAIC,cAAe,GAAI/e,OAAQ,GAAIgf,SAAU,GAAIC,iBAAkB,GAC5FC,GAAc,CACvBxtB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAsBrB,MArB2B,KAAvBF,EAAQmtB,YACRltB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQmtB,YAEP,KAA1BntB,EAAQotB,eACRntB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQotB,oBAEfxsB,IAAlBZ,EAAQwtB,OACR5iB,GAAAA,OAAY5K,EAAQwtB,MAAOvtB,EAAOE,OAAO,IAAI4D,QAAQC,SAElC,KAAnBhE,EAAQqO,QACRpO,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqO,QAEZ,KAArBrO,EAAQqtB,UACRptB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqtB,eAEPzsB,IAA1BZ,EAAQytB,eACRR,GAAOltB,OAAOC,EAAQytB,cAAextB,EAAOE,OAAO,IAAI4D,QAAQC,SAElC,IAA7BhE,EAAQstB,kBACRrtB,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQstB,kBAE9BrtB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKktB,IACrB,MAAO1sB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQmtB,WAAa3sB,EAAO+B,SAC5B,MACJ,KAAK,EACDvC,EAAQotB,cAAgB5sB,EAAO+B,SAC/B,MACJ,KAAK,EACDvC,EAAQwtB,MAAQ5iB,GAAAA,OAAYpK,EAAQA,EAAOL,UAC3C,MACJ,KAAK,EACDH,EAAQqO,OAAS7N,EAAO+B,SACxB,MACJ,KAAK,EACDvC,EAAQqtB,SAAW7sB,EAAO+B,SAC1B,MACJ,KAAK,EACDvC,EAAQytB,cAAgBR,GAAO3sB,OAAOE,EAAQA,EAAOL,UACrD,MACJ,KAAK,EACDH,EAAQstB,iBAAmBtsB,GAAaR,EAAOwQ,UAC/C,MACJ,QACIxQ,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKktB,IA2CrB,YA1C0BtsB,IAAtBO,EAAOgsB,YAAkD,OAAtBhsB,EAAOgsB,WAC1CntB,EAAQmtB,WAAa1qB,OAAOtB,EAAOgsB,YAGnCntB,EAAQmtB,WAAa,QAEIvsB,IAAzBO,EAAOisB,eAAwD,OAAzBjsB,EAAOisB,cAC7CptB,EAAQotB,cAAgB3qB,OAAOtB,EAAOisB,eAGtCptB,EAAQotB,cAAgB,QAEPxsB,IAAjBO,EAAOqsB,OAAwC,OAAjBrsB,EAAOqsB,MACrCxtB,EAAQwtB,MAAQ5iB,GAAAA,SAAczJ,EAAOqsB,OAGrCxtB,EAAQwtB,WAAQ5sB,OAEEA,IAAlBO,EAAOkN,QAA0C,OAAlBlN,EAAOkN,OACtCrO,EAAQqO,OAAS5L,OAAOtB,EAAOkN,QAG/BrO,EAAQqO,OAAS,QAEGzN,IAApBO,EAAOksB,UAA8C,OAApBlsB,EAAOksB,SACxCrtB,EAAQqtB,SAAW5qB,OAAOtB,EAAOksB,UAGjCrtB,EAAQqtB,SAAW,QAEMzsB,IAAzBO,EAAOssB,eAAwD,OAAzBtsB,EAAOssB,cAC7CztB,EAAQytB,cAAgBR,GAAO/rB,SAASC,EAAOssB,eAG/CztB,EAAQytB,mBAAgB7sB,OAEIA,IAA5BO,EAAOmsB,kBAA8D,OAA5BnsB,EAAOmsB,iBAChDttB,EAAQstB,iBAAmBlsB,OAAOD,EAAOmsB,kBAGzCttB,EAAQstB,iBAAmB,EAExBttB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPuBV,IAAvBZ,EAAQmtB,aAA6B7rB,EAAI6rB,WAAantB,EAAQmtB,iBACpCvsB,IAA1BZ,EAAQotB,gBAAgC9rB,EAAI8rB,cAAgBptB,EAAQotB,oBAClDxsB,IAAlBZ,EAAQwtB,QAAwBlsB,EAAIksB,MAAQxtB,EAAQwtB,MAAQ5iB,GAAAA,OAAY5K,EAAQwtB,YAAS5sB,QACtEA,IAAnBZ,EAAQqO,SAAyB/M,EAAI+M,OAASrO,EAAQqO,aACjCzN,IAArBZ,EAAQqtB,WAA2B/rB,EAAI+rB,SAAWrtB,EAAQqtB,eAChCzsB,IAA1BZ,EAAQytB,gBAAgCnsB,EAAImsB,cAAgBztB,EAAQytB,cAAgBR,GAAO5rB,OAAOrB,EAAQytB,oBAAiB7sB,QAC9FA,IAA7BZ,EAAQstB,mBAAmChsB,EAAIgsB,iBAAmBttB,EAAQstB,kBACnEhsB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKktB,IA2CrB,YA1C0BtsB,IAAtBO,EAAOgsB,YAAkD,OAAtBhsB,EAAOgsB,WAC1CntB,EAAQmtB,WAAahsB,EAAOgsB,WAG5BntB,EAAQmtB,WAAa,QAEIvsB,IAAzBO,EAAOisB,eAAwD,OAAzBjsB,EAAOisB,cAC7CptB,EAAQotB,cAAgBjsB,EAAOisB,cAG/BptB,EAAQotB,cAAgB,QAEPxsB,IAAjBO,EAAOqsB,OAAwC,OAAjBrsB,EAAOqsB,MACrCxtB,EAAQwtB,MAAQ5iB,GAAAA,YAAiBzJ,EAAOqsB,OAGxCxtB,EAAQwtB,WAAQ5sB,OAEEA,IAAlBO,EAAOkN,QAA0C,OAAlBlN,EAAOkN,OACtCrO,EAAQqO,OAASlN,EAAOkN,OAGxBrO,EAAQqO,OAAS,QAEGzN,IAApBO,EAAOksB,UAA8C,OAApBlsB,EAAOksB,SACxCrtB,EAAQqtB,SAAWlsB,EAAOksB,SAG1BrtB,EAAQqtB,SAAW,QAEMzsB,IAAzBO,EAAOssB,eAAwD,OAAzBtsB,EAAOssB,cAC7CztB,EAAQytB,cAAgBR,GAAO1rB,YAAYJ,EAAOssB,eAGlDztB,EAAQytB,mBAAgB7sB,OAEIA,IAA5BO,EAAOmsB,kBAA8D,OAA5BnsB,EAAOmsB,iBAChDttB,EAAQstB,iBAAmBnsB,EAAOmsB,iBAGlCttB,EAAQstB,iBAAmB,EAExBttB,IA6Cf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCnOJ,MAAMqD,GAAQ,CACV,CAAC,4CAA6C+nB,KAErC9nB,GAAqB,IAAI1D,MAAM,sBAC/B2D,GAAW,IAAIC,EAAAA,SAASH,IAC/BI,GAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,GAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,GACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAQA,WAGhES,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAQA,KAEnE,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,GAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvHmnB,YAAc9zB,IAAD,CAAayI,QAAS,4CAA6C1D,MAAO4uB,GAAYhsB,YAAY3H,OAGjH+M,GAAcrM,OAAS2L,KAAMA,GAAS,CAAEA,KAAM,2BACzC,IAAI3G,GAAI,CAAErE,QAASgL,IC3BxB0nB,GAA8B,CAAEtjB,MAAO,GAAIxE,OAAQ,EAAGwI,OAAQ,GAAIgf,SAAU,IACrEO,GAA0B,CACnC7tB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,MAZsB,KAAlBF,EAAQqK,OACRpK,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqK,OAEd,IAAnBrK,EAAQ6F,QACR5F,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQ6F,QAEd,KAAnB7F,EAAQqO,QACRpO,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqO,QAEZ,KAArBrO,EAAQqtB,UACRptB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqtB,UAE9BptB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2tB,IACrB,MAAOntB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqK,MAAQ7J,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6F,OAAS7E,GAAaR,EAAOwQ,UACrC,MACJ,KAAK,EACDhR,EAAQqO,OAAS7N,EAAO+B,SACxB,MACJ,KAAK,EACDvC,EAAQqtB,SAAW7sB,EAAO+B,SAC1B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2tB,IAyBrB,YAxBqB/sB,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQ5H,OAAOtB,EAAOkJ,OAG9BrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASzE,OAAOD,EAAO0E,QAG/B7F,EAAQ6F,OAAS,OAECjF,IAAlBO,EAAOkN,QAA0C,OAAlBlN,EAAOkN,OACtCrO,EAAQqO,OAAS5L,OAAOtB,EAAOkN,QAG/BrO,EAAQqO,OAAS,QAEGzN,IAApBO,EAAOksB,UAA8C,OAApBlsB,EAAOksB,SACxCrtB,EAAQqtB,SAAW5qB,OAAOtB,EAAOksB,UAGjCrtB,EAAQqtB,SAAW,GAEhBrtB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJkBV,IAAlBZ,EAAQqK,QAAwB/I,EAAI+I,MAAQrK,EAAQqK,YACjCzJ,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,aACnCjF,IAAnBZ,EAAQqO,SAAyB/M,EAAI+M,OAASrO,EAAQqO,aACjCzN,IAArBZ,EAAQqtB,WAA2B/rB,EAAI+rB,SAAWrtB,EAAQqtB,UACnD/rB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2tB,IAyBrB,YAxBqB/sB,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQlJ,EAAOkJ,MAGvBrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,OAECjF,IAAlBO,EAAOkN,QAA0C,OAAlBlN,EAAOkN,OACtCrO,EAAQqO,OAASlN,EAAOkN,OAGxBrO,EAAQqO,OAAS,QAEGzN,IAApBO,EAAOksB,UAA8C,OAApBlsB,EAAOksB,SACxCrtB,EAAQqtB,SAAWlsB,EAAOksB,SAG1BrtB,EAAQqtB,SAAW,GAEhBrtB,IAGT6tB,GAAiB,CAAEtwB,KAAM,GAAIuwB,UAAW,IACjCC,GAAa,CACtBhuB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANqB,KAAjBF,EAAQzC,MACR0C,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQzC,MAEX,KAAtByC,EAAQ8tB,WACR7tB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ8tB,WAE9B7tB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6tB,IACrB,MAAOrtB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQzC,KAAOiD,EAAO+B,SACtB,MACJ,KAAK,EACDvC,EAAQ8tB,UAAYttB,EAAO+B,SAC3B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6tB,IAarB,YAZoBjtB,IAAhBO,EAAO5D,MAAsC,OAAhB4D,EAAO5D,KACpCyC,EAAQzC,KAAOkF,OAAOtB,EAAO5D,MAG7ByC,EAAQzC,KAAO,QAEMqD,IAArBO,EAAO2sB,WAAgD,OAArB3sB,EAAO2sB,UACzC9tB,EAAQ8tB,UAAYrrB,OAAOtB,EAAO2sB,WAGlC9tB,EAAQ8tB,UAAY,GAEjB9tB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFiBV,IAAjBZ,EAAQzC,OAAuB+D,EAAI/D,KAAOyC,EAAQzC,WAC5BqD,IAAtBZ,EAAQ8tB,YAA4BxsB,EAAIwsB,UAAY9tB,EAAQ8tB,WACrDxsB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6tB,IAarB,YAZoBjtB,IAAhBO,EAAO5D,MAAsC,OAAhB4D,EAAO5D,KACpCyC,EAAQzC,KAAO4D,EAAO5D,KAGtByC,EAAQzC,KAAO,QAEMqD,IAArBO,EAAO2sB,WAAgD,OAArB3sB,EAAO2sB,UACzC9tB,EAAQ8tB,UAAY3sB,EAAO2sB,UAG3B9tB,EAAQ8tB,UAAY,GAEjB9tB,IAGT6K,GAAa,CAAEG,aAAa,EAAOgjB,gBAAgB,GAC5CjjB,GAAS,CAClBhL,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OAN4B,IAAxBF,EAAQgL,aACR/K,EAAOE,OAAO,GAAG+K,KAAKlL,EAAQgL,cAEH,IAA3BhL,EAAQguB,gBACR/tB,EAAOE,OAAO,IAAI+K,KAAKlL,EAAQguB,gBAE5B/tB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6K,IACrB,MAAOrK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQgL,YAAcxK,EAAO0K,OAC7B,MACJ,KAAK,EACDlL,EAAQguB,eAAiBxtB,EAAO0K,OAChC,MACJ,QACI1K,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK6K,IAarB,YAZ2BjK,IAAvBO,EAAO6J,aAAoD,OAAvB7J,EAAO6J,YAC3ChL,EAAQgL,YAAcG,QAAQhK,EAAO6J,aAGrChL,EAAQgL,aAAc,OAEIpK,IAA1BO,EAAO6sB,gBAA0D,OAA1B7sB,EAAO6sB,eAC9ChuB,EAAQguB,eAAiB7iB,QAAQhK,EAAO6sB,gBAGxChuB,EAAQguB,gBAAiB,EAEtBhuB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFwBV,IAAxBZ,EAAQgL,cAA8B1J,EAAI0J,YAAchL,EAAQgL,kBACrCpK,IAA3BZ,EAAQguB,iBAAiC1sB,EAAI0sB,eAAiBhuB,EAAQguB,gBAC/D1sB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK6K,IAarB,YAZ2BjK,IAAvBO,EAAO6J,aAAoD,OAAvB7J,EAAO6J,YAC3ChL,EAAQgL,YAAc7J,EAAO6J,YAG7BhL,EAAQgL,aAAc,OAEIpK,IAA1BO,EAAO6sB,gBAA0D,OAA1B7sB,EAAO6sB,eAC9ChuB,EAAQguB,eAAiB7sB,EAAO6sB,eAGhChuB,EAAQguB,gBAAiB,EAEtBhuB,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,c,gBCxQJ7H,eAAe4M,GAAaC,GACxB,aAAapB,GAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BAG1B7M,eAAe8M,GAAgBD,GAC3B,aAAaR,GAAY,CACrBV,KAAMkB,EAAY,0BAG1B,SAASE,GAAa1I,EAAO2I,GACzB,IAAK,IAAIC,KAAQrL,OAAOC,KAAKmL,GACrBzI,MAAMC,QAAQwI,EAAYC,IAC1B5I,EAAM4I,GAAQ,IAAI5I,EAAM4I,MAAUD,EAAYC,IAG9C5I,EAAM4I,GAAQD,EAAYC,GAGlC,OAAO5I,EAEX,SAAS6I,GAAaC,GAClB,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,IAAK,MAAOtL,EAAKsC,KAAUzC,OAAO0L,QAAQH,GAAW,CACjD,IAAII,EAAQ,GACZA,EAAMlO,KAAO0C,EACbwL,EAAMrK,YAAcmB,EACpB+I,EAAUC,OAAOpE,KAAKsE,GAE1B,OAAOH,EAEX,MAAMI,GAAkB,KACb,CACHimB,WAAY,GACZE,YAAa,GACbljB,OAAQ,GACR/C,WAAY,CACR4lB,wBAAyBpmB,GAAaomB,GAAwBrsB,YAAY,KAC1EwsB,WAAYvmB,GAAaumB,GAAWxsB,YAAY,KAChDwJ,OAAQvD,GAAauD,GAAAA,YAAmB,MAE5C9C,UAAWvC,GACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,IC5CWjN,GD4CX,IACIwN,YAAY,EACZD,MAFW,GAGXE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACLg0B,cAAgB9lB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACrCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2lB,WAAWhyB,KAAKC,UAAU2B,KAAY,IAEvDwwB,eAAiB/lB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACtCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM6lB,YAAYlyB,KAAKC,UAAU2B,KAAY,IAExDsQ,UAAY7F,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACjCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2C,OAAOhP,KAAKC,UAAU2B,KAAY,IAEnDmL,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,0DACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,uBAAsB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACtI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYkmB,gBAAgBxwB,EAAI6kB,OAAOtnB,KAI1D,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,aAAcpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACvEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,kBAAmBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC/FvD,EAAQ,iBAAiB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEtE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,8BAA+B,kDAAoDpL,EAAEwB,WAGnH1F,wBAAuB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACvI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYimB,iBAAiBnvB,IAAQ7D,KACxD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYimB,iBAAiB,IAAKnvB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAClH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,cAAepB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACxEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,mBAAoBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAChGvD,EAAQ,kBAAkB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEvE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,+BAAgC,kDAAoDpL,EAAEwB,WAGpH1F,mBAAkB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAClI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY6D,eAAe5Q,KAI9C,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,SAAUpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACnEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,cAAeC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC3FvD,EAAQ,aAAa,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAElE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,0BAA2B,kDAAoDpL,EAAEwB,WAG/G1F,uBAAsB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC7D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS2nB,YAAY/uB,GACjCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,4BAA6B,4DAG7C,IAAIA,EAAAA,GAAY,4BAA6B,2BAA6BpL,EAAEwB,WAI9F1F,mBAAkB,YAAE4O,IAAe,MAAEvK,IACjC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS2nB,YAAY/uB,GACvC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,4BAA6B,4DAG7C,IAAIA,EAAAA,GAAY,8BAA+B,6BAA+BpL,EAAEwB,cC1L1G,SAAWnF,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,MAAMC,GACTC,YAAYC,EAAY,IACpBjB,KAAKkB,QAAU,GACflB,KAAKmB,aAAe,KACpBnB,KAAKoB,eAAiB,KACtBpB,KAAKqB,iBAAmB,IAAIC,IAC5BtB,KAAKuB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpB3B,KAAK4B,gBAAmB/B,IACpBG,KAAKmB,aAAetB,GAExBG,KAAK6B,kBAAoB,CACrB,CAACf,GAAYgB,MAAQC,GAAoB,OAAVA,GAAoC,kBAAVA,GAAuC,kBAAVA,EAA8CA,EAAxBC,KAAKC,UAAUF,GAC3H,CAACjB,GAAYoB,UAAYH,GAAUI,OAAOC,KAAKL,GAAS,IAAIM,QAAO,CAACxC,EAAMyC,KACtEzC,EAAK0C,OAAOD,EAAKP,EAAMO,IAChBzC,IACR,IAAIqC,UACP,CAACpB,GAAY0B,YAAcT,GAAU/B,KAAKyC,cAAcV,IAE5D/B,KAAK0C,kBAAqBC,IACtB,GAAI3C,KAAKqB,iBAAiBuB,IAAID,GAAc,CACxC,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAClD,OAAIE,EACOA,EAAgBE,YAE3B,EAEJ,MAAMF,EAAkB,IAAIG,gBAE5B,OADAhD,KAAKqB,iBAAiB4B,IAAIN,EAAaE,GAChCA,EAAgBE,QAE3B/C,KAAKkD,aAAgBP,IACjB,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAC9CE,IACAA,EAAgBM,QAChBnD,KAAKqB,iBAAiB+B,OAAOT,KAGrC3C,KAAKqD,QAAU,EAAGC,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,EAAMC,KAAAA,EAAMC,MAAAA,EAAOC,OAAAA,EAAS,OAAQzC,QAAAA,EAASyB,YAAAA,KAAgBiB,MACzF,MAAMC,EAAgBN,GAAUvD,KAAKoB,gBAAkBpB,KAAKoB,eAAepB,KAAKmB,eAAkB,GAC5F2C,EAAgB9D,KAAK+D,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS1D,KAAKyC,cAAciB,GAC1CO,EAAmBjE,KAAK6B,kBAAkB4B,GAAQ3C,GAAYgB,MACpE,OAAOoC,MAAO,GAAEhD,GAAWlB,KAAKkB,SAAW,KAAKsC,IAAOQ,EAAe,IAAGA,IAAgB,KAAM,IACxFF,EACHrC,QAAS,IACDgC,GAAQA,IAAS3C,GAAYoB,SAAW,CAAE,eAAgBuB,GAAS,MACnEK,EAAcrC,SAAW,IAEjCsB,OAAQJ,EAAc3C,KAAK0C,kBAAkBC,QAAe,EAC5DW,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOW,EAAiBX,KAC9Ea,MAAK5D,MAAAA,IACJ,MAAM6D,EAAIC,EACVD,EAAEvE,KAAO,KACTuE,EAAEE,MAAQ,KACV,MAAMzE,QAAawE,EAASV,KACvBQ,MAAMtE,IACHuE,EAAEG,GACFH,EAAEvE,KAAOA,EAGTuE,EAAEE,MAAQzE,EAEPuE,KAENI,OAAOC,IACRL,EAAEE,MAAQG,EACHL,KAKX,GAHIzB,GACA3C,KAAKqB,iBAAiB+B,OAAOT,IAE5B0B,EAASE,GACV,MAAM1E,EACV,OAAOA,MAGfsC,OAAOuC,OAAO1E,KAAMiB,GAExB0D,cAAcjB,EAAOpB,GACjB,MAAMsC,EAAQlB,EAAMpB,GACpB,OAAQuC,mBAAmBvC,GACvB,IACAuC,mBAAmBC,MAAMC,QAAQH,GAASA,EAAMI,KAAK,KAAwB,kBAAVJ,EAAqBA,EAAS,GAAEA,KAE3GnC,cAAcwC,GACV,MAAMvB,EAAQuB,GAAY,GACpB7C,EAAOD,OAAOC,KAAKsB,GAAOwB,QAAQ5C,GAAQ,qBAAuBoB,EAAMpB,KAC7E,OAAOF,EACF+C,KAAK7C,GAA8B,kBAAfoB,EAAMpB,IAAsBwC,MAAMC,QAAQrB,EAAMpB,IAEnEtC,KAAK2E,cAAcjB,EAAOpB,GAD1BtC,KAAKyC,cAAciB,EAAMpB,MAE1B0C,KAAK,KAEdI,eAAeH,GACX,MAAMjB,EAAchE,KAAKyC,cAAcwC,GACvC,OAAOjB,EAAe,IAAGA,IAAgB,GAE7CD,mBAAmBsB,EAASC,GACxB,MAAO,IACAtF,KAAKuB,iBACL8D,KACCC,GAAW,GACf7D,QAAS,IACDzB,KAAKuB,cAAcE,SAAW,MAC9B4D,EAAQ5D,SAAW,MAClB6D,GAAWA,EAAQ7D,SAAY,MAS7C,MAAM8D,WAAYxE,GACrBC,cACIwE,SAASC,WASTzF,KAAKq0B,iBAAmB,CAAC3wB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACzDG,KAAO,eACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKs0B,YAAc,CAAC5wB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACpDG,KAAO,gBACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKu0B,YAAc,CAAC7wB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACpDG,KAAO,gBACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKw0B,eAAiB,CAAC9wB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACvDG,KAAO,oBACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKy0B,aAAe,CAAC/wB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACrDG,KAAO,iBACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAK00B,gBAAkB,CAAChxB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACxDG,KAAO,oBACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IASP5D,KAAK20B,mBAAqB,CAACjxB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAC3DG,KAAO,uBACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAK40B,UAAY,CAAClxB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAClDG,KAAO,cACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAK60B,mBAAqB,CAACnxB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAC3DG,KAAO,iCACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAK80B,sBAAwB,CAACpxB,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAC9DG,KAAO,oCACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,KC3RR,MACDmxB,GAAa,CAAEC,QAAS,GAAIv1B,QAAS,GAAIw1B,WAAY,GAAIC,aAAc,GAAIC,KAAM,GAAIC,OAAQ,GAAI3jB,MAAO,IACjG4jB,GAAS,CAClBrvB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAsBrB,MArBwB,KAApBF,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAEb,KAApB/uB,EAAQxG,SACRyG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQxG,SAEV,KAAvBwG,EAAQgvB,YACR/uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQgvB,YAER,KAAzBhvB,EAAQivB,cACRhvB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQivB,cAEhB,KAAjBjvB,EAAQkvB,MACRjvB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQkvB,MAEd,KAAnBlvB,EAAQmvB,QACRlvB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQmvB,QAEf,KAAlBnvB,EAAQwL,OACRvL,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQwL,OAE9BvL,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8uB,IACrB,MAAOtuB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQxG,QAAUgH,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQgvB,WAAaxuB,EAAO+B,SAC5B,MACJ,KAAK,EACDvC,EAAQivB,aAAezuB,EAAO+B,SAC9B,MACJ,KAAK,EACDvC,EAAQkvB,KAAO1uB,EAAO+B,SACtB,MACJ,KAAK,EACDvC,EAAQmvB,OAAS3uB,EAAO+B,SACxB,MACJ,KAAK,EACDvC,EAAQwL,MAAQhL,EAAO+B,SACvB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8uB,IA2CrB,YA1CuBluB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,QAECnuB,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAUiJ,OAAOtB,EAAO3H,SAGhCwG,EAAQxG,QAAU,QAEIoH,IAAtBO,EAAO6tB,YAAkD,OAAtB7tB,EAAO6tB,WAC1ChvB,EAAQgvB,WAAavsB,OAAOtB,EAAO6tB,YAGnChvB,EAAQgvB,WAAa,QAEGpuB,IAAxBO,EAAO8tB,cAAsD,OAAxB9tB,EAAO8tB,aAC5CjvB,EAAQivB,aAAexsB,OAAOtB,EAAO8tB,cAGrCjvB,EAAQivB,aAAe,QAEPruB,IAAhBO,EAAO+tB,MAAsC,OAAhB/tB,EAAO+tB,KACpClvB,EAAQkvB,KAAOzsB,OAAOtB,EAAO+tB,MAG7BlvB,EAAQkvB,KAAO,QAEGtuB,IAAlBO,EAAOguB,QAA0C,OAAlBhuB,EAAOguB,OACtCnvB,EAAQmvB,OAAS1sB,OAAOtB,EAAOguB,QAG/BnvB,EAAQmvB,OAAS,QAEAvuB,IAAjBO,EAAOqK,OAAwC,OAAjBrK,EAAOqK,MACrCxL,EAAQwL,MAAQ/I,OAAOtB,EAAOqK,OAG9BxL,EAAQwL,MAAQ,GAEbxL,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPoBV,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,cACpCnuB,IAApBZ,EAAQxG,UAA0B8H,EAAI9H,QAAUwG,EAAQxG,cACjCoH,IAAvBZ,EAAQgvB,aAA6B1tB,EAAI0tB,WAAahvB,EAAQgvB,iBACrCpuB,IAAzBZ,EAAQivB,eAA+B3tB,EAAI2tB,aAAejvB,EAAQivB,mBACjDruB,IAAjBZ,EAAQkvB,OAAuB5tB,EAAI4tB,KAAOlvB,EAAQkvB,WAC/BtuB,IAAnBZ,EAAQmvB,SAAyB7tB,EAAI6tB,OAASnvB,EAAQmvB,aACpCvuB,IAAlBZ,EAAQwL,QAAwBlK,EAAIkK,MAAQxL,EAAQwL,OAC7ClK,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8uB,IA2CrB,YA1CuBluB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,QAECnuB,IAAnBO,EAAO3H,SAA4C,OAAnB2H,EAAO3H,QACvCwG,EAAQxG,QAAU2H,EAAO3H,QAGzBwG,EAAQxG,QAAU,QAEIoH,IAAtBO,EAAO6tB,YAAkD,OAAtB7tB,EAAO6tB,WAC1ChvB,EAAQgvB,WAAa7tB,EAAO6tB,WAG5BhvB,EAAQgvB,WAAa,QAEGpuB,IAAxBO,EAAO8tB,cAAsD,OAAxB9tB,EAAO8tB,aAC5CjvB,EAAQivB,aAAe9tB,EAAO8tB,aAG9BjvB,EAAQivB,aAAe,QAEPruB,IAAhBO,EAAO+tB,MAAsC,OAAhB/tB,EAAO+tB,KACpClvB,EAAQkvB,KAAO/tB,EAAO+tB,KAGtBlvB,EAAQkvB,KAAO,QAEGtuB,IAAlBO,EAAOguB,QAA0C,OAAlBhuB,EAAOguB,OACtCnvB,EAAQmvB,OAAShuB,EAAOguB,OAGxBnvB,EAAQmvB,OAAS,QAEAvuB,IAAjBO,EAAOqK,OAAwC,OAAjBrK,EAAOqK,MACrCxL,EAAQwL,MAAQrK,EAAOqK,MAGvBxL,EAAQwL,MAAQ,GAEbxL,IAGTqvB,GAAqB,CAAEjxB,SAAU,IAC1BkxB,GAAiB,CAC1BvvB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAIrB,MAHyB,KAArBF,EAAQ5B,UACR6B,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ5B,UAE9B6B,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKqvB,IACrB,MAAO7uB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ5B,SAAWoC,EAAO+B,SAC1B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKqvB,IAOrB,YANwBzuB,IAApBO,EAAO/C,UAA8C,OAApB+C,EAAO/C,SACxC4B,EAAQ5B,SAAWqE,OAAOtB,EAAO/C,UAGjC4B,EAAQ5B,SAAW,GAEhB4B,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAEZ,YADqBV,IAArBZ,EAAQ5B,WAA2BkD,EAAIlD,SAAW4B,EAAQ5B,UACnDkD,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKqvB,IAOrB,YANwBzuB,IAApBO,EAAO/C,UAA8C,OAApB+C,EAAO/C,SACxC4B,EAAQ5B,SAAW+C,EAAO/C,SAG1B4B,EAAQ5B,SAAW,GAEhB4B,ICnNTuvB,GAA6B,CAAER,QAAS,GAAIxc,OAAQ,EAAGzM,IAAK,GACrD0pB,GAAyB,CAClCzvB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,MAZwB,KAApBF,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAEd,IAAnB/uB,EAAQuS,QACRtS,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQuS,QAEjB,IAAhBvS,EAAQ8F,KACR7F,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQ8F,UAEjBlF,IAAhBZ,EAAQ0D,KACR0rB,GAAAA,OAAcpvB,EAAQ0D,IAAKzD,EAAOE,OAAO,IAAI4D,QAAQC,SAElD/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKuvB,IACrB,MAAO/uB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQuS,OAASvR,GAAaR,EAAOwQ,UACrC,MACJ,KAAK,EACDhR,EAAQ8F,IAAM9E,GAAaR,EAAOwQ,UAClC,MACJ,KAAK,EACDhR,EAAQ0D,IAAM0rB,GAAAA,OAAc5uB,EAAQA,EAAOL,UAC3C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKuvB,IAyBrB,YAxBuB3uB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,QAEAnuB,IAAlBO,EAAOoR,QAA0C,OAAlBpR,EAAOoR,OACtCvS,EAAQuS,OAASnR,OAAOD,EAAOoR,QAG/BvS,EAAQuS,OAAS,OAEF3R,IAAfO,EAAO2E,KAAoC,OAAf3E,EAAO2E,IACnC9F,EAAQ8F,IAAM1E,OAAOD,EAAO2E,KAG5B9F,EAAQ8F,IAAM,OAEClF,IAAfO,EAAOuC,KAAoC,OAAfvC,EAAOuC,IACnC1D,EAAQ0D,IAAM0rB,GAAAA,SAAgBjuB,EAAOuC,KAGrC1D,EAAQ0D,SAAM9C,EAEXZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJoBV,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,cACrCnuB,IAAnBZ,EAAQuS,SAAyBjR,EAAIiR,OAASvS,EAAQuS,aACtC3R,IAAhBZ,EAAQ8F,MAAsBxE,EAAIwE,IAAM9F,EAAQ8F,UAChClF,IAAhBZ,EAAQ0D,MAAsBpC,EAAIoC,IAAM1D,EAAQ0D,IAAM0rB,GAAAA,OAAcpvB,EAAQ0D,UAAO9C,GAC5EU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKuvB,IAyBrB,YAxBuB3uB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,QAEAnuB,IAAlBO,EAAOoR,QAA0C,OAAlBpR,EAAOoR,OACtCvS,EAAQuS,OAASpR,EAAOoR,OAGxBvS,EAAQuS,OAAS,OAEF3R,IAAfO,EAAO2E,KAAoC,OAAf3E,EAAO2E,IACnC9F,EAAQ8F,IAAM3E,EAAO2E,IAGrB9F,EAAQ8F,IAAM,OAEClF,IAAfO,EAAOuC,KAAoC,OAAfvC,EAAOuC,IACnC1D,EAAQ0D,IAAM0rB,GAAAA,YAAmBjuB,EAAOuC,KAGxC1D,EAAQ0D,SAAM9C,EAEXZ,IAmCTyvB,GAA6B,CAAEV,QAAS,GAAIzP,MAAO,IAC5CoQ,GAAyB,CAClC3vB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATwB,KAApBF,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAEf,KAAlB/uB,EAAQsf,OACRrf,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsf,YAEjB1e,IAAhBZ,EAAQ0D,KACR0rB,GAAAA,OAAcpvB,EAAQ0D,IAAKzD,EAAOE,OAAO,IAAI4D,QAAQC,SAElD/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKyvB,IACrB,MAAOjvB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQsf,MAAQ9e,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ0D,IAAM0rB,GAAAA,OAAc5uB,EAAQA,EAAOL,UAC3C,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKyvB,IAmBrB,YAlBuB7uB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQ7c,OAAOtB,EAAOme,OAG9Btf,EAAQsf,MAAQ,QAED1e,IAAfO,EAAOuC,KAAoC,OAAfvC,EAAOuC,IACnC1D,EAAQ0D,IAAM0rB,GAAAA,SAAgBjuB,EAAOuC,KAGrC1D,EAAQ0D,SAAM9C,EAEXZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHoBV,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,cACtCnuB,IAAlBZ,EAAQsf,QAAwBhe,EAAIge,MAAQtf,EAAQsf,YACpC1e,IAAhBZ,EAAQ0D,MAAsBpC,EAAIoC,IAAM1D,EAAQ0D,IAAM0rB,GAAAA,OAAcpvB,EAAQ0D,UAAO9C,GAC5EU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKyvB,IAmBrB,YAlBuB7uB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQne,EAAOme,MAGvBtf,EAAQsf,MAAQ,QAED1e,IAAfO,EAAOuC,KAAoC,OAAfvC,EAAOuC,IACnC1D,EAAQ0D,IAAM0rB,GAAAA,YAAmBjuB,EAAOuC,KAGxC1D,EAAQ0D,SAAM9C,EAEXZ,IAGT2vB,GAAqC,GAC9BC,GAAiC,CAC1C7vB,OAAO8vB,EAAG5vB,EAASC,EAAAA,OAAAA,UACf,OAAOD,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2vB,IACrB,MAAOnvB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,QACIP,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAAS2uB,GACL,MAAM7vB,EAAU,IAAK2vB,IACrB,OAAO3vB,GAEXqB,OAAOwuB,GACH,MAAMvuB,EAAM,GACZ,OAAOA,GAEXC,YAAYsuB,GACR,MAAM7vB,EAAU,IAAK2vB,IACrB,OAAO3vB,IAGT8vB,GAA6B,CAAEf,QAAS,GAAIzP,MAAO,IAC5CyQ,GAAyB,CAClChwB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAEf,KAAlB/uB,EAAQsf,OACRrf,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsf,OAE9Brf,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8vB,IACrB,MAAOtvB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQsf,MAAQ9e,EAAO+B,SACvB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8vB,IAarB,YAZuBlvB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQ7c,OAAOtB,EAAOme,OAG9Btf,EAAQsf,MAAQ,GAEbtf,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,cACtCnuB,IAAlBZ,EAAQsf,QAAwBhe,EAAIge,MAAQtf,EAAQsf,OAC7Che,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8vB,IAarB,YAZuBlvB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQne,EAAOme,MAGvBtf,EAAQsf,MAAQ,GAEbtf,IAGTgwB,GAAqC,GAC9BC,GAAiC,CAC1ClwB,OAAO8vB,EAAG5vB,EAASC,EAAAA,OAAAA,UACf,OAAOD,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKgwB,IACrB,MAAOxvB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,QACIP,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAAS2uB,GACL,MAAM7vB,EAAU,IAAKgwB,IACrB,OAAOhwB,GAEXqB,OAAOwuB,GACH,MAAMvuB,EAAM,GACZ,OAAOA,GAEXC,YAAYsuB,GACR,MAAM7vB,EAAU,IAAKgwB,IACrB,OAAOhwB,IAGTkwB,GAAuB,CAAEnB,QAAS,GAAIzP,MAAO,GAAI1lB,KAAM,GAAIu2B,OAAO,GAC3DC,GAAmB,CAC5BrwB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,MAZwB,KAApBF,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAEf,KAAlB/uB,EAAQsf,OACRrf,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsf,OAEhB,KAAjBtf,EAAQpG,MACRqG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQpG,OAEf,IAAlBoG,EAAQmwB,OACRlwB,EAAOE,OAAO,IAAI+K,KAAKlL,EAAQmwB,OAE5BlwB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKkwB,IACrB,MAAO1vB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQsf,MAAQ9e,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQpG,KAAO4G,EAAO+B,SACtB,MACJ,KAAK,EACDvC,EAAQmwB,MAAQ3vB,EAAO0K,OACvB,MACJ,QACI1K,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKkwB,IAyBrB,YAxBuBtvB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQ7c,OAAOtB,EAAOme,OAG9Btf,EAAQsf,MAAQ,QAEA1e,IAAhBO,EAAOvH,MAAsC,OAAhBuH,EAAOvH,KACpCoG,EAAQpG,KAAO6I,OAAOtB,EAAOvH,MAG7BoG,EAAQpG,KAAO,QAEEgH,IAAjBO,EAAOgvB,OAAwC,OAAjBhvB,EAAOgvB,MACrCnwB,EAAQmwB,MAAQhlB,QAAQhK,EAAOgvB,OAG/BnwB,EAAQmwB,OAAQ,EAEbnwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJoBV,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,cACtCnuB,IAAlBZ,EAAQsf,QAAwBhe,EAAIge,MAAQtf,EAAQsf,YACnC1e,IAAjBZ,EAAQpG,OAAuB0H,EAAI1H,KAAOoG,EAAQpG,WAChCgH,IAAlBZ,EAAQmwB,QAAwB7uB,EAAI6uB,MAAQnwB,EAAQmwB,OAC7C7uB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKkwB,IAyBrB,YAxBuBtvB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQne,EAAOme,MAGvBtf,EAAQsf,MAAQ,QAEA1e,IAAhBO,EAAOvH,MAAsC,OAAhBuH,EAAOvH,KACpCoG,EAAQpG,KAAOuH,EAAOvH,KAGtBoG,EAAQpG,KAAO,QAEEgH,IAAjBO,EAAOgvB,OAAwC,OAAjBhvB,EAAOgvB,MACrCnwB,EAAQmwB,MAAQhvB,EAAOgvB,MAGvBnwB,EAAQmwB,OAAQ,EAEbnwB,IAmCTqwB,GAAuB,CAAEtB,QAAS,GAAIzP,MAAO,GAAI1lB,KAAM,GAAIu2B,OAAO,GAC3DG,GAAmB,CAC5BvwB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAarB,MAZwB,KAApBF,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAEf,KAAlB/uB,EAAQsf,OACRrf,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsf,OAEhB,KAAjBtf,EAAQpG,MACRqG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQpG,OAEf,IAAlBoG,EAAQmwB,OACRlwB,EAAOE,OAAO,IAAI+K,KAAKlL,EAAQmwB,OAE5BlwB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKqwB,IACrB,MAAO7vB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQsf,MAAQ9e,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQpG,KAAO4G,EAAO+B,SACtB,MACJ,KAAK,EACDvC,EAAQmwB,MAAQ3vB,EAAO0K,OACvB,MACJ,QACI1K,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKqwB,IAyBrB,YAxBuBzvB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQ7c,OAAOtB,EAAOme,OAG9Btf,EAAQsf,MAAQ,QAEA1e,IAAhBO,EAAOvH,MAAsC,OAAhBuH,EAAOvH,KACpCoG,EAAQpG,KAAO6I,OAAOtB,EAAOvH,MAG7BoG,EAAQpG,KAAO,QAEEgH,IAAjBO,EAAOgvB,OAAwC,OAAjBhvB,EAAOgvB,MACrCnwB,EAAQmwB,MAAQhlB,QAAQhK,EAAOgvB,OAG/BnwB,EAAQmwB,OAAQ,EAEbnwB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAKZ,YAJoBV,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,cACtCnuB,IAAlBZ,EAAQsf,QAAwBhe,EAAIge,MAAQtf,EAAQsf,YACnC1e,IAAjBZ,EAAQpG,OAAuB0H,EAAI1H,KAAOoG,EAAQpG,WAChCgH,IAAlBZ,EAAQmwB,QAAwB7uB,EAAI6uB,MAAQnwB,EAAQmwB,OAC7C7uB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKqwB,IAyBrB,YAxBuBzvB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQne,EAAOme,MAGvBtf,EAAQsf,MAAQ,QAEA1e,IAAhBO,EAAOvH,MAAsC,OAAhBuH,EAAOvH,KACpCoG,EAAQpG,KAAOuH,EAAOvH,KAGtBoG,EAAQpG,KAAO,QAEEgH,IAAjBO,EAAOgvB,OAAwC,OAAjBhvB,EAAOgvB,MACrCnwB,EAAQmwB,MAAQhvB,EAAOgvB,MAGvBnwB,EAAQmwB,OAAQ,EAEbnwB,IAmCTuwB,GAAuB,CAAExB,QAAS,GAAIzP,MAAO,IACtCkR,GAAmB,CAC5BzwB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAEf,KAAlB/uB,EAAQsf,OACRrf,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsf,OAE9Brf,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKuwB,IACrB,MAAO/vB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQsf,MAAQ9e,EAAO+B,SACvB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKuwB,IAarB,YAZuB3vB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQ7c,OAAOtB,EAAOme,OAG9Btf,EAAQsf,MAAQ,GAEbtf,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,cACtCnuB,IAAlBZ,EAAQsf,QAAwBhe,EAAIge,MAAQtf,EAAQsf,OAC7Che,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKuwB,IAarB,YAZuB3vB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQne,EAAOme,MAGvBtf,EAAQsf,MAAQ,GAEbtf,IAmCTywB,GAAsB,CAAE1B,QAAS,GAAI2B,KAAM,IACpCC,GAAkB,CAC3B5wB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAEhB,KAAjB/uB,EAAQ0wB,MACRzwB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ0wB,MAE9BzwB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKywB,IACrB,MAAOjwB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ0wB,KAAOlwB,EAAO+B,SACtB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKywB,IAarB,YAZuB7vB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,QAEFnuB,IAAhBO,EAAOuvB,MAAsC,OAAhBvvB,EAAOuvB,KACpC1wB,EAAQ0wB,KAAOjuB,OAAOtB,EAAOuvB,MAG7B1wB,EAAQ0wB,KAAO,GAEZ1wB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,cACvCnuB,IAAjBZ,EAAQ0wB,OAAuBpvB,EAAIovB,KAAO1wB,EAAQ0wB,MAC3CpvB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKywB,IAarB,YAZuB7vB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,QAEFnuB,IAAhBO,EAAOuvB,MAAsC,OAAhBvvB,EAAOuvB,KACpC1wB,EAAQ0wB,KAAOvvB,EAAOuvB,KAGtB1wB,EAAQ0wB,KAAO,GAEZ1wB,IAsDT4wB,GAAsB,CAAE7B,QAAS,GAAI2B,KAAM,IACpCG,GAAkB,CAC3B9wB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANwB,KAApBF,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAEhB,KAAjB/uB,EAAQ0wB,MACRzwB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ0wB,MAE9BzwB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK4wB,IACrB,MAAOpwB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQ0wB,KAAOlwB,EAAO+B,SACtB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK4wB,IAarB,YAZuBhwB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,QAEFnuB,IAAhBO,EAAOuvB,MAAsC,OAAhBvvB,EAAOuvB,KACpC1wB,EAAQ0wB,KAAOjuB,OAAOtB,EAAOuvB,MAG7B1wB,EAAQ0wB,KAAO,GAEZ1wB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,cACvCnuB,IAAjBZ,EAAQ0wB,OAAuBpvB,EAAIovB,KAAO1wB,EAAQ0wB,MAC3CpvB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK4wB,IAarB,YAZuBhwB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,QAEFnuB,IAAhBO,EAAOuvB,MAAsC,OAAhBvvB,EAAOuvB,KACpC1wB,EAAQ0wB,KAAOvvB,EAAOuvB,KAGtB1wB,EAAQ0wB,KAAO,GAEZ1wB,IAsDT8wB,GAAsB,CAAE/B,QAAS,IAC1BgC,GAAkB,CAC3BhxB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAIrB,MAHwB,KAApBF,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAE9B9uB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8wB,IACrB,MAAOtwB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8wB,IAOrB,YANuBlwB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,GAEf/uB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAEZ,YADoBV,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,SACjDztB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8wB,IAOrB,YANuBlwB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,GAEf/uB,IAgFf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cCrmCJ,MAAMqD,GAAQ,CACV,CAAC,gBAAiB4pB,IAClB,CAAC,0BAA2BgB,IAC5B,CAAC,0BAA2BE,IAC5B,CAAC,yBAA0BK,IAC3B,CAAC,yBAA0BE,IAC3B,CAAC,0BAA2BL,IAC5B,CAAC,gCAAiChB,IAClC,CAAC,gCAAiCO,IAClC,CAAC,yBAA0BgB,IAC3B,CAAC,gCAAiCrB,KAEzBjqB,GAAqB,IAAI1D,MAAM,sBAC/B2D,GAAW,IAAIC,EAAAA,SAASH,IAC/BI,GAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,GAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,GACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAQA,WAGhES,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAQA,KAEnE,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,GAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvHyqB,OAASp3B,IAAD,CAAayI,QAAS,gBAAiB1D,MAAOywB,GAAAA,YAAmBx1B,KACzEq3B,iBAAmBr3B,IAAD,CAAayI,QAAS,0BAA2B1D,MAAOyxB,GAAiB7uB,YAAY3H,KACvGs3B,iBAAmBt3B,IAAD,CAAayI,QAAS,0BAA2B1D,MAAO2xB,GAAiB/uB,YAAY3H,KACvGu3B,gBAAkBv3B,IAAD,CAAayI,QAAS,yBAA0B1D,MAAOgyB,GAAgBpvB,YAAY3H,KACpGw3B,gBAAkBx3B,IAAD,CAAayI,QAAS,yBAA0B1D,MAAOkyB,GAAgBtvB,YAAY3H,KACpGy3B,iBAAmBz3B,IAAD,CAAayI,QAAS,0BAA2B1D,MAAO6xB,GAAiBjvB,YAAY3H,KACvG03B,uBAAyB13B,IAAD,CAAayI,QAAS,gCAAiC1D,MAAO6wB,GAAuBjuB,YAAY3H,KACzH23B,uBAAyB33B,IAAD,CAAayI,QAAS,gCAAiC1D,MAAOoxB,GAAuBxuB,YAAY3H,KACzH43B,gBAAkB53B,IAAD,CAAayI,QAAS,yBAA0B1D,MAAOoyB,GAAgBxvB,YAAY3H,KACpG63B,uBAAyB73B,IAAD,CAAayI,QAAS,gCAAiC1D,MAAO+wB,GAAuBnuB,YAAY3H,OAG3H+M,GAAcrM,OAAS2L,KAAMA,GAAS,CAAEA,KAAM,2BACzC,IAAI3G,GAAI,CAAErE,QAASgL,ICvDxB0E,GAAW,CAAEN,MAAO,GAAIxE,OAAQ,IACzB+E,GAAO,CAChB7K,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQqK,OACRpK,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqK,OAEd,KAAnBrK,EAAQ6F,QACR5F,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6F,QAE9B5F,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK2K,IACrB,MAAOnK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQqK,MAAQ7J,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6F,OAASrF,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQ5H,OAAOtB,EAAOkJ,OAG9BrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASpD,OAAOtB,EAAO0E,QAG/B7F,EAAQ6F,OAAS,GAEd7F,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQqK,QAAwB/I,EAAI+I,MAAQrK,EAAQqK,YACjCzJ,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,QAC/CvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK2K,IAarB,YAZqB/J,IAAjBO,EAAOkJ,OAAwC,OAAjBlJ,EAAOkJ,MACrCrK,EAAQqK,MAAQlJ,EAAOkJ,MAGvBrK,EAAQqK,MAAQ,QAEEzJ,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,GAEd7F,IChET0xB,GAAoB,CAAEpS,MAAO,GAAIyP,QAAS,GAAIxc,OAAQ,EAAGzM,IAAK,EAAGzH,MAAO,IACjEszB,GAAgB,CACzB5xB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UA4BrB,MA3BsB,KAAlBF,EAAQsf,OACRrf,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsf,OAEb,KAApBtf,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAEd,IAAnB/uB,EAAQuS,QACRtS,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQuS,QAEjB,IAAhBvS,EAAQ8F,KACR7F,EAAOE,OAAO,IAAI6Q,OAAOhR,EAAQ8F,UAEjBlF,IAAhBZ,EAAQ0D,KACR0rB,GAAAA,OAAcpvB,EAAQ0D,IAAKzD,EAAOE,OAAO,IAAI4D,QAAQC,cAEpCpD,IAAjBZ,EAAQ4xB,MACRtC,GAAAA,OAAsBtvB,EAAQ4xB,KAAM3xB,EAAOE,OAAO,IAAI4D,QAAQC,SAE5C,KAAlBhE,EAAQ3B,OACR4B,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ3B,YAEZuC,IAArBZ,EAAQ6xB,UACRjnB,GAAAA,OAAY5K,EAAQ6xB,SAAU5xB,EAAOE,OAAO,IAAI4D,QAAQC,cAExCpD,IAAhBZ,EAAQsG,KACRsE,GAAAA,OAAY5K,EAAQsG,IAAKrG,EAAOE,OAAO,IAAI4D,QAAQC,SAEhD/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK0xB,IACrB,MAAOlxB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQsf,MAAQ9e,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQuS,OAASvR,GAAaR,EAAOwQ,UACrC,MACJ,KAAK,EACDhR,EAAQ8F,IAAM9E,GAAaR,EAAOwQ,UAClC,MACJ,KAAK,EACDhR,EAAQ0D,IAAM0rB,GAAAA,OAAc5uB,EAAQA,EAAOL,UAC3C,MACJ,KAAK,EACDH,EAAQ4xB,KAAOtC,GAAAA,OAAsB9uB,EAAQA,EAAOL,UACpD,MACJ,KAAK,EACDH,EAAQ3B,MAAQmC,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6xB,SAAWjnB,GAAAA,OAAYpK,EAAQA,EAAOL,UAC9C,MACJ,KAAK,EACDH,EAAQsG,IAAMsE,GAAAA,OAAYpK,EAAQA,EAAOL,UACzC,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK0xB,IAuDrB,YAtDqB9wB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQ7c,OAAOtB,EAAOme,OAG9Btf,EAAQsf,MAAQ,QAEG1e,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,QAEAnuB,IAAlBO,EAAOoR,QAA0C,OAAlBpR,EAAOoR,OACtCvS,EAAQuS,OAASnR,OAAOD,EAAOoR,QAG/BvS,EAAQuS,OAAS,OAEF3R,IAAfO,EAAO2E,KAAoC,OAAf3E,EAAO2E,IACnC9F,EAAQ8F,IAAM1E,OAAOD,EAAO2E,KAG5B9F,EAAQ8F,IAAM,OAEClF,IAAfO,EAAOuC,KAAoC,OAAfvC,EAAOuC,IACnC1D,EAAQ0D,IAAM0rB,GAAAA,SAAgBjuB,EAAOuC,KAGrC1D,EAAQ0D,SAAM9C,OAEEA,IAAhBO,EAAOywB,MAAsC,OAAhBzwB,EAAOywB,KACpC5xB,EAAQ4xB,KAAOtC,GAAAA,SAAwBnuB,EAAOywB,MAG9C5xB,EAAQ4xB,UAAOhxB,OAEEA,IAAjBO,EAAO9C,OAAwC,OAAjB8C,EAAO9C,MACrC2B,EAAQ3B,MAAQoE,OAAOtB,EAAO9C,OAG9B2B,EAAQ3B,MAAQ,QAEIuC,IAApBO,EAAO0wB,UAA8C,OAApB1wB,EAAO0wB,SACxC7xB,EAAQ6xB,SAAWjnB,GAAAA,SAAczJ,EAAO0wB,UAGxC7xB,EAAQ6xB,cAAWjxB,OAEJA,IAAfO,EAAOmF,KAAoC,OAAfnF,EAAOmF,IACnCtG,EAAQsG,IAAMsE,GAAAA,SAAczJ,EAAOmF,KAGnCtG,EAAQsG,SAAM1F,EAEXZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAUZ,YATkBV,IAAlBZ,EAAQsf,QAAwBhe,EAAIge,MAAQtf,EAAQsf,YAChC1e,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,cACrCnuB,IAAnBZ,EAAQuS,SAAyBjR,EAAIiR,OAASvS,EAAQuS,aACtC3R,IAAhBZ,EAAQ8F,MAAsBxE,EAAIwE,IAAM9F,EAAQ8F,UAChClF,IAAhBZ,EAAQ0D,MAAsBpC,EAAIoC,IAAM1D,EAAQ0D,IAAM0rB,GAAAA,OAAcpvB,EAAQ0D,UAAO9C,QAClEA,IAAjBZ,EAAQ4xB,OAAuBtwB,EAAIswB,KAAO5xB,EAAQ4xB,KAAOtC,GAAAA,OAAsBtvB,EAAQ4xB,WAAQhxB,QAC7EA,IAAlBZ,EAAQ3B,QAAwBiD,EAAIjD,MAAQ2B,EAAQ3B,YAC/BuC,IAArBZ,EAAQ6xB,WAA2BvwB,EAAIuwB,SAAW7xB,EAAQ6xB,SAAWjnB,GAAAA,OAAY5K,EAAQ6xB,eAAYjxB,QACrFA,IAAhBZ,EAAQsG,MAAsBhF,EAAIgF,IAAMtG,EAAQsG,IAAMsE,GAAAA,OAAY5K,EAAQsG,UAAO1F,GAC1EU,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK0xB,IAuDrB,YAtDqB9wB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQne,EAAOme,MAGvBtf,EAAQsf,MAAQ,QAEG1e,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,QAEAnuB,IAAlBO,EAAOoR,QAA0C,OAAlBpR,EAAOoR,OACtCvS,EAAQuS,OAASpR,EAAOoR,OAGxBvS,EAAQuS,OAAS,OAEF3R,IAAfO,EAAO2E,KAAoC,OAAf3E,EAAO2E,IACnC9F,EAAQ8F,IAAM3E,EAAO2E,IAGrB9F,EAAQ8F,IAAM,OAEClF,IAAfO,EAAOuC,KAAoC,OAAfvC,EAAOuC,IACnC1D,EAAQ0D,IAAM0rB,GAAAA,YAAmBjuB,EAAOuC,KAGxC1D,EAAQ0D,SAAM9C,OAEEA,IAAhBO,EAAOywB,MAAsC,OAAhBzwB,EAAOywB,KACpC5xB,EAAQ4xB,KAAOtC,GAAAA,YAA2BnuB,EAAOywB,MAGjD5xB,EAAQ4xB,UAAOhxB,OAEEA,IAAjBO,EAAO9C,OAAwC,OAAjB8C,EAAO9C,MACrC2B,EAAQ3B,MAAQ8C,EAAO9C,MAGvB2B,EAAQ3B,MAAQ,QAEIuC,IAApBO,EAAO0wB,UAA8C,OAApB1wB,EAAO0wB,SACxC7xB,EAAQ6xB,SAAWjnB,GAAAA,YAAiBzJ,EAAO0wB,UAG3C7xB,EAAQ6xB,cAAWjxB,OAEJA,IAAfO,EAAOmF,KAAoC,OAAfnF,EAAOmF,IACnCtG,EAAQsG,IAAMsE,GAAAA,YAAiBzJ,EAAOmF,KAGtCtG,EAAQsG,SAAM1F,EAEXZ,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cClOG,MACD2vB,GAAa,CAAE/C,QAAS,GAAIzP,MAAO,GAAIoR,KAAM,IACtCqB,GAAS,CAClBhyB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATwB,KAApBF,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAEf,KAAlB/uB,EAAQsf,OACRrf,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsf,OAEhB,KAAjBtf,EAAQ0wB,MACRzwB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ0wB,MAE9BzwB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK8xB,IACrB,MAAOtxB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQsf,MAAQ9e,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ0wB,KAAOlwB,EAAO+B,SACtB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK8xB,IAmBrB,YAlBuBlxB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQ7c,OAAOtB,EAAOme,OAG9Btf,EAAQsf,MAAQ,QAEA1e,IAAhBO,EAAOuvB,MAAsC,OAAhBvvB,EAAOuvB,KACpC1wB,EAAQ0wB,KAAOjuB,OAAOtB,EAAOuvB,MAG7B1wB,EAAQ0wB,KAAO,GAEZ1wB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHoBV,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,cACtCnuB,IAAlBZ,EAAQsf,QAAwBhe,EAAIge,MAAQtf,EAAQsf,YACnC1e,IAAjBZ,EAAQ0wB,OAAuBpvB,EAAIovB,KAAO1wB,EAAQ0wB,MAC3CpvB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK8xB,IAmBrB,YAlBuBlxB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQne,EAAOme,MAGvBtf,EAAQsf,MAAQ,QAEA1e,IAAhBO,EAAOuvB,MAAsC,OAAhBvvB,EAAOuvB,KACpC1wB,EAAQ0wB,KAAOvvB,EAAOuvB,KAGtB1wB,EAAQ0wB,KAAO,GAEZ1wB,ICtFTgyB,GAAc,CAAEjD,QAAS,GAAIzP,MAAO,GAAI1lB,KAAM,IACvCq4B,GAAU,CACnBlyB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATwB,KAApBF,EAAQ+uB,SACR9uB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ+uB,SAEf,KAAlB/uB,EAAQsf,OACRrf,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQsf,OAEhB,KAAjBtf,EAAQpG,MACRqG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQpG,MAE9BqG,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKgyB,IACrB,MAAOxxB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ+uB,QAAUvuB,EAAO+B,SACzB,MACJ,KAAK,EACDvC,EAAQsf,MAAQ9e,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQpG,KAAO4G,EAAO+B,SACtB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKgyB,IAmBrB,YAlBuBpxB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAUtsB,OAAOtB,EAAO4tB,SAGhC/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQ7c,OAAOtB,EAAOme,OAG9Btf,EAAQsf,MAAQ,QAEA1e,IAAhBO,EAAOvH,MAAsC,OAAhBuH,EAAOvH,KACpCoG,EAAQpG,KAAO6I,OAAOtB,EAAOvH,MAG7BoG,EAAQpG,KAAO,GAEZoG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHoBV,IAApBZ,EAAQ+uB,UAA0BztB,EAAIytB,QAAU/uB,EAAQ+uB,cACtCnuB,IAAlBZ,EAAQsf,QAAwBhe,EAAIge,MAAQtf,EAAQsf,YACnC1e,IAAjBZ,EAAQpG,OAAuB0H,EAAI1H,KAAOoG,EAAQpG,MAC3C0H,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKgyB,IAmBrB,YAlBuBpxB,IAAnBO,EAAO4tB,SAA4C,OAAnB5tB,EAAO4tB,QACvC/uB,EAAQ+uB,QAAU5tB,EAAO4tB,QAGzB/uB,EAAQ+uB,QAAU,QAEDnuB,IAAjBO,EAAOme,OAAwC,OAAjBne,EAAOme,MACrCtf,EAAQsf,MAAQne,EAAOme,MAGvBtf,EAAQsf,MAAQ,QAEA1e,IAAhBO,EAAOvH,MAAsC,OAAhBuH,EAAOvH,KACpCoG,EAAQpG,KAAOuH,EAAOvH,KAGtBoG,EAAQpG,KAAO,GAEZoG,I,gBChFf1F,eAAe4M,GAAaC,GACxB,aAAapB,GAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BAG1B7M,eAAe8M,GAAgBD,GAC3B,aAAaR,GAAY,CACrBV,KAAMkB,EAAY,0BAG1B,SAASE,GAAa1I,EAAO2I,GACzB,IAAK,IAAIC,KAAQrL,OAAOC,KAAKmL,GACrBzI,MAAMC,QAAQwI,EAAYC,IAC1B5I,EAAM4I,GAAQ,IAAI5I,EAAM4I,MAAUD,EAAYC,IAG9C5I,EAAM4I,GAAQD,EAAYC,GAGlC,OAAO5I,EAEX,SAAS6I,GAAaC,GAClB,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,IAAK,MAAOtL,EAAKsC,KAAUzC,OAAO0L,QAAQH,GAAW,CACjD,IAAII,EAAQ,GACZA,EAAMlO,KAAO0C,EACbwL,EAAMrK,YAAcmB,EACpB+I,EAAUC,OAAOpE,KAAKsE,GAE1B,OAAOH,EAEX,MAAMI,GAAkB,KACb,CACH6pB,cAAe,GACfO,iBAAkB,GAClBD,QAAS,GACTE,WAAY,GACZJ,OAAQ,GACRK,OAAQ,GACRC,KAAM,GACNC,YAAa,GACbC,UAAW,GACXC,cAAe,GACfxqB,WAAY,CACR2pB,cAAenqB,GAAamqB,GAAcpwB,YAAY,KACtDwwB,OAAQvqB,GAAauqB,GAAOxwB,YAAY,KACxC0wB,QAASzqB,GAAayqB,GAAQ1wB,YAAY,KAC1CquB,+BAAgCpoB,GAAaooB,GAA+BruB,YAAY,KACxF0uB,+BAAgCzoB,GAAayoB,GAA+B1uB,YAAY,MAE5F0G,UAAWvC,GACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,ICvDWjN,GDuDX,IACIwN,YAAY,EACZD,MAFW,GAGXE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACLu4B,iBAAmBrqB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACxCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMupB,cAAc51B,KAAKC,UAAU2B,KAAY,IAE1D+0B,oBAAsBtqB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC3CA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM8pB,iBAAiBn2B,KAAKC,UAAU2B,KAAY,IAE7Dg1B,WAAavqB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAClCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM6pB,QAAQl2B,KAAKC,UAAU2B,KAAY,IAEpDi1B,cAAgBxqB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACrCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM+pB,WAAWp2B,KAAKC,UAAU2B,KAAY,IAEvDk1B,UAAYzqB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACjCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2pB,OAAOh2B,KAAKC,UAAU2B,KAAY,IAEnDm1B,UAAY1qB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACjCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMgqB,OAAOr2B,KAAKC,UAAU2B,KAAY,IAEnDo1B,QAAU3qB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC/BA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMiqB,KAAKt2B,KAAKC,UAAU2B,KAAY,IAEjDq1B,eAAiB5qB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACtCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMkqB,YAAYv2B,KAAKC,UAAU2B,KAAY,IAExDs1B,aAAe7qB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACpCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMmqB,UAAUx2B,KAAKC,UAAU2B,KAAY,IAEtDu1B,iBAAmB9qB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACxCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMoqB,cAAcz2B,KAAKC,UAAU2B,KAAY,IAE1DmL,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,mCACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,0BAAyB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACzI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYioB,mBAAmBnxB,IAAQ7D,KAC1D,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYioB,mBAAmB,IAAKnxB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KACpH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,gBAAiBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC1EmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,qBAAsBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAClGvD,EAAQ,oBAAoB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEzE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,iCAAkC,kDAAoDpL,EAAEwB,WAGtH1F,6BAA4B,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAC5I,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYkoB,sBAAsBpxB,IAAQ7D,KAC7D,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYkoB,sBAAsB,IAAKpxB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KACvH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,mBAAoBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC7EmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,wBAAyBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACrGvD,EAAQ,uBAAuB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAE5E,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,oCAAqC,kDAAoDpL,EAAEwB,WAGzH1F,oBAAmB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACnI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY6nB,aAAa/wB,IAAQ7D,KACpD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY6nB,aAAa,IAAK/wB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC9G+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,UAAWpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACpEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,eAAgBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC5FvD,EAAQ,cAAc,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEnE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,2BAA4B,kDAAoDpL,EAAEwB,WAGhH1F,uBAAsB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACtI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY8nB,gBAAgBhxB,IAAQ7D,KACvD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY8nB,gBAAgB,IAAKhxB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KACjH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,aAAcpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACvEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,kBAAmBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC/FvD,EAAQ,iBAAiB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEtE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,8BAA+B,kDAAoDpL,EAAEwB,WAGnH1F,mBAAkB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAClI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY2nB,YAAY7wB,IAAQ7D,KACnD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY2nB,YAAY,IAAK7wB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC7G+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,SAAUpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACnEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,cAAeC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC3FvD,EAAQ,aAAa,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAElE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,0BAA2B,kDAAoDpL,EAAEwB,WAG/G1F,mBAAkB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAClI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY0nB,YAAY5wB,IAAQ7D,KACnD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY0nB,YAAY,IAAK5wB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC7G+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,SAAUpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACnEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,cAAeC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC3FvD,EAAQ,aAAa,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAElE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,0BAA2B,kDAAoDpL,EAAEwB,WAG/G1F,iBAAgB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAChI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYgoB,UAAUlxB,IAAQ7D,KACjD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYgoB,UAAU,IAAKlxB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC3G+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,OAAQpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACjEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,YAAaC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACzFvD,EAAQ,WAAW,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEhE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,wBAAyB,kDAAoDpL,EAAEwB,WAG7G1F,wBAAuB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACvI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYynB,iBAAiB3wB,IAAQ7D,KACxD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAYynB,iBAAiB,IAAK3wB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAClH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,cAAepB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACxEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,mBAAoBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAChGvD,EAAQ,kBAAkB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEvE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,+BAAgC,kDAAoDpL,EAAEwB,WAGpH1F,sBAAqB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACrI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY4nB,eAAe9wB,IAAQ7D,KACtD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY4nB,eAAe,IAAK9wB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAChH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,YAAapB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACtEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,iBAAkBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC9FvD,EAAQ,gBAAgB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAErE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,6BAA8B,kDAAoDpL,EAAEwB,WAGlH1F,0BAAyB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACzI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY+nB,mBAAmBjxB,IAAQ7D,KAC1D,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY+nB,mBAAmB,IAAKjxB,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KACpH+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,gBAAiBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC1EmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,qBAAsBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAClGvD,EAAQ,oBAAoB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEzE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,iCAAkC,kDAAoDpL,EAAEwB,WAGtH1F,kBAAiB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACxD,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASirB,OAAOryB,GAC5BuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,uBAAwB,4DAGxC,IAAIA,EAAAA,GAAY,uBAAwB,2BAA6BpL,EAAEwB,WAIzF1F,4BAA2B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAClE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASkrB,iBAAiBtyB,GACtCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,iCAAkC,4DAGlD,IAAIA,EAAAA,GAAY,iCAAkC,2BAA6BpL,EAAEwB,WAInG1F,4BAA2B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAClE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASmrB,iBAAiBvyB,GACtCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,iCAAkC,4DAGlD,IAAIA,EAAAA,GAAY,iCAAkC,2BAA6BpL,EAAEwB,WAInG1F,2BAA0B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACjE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASorB,gBAAgBxyB,GACrCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,gCAAiC,4DAGjD,IAAIA,EAAAA,GAAY,gCAAiC,2BAA6BpL,EAAEwB,WAIlG1F,2BAA0B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACjE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASqrB,gBAAgBzyB,GACrCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,gCAAiC,4DAGjD,IAAIA,EAAAA,GAAY,gCAAiC,2BAA6BpL,EAAEwB,WAIlG1F,4BAA2B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAClE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASsrB,iBAAiB1yB,GACtCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,iCAAkC,4DAGlD,IAAIA,EAAAA,GAAY,iCAAkC,2BAA6BpL,EAAEwB,WAInG1F,kCAAiC,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACxE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASurB,uBAAuB3yB,GAC5CuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,uCAAwC,4DAGxD,IAAIA,EAAAA,GAAY,uCAAwC,2BAA6BpL,EAAEwB,WAIzG1F,kCAAiC,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACxE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASwrB,uBAAuB5yB,GAC5CuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,uCAAwC,4DAGxD,IAAIA,EAAAA,GAAY,uCAAwC,2BAA6BpL,EAAEwB,WAIzG1F,2BAA0B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACjE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASyrB,gBAAgB7yB,GACrCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,gCAAiC,4DAGjD,IAAIA,EAAAA,GAAY,gCAAiC,2BAA6BpL,EAAEwB,WAIlG1F,kCAAiC,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACxE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS0rB,uBAAuB9yB,GAC5CuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,uCAAwC,4DAGxD,IAAIA,EAAAA,GAAY,uCAAwC,2BAA6BpL,EAAEwB,WAIzG1F,cAAa,YAAE4O,IAAe,MAAEvK,IAC5B,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASirB,OAAOryB,GAClC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,uBAAwB,4DAGxC,IAAIA,EAAAA,GAAY,yBAA0B,6BAA+BpL,EAAEwB,WAI7F1F,wBAAuB,YAAE4O,IAAe,MAAEvK,IACtC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASkrB,iBAAiBtyB,GAC5C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,iCAAkC,4DAGlD,IAAIA,EAAAA,GAAY,mCAAoC,6BAA+BpL,EAAEwB,WAIvG1F,wBAAuB,YAAE4O,IAAe,MAAEvK,IACtC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASmrB,iBAAiBvyB,GAC5C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,iCAAkC,4DAGlD,IAAIA,EAAAA,GAAY,mCAAoC,6BAA+BpL,EAAEwB,WAIvG1F,uBAAsB,YAAE4O,IAAe,MAAEvK,IACrC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASorB,gBAAgBxyB,GAC3C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,gCAAiC,4DAGjD,IAAIA,EAAAA,GAAY,kCAAmC,6BAA+BpL,EAAEwB,WAItG1F,uBAAsB,YAAE4O,IAAe,MAAEvK,IACrC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASqrB,gBAAgBzyB,GAC3C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,gCAAiC,4DAGjD,IAAIA,EAAAA,GAAY,kCAAmC,6BAA+BpL,EAAEwB,WAItG1F,wBAAuB,YAAE4O,IAAe,MAAEvK,IACtC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASsrB,iBAAiB1yB,GAC5C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,iCAAkC,4DAGlD,IAAIA,EAAAA,GAAY,mCAAoC,6BAA+BpL,EAAEwB,WAIvG1F,8BAA6B,YAAE4O,IAAe,MAAEvK,IAC5C,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASurB,uBAAuB3yB,GAClD,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,uCAAwC,4DAGxD,IAAIA,EAAAA,GAAY,yCAA0C,6BAA+BpL,EAAEwB,WAI7G1F,8BAA6B,YAAE4O,IAAe,MAAEvK,IAC5C,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASwrB,uBAAuB5yB,GAClD,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,uCAAwC,4DAGxD,IAAIA,EAAAA,GAAY,yCAA0C,6BAA+BpL,EAAEwB,WAI7G1F,uBAAsB,YAAE4O,IAAe,MAAEvK,IACrC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASyrB,gBAAgB7yB,GAC3C,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,gCAAiC,4DAGjD,IAAIA,EAAAA,GAAY,kCAAmC,6BAA+BpL,EAAEwB,WAItG1F,8BAA6B,YAAE4O,IAAe,MAAEvK,IAC5C,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS0rB,uBAAuB9yB,GAClD,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,uCAAwC,4DAGxD,IAAIA,EAAAA,GAAY,yCAA0C,6BAA+BpL,EAAEwB,cCrpBrH,SAAWnF,GACPA,EAAY,QAAU,mBACtBA,EAAY,YAAc,sBAC1BA,EAAY,cAAgB,qCAHhC,CAIGA,KAAgBA,GAAc,KAC1B,MAAMC,GACTC,YAAYC,EAAY,IACpBjB,KAAKkB,QAAU,GACflB,KAAKmB,aAAe,KACpBnB,KAAKoB,eAAiB,KACtBpB,KAAKqB,iBAAmB,IAAIC,IAC5BtB,KAAKuB,cAAgB,CACjBC,YAAa,cACbC,QAAS,GACTC,SAAU,SACVC,eAAgB,eAEpB3B,KAAK4B,gBAAmB/B,IACpBG,KAAKmB,aAAetB,GAExBG,KAAK6B,kBAAoB,CACrB,CAACf,GAAYgB,MAAQC,GAAoB,OAAVA,GAAoC,kBAAVA,GAAuC,kBAAVA,EAA8CA,EAAxBC,KAAKC,UAAUF,GAC3H,CAACjB,GAAYoB,UAAYH,GAAUI,OAAOC,KAAKL,GAAS,IAAIM,QAAO,CAACxC,EAAMyC,KACtEzC,EAAK0C,OAAOD,EAAKP,EAAMO,IAChBzC,IACR,IAAIqC,UACP,CAACpB,GAAY0B,YAAcT,GAAU/B,KAAKyC,cAAcV,IAE5D/B,KAAK0C,kBAAqBC,IACtB,GAAI3C,KAAKqB,iBAAiBuB,IAAID,GAAc,CACxC,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAClD,OAAIE,EACOA,EAAgBE,YAE3B,EAEJ,MAAMF,EAAkB,IAAIG,gBAE5B,OADAhD,KAAKqB,iBAAiB4B,IAAIN,EAAaE,GAChCA,EAAgBE,QAE3B/C,KAAKkD,aAAgBP,IACjB,MAAME,EAAkB7C,KAAKqB,iBAAiByB,IAAIH,GAC9CE,IACAA,EAAgBM,QAChBnD,KAAKqB,iBAAiB+B,OAAOT,KAGrC3C,KAAKqD,QAAU,EAAGC,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,EAAMC,KAAAA,EAAMC,MAAAA,EAAOC,OAAAA,EAAS,OAAQzC,QAAAA,EAASyB,YAAAA,KAAgBiB,MACzF,MAAMC,EAAgBN,GAAUvD,KAAKoB,gBAAkBpB,KAAKoB,eAAepB,KAAKmB,eAAkB,GAC5F2C,EAAgB9D,KAAK+D,mBAAmBH,EAAQC,GAChDG,EAAcN,GAAS1D,KAAKyC,cAAciB,GAC1CO,EAAmBjE,KAAK6B,kBAAkB4B,GAAQ3C,GAAYgB,MACpE,OAAOoC,MAAO,GAAEhD,GAAWlB,KAAKkB,SAAW,KAAKsC,IAAOQ,EAAe,IAAGA,IAAgB,KAAM,IACxFF,EACHrC,QAAS,IACDgC,GAAQA,IAAS3C,GAAYoB,SAAW,CAAE,eAAgBuB,GAAS,MACnEK,EAAcrC,SAAW,IAEjCsB,OAAQJ,EAAc3C,KAAK0C,kBAAkBC,QAAe,EAC5DW,KAAsB,qBAATA,GAAiC,OAATA,EAAgB,KAAOW,EAAiBX,KAC9Ea,MAAK5D,MAAAA,IACJ,MAAM6D,EAAIC,EACVD,EAAEvE,KAAO,KACTuE,EAAEE,MAAQ,KACV,MAAMzE,QAAawE,EAASV,KACvBQ,MAAMtE,IACHuE,EAAEG,GACFH,EAAEvE,KAAOA,EAGTuE,EAAEE,MAAQzE,EAEPuE,KAENI,OAAOC,IACRL,EAAEE,MAAQG,EACHL,KAKX,GAHIzB,GACA3C,KAAKqB,iBAAiB+B,OAAOT,IAE5B0B,EAASE,GACV,MAAM1E,EACV,OAAOA,MAGfsC,OAAOuC,OAAO1E,KAAMiB,GAExB0D,cAAcjB,EAAOpB,GACjB,MAAMsC,EAAQlB,EAAMpB,GACpB,OAAQuC,mBAAmBvC,GACvB,IACAuC,mBAAmBC,MAAMC,QAAQH,GAASA,EAAMI,KAAK,KAAwB,kBAAVJ,EAAqBA,EAAS,GAAEA,KAE3GnC,cAAcwC,GACV,MAAMvB,EAAQuB,GAAY,GACpB7C,EAAOD,OAAOC,KAAKsB,GAAOwB,QAAQ5C,GAAQ,qBAAuBoB,EAAMpB,KAC7E,OAAOF,EACF+C,KAAK7C,GAA8B,kBAAfoB,EAAMpB,IAAsBwC,MAAMC,QAAQrB,EAAMpB,IAEnEtC,KAAK2E,cAAcjB,EAAOpB,GAD1BtC,KAAKyC,cAAciB,EAAMpB,MAE1B0C,KAAK,KAEdI,eAAeH,GACX,MAAMjB,EAAchE,KAAKyC,cAAcwC,GACvC,OAAOjB,EAAe,IAAGA,IAAgB,GAE7CD,mBAAmBsB,EAASC,GACxB,MAAO,IACAtF,KAAKuB,iBACL8D,KACCC,GAAW,GACf7D,QAAS,IACDzB,KAAKuB,cAAcE,SAAW,MAC9B4D,EAAQ5D,SAAW,MAClB6D,GAAWA,EAAQ7D,SAAY,MAS7C,MAAM8D,WAAYxE,GACrBC,cACIwE,SAASC,WASTzF,KAAKo5B,oBAAsB,CAACC,EAAOz5B,EAAM05B,EAAM11B,EAAS,KAAO5D,KAAKqD,QAAQ,CACxEG,KAAO,oCAAmC61B,KAASz5B,KAAQ05B,IAC3D3zB,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKu5B,UAAY,CAAC71B,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CAClDG,KAAO,wBACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKw5B,aAAe,CAAC91B,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACrDG,KAAO,2BACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,IAUP5D,KAAKyQ,YAAc,CAAC7M,EAAS,KAAO5D,KAAKqD,QAAQ,CAC7CG,KAAO,0BACPmC,OAAQ,MACRhC,OAAQ,UACLC,IAUP5D,KAAKy5B,aAAe,CAAC/1B,EAAOE,EAAS,KAAO5D,KAAKqD,QAAQ,CACrDG,KAAO,2BACPmC,OAAQ,MACRjC,MAAOA,EACPC,OAAQ,UACLC,KC9MR,MACDgC,GAAgB,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,GAAY,CACrBC,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,OANwB,IAApBF,EAAQJ,SACRK,EAAOE,OAAO,GAAGC,MAAMJ,EAAQJ,SAEb,IAAlBI,EAAQH,OACRI,EAAOE,OAAO,IAAIE,MAAML,EAAQH,OAE7BI,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKL,IACrB,MAAOa,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQJ,QAAUoB,GAAaR,EAAOJ,SACtC,MACJ,KAAK,EACDJ,EAAQH,MAAQW,EAAOH,QACvB,MACJ,QACIG,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKL,IAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUwB,OAAOD,EAAOvB,SAGhCI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQuB,OAAOD,EAAOtB,OAG9BG,EAAQH,MAAQ,EAEbG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFoBV,IAApBZ,EAAQJ,UAA0B0B,EAAI1B,QAAUI,EAAQJ,cACtCgB,IAAlBZ,EAAQH,QAAwByB,EAAIzB,MAAQG,EAAQH,OAC7CyB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKL,IAarB,YAZuBiB,IAAnBO,EAAOvB,SAA4C,OAAnBuB,EAAOvB,QACvCI,EAAQJ,QAAUuB,EAAOvB,QAGzBI,EAAQJ,QAAU,OAEDgB,IAAjBO,EAAOtB,OAAwC,OAAjBsB,EAAOtB,MACrCG,EAAQH,MAAQsB,EAAOtB,MAGvBG,EAAQH,MAAQ,EAEbG,IAGf,IAAIwB,GAAa,MACb,GAA0B,qBAAfA,GACP,OAAOA,GACX,GAAoB,qBAATC,KACP,OAAOA,KACX,GAAsB,qBAAXC,OACP,OAAOA,OACX,GAAsB,qBAAXC,EAAAA,EACP,OAAOA,EAAAA,EACX,KAAM,kCATO,GAWjB,SAASX,GAAaY,GAClB,GAAIA,EAAKC,GAAGT,OAAOU,kBACf,MAAM,IAAIN,GAAWO,MAAM,gDAE/B,OAAOH,EAAKI,WAEZC,EAAAA,KAAAA,OAAcC,IACdD,EAAAA,KAAAA,KAAYC,GACZC,EAAAA,EAAAA,cC1FG,MACDsxB,GAAW,CAAE95B,KAAM,GAAI+5B,YAAa,GAAIC,MAAO,GAAIC,WAAY,GAAIR,MAAO,IACnES,GAAO,CAChB9zB,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAsBrB,MArBqB,KAAjBF,EAAQrG,MACRsG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQrG,MAET,KAAxBqG,EAAQ0zB,aACRzzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ0zB,aAEf,KAAlB1zB,EAAQ2zB,OACR1zB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ2zB,YAEb/yB,IAApBZ,EAAQ8zB,SACRh0B,GAAAA,OAAiBoE,GAAYlE,EAAQ8zB,SAAU7zB,EAAOE,OAAO,IAAI4D,QAAQC,SAElD,KAAvBhE,EAAQ4zB,YACR3zB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4zB,YAEf,KAAlB5zB,EAAQozB,OACRnzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQozB,YAEVxyB,IAAvBZ,EAAQ+zB,YACRj0B,GAAAA,OAAiBoE,GAAYlE,EAAQ+zB,YAAa9zB,EAAOE,OAAO,IAAI4D,QAAQC,SAEzE/D,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKyzB,IACrB,MAAOjzB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQrG,KAAO6G,EAAO+B,SACtB,MACJ,KAAK,EACDvC,EAAQ0zB,YAAclzB,EAAO+B,SAC7B,MACJ,KAAK,EACDvC,EAAQ2zB,MAAQnzB,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ8zB,QAAU3vB,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WAChE,MACJ,KAAK,EACDH,EAAQ4zB,WAAapzB,EAAO+B,SAC5B,MACJ,KAAK,EACDvC,EAAQozB,MAAQ5yB,EAAO+B,SACvB,MACJ,KAAK,GACDvC,EAAQ+zB,WAAa5vB,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WACnE,MACJ,QACIK,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKyzB,IA2CrB,YA1CoB7yB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAO8I,OAAOtB,EAAOxH,MAG7BqG,EAAQrG,KAAO,QAEQiH,IAAvBO,EAAOuyB,aAAoD,OAAvBvyB,EAAOuyB,YAC3C1zB,EAAQ0zB,YAAcjxB,OAAOtB,EAAOuyB,aAGpC1zB,EAAQ0zB,YAAc,QAEL9yB,IAAjBO,EAAOwyB,OAAwC,OAAjBxyB,EAAOwyB,MACrC3zB,EAAQ2zB,MAAQlxB,OAAOtB,EAAOwyB,OAG9B3zB,EAAQ2zB,MAAQ,QAEG/yB,IAAnBO,EAAO2yB,SAA4C,OAAnB3yB,EAAO2yB,QACvC9zB,EAAQ8zB,QAAU1vB,GAAkBjD,EAAO2yB,SAG3C9zB,EAAQ8zB,aAAUlzB,OAEIA,IAAtBO,EAAOyyB,YAAkD,OAAtBzyB,EAAOyyB,WAC1C5zB,EAAQ4zB,WAAanxB,OAAOtB,EAAOyyB,YAGnC5zB,EAAQ4zB,WAAa,QAEJhzB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQ3wB,OAAOtB,EAAOiyB,OAG9BpzB,EAAQozB,MAAQ,QAEMxyB,IAAtBO,EAAO4yB,YAAkD,OAAtB5yB,EAAO4yB,WAC1C/zB,EAAQ+zB,WAAa3vB,GAAkBjD,EAAO4yB,YAG9C/zB,EAAQ+zB,gBAAanzB,EAElBZ,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAQZ,YAPiBV,IAAjBZ,EAAQrG,OAAuB2H,EAAI3H,KAAOqG,EAAQrG,WAC1BiH,IAAxBZ,EAAQ0zB,cAA8BpyB,EAAIoyB,YAAc1zB,EAAQ0zB,kBAC9C9yB,IAAlBZ,EAAQ2zB,QAAwBryB,EAAIqyB,MAAQ3zB,EAAQ2zB,YAChC/yB,IAApBZ,EAAQ8zB,UAA0BxyB,EAAIwyB,aAA8BlzB,IAApBZ,EAAQ8zB,QAAwB9zB,EAAQ8zB,QAAQzvB,cAAgB,WACzFzD,IAAvBZ,EAAQ4zB,aAA6BtyB,EAAIsyB,WAAa5zB,EAAQ4zB,iBAC5ChzB,IAAlBZ,EAAQozB,QAAwB9xB,EAAI8xB,MAAQpzB,EAAQozB,YAC7BxyB,IAAvBZ,EAAQ+zB,aAA6BzyB,EAAIyyB,gBAAoCnzB,IAAvBZ,EAAQ+zB,WAA2B/zB,EAAQ+zB,WAAW1vB,cAAgB,MACrH/C,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKyzB,IA2CrB,YA1CoB7yB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAOwH,EAAOxH,KAGtBqG,EAAQrG,KAAO,QAEQiH,IAAvBO,EAAOuyB,aAAoD,OAAvBvyB,EAAOuyB,YAC3C1zB,EAAQ0zB,YAAcvyB,EAAOuyB,YAG7B1zB,EAAQ0zB,YAAc,QAEL9yB,IAAjBO,EAAOwyB,OAAwC,OAAjBxyB,EAAOwyB,MACrC3zB,EAAQ2zB,MAAQxyB,EAAOwyB,MAGvB3zB,EAAQ2zB,MAAQ,QAEG/yB,IAAnBO,EAAO2yB,SAA4C,OAAnB3yB,EAAO2yB,QACvC9zB,EAAQ8zB,QAAU3yB,EAAO2yB,QAGzB9zB,EAAQ8zB,aAAUlzB,OAEIA,IAAtBO,EAAOyyB,YAAkD,OAAtBzyB,EAAOyyB,WAC1C5zB,EAAQ4zB,WAAazyB,EAAOyyB,WAG5B5zB,EAAQ4zB,WAAa,QAEJhzB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQjyB,EAAOiyB,MAGvBpzB,EAAQozB,MAAQ,QAEMxyB,IAAtBO,EAAO4yB,YAAkD,OAAtB5yB,EAAO4yB,WAC1C/zB,EAAQ+zB,WAAa5yB,EAAO4yB,WAG5B/zB,EAAQ+zB,gBAAanzB,EAElBZ,IAGf,SAASkE,GAAYI,GACjB,MAAM1E,EAAU0E,EAAKC,UAAY,IAC3B1E,EAASyE,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAE3E,QAAAA,EAASC,MAAAA,GAEtB,SAASsE,GAAcK,GACnB,IAAIC,EAAqB,IAAZD,EAAE5E,QAEf,OADA6E,GAAUD,EAAE3E,MAAQ,IACb,IAAI6E,KAAKD,GAEpB,SAASL,GAAkBO,GACvB,OAAIA,aAAaD,KACNC,EAEW,kBAANA,EACL,IAAID,KAAKC,GAGTR,GAAcrE,GAAAA,SAAmB6E,ICvLzC,MACDqvB,GAAkB,CAAEZ,MAAO,GAAI/pB,OAAQ,GAAIsqB,MAAO,IAC3CM,GAAc,CACvBl0B,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATsB,KAAlBF,EAAQozB,OACRnzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQozB,OAEd,KAAnBpzB,EAAQqJ,QACRpJ,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqJ,QAEf,KAAlBrJ,EAAQ2zB,OACR1zB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ2zB,OAE9B1zB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKg0B,IACrB,MAAOxzB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQozB,MAAQ5yB,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQqJ,OAAS7I,EAAO+B,SACxB,MACJ,KAAK,EACDvC,EAAQ2zB,MAAQnzB,EAAO+B,SACvB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKg0B,IAmBrB,YAlBqBpzB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQ3wB,OAAOtB,EAAOiyB,OAG9BpzB,EAAQozB,MAAQ,QAEExyB,IAAlBO,EAAOkI,QAA0C,OAAlBlI,EAAOkI,OACtCrJ,EAAQqJ,OAAS5G,OAAOtB,EAAOkI,QAG/BrJ,EAAQqJ,OAAS,QAEAzI,IAAjBO,EAAOwyB,OAAwC,OAAjBxyB,EAAOwyB,MACrC3zB,EAAQ2zB,MAAQlxB,OAAOtB,EAAOwyB,OAG9B3zB,EAAQ2zB,MAAQ,GAEb3zB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHkBV,IAAlBZ,EAAQozB,QAAwB9xB,EAAI8xB,MAAQpzB,EAAQozB,YACjCxyB,IAAnBZ,EAAQqJ,SAAyB/H,EAAI+H,OAASrJ,EAAQqJ,aACpCzI,IAAlBZ,EAAQ2zB,QAAwBryB,EAAIqyB,MAAQ3zB,EAAQ2zB,OAC7CryB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKg0B,IAmBrB,YAlBqBpzB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQjyB,EAAOiyB,MAGvBpzB,EAAQozB,MAAQ,QAEExyB,IAAlBO,EAAOkI,QAA0C,OAAlBlI,EAAOkI,OACtCrJ,EAAQqJ,OAASlI,EAAOkI,OAGxBrJ,EAAQqJ,OAAS,QAEAzI,IAAjBO,EAAOwyB,OAAwC,OAAjBxyB,EAAOwyB,MACrC3zB,EAAQ2zB,MAAQxyB,EAAOwyB,MAGvB3zB,EAAQ2zB,MAAQ,GAEb3zB,IAyETk0B,GAAoB,CAAEd,MAAO,GAAIz5B,KAAM,GAAI+5B,YAAa,GAAIC,MAAO,GAAIC,WAAY,GAAIvqB,OAAQ,GAAIgqB,KAAM,IAClGc,GAAgB,CACzBp0B,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAyBrB,MAxBsB,KAAlBF,EAAQozB,OACRnzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQozB,OAEhB,KAAjBpzB,EAAQrG,MACRsG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQrG,MAET,KAAxBqG,EAAQ0zB,aACRzzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ0zB,aAEf,KAAlB1zB,EAAQ2zB,OACR1zB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ2zB,YAEb/yB,IAApBZ,EAAQ8zB,SACRh0B,GAAAA,OAAiBoE,GAAYlE,EAAQ8zB,SAAU7zB,EAAOE,OAAO,IAAI4D,QAAQC,SAElD,KAAvBhE,EAAQ4zB,YACR3zB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ4zB,YAEd,KAAnB5zB,EAAQqJ,QACRpJ,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqJ,QAEhB,KAAjBrJ,EAAQqzB,MACRpzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqzB,MAE9BpzB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKk0B,IACrB,MAAO1zB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQozB,MAAQ5yB,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQrG,KAAO6G,EAAO+B,SACtB,MACJ,KAAK,EACDvC,EAAQ0zB,YAAclzB,EAAO+B,SAC7B,MACJ,KAAK,EACDvC,EAAQ2zB,MAAQnzB,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ8zB,QAAU3vB,GAAcrE,GAAAA,OAAiBU,EAAQA,EAAOL,WAChE,MACJ,KAAK,EACDH,EAAQ4zB,WAAapzB,EAAO+B,SAC5B,MACJ,KAAK,EACDvC,EAAQqJ,OAAS7I,EAAO+B,SACxB,MACJ,KAAK,EACDvC,EAAQqzB,KAAO7yB,EAAO+B,SACtB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKk0B,IAiDrB,YAhDqBtzB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQ3wB,OAAOtB,EAAOiyB,OAG9BpzB,EAAQozB,MAAQ,QAEAxyB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAO8I,OAAOtB,EAAOxH,MAG7BqG,EAAQrG,KAAO,QAEQiH,IAAvBO,EAAOuyB,aAAoD,OAAvBvyB,EAAOuyB,YAC3C1zB,EAAQ0zB,YAAcjxB,OAAOtB,EAAOuyB,aAGpC1zB,EAAQ0zB,YAAc,QAEL9yB,IAAjBO,EAAOwyB,OAAwC,OAAjBxyB,EAAOwyB,MACrC3zB,EAAQ2zB,MAAQlxB,OAAOtB,EAAOwyB,OAG9B3zB,EAAQ2zB,MAAQ,QAEG/yB,IAAnBO,EAAO2yB,SAA4C,OAAnB3yB,EAAO2yB,QACvC9zB,EAAQ8zB,QAAU1vB,GAAkBjD,EAAO2yB,SAG3C9zB,EAAQ8zB,aAAUlzB,OAEIA,IAAtBO,EAAOyyB,YAAkD,OAAtBzyB,EAAOyyB,WAC1C5zB,EAAQ4zB,WAAanxB,OAAOtB,EAAOyyB,YAGnC5zB,EAAQ4zB,WAAa,QAEHhzB,IAAlBO,EAAOkI,QAA0C,OAAlBlI,EAAOkI,OACtCrJ,EAAQqJ,OAAS5G,OAAOtB,EAAOkI,QAG/BrJ,EAAQqJ,OAAS,QAEDzI,IAAhBO,EAAOkyB,MAAsC,OAAhBlyB,EAAOkyB,KACpCrzB,EAAQqzB,KAAO5wB,OAAOtB,EAAOkyB,MAG7BrzB,EAAQqzB,KAAO,GAEZrzB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GASZ,YARkBV,IAAlBZ,EAAQozB,QAAwB9xB,EAAI8xB,MAAQpzB,EAAQozB,YACnCxyB,IAAjBZ,EAAQrG,OAAuB2H,EAAI3H,KAAOqG,EAAQrG,WAC1BiH,IAAxBZ,EAAQ0zB,cAA8BpyB,EAAIoyB,YAAc1zB,EAAQ0zB,kBAC9C9yB,IAAlBZ,EAAQ2zB,QAAwBryB,EAAIqyB,MAAQ3zB,EAAQ2zB,YAChC/yB,IAApBZ,EAAQ8zB,UAA0BxyB,EAAIwyB,aAA8BlzB,IAApBZ,EAAQ8zB,QAAwB9zB,EAAQ8zB,QAAQzvB,cAAgB,WACzFzD,IAAvBZ,EAAQ4zB,aAA6BtyB,EAAIsyB,WAAa5zB,EAAQ4zB,iBAC3ChzB,IAAnBZ,EAAQqJ,SAAyB/H,EAAI+H,OAASrJ,EAAQqJ,aACrCzI,IAAjBZ,EAAQqzB,OAAuB/xB,EAAI+xB,KAAOrzB,EAAQqzB,MAC3C/xB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKk0B,IAiDrB,YAhDqBtzB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQjyB,EAAOiyB,MAGvBpzB,EAAQozB,MAAQ,QAEAxyB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAOwH,EAAOxH,KAGtBqG,EAAQrG,KAAO,QAEQiH,IAAvBO,EAAOuyB,aAAoD,OAAvBvyB,EAAOuyB,YAC3C1zB,EAAQ0zB,YAAcvyB,EAAOuyB,YAG7B1zB,EAAQ0zB,YAAc,QAEL9yB,IAAjBO,EAAOwyB,OAAwC,OAAjBxyB,EAAOwyB,MACrC3zB,EAAQ2zB,MAAQxyB,EAAOwyB,MAGvB3zB,EAAQ2zB,MAAQ,QAEG/yB,IAAnBO,EAAO2yB,SAA4C,OAAnB3yB,EAAO2yB,QACvC9zB,EAAQ8zB,QAAU3yB,EAAO2yB,QAGzB9zB,EAAQ8zB,aAAUlzB,OAEIA,IAAtBO,EAAOyyB,YAAkD,OAAtBzyB,EAAOyyB,WAC1C5zB,EAAQ4zB,WAAazyB,EAAOyyB,WAG5B5zB,EAAQ4zB,WAAa,QAEHhzB,IAAlBO,EAAOkI,QAA0C,OAAlBlI,EAAOkI,OACtCrJ,EAAQqJ,OAASlI,EAAOkI,OAGxBrJ,EAAQqJ,OAAS,QAEDzI,IAAhBO,EAAOkyB,MAAsC,OAAhBlyB,EAAOkyB,KACpCrzB,EAAQqzB,KAAOlyB,EAAOkyB,KAGtBrzB,EAAQqzB,KAAO,GAEZrzB,IAmCTo0B,GAAoB,CAAEhB,MAAO,GAAIz5B,KAAM,IAChC06B,GAAgB,CACzBt0B,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQozB,OACRnzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQozB,OAEhB,KAAjBpzB,EAAQrG,MACRsG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQrG,MAE9BsG,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKo0B,IACrB,MAAO5zB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQozB,MAAQ5yB,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQrG,KAAO6G,EAAO+B,SACtB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKo0B,IAarB,YAZqBxzB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQ3wB,OAAOtB,EAAOiyB,OAG9BpzB,EAAQozB,MAAQ,QAEAxyB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAO8I,OAAOtB,EAAOxH,MAG7BqG,EAAQrG,KAAO,GAEZqG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQozB,QAAwB9xB,EAAI8xB,MAAQpzB,EAAQozB,YACnCxyB,IAAjBZ,EAAQrG,OAAuB2H,EAAI3H,KAAOqG,EAAQrG,MAC3C2H,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKo0B,IAarB,YAZqBxzB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQjyB,EAAOiyB,MAGvBpzB,EAAQozB,MAAQ,QAEAxyB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAOwH,EAAOxH,KAGtBqG,EAAQrG,KAAO,GAEZqG,IAmCTs0B,GAAgB,CAAElB,MAAO,GAAIz5B,KAAM,GAAI05B,KAAM,IACtCkB,GAAY,CACrBx0B,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATsB,KAAlBF,EAAQozB,OACRnzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQozB,OAEhB,KAAjBpzB,EAAQrG,MACRsG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQrG,MAEhB,KAAjBqG,EAAQqzB,MACRpzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQqzB,MAE9BpzB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKs0B,IACrB,MAAO9zB,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQozB,MAAQ5yB,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQrG,KAAO6G,EAAO+B,SACtB,MACJ,KAAK,EACDvC,EAAQqzB,KAAO7yB,EAAO+B,SACtB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKs0B,IAmBrB,YAlBqB1zB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQ3wB,OAAOtB,EAAOiyB,OAG9BpzB,EAAQozB,MAAQ,QAEAxyB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAO8I,OAAOtB,EAAOxH,MAG7BqG,EAAQrG,KAAO,QAECiH,IAAhBO,EAAOkyB,MAAsC,OAAhBlyB,EAAOkyB,KACpCrzB,EAAQqzB,KAAO5wB,OAAOtB,EAAOkyB,MAG7BrzB,EAAQqzB,KAAO,GAEZrzB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHkBV,IAAlBZ,EAAQozB,QAAwB9xB,EAAI8xB,MAAQpzB,EAAQozB,YACnCxyB,IAAjBZ,EAAQrG,OAAuB2H,EAAI3H,KAAOqG,EAAQrG,WACjCiH,IAAjBZ,EAAQqzB,OAAuB/xB,EAAI+xB,KAAOrzB,EAAQqzB,MAC3C/xB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKs0B,IAmBrB,YAlBqB1zB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQjyB,EAAOiyB,MAGvBpzB,EAAQozB,MAAQ,QAEAxyB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAOwH,EAAOxH,KAGtBqG,EAAQrG,KAAO,QAECiH,IAAhBO,EAAOkyB,MAAsC,OAAhBlyB,EAAOkyB,KACpCrzB,EAAQqzB,KAAOlyB,EAAOkyB,KAGtBrzB,EAAQqzB,KAAO,GAEZrzB,IAsDTw0B,GAA2B,CAAEpB,MAAO,GAAIz5B,KAAM,GAAIg6B,MAAO,IAClDc,GAAuB,CAChC10B,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATsB,KAAlBF,EAAQozB,OACRnzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQozB,OAEhB,KAAjBpzB,EAAQrG,MACRsG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQrG,MAEf,KAAlBqG,EAAQ2zB,OACR1zB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ2zB,OAE9B1zB,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKw0B,IACrB,MAAOh0B,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQozB,MAAQ5yB,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQrG,KAAO6G,EAAO+B,SACtB,MACJ,KAAK,EACDvC,EAAQ2zB,MAAQnzB,EAAO+B,SACvB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKw0B,IAmBrB,YAlBqB5zB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQ3wB,OAAOtB,EAAOiyB,OAG9BpzB,EAAQozB,MAAQ,QAEAxyB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAO8I,OAAOtB,EAAOxH,MAG7BqG,EAAQrG,KAAO,QAEEiH,IAAjBO,EAAOwyB,OAAwC,OAAjBxyB,EAAOwyB,MACrC3zB,EAAQ2zB,MAAQlxB,OAAOtB,EAAOwyB,OAG9B3zB,EAAQ2zB,MAAQ,GAEb3zB,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHkBV,IAAlBZ,EAAQozB,QAAwB9xB,EAAI8xB,MAAQpzB,EAAQozB,YACnCxyB,IAAjBZ,EAAQrG,OAAuB2H,EAAI3H,KAAOqG,EAAQrG,WAChCiH,IAAlBZ,EAAQ2zB,QAAwBryB,EAAIqyB,MAAQ3zB,EAAQ2zB,OAC7CryB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKw0B,IAmBrB,YAlBqB5zB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQjyB,EAAOiyB,MAGvBpzB,EAAQozB,MAAQ,QAEAxyB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAOwH,EAAOxH,KAGtBqG,EAAQrG,KAAO,QAEEiH,IAAjBO,EAAOwyB,OAAwC,OAAjBxyB,EAAOwyB,MACrC3zB,EAAQ2zB,MAAQxyB,EAAOwyB,MAGvB3zB,EAAQ2zB,MAAQ,GAEb3zB,IAsDT00B,GAAiB,CAAEtB,MAAO,GAAIz5B,KAAM,GAAIg7B,SAAU,IAC3CC,GAAa,CACtB70B,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAUrB,MATsB,KAAlBF,EAAQozB,OACRnzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQozB,OAEhB,KAAjBpzB,EAAQrG,MACRsG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQrG,MAEZ,KAArBqG,EAAQ20B,UACR10B,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ20B,UAE9B10B,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK00B,IACrB,MAAOl0B,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQozB,MAAQ5yB,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQrG,KAAO6G,EAAO+B,SACtB,MACJ,KAAK,EACDvC,EAAQ20B,SAAWn0B,EAAO+B,SAC1B,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK00B,IAmBrB,YAlBqB9zB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQ3wB,OAAOtB,EAAOiyB,OAG9BpzB,EAAQozB,MAAQ,QAEAxyB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAO8I,OAAOtB,EAAOxH,MAG7BqG,EAAQrG,KAAO,QAEKiH,IAApBO,EAAOwzB,UAA8C,OAApBxzB,EAAOwzB,SACxC30B,EAAQ20B,SAAWlyB,OAAOtB,EAAOwzB,UAGjC30B,EAAQ20B,SAAW,GAEhB30B,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAIZ,YAHkBV,IAAlBZ,EAAQozB,QAAwB9xB,EAAI8xB,MAAQpzB,EAAQozB,YACnCxyB,IAAjBZ,EAAQrG,OAAuB2H,EAAI3H,KAAOqG,EAAQrG,WAC7BiH,IAArBZ,EAAQ20B,WAA2BrzB,EAAIqzB,SAAW30B,EAAQ20B,UACnDrzB,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK00B,IAmBrB,YAlBqB9zB,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQjyB,EAAOiyB,MAGvBpzB,EAAQozB,MAAQ,QAEAxyB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAOwH,EAAOxH,KAGtBqG,EAAQrG,KAAO,QAEKiH,IAApBO,EAAOwzB,UAA8C,OAApBxzB,EAAOwzB,SACxC30B,EAAQ20B,SAAWxzB,EAAOwzB,SAG1B30B,EAAQ20B,SAAW,GAEhB30B,IAmCT60B,GAAgB,CAAEF,SAAU,GAAIh7B,KAAM,IAC/Bm7B,GAAY,CACrB/0B,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANyB,KAArBF,EAAQ20B,UACR10B,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ20B,UAEhB,KAAjB30B,EAAQrG,MACRsG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQrG,MAE9BsG,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK60B,IACrB,MAAOr0B,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQ20B,SAAWn0B,EAAO+B,SAC1B,MACJ,KAAK,EACDvC,EAAQrG,KAAO6G,EAAO+B,SACtB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK60B,IAarB,YAZwBj0B,IAApBO,EAAOwzB,UAA8C,OAApBxzB,EAAOwzB,SACxC30B,EAAQ20B,SAAWlyB,OAAOtB,EAAOwzB,UAGjC30B,EAAQ20B,SAAW,QAEH/zB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAO8I,OAAOtB,EAAOxH,MAG7BqG,EAAQrG,KAAO,GAEZqG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFqBV,IAArBZ,EAAQ20B,WAA2BrzB,EAAIqzB,SAAW30B,EAAQ20B,eACzC/zB,IAAjBZ,EAAQrG,OAAuB2H,EAAI3H,KAAOqG,EAAQrG,MAC3C2H,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK60B,IAarB,YAZwBj0B,IAApBO,EAAOwzB,UAA8C,OAApBxzB,EAAOwzB,SACxC30B,EAAQ20B,SAAWxzB,EAAOwzB,SAG1B30B,EAAQ20B,SAAW,QAEH/zB,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAOwH,EAAOxH,KAGtBqG,EAAQrG,KAAO,GAEZqG,IAmCT+0B,GAAa,CAAEC,MAAO,GAAIr7B,KAAM,IACzBs7B,GAAS,CAClBl1B,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQg1B,OACR/0B,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQg1B,OAEhB,KAAjBh1B,EAAQrG,MACRsG,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQrG,MAE9BsG,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK+0B,IACrB,MAAOv0B,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQg1B,MAAQx0B,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQrG,KAAO6G,EAAO+B,SACtB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAK+0B,IAarB,YAZqBn0B,IAAjBO,EAAO6zB,OAAwC,OAAjB7zB,EAAO6zB,MACrCh1B,EAAQg1B,MAAQvyB,OAAOtB,EAAO6zB,OAG9Bh1B,EAAQg1B,MAAQ,QAEAp0B,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAO8I,OAAOtB,EAAOxH,MAG7BqG,EAAQrG,KAAO,GAEZqG,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQg1B,QAAwB1zB,EAAI0zB,MAAQh1B,EAAQg1B,YACnCp0B,IAAjBZ,EAAQrG,OAAuB2H,EAAI3H,KAAOqG,EAAQrG,MAC3C2H,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAK+0B,IAarB,YAZqBn0B,IAAjBO,EAAO6zB,OAAwC,OAAjB7zB,EAAO6zB,MACrCh1B,EAAQg1B,MAAQ7zB,EAAO6zB,MAGvBh1B,EAAQg1B,MAAQ,QAEAp0B,IAAhBO,EAAOxH,MAAsC,OAAhBwH,EAAOxH,KACpCqG,EAAQrG,KAAOwH,EAAOxH,KAGtBqG,EAAQrG,KAAO,GAEZqG,IAmCTk1B,GAAmB,CAAE9B,MAAO,GAAIvtB,OAAQ,IACjCsvB,GAAe,CACxBp1B,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQozB,OACRnzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQozB,OAEd,KAAnBpzB,EAAQ6F,QACR5F,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6F,QAE9B5F,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKk1B,IACrB,MAAO10B,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQozB,MAAQ5yB,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6F,OAASrF,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKk1B,IAarB,YAZqBt0B,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQ3wB,OAAOtB,EAAOiyB,OAG9BpzB,EAAQozB,MAAQ,QAEExyB,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASpD,OAAOtB,EAAO0E,QAG/B7F,EAAQ6F,OAAS,GAEd7F,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQozB,QAAwB9xB,EAAI8xB,MAAQpzB,EAAQozB,YACjCxyB,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,QAC/CvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKk1B,IAarB,YAZqBt0B,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQjyB,EAAOiyB,MAGvBpzB,EAAQozB,MAAQ,QAEExyB,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,GAEd7F,IAmCTo1B,GAAmB,CAAEhC,MAAO,GAAIvtB,OAAQ,IACjCwvB,GAAe,CACxBt1B,OAAOC,EAASC,EAASC,EAAAA,OAAAA,UAOrB,MANsB,KAAlBF,EAAQozB,OACRnzB,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQozB,OAEd,KAAnBpzB,EAAQ6F,QACR5F,EAAOE,OAAO,IAAIoC,OAAOvC,EAAQ6F,QAE9B5F,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAKo1B,IACrB,MAAO50B,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,KAAK,EACDf,EAAQozB,MAAQ5yB,EAAO+B,SACvB,MACJ,KAAK,EACDvC,EAAQ6F,OAASrF,EAAO+B,SACxB,MACJ,QACI/B,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAASC,GACL,MAAMnB,EAAU,IAAKo1B,IAarB,YAZqBx0B,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQ3wB,OAAOtB,EAAOiyB,OAG9BpzB,EAAQozB,MAAQ,QAEExyB,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAASpD,OAAOtB,EAAO0E,QAG/B7F,EAAQ6F,OAAS,GAEd7F,GAEXqB,OAAOrB,GACH,MAAMsB,EAAM,GAGZ,YAFkBV,IAAlBZ,EAAQozB,QAAwB9xB,EAAI8xB,MAAQpzB,EAAQozB,YACjCxyB,IAAnBZ,EAAQ6F,SAAyBvE,EAAIuE,OAAS7F,EAAQ6F,QAC/CvE,GAEXC,YAAYJ,GACR,MAAMnB,EAAU,IAAKo1B,IAarB,YAZqBx0B,IAAjBO,EAAOiyB,OAAwC,OAAjBjyB,EAAOiyB,MACrCpzB,EAAQozB,MAAQjyB,EAAOiyB,MAGvBpzB,EAAQozB,MAAQ,QAEExyB,IAAlBO,EAAO0E,QAA0C,OAAlB1E,EAAO0E,OACtC7F,EAAQ6F,OAAS1E,EAAO0E,OAGxB7F,EAAQ6F,OAAS,GAEd7F,IA0Ff,SAASkE,GAAYI,GACjB,MAAM1E,EAAU0E,EAAKC,UAAY,IAC3B1E,EAASyE,EAAKC,UAAY,IAAQ,IACxC,MAAO,CAAE3E,QAAAA,EAASC,MAAAA,GAEtB,SAASsE,GAAcK,GACnB,IAAIC,EAAqB,IAAZD,EAAE5E,QAEf,OADA6E,GAAUD,EAAE3E,MAAQ,IACb,IAAI6E,KAAKD,GAEpB,SAASL,GAAkBO,GACvB,OAAIA,aAAaD,KACNC,EAEW,kBAANA,EACL,IAAID,KAAKC,GAGTR,GAAcrE,GAAAA,SAAmB6E,ICt0ChD,MAAMa,GAAQ,CACV,CAAC,qBAAsByuB,IACvB,CAAC,8BAA+BQ,IAChC,CAAC,mBAAoBF,IACrB,CAAC,sBAAuBc,IACxB,CAAC,mBAAoBP,IACrB,CAAC,uBAAwBT,IACzB,CAAC,gBAAiBY,IAClB,CAAC,sBAAuBE,IACxB,CAAC,uBAAwBhB,IACzB,CAAC,oBAAqBS,KAEbnvB,GAAqB,IAAI1D,MAAM,sBAC/B2D,GAAW,IAAIC,EAAAA,SAASH,IAC/BI,GAAa,CACfC,OAAQ,GACRC,IAAK,UAEHC,GAAWzL,MAAO0L,GAAUC,KAAMA,GAAS,CAAEA,KAAM,6BACrD,IAAKD,EACD,MAAMP,GACV,IAAIS,EAEAA,EADAD,QACeE,EAAAA,sBAAAA,kBAAwCF,EAAMD,EAAQ,CAAEN,SAAQA,WAGhES,EAAAA,sBAAAA,QAA8BH,EAAQ,CAAEN,SAAQA,KAEnE,MAAM,QAAElM,UAAmBwM,EAAOI,eAAe,GACjD,MAAO,CACHC,iBAAkB,CAACjB,GAAQkB,IAAAA,EAAKC,KAAAA,GAAS,CAAED,IAAKV,GAAYW,KAAM,MAASL,EAAOG,iBAAiB7M,EAAS4L,EAAMkB,EAAKC,GACvH+uB,YAAc17B,IAAD,CAAayI,QAAS,qBAAsB1D,MAAOs1B,GAAY1yB,YAAY3H,KACxF27B,qBAAuB37B,IAAD,CAAayI,QAAS,8BAA+B1D,MAAO81B,GAAqBlzB,YAAY3H,KACnH47B,UAAY57B,IAAD,CAAayI,QAAS,mBAAoB1D,MAAO41B,GAAUhzB,YAAY3H,KAClF67B,aAAe77B,IAAD,CAAayI,QAAS,sBAAuB1D,MAAO02B,GAAa9zB,YAAY3H,KAC3F87B,UAAY97B,IAAD,CAAayI,QAAS,mBAAoB1D,MAAOm2B,GAAUvzB,YAAY3H,KAClF+7B,cAAgB/7B,IAAD,CAAayI,QAAS,uBAAwB1D,MAAO01B,GAAc9yB,YAAY3H,KAC9Fg8B,OAASh8B,IAAD,CAAayI,QAAS,gBAAiB1D,MAAOs2B,GAAO1zB,YAAY3H,KACzEi8B,aAAej8B,IAAD,CAAayI,QAAS,sBAAuB1D,MAAOw2B,GAAa5zB,YAAY3H,KAC3Fk8B,cAAgBl8B,IAAD,CAAayI,QAAS,uBAAwB1D,MAAOw1B,GAAc5yB,YAAY3H,KAC9Fm8B,WAAan8B,IAAD,CAAayI,QAAS,oBAAqB1D,MAAOi2B,GAAWrzB,YAAY3H,OAGvF+M,GAAcrM,OAAS2L,KAAMA,GAAS,CAAEA,KAAM,2BACzC,IAAI3G,GAAI,CAAErE,QAASgL,ICvDxB4E,GAAa,GACNE,GAAS,CAClBhL,OAAO8vB,EAAG5vB,EAASC,EAAAA,OAAAA,UACf,OAAOD,GAEXK,OAAOxE,EAAOyE,GACV,MAAMC,EAAS1E,aAAiB2E,WAAa,IAAIC,EAAAA,OAAO5E,GAASA,EACjE,IAAI6E,OAAiBC,IAAXL,EAAuBC,EAAOK,IAAML,EAAOM,IAAMP,EAC3D,MAAMP,EAAU,IAAK6K,IACrB,MAAOrK,EAAOM,IAAMH,EAAK,CACrB,MAAMI,EAAMP,EAAOL,SACnB,OAAQY,IAAQ,GACZ,QACIP,EAAOS,SAAe,EAANF,GAChB,OAGZ,OAAOf,GAEXkB,SAAS2uB,GACL,MAAM7vB,EAAU,IAAK6K,IACrB,OAAO7K,GAEXqB,OAAOwuB,GACH,MAAMvuB,EAAM,GACZ,OAAOA,GAEXC,YAAYsuB,GACR,MAAM7vB,EAAU,IAAK6K,IACrB,OAAO7K,I,gBC1Bf1F,eAAe4M,GAAaC,GACxB,aAAapB,GAASoB,EAAY,wBAAyB,CACvDlB,KAAMkB,EAAY,8BAG1B7M,eAAe8M,GAAgBD,GAC3B,aAAaR,GAAY,CACrBV,KAAMkB,EAAY,0BAG1B,SAASE,GAAa1I,EAAO2I,GACzB,IAAK,IAAIC,KAAQrL,OAAOC,KAAKmL,GACrBzI,MAAMC,QAAQwI,EAAYC,IAC1B5I,EAAM4I,GAAQ,IAAI5I,EAAM4I,MAAUD,EAAYC,IAG9C5I,EAAM4I,GAAQD,EAAYC,GAGlC,OAAO5I,EAEX,SAAS6I,GAAaC,GAClB,IAAIC,EAAY,CAAEC,OAAQ,IAC1B,IAAK,MAAOtL,EAAKsC,KAAUzC,OAAO0L,QAAQH,GAAW,CACjD,IAAII,EAAQ,GACZA,EAAMlO,KAAO0C,EACbwL,EAAMrK,YAAcmB,EACpB+I,EAAUC,OAAOpE,KAAKsE,GAE1B,OAAOH,EAEX,MAAMI,GAAkB,KACb,CACHiD,OAAQ,GACR8oB,KAAM,GACNmC,QAAS,GACTC,QAAS,GACTC,eAAgB,GAChBluB,WAAY,CACR6rB,KAAMrsB,GAAaqsB,GAAKtyB,YAAY,KACpCwJ,OAAQvD,GAAauD,GAAAA,YAAmB,MAE5C9C,UAAWvC,GACXwC,eAAgB,IAAIC,MAItBC,GAAQN,KACd,QACIO,YAAY,EACZD,MAFW,GAGXE,UAAW,CACPC,YAAYH,GACRlM,OAAOuC,OAAO2J,EAAON,OAEzBU,MAAMJ,GAAO,MAAE3K,EAAF,IAASpB,EAAT,MAAcsC,IACvByJ,EAAM3K,GAAO1B,KAAKC,UAAUK,IAAQsC,GAExC8J,UAAUL,EAAOM,GACbN,EAAMF,eAAeS,IAAI5M,KAAKC,UAAU0M,KAE5CE,YAAYR,EAAOM,GACfN,EAAMF,eAAe/K,OAAOpB,KAAKC,UAAU0M,MAGnDxO,QAAS,CACL+T,UAAY7F,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACjCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM2C,OAAOhP,KAAKC,UAAU2B,KAAY,IAEnDw4B,QAAU/tB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAC/BA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAMyrB,KAAK93B,KAAKC,UAAU2B,KAAY,IAEjDy4B,WAAahuB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAClCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM4tB,QAAQj6B,KAAKC,UAAU2B,KAAY,IAEpD04B,WAAajuB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OAClCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM6tB,QAAQl6B,KAAKC,UAAU2B,KAAY,IAEpD24B,kBAAoBluB,GAAU,CAACzK,EAAS,CAAEA,OAAQ,OACzCA,EAAOF,QACRE,EAAOF,MAAQ,MAEZ2K,EAAM8tB,eAAen6B,KAAKC,UAAU2B,KAAY,IAE3DmL,iBAAmBV,GAAW5K,GACnB4K,EAAMJ,WAAWxK,GAAMmK,OAElCoB,YAAcX,GACHA,EAAMH,WAGrBe,QAAS,CACLC,MAAK,SAAE1O,EAAF,YAAY2O,IACbxO,GAAQC,IAAI,mCACRuO,EAAY,sBACZA,EAAY,qBAAqBC,GAAG,YAAY,KAC5C5O,EAAS,mBAIrB6O,YAAW,OAAEC,IACTA,EAAO,gBAEXC,aAAY,OAAED,GAAUX,GACpBW,EAAO,cAAeX,IAE1BpO,mBAAkB,MAAE8N,EAAF,SAAS7N,IACvB6N,EAAMF,eAAeqB,SAAQjP,MAAAA,IACzB,IACI,MAAMkP,EAAMzN,KAAK0N,MAAMf,SACjBnO,EAASiP,EAAIE,OAAQF,EAAIG,SAEnC,MAAOnL,GACH,MAAM,IAAIoL,EAAAA,GAAY,kBAAoBpL,EAAEwB,cAIxD1F,mBAAkB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAClI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY6D,eAAe5Q,KAI9C,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,SAAUpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACnEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,cAAeC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC3FvD,EAAQ,aAAa,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAElE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,0BAA2B,kDAAoDpL,EAAEwB,WAG/G1F,iBAAgB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAChI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY2sB,UAAU71B,IAAQ7D,KACjD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY2sB,UAAU,IAAK71B,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC3G+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,OAAQpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACjEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,YAAaC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACzFvD,EAAQ,WAAW,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEhE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,wBAAyB,kDAAoDpL,EAAEwB,WAG7G1F,oBAAmB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACnI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY4sB,aAAa91B,IAAQ7D,KACpD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY4sB,aAAa,IAAK91B,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC9G+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,UAAWpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACpEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,eAAgBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC5FvD,EAAQ,cAAc,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEnE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,2BAA4B,kDAAoDpL,EAAEwB,WAGhH1F,oBAAmB,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OACnI,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAY6sB,aAAa/1B,IAAQ7D,KACpD,MAAOmQ,GAAOpL,EAAMqL,YAA2C,MAA7BrL,EAAMqL,WAAWC,SAAkB,CACjE,IAAI3C,SAAqBX,EAAY6sB,aAAa,IAAK/1B,EAAO,iBAAkBkB,EAAMqL,WAAWC,YAAarQ,KAC9G+E,EAAQ0I,GAAa1I,EAAO2I,GAKhC,OAHA+B,EAAO,QAAS,CAAE5L,MAAO,UAAWpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IACpEmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,eAAgBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KAC5FvD,EAAQ,cAAc,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAEnE,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,2BAA4B,kDAAoDpL,EAAEwB,WAGhH1F,2BAA0B,OAAE+O,EAAF,YAAUH,EAAV,QAAuBhP,IAAa2P,SAAS,UAAEC,EAAF,IAAaC,GAAQ,CAAED,WAAW,EAAOC,KAAK,GAAzD,OAAkEpM,EAAlE,MAA0EF,EAAQ,OAC1I,IACI,MAAMpB,EAAMsB,GAAU,GAChBgJ,QAAoBS,GAAgB8B,GAC1C,IAAIvK,SAAegI,EAAYwsB,oBAAoB92B,EAAI+2B,MAAO/2B,EAAI1C,KAAM0C,EAAIg3B,OAAOz5B,KAInF,OAHAyP,EAAO,QAAS,CAAE5L,MAAO,iBAAkBpB,IAAK,CAAEsB,OAAQ,IAAKtB,GAAOoB,MAAAA,GAASkB,MAAAA,IAC3EmL,GACAT,EAAO,YAAa,CAAEK,OAAQ,sBAAuBC,QAAS,CAAEE,QAAS,CAAEE,IAAAA,GAAOpM,OAAQ,IAAKtB,GAAOoB,MAAAA,KACnGvD,EAAQ,qBAAqB,CAAEyD,OAAQ,IAAKtB,GAAOoB,MAAAA,KAAY,GAE1E,MAAOe,GACH,MAAM,IAAIoL,EAAAA,GAAY,kCAAmC,kDAAoDpL,EAAEwB,WAGvH1F,uBAAsB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC7D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASuvB,YAAY32B,GACjCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,4BAA6B,4DAG7C,IAAIA,EAAAA,GAAY,4BAA6B,2BAA6BpL,EAAEwB,WAI9F1F,gCAA+B,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACtE,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASwvB,qBAAqB52B,GAC1CuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,qCAAsC,4DAGtD,IAAIA,EAAAA,GAAY,qCAAsC,2BAA6BpL,EAAEwB,WAIvG1F,qBAAoB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC3D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASyvB,UAAU72B,GAC/BuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,0BAA2B,4DAG3C,IAAIA,EAAAA,GAAY,0BAA2B,2BAA6BpL,EAAEwB,WAI5F1F,wBAAuB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC9D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS0vB,aAAa92B,GAClCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,6BAA8B,4DAG9C,IAAIA,EAAAA,GAAY,6BAA8B,2BAA6BpL,EAAEwB,WAI/F1F,qBAAoB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC3D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS2vB,UAAU/2B,GAC/BuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,0BAA2B,4DAG3C,IAAIA,EAAAA,GAAY,0BAA2B,2BAA6BpL,EAAEwB,WAI5F1F,yBAAwB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC/D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS4vB,cAAch3B,GACnCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,8BAA+B,4DAG/C,IAAIA,EAAAA,GAAY,8BAA+B,2BAA6BpL,EAAEwB,WAIhG1F,kBAAiB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KACxD,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS6vB,OAAOj3B,GAC5BuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,uBAAwB,4DAGxC,IAAIA,EAAAA,GAAY,uBAAwB,2BAA6BpL,EAAEwB,WAIzF1F,wBAAuB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC9D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS8vB,aAAal3B,GAClCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,6BAA8B,4DAG9C,IAAIA,EAAAA,GAAY,6BAA8B,2BAA6BpL,EAAEwB,WAI/F1F,yBAAwB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC/D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS+vB,cAAcn3B,GACnCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,8BAA+B,4DAG/C,IAAIA,EAAAA,GAAY,8BAA+B,2BAA6BpL,EAAEwB,WAIhG1F,sBAAqB,YAAE4O,IAAe,MAAEvK,EAAF,IAAS2H,EAAM,GAAf,KAAmBC,EAAO,KAC5D,IACI,MAAMR,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASgwB,WAAWp3B,GAChCuL,QAAenE,EAASM,iBAAiB,CAAC3C,GAAM,CAAE4C,IAAK,CAAET,OAAQS,EAC/DR,IAAK,UAAYS,KAAAA,IACzB,OAAO2D,EAEX,MAAO1L,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,2BAA4B,4DAG5C,IAAIA,EAAAA,GAAY,2BAA4B,2BAA6BpL,EAAEwB,WAI7F1F,mBAAkB,YAAE4O,IAAe,MAAEvK,IACjC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASuvB,YAAY32B,GACvC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,4BAA6B,4DAG7C,IAAIA,EAAAA,GAAY,8BAA+B,6BAA+BpL,EAAEwB,WAIlG1F,4BAA2B,YAAE4O,IAAe,MAAEvK,IAC1C,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASwvB,qBAAqB52B,GAChD,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,qCAAsC,4DAGtD,IAAIA,EAAAA,GAAY,uCAAwC,6BAA+BpL,EAAEwB,WAI3G1F,iBAAgB,YAAE4O,IAAe,MAAEvK,IAC/B,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASyvB,UAAU72B,GACrC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,0BAA2B,4DAG3C,IAAIA,EAAAA,GAAY,4BAA6B,6BAA+BpL,EAAEwB,WAIhG1F,oBAAmB,YAAE4O,IAAe,MAAEvK,IAClC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS0vB,aAAa92B,GACxC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,6BAA8B,4DAG9C,IAAIA,EAAAA,GAAY,+BAAgC,6BAA+BpL,EAAEwB,WAInG1F,iBAAgB,YAAE4O,IAAe,MAAEvK,IAC/B,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS2vB,UAAU/2B,GACrC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,0BAA2B,4DAG3C,IAAIA,EAAAA,GAAY,4BAA6B,6BAA+BpL,EAAEwB,WAIhG1F,qBAAoB,YAAE4O,IAAe,MAAEvK,IACnC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS4vB,cAAch3B,GACzC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,8BAA+B,4DAG/C,IAAIA,EAAAA,GAAY,gCAAiC,6BAA+BpL,EAAEwB,WAIpG1F,cAAa,YAAE4O,IAAe,MAAEvK,IAC5B,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS6vB,OAAOj3B,GAClC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,uBAAwB,4DAGxC,IAAIA,EAAAA,GAAY,yBAA0B,6BAA+BpL,EAAEwB,WAI7F1F,oBAAmB,YAAE4O,IAAe,MAAEvK,IAClC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS8vB,aAAal3B,GACxC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,6BAA8B,4DAG9C,IAAIA,EAAAA,GAAY,+BAAgC,6BAA+BpL,EAAEwB,WAInG1F,qBAAoB,YAAE4O,IAAe,MAAEvK,IACnC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAAS+vB,cAAcn3B,GACzC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,8BAA+B,4DAG/C,IAAIA,EAAAA,GAAY,gCAAiC,6BAA+BpL,EAAEwB,WAIpG1F,kBAAiB,YAAE4O,IAAe,MAAEvK,IAChC,IACI,MAAMoH,QAAiBmB,GAAagC,GAC9BxF,QAAYqC,EAASgwB,WAAWp3B,GACtC,OAAO+E,EAEX,MAAOlF,GACH,MAAIA,GAAKiH,GACC,IAAImE,EAAAA,GAAY,2BAA4B,4DAG5C,IAAIA,EAAAA,GAAY,6BAA8B,6BAA+BpL,EAAEwB,aCvgBzG,IACIu2B,kCAAmCC,GAAKD,GAAmC,wBAC3EE,iCAAkCD,GAAKC,GAAkC,uBACzEC,mCAAoCF,GAAKE,GAAoC,yBAC7EC,yCAA0CH,GAAKG,GAA0C,+BACzFC,qCAAsCJ,GAAKI,GAAsC,2BACjFC,qCAAsCL,GAAKK,GAAsC,2BACjFC,gCAAiCN,GAAKM,GAAiC,sBACvEC,qCAAsCP,GAAKO,GAAsC,2BACjFC,oCAAqCR,GAAKQ,GAAqC,0BAC/EC,oCAAqCT,GAAKS,GAAqC,0BAC/EC,qCAAsCV,GAAKU,GAAsC,gCACjFC,cAAeX,GAAKW,GAAe,SACnCC,cAAeZ,GAAKY,GAAe,UAEvC,SAASZ,GAAKa,EAAKC,GACf,OAAO,SAAcC,GACjB,GAAIA,EAAMt9B,UAAU,CAACq9B,IACjB,MAAM,IAAIv1B,MAAM,mCAAqCu1B,GAGrDC,EAAMC,eAAe,CAACF,GAASD,GAC/BE,EAAMztB,WAAW2tB,IACQ,qCAAjBA,EAASj6B,MACT+5B,EAAMh9B,SAAS+8B,EAAS,QAAS,KAAM,CACnCI,MAAM,QCrCf,SAASzuB,GAAKsuB,GAC5B,IAAK,MAAMI,KAAcz7B,OAAO07B,OAAOC,IACtCF,EAAWJ,IAEZO,EAAAA,EAAAA,IAAUP,IACVQ,EAAAA,EAAAA,IAAOR,IACPS,EAAAA,EAAAA,IAAIT,IACJvxB,EAAAA,EAAAA,IAAOuxB,IACPU,EAAAA,EAAAA,IAASV,GCPV,MAAMA,IAAQW,EAAAA,EAAAA,IAAY,CACzB9vB,QACC,MAAO,IAERE,UAAW,GACXU,QAAS,KAEVC,GAAKsuB,IACL,U,sBCTSY,MAAM,a,oCAEa,wB,mLAH1B,wBAaM,aAZJ,wBAWM,MAXN,GAWM,EAVJ,wBAOK,WANQ,EAAA3+B,UAAA,kBAAX,wBAKM,cAHJ,iBAEc,GAFD2+B,MAAM,YAAaC,GAAE,6CAAqD,EAAA5+B,WAAvF,C,uBACE,IAAa,6CAAV,EAAAA,SAAO,M,KADZ,cAFF,kCAOF,iBAAiD,GAAnCA,QAAS,EAAAA,QAAS6+B,QAAQ,QAAxC,qBACA,iBAAqC,GAApB7+B,QAAS,EAAAA,SAAO,wB,gBAQvC,MAAM8+B,WAAoB,GAAAC,WAAA,cACxBC,UAAUl/B,EAAMC,EAAM0Y,GACpB,MAAMwmB,EAAKl5B,MAAMi5B,UAAUl/B,EAAMC,EAAM0Y,GAEvC,OAAOwmB,EASTC,eAAeC,EAAO78B,EAAOqQ,EAAaysB,GACxC,MAAMC,EAAQC,SAASC,cAAc,OAoBrC,OAlBIJ,GAAyB,aAAf78B,EAAM0B,MAAsC,UAAf1B,EAAM0B,MAK/C1B,EAAMk9B,UAAUrwB,IAAI,YACpBkwB,EAAMG,UAAUrwB,IAAI,cAChBgwB,IACFA,EAAMK,UAAUrwB,IAAI,iBACpBgwB,EAAMK,UAAUrwB,IAAI,iBACpBkwB,EAAMI,YAAYN,GACdC,GAAUD,EAAMM,YAAYL,IAElCC,EAAMI,YAAYn9B,KAZlB+8B,EAAMG,UAAUrwB,IAAI7M,EAAM0B,MAC1Bm7B,EAAMO,aAAap9B,EAAO68B,EAAMQ,YAChCN,EAAMI,YAAYN,IAahBxsB,GAAa0sB,EAAMI,YAAY9sB,GAE5B0sB,GAGXP,GAAYc,MAAQ,GACpB,GAAAb,WAAA,yBAAsCD,GAEtC,QACE3+B,KAAM,QACNE,SAAU,CACRL,UACE,OAAOO,KAAKC,OAAOE,QAAQ,4BC3DjC,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,UCLOi+B,MAAM,a,+FADZ,wBAIM,aAHL,wBAEM,MAFN,GAEM,EADL,iBAAc,OAMjB,QACCx+B,KAAM,YCLP,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,gBCNOw+B,MAAM,sB,8EAA4B,EAAAkB,WAA6B,GAAhB,EAAAA,UAAU94B,SAA9D,oBAEE,wBAOM,oCAPc,EAAA84B,WAARC,K,kBAAZ,wBAOM,OAPgCj9B,IAAKi9B,EAAKha,OAAhD,EACE,iBAKc,GAJX8Y,GAAE,6CAAqDkB,EAAKha,QAC7D6Y,MAAM,+BAFR,C,uBAIE,IAAgB,6CAAbmB,EAAKha,OAAK,M,KAJf,kBADF,QAFkE,kBAApE,wBAAiF,MAAjF,KAcF,QACE3lB,KAAM,aACNE,SAAU,CACRw/B,UAAW,WACT,MAAME,EAAQx/B,KAAKC,OAAOE,QAAQ,wBAElC,OADAwH,OAAO63B,MAAQA,EACRA,EAAQA,EAAM,UAAY,KAGrCC,QAASl/B,uBACDP,KAAKC,OAAOO,SAAS,uBAAwB,CACjDsP,QAAS,CAAEC,WAAW,EAAOC,KAAK,MAGtC0vB,QAAS,GACTC,QAAS,WACPh4B,OAAO1H,OAASD,KAAKC,SC1BzB,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,UCUOm+B,MAAM,a,IACJA,MAAM,iB,IACJwB,GAAG,W,qBAWmBxB,MAAM,oB,IAM5BwB,GAAG,Q,gLAnBZ,wBAiCM,MAjCN,GAiCM,EAhCJ,wBA+BM,MA/BN,GA+BM,EA9BJ,wBAgBM,MAhBN,GAgBM,CAfO,EAAAC,SAAW,EAAAA,QAAQv7B,QAAA,kBAA9B,wBAEM,+BADD,EAAAu7B,QAAQv7B,OAAK,KADlB,iCAeI,oBAZJ,wBAWM,iCAXc,EAAAu7B,SAARN,K,kBAAZ,wBAWM,OAX8Bj9B,IAAKi9B,EAAKO,UAA9C,CAEUP,EAAKQ,SAAA,kBADb,iBAKE,G,MAHOA,OAAQR,EAAKQ,OACbngC,KAAM2/B,EAAKO,SACXE,cAAa,KAAOC,OAAOr8B,OAAOs8B,gBAJ3C,2EAMWX,EAAKj7B,QAAA,kBAAhB,wBAGM,MAHN,GAGM,EAFJ,wBAA4B,gCAArBi7B,EAAKO,UAAQ,IACpB,wBAA2B,iCAAnBP,EAAKj7B,OAAK,OAFpB,oCAPF,SAaF,wBAYM,MAZN,GAYM,CAXO,EAAA67B,QAAU,EAAA1gC,SAAO,KAASwgC,OAAOr8B,OAAOs8B,iBAAA,kBAAnD,wBAKM,WAJJ,iBAA+F,GAA3Et7B,MAAO,EAAA+xB,K,gCAAA,EAAAA,KAAI,GAAEyJ,KAAK,SAASC,MAAM,SAAS,YAAU,KAAK,YAAU,OAAvF,mBACA,wBAES,UAFA,QAAK,oBAAE,EAAAC,MAAA,EAAAA,QAAA,IAAOC,SAAU,EAAAC,UAAY,EAAA/gC,SAAO,KAASwgC,OAAOr8B,OAAOs8B,eAAgB9B,MAAM,aAAY,SAE7G,UAJF,+BAMW,EAAAqC,WAAA,kBAAX,wBAIM,SAJe,aACpB,qBAAG,EAAAA,SAASC,iBAAkB,cAC/B,qBAAG,EAAAD,SAASjoB,QAAS,eACpB,qBAAG,EAAAioB,SAASE,QAAS,aACtB,KAJA,qC,kECtBKvC,MAAM,c,IACT,wBAAwD,SAAjDA,MAAM,+BAA8B,SAAK,G,mFArBxD,wBAqDM,OArDAA,OAAK,2BAAW,EAAAwC,WAAtB,EACE,wBAmDM,OAnDAxC,OAAK,qCAAqB,EAAAwC,WAAhC,EACE,wBAsBO,QAtBI,SAAM,oBAAE,EAAAC,QAAA,EAAAA,UAAA,IAAQzC,MAAM,mBAAoBzuB,OAAM,IAAM,EAAA/P,QAAjE,CAEa,EAAAghC,UAAA,kBAAX,wBAA6E,O,MAAzDxC,MAAM,QAAS,QAAK,oBAAOwC,SAAO,IAAQ,SAA9D,gCACA,wBAA4B,OAAhBhB,GAAI,EAAAhgC,MAAI,YACpB,wBAAkH,UAA1GA,KAAK,SAAW,QAAK,oBAAOghC,SAAO,KAAOA,SAASh8B,MAAM,OAAOw5B,MAAM,aAAY,SAAK,qBAAG,EAAAx+B,MAAI,IACtG,wBAES,UAFDA,KAAK,SAAU2gC,SAAQ,KAAOO,SAAUr9B,KAAK,SAASmB,MAAM,QAAQw5B,MAAM,aAAY,WACtF,qBAAG,EAAAx+B,MAAI,OAEf,wBAQS,UAPPA,KAAK,SACJ2gC,UAAW,EAAA9gC,SAAO,KAASqhC,SAC5Br9B,KAAK,SACLmB,MAAM,MACNw5B,MAAM,+BACP,SACK,qBAAG,EAAAx+B,MAAI,OAEb,wBAAkF,UAA1Ew+B,MAAM,YAAiB,QAAK,eAAE,EAAA2C,UAAY,EAAAA,WAAU,kBAA5D,qBACA,wBAGM,MAHN,GAGM,CAFJ,IAEI,qBADJ,wBAA0C,SAAnC3C,MAAM,W,qCAAoB,EAAA3sB,MAAK,IAAtC,yBAAiC,EAAAA,UAFnC,gBAAiC,EAAAsvB,aAlBnC,OAuBW,EAAAC,cAAA,kBAAX,wBAcC,SAduB,aACrB,qBAAG,EAAAA,YAAYC,IAAK,uBACZ,qBAAG,EAAAD,YAAYE,SAAU,uBACzB,qBAAG,EAAAF,YAAYG,cAAe,oBACjC,qBAAG,EAAAH,YAAYI,SAAU,iBAC5B,qBAAG,EAAAJ,YAAYK,WAAY,gBAE9B,qBAAG,EAAAL,YAAY7wB,QAAS,mBAErB,qBAAG,EAAA6wB,YAAYM,WAAY,iBAGtC,qBAAG,EAAAN,YAAYO,QAAS,OACtB,KAbI,+BAeW,EAAAC,mBAAA,kBAAX,wBAAyD,+BAAzB,EAAAA,kBAAgB,KAAhD,+BACW,EAAAC,gBAAA,kBAAX,wBAUC,SAVyB,qBACf,qBAAG,EAAAA,cAAcP,SAAU,uBAC3B,qBAAG,EAAAO,cAAcN,cAAe,8BACzB,qBAAG,EAAAM,cAAcC,qBAAsB,iBACpD,qBAAG,EAAAD,cAAcE,WAAY,cAChC,qBAAG,EAAAF,cAActxB,QAAS,iBACvB,qBAAG,EAAAsxB,cAAcH,WAAY,eAExC,qBAAG,EAAAG,cAAcF,QAAS,OACxB,KATI,gCAxCF,IADF,G,gBAwDEK,GAAK,EAAQ,OAIjB,IACEhiC,KAAM,iBACNiiC,MAAO,CACL9B,OAAQ59B,OACRvC,KAAM8I,OACNs3B,cAAet3B,QAEjB7I,KAAM,WACJ,MAAO,CACLmhC,YAAa,KACbS,cAAe,KACfD,iBAAkB,KAClBV,UAAU,EACVrvB,MAAO,GACPsvB,UAAU,EACVH,SAAS,IAGb9gC,SAAU,CACRgiC,UAAW,WACT,IAAIC,EAAMp6B,OAAOq6B,SAASC,OAAOC,UAAU,GAC3C,OAAON,GAAGlyB,MAAMqyB,GAAK/hC,KAAKJ,OAE5BH,QAAS,WACP,OAAOO,KAAKC,OAAOE,QAAQ,2BAG/Bu/B,QAAS,CACPmB,OAAQtgC,eAAgBkE,GAQtB,GAPA,GAAQ7D,IAAI6D,EAAE8W,UAAU3W,OACC,QAArBH,EAAE8W,UAAU3W,OACdH,EAAE09B,iBAEJniC,KAAKghC,YAAc,KACnBhhC,KAAKyhC,cAAgB,KACrBzhC,KAAKwhC,iBAAmB,KACpBxhC,KAAKoiC,YAAa,CACpB,MAAMx9B,EAAQ,CACZowB,QAASh1B,KAAKP,QACdA,QAASO,KAAKggC,cACd9K,aAAcl1B,KAAKJ,KACnBw1B,OAAQpzB,KAAKC,UAAUjC,KAAKqiC,OAAOC,YACnC7wB,MAAOzR,KAAKyR,OAId,GAFA,GAAQ7Q,IAAIgE,GAEa,OAArBH,EAAE8W,UAAU3W,MAAgB,CAC9B,IAAI67B,EAAW,GACf,IACEzgC,KAAKqiC,OAAOE,UACZviC,KAAK8gC,UAAW,EAChB,IAAIE,EAAc,GAClB,IACEP,QAAiBzgC,KAAKC,OAAOO,SAAS,mBAAoB,CACxDoE,MAAOA,EACP2H,IAAK,CAAC,CAAET,OAAQ,OAAQwE,MAAO,UAEjC,GAAQ1P,IAAI,WAAY6/B,GACxBO,EAAch/B,KAAK0N,MACjB1N,KAAK0N,MAAM+wB,EAAS,WAAW,GAC5B,UAAUv7B,QAAQkE,GAAgB,OAAVA,EAAE3F,OAAe,GACzC,cAAc++B,OAAO,GAAG,GAAG,UAEhCxB,EAAYI,QAAUX,EAASW,QAC/BJ,EAAYK,UAAYZ,EAASY,UACjC,MAAOoB,GACP,GAAQC,KAAK,WAAYD,GACrBA,aAAoBE,YACtB3B,EAAYM,UAAYb,EAAS,UAEjCO,EAAYM,UAAYmB,EAASx8B,QAIrC,GAAQrF,IAAI,cAAeogC,GAC3BhhC,KAAKghC,YAAcA,EACnBhhC,KAAKghC,YAAYC,GAAKR,EAASC,gBAC/B,MAAOj8B,GACP,GAAQ7D,IAAI,iBAAkB6D,GA9BhC,QAgCEzE,KAAKqiC,OAAOO,SACZ5iC,KAAK8gC,UAAW,QAEb,GAAyB,SAArBr8B,EAAE8W,UAAU3W,MACrB,IACE5E,KAAKqiC,OAAOE,UACZviC,KAAK8gC,UAAW,EAChB,MAAMjJ,QAAa73B,KAAKC,OAAOO,SAAS,yBAA0B,CAChEoD,OAAQ,GACRF,MAAOkB,EACPkL,QAAS,CAAEC,WAAW,KAExB,GAAQnP,IAAI,gBAAiBi3B,GAC7B,IACE73B,KAAKyhC,cAAgBz/B,KAAK0N,MAAMmoB,EAAKxzB,UACrC,MAAOI,GACHA,aAAak+B,cACf3iC,KAAKwhC,iBAAmB3J,EAAKxzB,WAGjC,MAAOI,GACPzE,KAAKwhC,iBAAmB/8B,EACxB,GAAQH,MAAMG,GAlBhB,QAoBEzE,KAAKqiC,OAAOO,SACZ5iC,KAAK8gC,UAAW,KAKxB+B,cACM7iC,KAAKqiC,QACPriC,KAAKqiC,OAAOS,UAEd,MAAMC,EAAUhE,SAASiE,eAAehjC,KAAKJ,MAE7CI,KAAKqiC,OAAS,IAAI,GAAA7D,WAAWuE,EAAS,CACpCE,eAAgBjjC,KAAKJ,KACrBmgC,OAAQ//B,KAAK+/B,OACbmD,kBAAkB,EAGlBC,aAAa,EACb9C,MAAO,aAET14B,OAAO3H,KAAKJ,KAAO,UAAYI,KAAKqiC,OACpCriC,KAAKqiC,OAAOe,SAASpjC,KAAK8hC,WAC1B9hC,KAAK8gC,UAAW,EAEZ,IAAM9gC,KAAKJ,OAAS+H,OAAOq6B,SAAS7a,MACtC4b,EAAQM,iBACRrjC,KAAK4gC,SAAU,GAEf5gC,KAAK4gC,SAAU,IAIrB0C,MAAO,CACLvD,OAAQ,SAAUwD,GACZvhC,KAAKC,UAAUshC,KAASvhC,KAAKC,UAAUjC,KAAKqiC,OAAOtC,SACrD//B,KAAK6iC,gBAKXlD,QAAS,WACP3/B,KAAKwjC,WAAU,WACbxjC,KAAK6iC,mBCzMX,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,2CFkDA,IACEjjC,KAAM,eACNC,KAAM,WACJ,MAAO,CACLmgC,cAAe,KACfQ,UAAU,EACVC,SAAU,KACVgD,WAAY,OAGhBpjC,WAAY,CACVqjC,eADU,GAEVC,WAAU,MAEZjE,QAAS,CACPn/B,WAAWkE,GACTzE,KAAKwgC,UAAW,EAChBxgC,KAAKygC,SAAW,KAChB,MAAM77B,EAAQ,CACZowB,QAASh1B,KAAKP,QACdk3B,KAAM32B,KAAK22B,MAEb,IACE32B,KAAKygC,eAAiBzgC,KAAKC,OAAOO,SAAS,4BAA6B,CACtEoE,MAAOA,EACP2H,IAAK,CAAC,CAAET,OAAQ,OAAQwE,MAAO,UAEjCtQ,KAAKwgC,UAAW,EAChB,GAAQ5/B,IAAI,WAAYZ,KAAKygC,UAC7B,MAAOh8B,GACP,GAAQH,MAAMG,GARhB,QAUEzE,KAAKwgC,UAAW,EAChBxgC,KAAK4jC,WAGTrjC,eACEP,KAAKggC,cAAgBhgC,KAAKigC,OAAOr8B,OAAOs8B,eACxClgC,KAAKC,OACFO,SAAS,oBAAqB,CAC7BkD,MAAO,CAAE6hB,MAAOvlB,KAAKigC,OAAOr8B,OAAOs8B,gBACnCpwB,QAAS,CAAEC,WAAW,EAAOC,KAAK,KAEnC7L,MAAK,KACJnE,KAAKyjC,WAAa,QAEtBzjC,KAAKC,OACFO,SAAS,oBAAqB,CAC7BkD,MAAO,CAAE6hB,MAAOvlB,KAAKigC,OAAOr8B,OAAOs8B,gBACnCpwB,QAAS,CAAEC,WAAW,EAAOC,KAAK,KAEnC7L,KAAK,GAAQvD,OAGpBd,SAAU,CACRL,QAAS,WACP,OAAOO,KAAKC,OAAOE,QAAQ,0BAE7Bw2B,KAAM,CACJ7zB,MACE,OAAwB,OAApB9C,KAAKyjC,WACAzjC,KAAKmgC,OAASngC,KAAKmgC,OAAOxJ,KAAO,GAEjC32B,KAAKyjC,YAGhBxgC,IAAI4gC,GACF7jC,KAAKyjC,WAAaI,IAGtBhE,QAAS,WACP,MAAM1vB,EAASnQ,KAAKC,OAAOE,QAAQ,mBAAmB,CACpDyD,OAAQ,GACRF,MAAO,CAAE6hB,MAAOvlB,KAAKigC,OAAOr8B,OAAOs8B,kBAG/BL,EAAU1vB,EAAO4vB,OAAS/9B,KAAK0N,MAAMS,EAAO4vB,QAAU,GAC5D,OAAOF,EAAQ36B,QAAQ4+B,GACd9jC,KAAKggC,eAAiBhgC,KAAKP,SAA0B,OAAdqkC,EAAEhE,YAAuBgE,EAAEhE,UAAY,IAAIiE,WAAW,QAGxG5D,OAAQ,WACN,MAAMhwB,EAASnQ,KAAKC,OAAOE,QAAQ,mBAAmB,CACpDyD,OAAQ,GACRF,MAAO,CAAE6hB,MAAOvlB,KAAKigC,OAAOr8B,OAAOs8B,kBAErC,OAAO/vB,EAASA,EAAOgwB,OAAS,KAGpCV,QAASl/B,iBACPP,KAAK4jC,WG9IT,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,U,kFCIOxF,MAAM,a,IACJA,MAAM,iB,IACJA,MAAM,oB,YAEP,wBAAoD,UAA5CmC,SAAA,GAAS37B,MAAM,IAAG,qBAAiB,K,8BAIxCw5B,MAAM,iB,IAIJA,MAAM,c,oBAMJA,MAAM,c,YACT,wBAA8D,SAAvDA,MAAM,+BAA8B,eAAW,K,YAkBhE,wBAGM,OAHDA,MAAM,iBAAe,EACxB,wBAAuB,OAAlBwB,GAAG,YACR,wBAA+B,OAA1BA,GAAG,qBAFV,K,+FArCF,wBAyCM,MAzCN,GAyCM,EAxCJ,wBAmCM,MAnCN,GAmCM,EAlCJ,wBAsBM,MAtBN,GAsBM,uBArBJ,wBAIS,U,qCAJQ,EAAAoE,QAAO,IAAxB,CACE,yBACA,wBAA6E,iCAAzD,EAAA/C,IAALgD,K,kBAAf,wBAA6E,UAA9C3hC,IAAK2hC,EAAUr/B,MAAOq/B,GAAG,SAAK,qBAAGA,GAAC,SAAjE,4BACA,wBAAmF,iCAA/D,EAAAvgC,OAALugC,K,kBAAf,wBAAmF,UAAjD3hC,IAAK2hC,EAAUr/B,MAAOq/B,GAAG,YAAQ,qBAAGA,GAAC,SAAvE,OAHF,sBAAiB,EAAAD,YAKjB,wBAEM,MAFN,IAEM,qBADD,EAAAA,SAAO,IAEZ,wBAYO,QAZI,SAAM,oBAAE,EAAAnD,QAAA,EAAAA,UAAA,IAAQzC,MAAM,IAAjC,EACE,wBAUM,MAVN,GAUM,EATJ,iBAA6F,GAAzEx5B,MAAO,EAAA/E,K,gCAAA,EAAAA,KAAI,GAAEugC,KAAK,OAAOC,MAAM,SAAS,YAAU,KAAK,YAAU,OAArF,mBACA,wBAAsB,iCAAd,EAAA/7B,OAAK,IACb,wBAES,UAFD1E,KAAK,SAAU2gC,SAAU,EAAAA,SAAU98B,KAAK,SAASmB,MAAM,MAAMw5B,MAAM,gCAA3E,qBACK,EAAA8F,WAAS,OAMV,qBAJJ,wBAGM,MAHN,GAGM,CAFJ,IAEI,qBADJ,wBAAwC,SAAjC9F,MAAM,W,qCAAoB,EAAA7xB,IAAG,IAApC,yBAAiC,EAAAA,QAFnC,eAAgC,EAAA43B,cAPpC,OAcF,wBAUM,aATJ,wBAQC,WARI,6DAKG,qBAAG,EAAAH,SAAO,mBAAwB,KAAC,qBAAG,EAAAI,gBAAiB,QAEvE,OAII,K,881QAaJz8B,OAAO08B,eAAiB,GAExB,MAEMC,GAAgB,CAAC/8B,EAAKg9B,EAAS,KACnCpiC,OAAOC,KAAKmF,GAAKlF,QAAO,CAACmiC,EAAKC,KAC5B,MAAMC,EAAMH,EAAO/9B,OAAS+9B,EAAS,IAAM,GAG3C,MAFsB,kBAAXh9B,EAAIk9B,GAAiBtiC,OAAOuC,OAAO8/B,EAAKF,GAAc/8B,EAAIk9B,GAAIC,EAAMD,IAC1ED,EAAIE,EAAMD,GAAKl9B,EAAIk9B,GACjBD,IACN,IAECG,GAAap9B,IACL,IAARA,EAAqB,QACb,IAARA,EAAsB,aACdV,IAARU,GACQ,OAARA,EAD0B,OAE1BzC,MAAMC,QAAQwC,GAEd,IACApF,OAAOC,KAAKmF,GACTpC,KAAKiE,GACGu7B,GAAUp9B,EAAI6B,MAEtBpE,KAAK,MACR,IAGe,kBAARuC,EAEP,IACApF,OAAOC,KAAKmF,GACTpC,KAAK7C,GACI,IAAGA,OAASqiC,GAAUp9B,EAAIjF,QAEnC0C,KAAK,MACR,IAGGhD,KAAKC,UAAUsF,GAKxB,SAASq9B,GAAOr9B,GACd,MAAM4I,EAAS,GAGf,IAAK,MAAM00B,KAAct9B,EAAK,CAE5B,MAAMu9B,EAAQD,EAAWE,MAAM,KAG/B,IAAIC,EAAS70B,EACb,MAAO20B,EAAMt+B,OAAS,EAAG,CACvB,MAAMy+B,EAAOH,EAAMI,QACnBF,EAASA,EAAOC,GAAQD,EAAOC,IAAS,GAI1CD,EAAOF,EAAM,IAAMv9B,EAAIs9B,GAGzB,OAAO10B,EArBTxI,OAAOg9B,UAAYA,GAwBnB,QACE9kC,KAAM,WACJ,MAAO,CACLohC,GAAI,GACJv9B,MAAO,GACPsgC,QAAS,GACTI,eAAgB,GAChBtD,UAAU,EACVjhC,KAAM,KACNslC,WAAY,GACZ7gC,MAAO,GACPD,SAAU,GACVkI,IAAK,OACL43B,SAAS,IAGbb,MAAO,CACLU,QAAS,SAAUT,EAAK6B,GACtB,GAAQxkC,IAAI,iBAAkB2iC,EAAK6B,GACnC,MAAM1hC,EAAQ,IAAK1D,KAAKigC,OAAOv8B,MAAOsgC,QAAST,GAC/CvjC,KAAKqlC,QAAQC,QAAQ,CAAE5hC,MAAAA,IACvB1D,KAAK6iC,cACL7iC,KAAKulC,uBAEP1lC,KAAM,SAAU0jC,EAAK6B,GACnB,GAAQxkC,IAAI,cAAe2iC,EAAK6B,GAChC,IACE,GAAIpjC,KAAKC,UAAUD,KAAK0N,MAAM6zB,MAAUvhC,KAAKC,UAAUD,KAAK0N,MAAM01B,IAAU,CAC1E,MAAMtB,EAAI9hC,KAAKC,UAAUD,KAAK0N,MAAM6zB,GAAM,KAAM,GAC1Ch8B,EAAMvF,KAAK0N,MAAM6zB,GACjB7/B,EAAQ,IAAK1D,KAAKigC,OAAOv8B,MAAO7D,KAAMmC,KAAKC,UAAUsF,IAC3DvH,KAAKH,KAAOikC,EACZ9jC,KAAKqlC,QAAQC,QAAQ,CAAE5hC,MAAAA,IACvB,IAAI8hC,EAAW,IAAKj+B,EAAI3C,SAAU2C,EAAI7D,SAAU6D,EAAI3D,QACpD4hC,EAAWZ,GAAOY,GACdxlC,KAAKqiC,QAAQriC,KAAKqiC,OAAOe,SAASoC,GAExCxlC,KAAKsE,MAAQ,KACb,MAAOG,GACPzE,KAAKsE,MAAQG,IAGjB8H,IAAK,SAAUg3B,EAAK6B,GAClB,GAAQxkC,IAAI,YAAa2iC,EAAK6B,GACf,OAAXA,GACFplC,KAAKylC,iBAGTphC,SAAU,SAAUk/B,EAAK6B,GACvBplC,KAAK0lC,eAAetC,SAASG,GAC7BvjC,KAAK0lC,eAAenD,YAGxBziC,SAAU,CACRL,QAAS,WACP,OAAOO,KAAKC,OAAOE,QAAQ,0BAE7B+jC,UAAW,WACT,OAAIlkC,KAAKihC,GAAG0E,SAAS3lC,KAAKgkC,SACnBhkC,KAAKP,QAGD,mBAFA,oCAKPO,KAAK0D,MAAMiiC,SAAS3lC,KAAKgkC,SACpB,YAEF,kBAETzD,SAAU,WACR,SAAIvgC,KAAK8gC,WAAY9gC,KAAKsE,OAAUtE,KAAKgkC,YAGpChkC,KAAKP,UAAWO,KAAKihC,GAAG0E,SAAS3lC,KAAKgkC,YAM/CtE,QAAS,CACP+F,gBAEE,GADA,GAAQ7kC,IAAI,gBAAiBZ,KAAKH,MACgB,UAA9C,GAAeG,KAAKgkC,SAAS4B,aAA0B,CACzD5lC,KAAKmkC,SAAU,EACf,IAAIzgC,EAAQ1B,KAAK0N,MAAM1N,KAAKC,UAAUjC,KAAKqiC,OAAOC,aAC9C1+B,EAAS,GACb,MAAMy7B,EAAQ,GAAer/B,KAAKgkC,SAAS6B,WAC3C,GAAIxG,EAAO,CACT,MAAMyG,EAAOzG,EAAM,GACnB,IAAK,IAAIj2B,KAAK08B,EAAK90B,OAAQ,CAEzB,MAAM+0B,EAAQD,EAAK90B,OAAO5H,GAC1BxF,EAAOkiC,EAAK90B,OAAO5H,IAAM1F,EAAMqiC,UACxBriC,EAAMqiC,GAEfriC,EAAQ4gC,GAAc5gC,GAExB1D,KAAKH,KAAOmC,KAAKC,UAAU,CAAEyB,MAAOA,EAAOE,OAAQA,GAAU,KAAM,QAC9D,GAAkD,QAA9C,GAAe5D,KAAKgkC,SAAS4B,aAAwB,CAC9D5lC,KAAKmkC,SAAU,EACf,IAAIv/B,EAAQ5C,KAAK0N,MAAM1N,KAAKC,UAAUjC,KAAKqiC,OAAOC,aAClD,MAAM/1B,EAAM,CAAC,CAAET,OAAQ9L,KAAKuM,IAAK+D,MAAO,QACxCtQ,KAAKH,KAAOmC,KAAKC,UAAU,CAAE2C,MAAOA,EAAO2H,IAAKA,GAAO,KAAM,GAE/D,IAAI1M,EAAOmC,KAAK0N,MAAM1N,KAAKC,UAAUjC,KAAKqiC,OAAOC,aACjDtiC,KAAKokC,eAAiBjiC,OAAOC,KAAKvC,GAC/BsF,KAAI,SAAU7C,EAAKijB,GAClB,MAAO,KAAOjjB,EAAM,IAAMqiC,GAAU9kC,EAAKyC,OAE1C0C,KAAK,KAEV69B,cACE,GAAQjiC,IAAI,cAAe8G,KAAK7H,MAChC,MAAMkjC,EAAUhE,SAASiE,eAAe,UACnCD,IACD/iC,KAAKqiC,QACPriC,KAAKqiC,OAAOS,UAGd9iC,KAAKqiC,OAAS,IAAI,GAAA7D,WAAWuE,EAAS,CACpCE,eAAgB,SAChBlD,OAAQ,GAAe//B,KAAKgkC,SAASgC,gBAAkB,GACvD9C,kBAAkB,EAClB+C,oBAAoB,EACpBC,mBAAmB,EACnB/C,aAAa,EACb9C,MAAO,aAETrgC,KAAKqiC,OAAOjzB,GAAG,SAAUpP,KAAKylC,eAE9B99B,OAAO,UAAY3H,KAAKqiC,OACxBriC,KAAK8gC,UAAW,IAElBD,OAAQtgC,eAAgBkE,GACtBA,EAAE09B,iBACLniC,KAAK0lC,eAAetC,SAAS,IAC1BpjC,KAAKC,OACFO,SAASR,KAAKgkC,QAAShiC,KAAK0N,MAAM1P,KAAKH,OACvCsE,MAAMgiC,GAASnmC,KAAKqE,SAAW8hC,IAC/B3hC,OAAO2hC,GAASnmC,KAAKsE,MAAQ6hC,KAElCZ,sBACE,MAAMxC,EAAUhE,SAASiE,eAAe,kBACnCD,IACD/iC,KAAK0lC,gBACP1lC,KAAK0lC,eAAe5C,UAGtB9iC,KAAK0lC,eAAiB,IAAI,GAAAlH,WAAWuE,EAAS,CAC5CE,eAAgB,iBAChBlD,OAAQ,GAAe//B,KAAKgkC,SAAS,gBAAkB,GACvDd,kBAAkB,EAClB+C,oBAAoB,EACpBC,mBAAmB,EACnB/C,aAAa,EACb9C,MAAO,aAETrgC,KAAK0lC,eAAenD,UAEpB56B,OAAO,kBAAoB3H,KAAK0lC,kBAGpCjG,QAASl/B,iBACP,GAAQK,IAAI,WACZ+G,OAAO1H,OAASD,KAAKC,QAEvBI,WAAY,CACVsjC,WAAU,MAGZhE,QAAS,WACP,GAAQ/+B,IAAI,WACZZ,KAAKihC,GAAK9+B,OAAOC,KAAKpC,KAAKC,OAAO,aAAaiF,QAAQ5C,GAAQA,EAAI8jC,MAAM,aACzEpmC,KAAK0D,MAAQvB,OAAOC,KAAKpC,KAAKC,OAAO,aAAaiF,QAAQ5C,GAAQA,EAAI8jC,MAAM,WAC5EpmC,KAAKgkC,QAAUhkC,KAAKigC,OAAOv8B,MAAMsgC,QACjC,MAAMnkC,EAAOmC,KAAK0N,MAAM1P,KAAKigC,OAAOv8B,MAAM7D,MAAQ,MAC5CikC,EAAI9hC,KAAKC,UAAUpC,EAAM,KAAM,GACrC,QAAiBgH,IAAbhH,EAAK0M,IACP,IAAK,MAAMA,KAAO1M,EAAK0M,IACrB,GAAQ3L,IAAI,MAAO2L,GACD,QAAdA,EAAI+D,QACNtQ,KAAKuM,IAAMA,EAAIT,QAKrB9L,KAAKH,KAAOikC,EACZ9jC,KAAK6iC,cACL7iC,KAAKulC,wBCvTT,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,U,kFCOOnH,MAAM,a,IACJA,MAAM,kB,IAINA,MAAM,iB,YAEP,wBAAsB,UAAlB,iBAAa,K,6CAMb,wBAAM,qB,YAKV,wBAAc,UAAV,SAAK,K,mHAlBf,wBA0BM,MA1BN,GA0BM,EAzBJ,wBAGM,MAHN,GAGM,uBAFJ,wBAAsE,SAA/D36B,KAAK,O,qCAAgB,EAAAw+B,OAAM,GAAEoE,YAAY,qBAAhD,yBAA4B,EAAApE,WAC5B,wBAA2C,UAAlC,QAAK,eAAE,EAAAA,OAAM,KAAO,YAE/B,wBAoBM,MApBN,GAoBM,EAnBJ,wBAUM,YATJ,KASI,oBARJ,wBAOM,iCAPwD,EAAAqE,cAAY,CAApC1hC,EAAO2hC,M,kBAA7C,wBAOM,OAPM3G,GAAI2G,EAAmEjkC,IAAKikC,GAAxF,CACaA,EAAaC,cAAcb,SAAS,EAAA1D,OAAOuE,iBAA3C,kBAAX,wBAKM,WAJJ,wBAEe,aAFV,wBAA4H,gBAApH,wBAA0D,KAAhDC,KAAI,IAAQF,IAAtB,qBAAuCA,GAAY,OAAiE,2CAAvD3hC,EAAM8hC,aAAU,qBAAM9hC,EAAM+hC,iBAAe,MAEtG,qBAFkH,QAE7I,qBAAG/hC,EAAMgiC,WAAS,KACN,OAJF,gCADF,kBASF,wBAOM,YANJ,KAMI,oBALJ,wBAIM,iCAJ+B,EAAAN,cAAY,CAApC1hC,EAAO2hC,M,kBAApB,wBAIM,OAJoDjkC,IAAKikC,GAAY,CAC9DA,EAAaC,cAAcb,SAAS,EAAA1D,OAAOuE,iBAA3C,kBAAX,wBAEM,WADJ,wBAA0D,KAAhDC,KAAI,IAAQF,IAAtB,qBAAuCA,GAAY,UADrD,oCADF,aAQN,wBAA6B,iCAArB,EAAAM,cAAY,IAApB,I,kiwDAKF,IACEjnC,KAAM,OACNC,KAAM,WACJ,MAAO,CACLymC,aADK,GAELrE,OAAQ,KAGZniC,SAAU,GACVwjC,MAAO,IClDT,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,IAAQ,CAAC,YAAY,qBAEzF,UCDA,MAAMwD,IAAgBC,EAAAA,GAAAA,MAChBC,GAAS,CACb,CAAExjC,KAAM,IAAKyjC,UAAWC,IACxB,CAAE1jC,KAAM,YAAayjC,UAAWE,IAChC,CAAE3jC,KAAM,WAAY5D,KAAM,cAAeqnC,UAAWG,IACpD,CAAE5jC,KAAM,2BAA4B5D,KAAM,gBAAiBqnC,UAAWI,IACtE,CAAE7jC,KAAM,aAAc5D,KAAM,aAAcqnC,UAAWK,IACrD,CAAE9jC,KAAM,QAAS5D,KAAM,OAAQqnC,UAAWM,KAGtCC,IAASC,EAAAA,GAAAA,IAAa,CAC1BC,QAASZ,GACTE,OAAAA,KAGF,U,uBCjBAr/B,OAAOggC,SAAWnK,GAIlB71B,OAAOigC,YAAc,WACjB,MAAM/gB,GAAMghB,EAAAA,EAAAA,WAAUC,GACtBjhB,EAAIkhB,OAAOC,iBAAiB5F,aAAc,EAC1Cvb,EAAIohB,IAAIzK,IAAOyK,IAAIT,IAAQS,IAAIC,MAAQC,MAAM,U,wJCZ7CC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBzhC,IAAjB0hC,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CACjD1I,GAAI0I,EACJI,QAAQ,EACRF,QAAS,IAUV,OANAG,EAAoBL,GAAUM,KAAKH,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG3EI,EAAOC,QAAS,EAGTD,EAAOD,QAIfH,EAAoBQ,EAAIF,E,WC5BxBN,EAAoBS,KAAO,WAC1B,MAAM,IAAI9gC,MAAM,mC,cCDjBqgC,EAAoBU,KAAO,G,cCA3B,IAAIC,EAAW,GACfX,EAAoBY,EAAI,SAAS94B,EAAQ+4B,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,EAAAA,EACnB,IAASlgC,EAAI,EAAGA,EAAI4/B,EAASxiC,OAAQ4C,IAAK,CACrC8/B,EAAWF,EAAS5/B,GAAG,GACvB+/B,EAAKH,EAAS5/B,GAAG,GACjBggC,EAAWJ,EAAS5/B,GAAG,GAE3B,IAJA,IAGImgC,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAAS1iC,OAAQgjC,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAajnC,OAAOC,KAAKimC,EAAoBY,GAAGQ,OAAM,SAASnnC,GAAO,OAAO+lC,EAAoBY,EAAE3mC,GAAK4mC,EAASM,OAC3JN,EAASQ,OAAOF,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbP,EAASU,OAAOtgC,IAAK,GACrB,IAAIhF,EAAI+kC,SACEtiC,IAANzC,IAAiB+L,EAAS/L,IAGhC,OAAO+L,EAzBNi5B,EAAWA,GAAY,EACvB,IAAI,IAAIhgC,EAAI4/B,EAASxiC,OAAQ4C,EAAI,GAAK4/B,EAAS5/B,EAAI,GAAG,GAAKggC,EAAUhgC,IAAK4/B,EAAS5/B,GAAK4/B,EAAS5/B,EAAI,GACrG4/B,EAAS5/B,GAAK,CAAC8/B,EAAUC,EAAIC,I,cCJ/Bf,EAAoBsB,EAAI,SAASlB,GAChC,IAAImB,EAASnB,GAAUA,EAAOoB,WAC7B,WAAa,OAAOpB,EAAO,YAC3B,WAAa,OAAOA,GAErB,OADAJ,EAAoByB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,G,cCLRvB,EAAoByB,EAAI,SAAStB,EAAS9B,GACzC,IAAI,IAAIpkC,KAAOokC,EACX2B,EAAoBz9B,EAAE87B,EAAYpkC,KAAS+lC,EAAoBz9B,EAAE49B,EAASlmC,IAC5EH,OAAO6nC,eAAexB,EAASlmC,EAAK,CAAE2nC,YAAY,EAAMnnC,IAAK4jC,EAAWpkC,M,cCJ3E+lC,EAAoB6B,EAAI,WACvB,GAA0B,kBAAfziC,WAAyB,OAAOA,WAC3C,IACC,OAAOzH,MAAQ,IAAImqC,SAAS,cAAb,GACd,MAAO1lC,GACR,GAAsB,kBAAXkD,OAAqB,OAAOA,QALjB,G,cCAxB0gC,EAAoBz9B,EAAI,SAASrD,EAAKiG,GAAQ,OAAOrL,OAAOioC,UAAUC,eAAezB,KAAKrhC,EAAKiG,I,cCC/F66B,EAAoBjkC,EAAI,SAASokC,GACX,qBAAX8B,QAA0BA,OAAOC,aAC1CpoC,OAAO6nC,eAAexB,EAAS8B,OAAOC,YAAa,CAAE3lC,MAAO,WAE7DzC,OAAO6nC,eAAexB,EAAS,aAAc,CAAE5jC,OAAO,K,cCLvDyjC,EAAoBmC,IAAM,SAAS/B,GAGlC,OAFAA,EAAOgC,MAAQ,GACVhC,EAAOiC,WAAUjC,EAAOiC,SAAW,IACjCjC,G,cCER,IAAIkC,EAAkB,CACrB,IAAK,GAaNtC,EAAoBY,EAAEO,EAAI,SAASoB,GAAW,OAAoC,IAA7BD,EAAgBC,IAGrE,IAAIC,EAAuB,SAASC,EAA4BjrC,GAC/D,IAKIyoC,EAAUsC,EALV1B,EAAWrpC,EAAK,GAChBkrC,EAAclrC,EAAK,GACnBmrC,EAAUnrC,EAAK,GAGIuJ,EAAI,EAC3B,GAAG8/B,EAAS+B,MAAK,SAASrL,GAAM,OAA+B,IAAxB+K,EAAgB/K,MAAe,CACrE,IAAI0I,KAAYyC,EACZ1C,EAAoBz9B,EAAEmgC,EAAazC,KACrCD,EAAoBQ,EAAEP,GAAYyC,EAAYzC,IAGhD,GAAG0C,EAAS,IAAI76B,EAAS66B,EAAQ3C,GAGlC,IADGyC,GAA4BA,EAA2BjrC,GACrDuJ,EAAI8/B,EAAS1iC,OAAQ4C,IACzBwhC,EAAU1B,EAAS9/B,GAChBi/B,EAAoBz9B,EAAE+/B,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBzB,EAAS9/B,IAAM,EAEhC,OAAOi/B,EAAoBY,EAAE94B,IAG1B+6B,EAAqBxjC,KAAK,qBAAuBA,KAAK,sBAAwB,GAClFwjC,EAAmB17B,QAAQq7B,EAAqBM,KAAK,KAAM,IAC3DD,EAAmB1hC,KAAOqhC,EAAqBM,KAAK,KAAMD,EAAmB1hC,KAAK2hC,KAAKD,I,GC/CvF,IAAIE,EAAsB/C,EAAoBY,OAAEpiC,EAAW,CAAC,MAAM,WAAa,OAAOwhC,EAAoB,UAC1G+C,EAAsB/C,EAAoBY,EAAEmC,I","sources":["webpack://Dyson/./src/App.vue","webpack://Dyson/./src/components/Sidebar.vue","webpack://Dyson/./src/components/Sidebar.vue?a564","webpack://Dyson/./src/App.vue?30d2","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/authz.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/event.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/genesis.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/authz.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/feegrant/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/duration.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/feegrant/v1beta1/feegrant.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/authz.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/cosmos/upgrade/v1beta1/upgrade.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/index.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/rest.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/types/dyson/msgrun.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/types/dyson/tx.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/index.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/types/dyson/schedualed_run.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/types/dyson/script.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/types/dyson/storage.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/index.js","webpack://Dyson/./src/store/generated/org/dyson/names/module/rest.js","webpack://Dyson/./src/store/generated/org/dyson/names/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/org/dyson/names/module/types/names/name.js","webpack://Dyson/./src/store/generated/org/dyson/names/module/types/names/tx.js","webpack://Dyson/./src/store/generated/org/dyson/names/module/index.js","webpack://Dyson/./src/store/generated/org/dyson/names/module/types/names/params.js","webpack://Dyson/./src/store/generated/org/dyson/names/index.js","webpack://Dyson/./src/store/generated/index.js","webpack://Dyson/./src/store/config.js","webpack://Dyson/./src/store/index.js","webpack://Dyson/./src/views/Index.vue","webpack://Dyson/./src/views/Index.vue?365c","webpack://Dyson/./src/views/Relayers.vue","webpack://Dyson/./src/views/Relayers.vue?d402","webpack://Dyson/./src/views/ScriptList.vue","webpack://Dyson/./src/views/ScriptList.vue?45fa","webpack://Dyson/./src/views/ScriptDetail.vue","webpack://Dyson/./src/views/FunctionDetail.vue","webpack://Dyson/./src/views/FunctionDetail.vue?2962","webpack://Dyson/./src/views/ScriptDetail.vue?a71f","webpack://Dyson/./src/views/TxBuilder.vue","webpack://Dyson/./src/views/TxBuilder.vue?4858","webpack://Dyson/./src/views/Docs.vue","webpack://Dyson/./src/views/Docs.vue?eb82","webpack://Dyson/./src/router/index.js","webpack://Dyson/./src/main.js","webpack://Dyson/webpack/bootstrap","webpack://Dyson/webpack/runtime/amd define","webpack://Dyson/webpack/runtime/amd options","webpack://Dyson/webpack/runtime/chunk loaded","webpack://Dyson/webpack/runtime/compat get default export","webpack://Dyson/webpack/runtime/define property getters","webpack://Dyson/webpack/runtime/global","webpack://Dyson/webpack/runtime/hasOwnProperty shorthand","webpack://Dyson/webpack/runtime/make namespace object","webpack://Dyson/webpack/runtime/node module decorator","webpack://Dyson/webpack/runtime/jsonp chunk loading","webpack://Dyson/webpack/startup"],"sourcesContent":["<template>\n  <div v-if=\"initialized\">\n    <SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n    <SpLayout>\n      <template v-slot:sidebar>\n        <Sidebar />\n      </template>\n      <template v-slot:content>\n        <router-view />\n      </template>\n    </SpLayout>\n  </div>\n</template>\n\n<style>\nbody {\n  margin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\n//import '@picocss/pico'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n  components: {\n    Sidebar,\n  },\n  data() {\n    return {\n      initialized: false,\n    }\n  },\n  computed: {\n    hasWallet() {\n      return this.$store.hasModule(['common', 'wallet'])\n    },\n  },\n  async created() {\n    await this.$store.dispatch('common/env/init')\n    this.initialized = true\n  },\n  errorCaptured(err) {\n    console.log(err)\n    return false\n  },\n}\n</script>\n","<template>\n  <SpSidebar v-on:sidebar-open=\"sidebarOpen = true\" v-on:sidebar-close=\"sidebarOpen = false\">\n    <template v-slot:default>\n      <SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n      <SpLinkIcon link=\"/txbuilder\" text=\"Tx Builder\" icon=\"Form\" />\n      <SpLinkIcon v-if=\"address\" v-bind:link=\"'/scripts/' + address\" text=\"Your Script\" icon=\"Docs\" />\n      <SpLinkIcon v-if=\"!address\" text=\"Your script (unlock wallet)\" icon=\"Docs\" />\n      <SpLinkIcon link=\"/docs\" text=\"Documentation\" icon=\"Docs\" />\n    </template>\n    <template v-slot:footer>\n      <SpStatusAPI :showText=\"sidebarOpen\" />\n      <SpStatusRPC :showText=\"sidebarOpen\" />\n      <SpStatusWS :showText=\"sidebarOpen\" />\n    </template>\n  </SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n  data() {\n    return {\n      sidebarOpen: true,\n    }\n  },\n  computed: {\n    hasWallet() {\n      return this.$store.hasModule(['common', 'wallet'])\n    },\n    address: function () {\n      return this.$store.getters['common/wallet/address']\n    },\n  },\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=3fce54b4\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=33192345\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=33192345&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/authz/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGrants\n         * @summary Returns list of `Authorization`, granted to the grantee by the granter.\n         * @request GET:/cosmos/authz/v1beta1/grants\n         */\n        this.queryGrants = (query, params = {}) => this.request({\n            path: `/cosmos/authz/v1beta1/grants`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseGenericAuthorization = { msg: '' };\nexport const GenericAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.msg !== '') {\n            writer.uint32(10).string(message.msg);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenericAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msg = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenericAuthorization };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = String(object.msg);\n        }\n        else {\n            message.msg = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msg !== undefined && (obj.msg = message.msg);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenericAuthorization };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = object.msg;\n        }\n        else {\n            message.msg = '';\n        }\n        return message;\n    }\n};\nconst baseGrant = {};\nexport const Grant = {\n    encode(message, writer = Writer.create()) {\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrant };\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authorization !== undefined && (obj.authorization = message.authorization ? Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrant };\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Grant } from '../../../cosmos/authz/v1beta1/authz';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseMsgGrant = { granter: '', grantee: '' };\nexport const MsgGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.grant !== undefined) {\n            Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.grant = Grant.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromJSON(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.grant !== undefined && (obj.grant = message.grant ? Grant.toJSON(message.grant) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromPartial(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgExecResponse = {};\nexport const MsgExecResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.results) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.results.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.results) {\n            obj.results = message.results.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.results = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgExec = { grantee: '' };\nexport const MsgExec = {\n    encode(message, writer = Writer.create()) {\n        if (message.grantee !== '') {\n            writer.uint32(10).string(message.grantee);\n        }\n        for (const v of message.msgs) {\n            Any.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grantee = reader.string();\n                    break;\n                case 2:\n                    message.msgs.push(Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        if (message.msgs) {\n            obj.msgs = message.msgs.map((e) => (e ? Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.msgs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgGrantResponse = {};\nexport const MsgGrantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    }\n};\nconst baseMsgRevoke = { granter: '', grantee: '', msgTypeUrl: '' };\nexport const MsgRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(26).string(message.msgTypeUrl);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeResponse = {};\nexport const MsgRevokeResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Grant(request) {\n        const data = MsgGrant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Grant', data);\n        return promise.then((data) => MsgGrantResponse.decode(new Reader(data)));\n    }\n    Exec(request) {\n        const data = MsgExec.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Exec', data);\n        return promise.then((data) => MsgExecResponse.decode(new Reader(data)));\n    }\n    Revoke(request) {\n        const data = MsgRevoke.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Revoke', data);\n        return promise.then((data) => MsgRevokeResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgExec } from \"./types/cosmos/authz/v1beta1/tx\";\nimport { MsgRevoke } from \"./types/cosmos/authz/v1beta1/tx\";\nimport { MsgGrant } from \"./types/cosmos/authz/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.authz.v1beta1.MsgExec\", MsgExec],\n    [\"/cosmos.authz.v1beta1.MsgRevoke\", MsgRevoke],\n    [\"/cosmos.authz.v1beta1.MsgGrant\", MsgGrant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgExec: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgExec\", value: MsgExec.fromPartial(data) }),\n        msgRevoke: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgRevoke\", value: MsgRevoke.fromPartial(data) }),\n        msgGrant: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgGrant\", value: MsgGrant.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseEventGrant = { msgTypeUrl: '', granter: '', grantee: '' };\nexport const EventGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(18).string(message.msgTypeUrl);\n        }\n        if (message.granter !== '') {\n            writer.uint32(26).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(34).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 3:\n                    message.granter = reader.string();\n                    break;\n                case 4:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventGrant };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventGrant };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\nconst baseEventRevoke = { msgTypeUrl: '', granter: '', grantee: '' };\nexport const EventRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(18).string(message.msgTypeUrl);\n        }\n        if (message.granter !== '') {\n            writer.uint32(26).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(34).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 3:\n                    message.granter = reader.string();\n                    break;\n                case 4:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventRevoke };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventRevoke };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.authorization) {\n            GrantAuthorization.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization.push(GrantAuthorization.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        if (object.authorization !== undefined && object.authorization !== null) {\n            for (const e of object.authorization) {\n                message.authorization.push(GrantAuthorization.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.authorization) {\n            obj.authorization = message.authorization.map((e) => (e ? GrantAuthorization.toJSON(e) : undefined));\n        }\n        else {\n            obj.authorization = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        if (object.authorization !== undefined && object.authorization !== null) {\n            for (const e of object.authorization) {\n                message.authorization.push(GrantAuthorization.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseGrantAuthorization = { granter: '', grantee: '' };\nexport const GrantAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrantAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrantAuthorization };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.authorization !== undefined && (obj.authorization = message.authorization ? Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrantAuthorization };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { GenericAuthorization } from \"./module/types/cosmos/authz/v1beta1/authz\";\nimport { Grant } from \"./module/types/cosmos/authz/v1beta1/authz\";\nimport { EventGrant } from \"./module/types/cosmos/authz/v1beta1/event\";\nimport { EventRevoke } from \"./module/types/cosmos/authz/v1beta1/event\";\nimport { GrantAuthorization } from \"./module/types/cosmos/authz/v1beta1/genesis\";\nexport { GenericAuthorization, Grant, EventGrant, EventRevoke, GrantAuthorization };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Grants: {},\n        _Structure: {\n            GenericAuthorization: getStructure(GenericAuthorization.fromPartial({})),\n            Grant: getStructure(Grant.fromPartial({})),\n            EventGrant: getStructure(EventGrant.fromPartial({})),\n            EventRevoke: getStructure(EventRevoke.fromPartial({})),\n            GrantAuthorization: getStructure(GrantAuthorization.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getGrants: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Grants[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.authz.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryGrants({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGrants(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryGrants({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Grants', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGrants', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGrants']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGrants', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgExec({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgExec(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgExec:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgExec:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevoke({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevoke(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevoke:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevoke:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgExec({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgExec(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgExec:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgExec:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevoke({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevoke(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevoke:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevoke:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => (e ? SendEnabled.toJSON(e) : undefined));\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined && (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '', name: '', symbol: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(50).string(message.symbol);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.symbol = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => (e ? DenomUnit.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        message.name !== undefined && (obj.name = message.name);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => (e ? Output.toJSON(e) : undefined));\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: MsgSend.fromPartial(data) }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: MsgMultiSend.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseSendAuthorization = {};\nexport const SendAuthorization = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.spendLimit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => (e ? Balance.toJSON(e) : undefined));\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => (e ? Metadata.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SendAuthorization } from \"./module/types/cosmos/bank/v1beta1/authz\";\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { SendAuthorization, Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            SendAuthorization: getStructure(SendAuthorization.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryTotalSupply({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = { sender: '', invariantModuleName: '', invariantRoute: '' };\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined && object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined && (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined && (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined && object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVerifyInvariantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVerifyInvariantResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: MsgVerifyInvariant.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = { delegatorAddress: '', withdrawAddress: '' };\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: MsgFundCommunityPool.fromPartial(data) }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: MsgWithdrawValidatorCommission.fromPartial(data) }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: MsgSetWithdrawAddress.fromPartial(data) }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: MsgWithdrawDelegatorReward.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = { communityTax: '', baseProposerReward: '', bonusProposerReward: '', withdrawAddrEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined && (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined && (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined && (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined && (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined && (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined && (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => (e ? ValidatorSlashEvent.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = { title: '', description: '', recipient: '' };\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = { previousPeriod: 0, stake: '', height: 0 };\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined && (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = { title: '', description: '', recipient: '', amount: '', deposit: '' };\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = { delegatorAddress: '', withdrawAddress: '' };\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = { validatorAddress: '' };\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined && (obj.accumulated = message.accumulated ? ValidatorAccumulatedCommission.toJSON(message.accumulated) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = { validatorAddress: '', period: 0 };\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorHistoricalRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorCurrentRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = { delegatorAddress: '', validatorAddress: '' };\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfoRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfoRecord };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined && (obj.startingInfo = message.startingInfo ? DelegatorStartingInfo.toJSON(message.startingInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfoRecord };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = { validatorAddress: '', height: 0, period: 0 };\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEventRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEventRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEventRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined && object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined && (obj.feePool = message.feePool ? FeePool.toJSON(message.feePool) : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => (e ? DelegatorWithdrawInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined && (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => (e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => (e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => (e ? DelegatorStartingInfoRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => (e ? ValidatorSlashEventRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined && object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined && (obj.evidence = message.evidence ? Any.toJSON(message.evidence) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: MsgSubmitEvidence.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined && object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined && (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined && object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/feegrant/v1beta1/feegrant.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllowance\n         * @summary Allowance returns fee granted to the grantee by the granter.\n         * @request GET:/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}\n         */\n        this.queryAllowance = (granter, grantee, params = {}) => this.request({\n            path: `/cosmos/feegrant/v1beta1/allowance/${granter}/${grantee}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllowances\n         * @summary Allowances returns all the grants for address.\n         * @request GET:/cosmos/feegrant/v1beta1/allowances/{grantee}\n         */\n        this.queryAllowances = (grantee, query, params = {}) => this.request({\n            path: `/cosmos/feegrant/v1beta1/allowances/${grantee}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.feegrant.v1beta1';\nconst baseMsgGrantAllowance = { granter: '', grantee: '' };\nexport const MsgGrantAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAllowance };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAllowanceResponse = {};\nexport const MsgGrantAllowanceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAllowanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantAllowanceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantAllowanceResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeAllowance = { granter: '', grantee: '' };\nexport const MsgRevokeAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAllowance };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAllowanceResponse = {};\nexport const MsgRevokeAllowanceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    GrantAllowance(request) {\n        const data = MsgGrantAllowance.encode(request).finish();\n        const promise = this.rpc.request('cosmos.feegrant.v1beta1.Msg', 'GrantAllowance', data);\n        return promise.then((data) => MsgGrantAllowanceResponse.decode(new Reader(data)));\n    }\n    RevokeAllowance(request) {\n        const data = MsgRevokeAllowance.encode(request).finish();\n        const promise = this.rpc.request('cosmos.feegrant.v1beta1.Msg', 'RevokeAllowance', data);\n        return promise.then((data) => MsgRevokeAllowanceResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgRevokeAllowance } from \"./types/cosmos/feegrant/v1beta1/tx\";\nimport { MsgGrantAllowance } from \"./types/cosmos/feegrant/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", MsgRevokeAllowance],\n    [\"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", MsgGrantAllowance],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgRevokeAllowance: (data) => ({ typeUrl: \"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", value: MsgRevokeAllowance.fromPartial(data) }),\n        msgGrantAllowance: (data) => ({ typeUrl: \"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", value: MsgGrantAllowance.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.feegrant.v1beta1';\nconst baseBasicAllowance = {};\nexport const BasicAllowance = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.spendLimit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriodicAllowance = {};\nexport const PeriodicAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.basic !== undefined) {\n            BasicAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== undefined) {\n            Duration.encode(message.period, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.periodSpendLimit) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.periodCanSpend) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.periodReset !== undefined) {\n            Timestamp.encode(toTimestamp(message.periodReset), writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.basic = BasicAllowance.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.period = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.periodSpendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.periodCanSpend.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.periodReset = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = BasicAllowance.fromJSON(object.basic);\n        }\n        else {\n            message.basic = undefined;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Duration.fromJSON(object.period);\n        }\n        else {\n            message.period = undefined;\n        }\n        if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n            for (const e of object.periodSpendLimit) {\n                message.periodSpendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n            for (const e of object.periodCanSpend) {\n                message.periodCanSpend.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = fromJsonTimestamp(object.periodReset);\n        }\n        else {\n            message.periodReset = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.basic !== undefined && (obj.basic = message.basic ? BasicAllowance.toJSON(message.basic) : undefined);\n        message.period !== undefined && (obj.period = message.period ? Duration.toJSON(message.period) : undefined);\n        if (message.periodSpendLimit) {\n            obj.periodSpendLimit = message.periodSpendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodSpendLimit = [];\n        }\n        if (message.periodCanSpend) {\n            obj.periodCanSpend = message.periodCanSpend.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodCanSpend = [];\n        }\n        message.periodReset !== undefined && (obj.periodReset = message.periodReset !== undefined ? message.periodReset.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = BasicAllowance.fromPartial(object.basic);\n        }\n        else {\n            message.basic = undefined;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Duration.fromPartial(object.period);\n        }\n        else {\n            message.period = undefined;\n        }\n        if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n            for (const e of object.periodSpendLimit) {\n                message.periodSpendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n            for (const e of object.periodCanSpend) {\n                message.periodCanSpend.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = object.periodReset;\n        }\n        else {\n            message.periodReset = undefined;\n        }\n        return message;\n    }\n};\nconst baseAllowedMsgAllowance = { allowedMessages: '' };\nexport const AllowedMsgAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.allowedMessages) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowedMessages.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n            for (const e of object.allowedMessages) {\n                message.allowedMessages.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        if (message.allowedMessages) {\n            obj.allowedMessages = message.allowedMessages.map((e) => e);\n        }\n        else {\n            obj.allowedMessages = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n            for (const e of object.allowedMessages) {\n                message.allowedMessages.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseGrant = { granter: '', grantee: '' };\nexport const Grant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BasicAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { PeriodicAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { AllowedMsgAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { Grant } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nexport { BasicAllowance, PeriodicAllowance, AllowedMsgAllowance, Grant };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Allowance: {},\n        Allowances: {},\n        _Structure: {\n            BasicAllowance: getStructure(BasicAllowance.fromPartial({})),\n            PeriodicAllowance: getStructure(PeriodicAllowance.fromPartial({})),\n            AllowedMsgAllowance: getStructure(AllowedMsgAllowance.fromPartial({})),\n            Grant: getStructure(Grant.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getAllowance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Allowance[JSON.stringify(params)] ?? {};\n        },\n        getAllowances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Allowances[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.feegrant.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryAllowance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllowance(key.granter, key.grantee)).data;\n                commit('QUERY', { query: 'Allowance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllowance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllowance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllowance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllowances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllowances(key.grantee, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryAllowances(key.grantee, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Allowances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllowances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllowances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllowances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgRevokeAllowance({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAllowance(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAllowance({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAllowance(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAllowance({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAllowance(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAllowance({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAllowance(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseWeightedVoteOption = { option: 0, weight: '' };\nexport const WeightedVoteOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.option !== 0) {\n            writer.uint32(8).int32(message.option);\n        }\n        if (message.weight !== '') {\n            writer.uint32(18).string(message.weight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseWeightedVoteOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.option = reader.int32();\n                    break;\n                case 2:\n                    message.weight = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseWeightedVoteOption };\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.weight !== undefined && object.weight !== null) {\n            message.weight = String(object.weight);\n        }\n        else {\n            message.weight = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        message.weight !== undefined && (obj.weight = message.weight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseWeightedVoteOption };\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.weight !== undefined && object.weight !== null) {\n            message.weight = object.weight;\n        }\n        else {\n            message.weight = '';\n        }\n        return message;\n    }\n};\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined && (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined && (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined && (obj.finalTallyResult = message.finalTallyResult ? TallyResult.toJSON(message.finalTallyResult) : undefined);\n        message.submitTime !== undefined && (obj.submitTime = message.submitTime !== undefined ? message.submitTime.toISOString() : null);\n        message.depositEndTime !== undefined && (obj.depositEndTime = message.depositEndTime !== undefined ? message.depositEndTime.toISOString() : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined && (obj.votingStartTime = message.votingStartTime !== undefined ? message.votingStartTime.toISOString() : null);\n        message.votingEndTime !== undefined && (obj.votingEndTime = message.votingEndTime !== undefined ? message.votingEndTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        for (const v of message.options) {\n            WeightedVoteOption.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        message.options = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                case 4:\n                    message.options.push(WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined && (obj.maxDepositPeriod = message.maxDepositPeriod ? Duration.toJSON(message.maxDepositPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined && (obj.votingPeriod = message.votingPeriod ? Duration.toJSON(message.votingPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined && (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined && (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined && (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined ? message.vetoThreshold : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { WeightedVoteOption, voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined && (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposalResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgVoteWeighted = { proposalId: 0, voter: '' };\nexport const MsgVoteWeighted = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        for (const v of message.options) {\n            WeightedVoteOption.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.options.push(WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgVoteWeightedResponse = {};\nexport const MsgVoteWeightedResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteWeightedResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteWeightedResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteWeightedResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    VoteWeighted(request) {\n        const data = MsgVoteWeighted.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'VoteWeighted', data);\n        return promise.then((data) => MsgVoteWeightedResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVoteWeighted } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgVoteWeighted\", MsgVoteWeighted],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: MsgVote.fromPartial(data) }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: MsgDeposit.fromPartial(data) }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: MsgSubmitProposal.fromPartial(data) }),\n        msgVoteWeighted: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVoteWeighted\", value: MsgVoteWeighted.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { WeightedVoteOption } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { WeightedVoteOption, TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            WeightedVoteOption: getStructure(WeightedVoteOption.fromPartial({})),\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgVoteWeighted({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVoteWeighted(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgVoteWeighted({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVoteWeighted(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: MsgUnjail.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = { address: '', startHeight: 0, indexOffset: 0, tombstoned: false, missedBlocksCounter: 0 };\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined && (obj.jailedUntil = message.jailedUntil !== undefined ? message.jailedUntil.toISOString() : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined && (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined && (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined ? message.minSignedPerWindow : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration ? Duration.toJSON(message.downtimeJailDuration) : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined ? message.slashFractionDoubleSign : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined ? message.slashFractionDowntime : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => (e ? SigningInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => (e ? ValidatorMissedBlocks.toJSON(e) : undefined));\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => (e ? MissedBlock.toJSON(e) : undefined));\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined && (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined && (obj.ed25519 = message.ed25519 !== undefined ? base64FromBytes(message.ed25519) : undefined);\n        message.secp256k1 !== undefined && (obj.secp256k1 = message.secp256k1 !== undefined ? base64FromBytes(message.secp256k1) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer ? Validator.toJSON(message.proposer) : undefined);\n        message.totalVotingPower !== undefined && (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined && (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined && (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined && (obj.partSetHeader = message.partSetHeader ? PartSetHeader.toJSON(message.partSetHeader) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version ? Consensus.toJSON(message.version) : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined && (obj.lastBlockId = message.lastBlockId ? BlockID.toJSON(message.lastBlockId) : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined ? message.lastCommitHash : new Uint8Array()));\n        message.dataHash !== undefined && (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined ? message.validatorsHash : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n        message.consensusHash !== undefined && (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined ? message.consensusHash : new Uint8Array()));\n        message.appHash !== undefined && (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined ? message.lastResultsHash : new Uint8Array()));\n        message.evidenceHash !== undefined && (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined ? message.evidenceHash : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined ? message.proposerAddress : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.validatorIndex !== undefined && (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (e ? CommitSig.toJSON(e) : undefined));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined && (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined && (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined && (obj.signedHeader = message.signedHeader ? SignedHeader.toJSON(message.signedHeader) : undefined);\n        message.validatorSet !== undefined && (obj.validatorSet = message.validatorSet ? ValidatorSet.toJSON(message.validatorSet) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined && (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined && (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined && (obj.commissionRates = message.commissionRates ? CommissionRates.toJSON(message.commissionRates) : undefined);\n        message.updateTime !== undefined && (obj.updateTime = message.updateTime !== undefined ? message.updateTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = { moniker: '', identity: '', website: '', securityContact: '', details: '' };\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined && (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = { operatorAddress: '', jailed: false, status: 0, tokens: '', delegatorShares: '', unbondingHeight: 0, minSelfDelegation: '' };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined && (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined && (obj.consensusPubkey = message.consensusPubkey ? Any.toJSON(message.consensusPubkey) : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined && (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined && (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.unbondingHeight !== undefined && (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime !== undefined ? message.unbondingTime.toISOString() : null);\n        message.commission !== undefined && (obj.commission = message.commission ? Commission.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => (e ? DVVTriplet.toJSON(e) : undefined));\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = { delegatorAddress: '', validatorAddress: '', shares: '' };\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = { delegatorAddress: '', validatorAddress: '' };\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? UnbondingDelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = { creationHeight: 0, initialBalance: '', balance: '' };\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined && (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = { creationHeight: 0, initialBalance: '', sharesDst: '' };\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined && (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? RedelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = { maxValidators: 0, maxEntries: 0, historicalEntries: 0, bondDenom: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime ? Duration.toJSON(message.unbondingTime) : undefined);\n        message.maxValidators !== undefined && (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined && (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined && (obj.delegation = message.delegation ? Delegation.toJSON(message.delegation) : undefined);\n        message.balance !== undefined && (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntryResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntryResponse };\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry ? RedelegationEntry.toJSON(message.redelegationEntry) : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntryResponse };\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined && (obj.redelegation = message.redelegation ? Redelegation.toJSON(message.redelegation) : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? RedelegationEntryResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined && (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined && (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = { minSelfDelegation: '', delegatorAddress: '', validatorAddress: '' };\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.commission !== undefined && (obj.commission = message.commission ? CommissionRates.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined && (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined && (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidatorResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateValidatorResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateValidatorResponse };\n        return message;\n    }\n};\nconst baseMsgEditValidator = { validatorAddress: '', commissionRate: '', minSelfDelegation: '' };\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined && (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidatorResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditValidatorResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditValidatorResponse };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: MsgBeginRedelegate.fromPartial(data) }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: MsgDelegate.fromPartial(data) }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: MsgUndelegate.fromPartial(data) }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: MsgCreateValidator.fromPartial(data) }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: MsgEditValidator.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** AuthorizationType defines the type of staking module authorization type */\nexport var AuthorizationType;\n(function (AuthorizationType) {\n    /** AUTHORIZATION_TYPE_UNSPECIFIED - AUTHORIZATION_TYPE_UNSPECIFIED specifies an unknown authorization type */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNSPECIFIED\"] = 0] = \"AUTHORIZATION_TYPE_UNSPECIFIED\";\n    /** AUTHORIZATION_TYPE_DELEGATE - AUTHORIZATION_TYPE_DELEGATE defines an authorization type for Msg/Delegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_DELEGATE\"] = 1] = \"AUTHORIZATION_TYPE_DELEGATE\";\n    /** AUTHORIZATION_TYPE_UNDELEGATE - AUTHORIZATION_TYPE_UNDELEGATE defines an authorization type for Msg/Undelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNDELEGATE\"] = 2] = \"AUTHORIZATION_TYPE_UNDELEGATE\";\n    /** AUTHORIZATION_TYPE_REDELEGATE - AUTHORIZATION_TYPE_REDELEGATE defines an authorization type for Msg/BeginRedelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_REDELEGATE\"] = 3] = \"AUTHORIZATION_TYPE_REDELEGATE\";\n    AuthorizationType[AuthorizationType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(AuthorizationType || (AuthorizationType = {}));\nexport function authorizationTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'AUTHORIZATION_TYPE_UNSPECIFIED':\n            return AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED;\n        case 1:\n        case 'AUTHORIZATION_TYPE_DELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_DELEGATE;\n        case 2:\n        case 'AUTHORIZATION_TYPE_UNDELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE;\n        case 3:\n        case 'AUTHORIZATION_TYPE_REDELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return AuthorizationType.UNRECOGNIZED;\n    }\n}\nexport function authorizationTypeToJSON(object) {\n    switch (object) {\n        case AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED:\n            return 'AUTHORIZATION_TYPE_UNSPECIFIED';\n        case AuthorizationType.AUTHORIZATION_TYPE_DELEGATE:\n            return 'AUTHORIZATION_TYPE_DELEGATE';\n        case AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE:\n            return 'AUTHORIZATION_TYPE_UNDELEGATE';\n        case AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE:\n            return 'AUTHORIZATION_TYPE_REDELEGATE';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseStakeAuthorization = { authorizationType: 0 };\nexport const StakeAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxTokens !== undefined) {\n            Coin.encode(message.maxTokens, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.allowList !== undefined) {\n            StakeAuthorization_Validators.encode(message.allowList, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.denyList !== undefined) {\n            StakeAuthorization_Validators.encode(message.denyList, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.authorizationType !== 0) {\n            writer.uint32(32).int32(message.authorizationType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxTokens = Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.denyList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.authorizationType = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromJSON(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromJSON(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromJSON(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined && object.authorizationType !== null) {\n            message.authorizationType = authorizationTypeFromJSON(object.authorizationType);\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxTokens !== undefined && (obj.maxTokens = message.maxTokens ? Coin.toJSON(message.maxTokens) : undefined);\n        message.allowList !== undefined && (obj.allowList = message.allowList ? StakeAuthorization_Validators.toJSON(message.allowList) : undefined);\n        message.denyList !== undefined && (obj.denyList = message.denyList ? StakeAuthorization_Validators.toJSON(message.denyList) : undefined);\n        message.authorizationType !== undefined && (obj.authorizationType = authorizationTypeToJSON(message.authorizationType));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromPartial(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromPartial(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromPartial(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined && object.authorizationType !== null) {\n            message.authorizationType = object.authorizationType;\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    }\n};\nconst baseStakeAuthorization_Validators = { address: '' };\nexport const StakeAuthorization_Validators = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.address) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.address) {\n            obj.address = message.address.map((e) => e);\n        }\n        else {\n            obj.address = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(e);\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined ? message.lastTotalPower : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => (e ? LastValidatorPower.toJSON(e) : undefined));\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => (e ? Delegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => (e ? UnbondingDelegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => (e ? Redelegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { StakeAuthorization } from \"./module/types/cosmos/staking/v1beta1/authz\";\nimport { StakeAuthorization_Validators } from \"./module/types/cosmos/staking/v1beta1/authz\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { StakeAuthorization, StakeAuthorization_Validators, LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            StakeAuthorization: getStructure(StakeAuthorization.fromPartial({})),\n            StakeAuthorization_Validators: getStructure(StakeAuthorization_Validators.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = { fromAddress: '', toAddress: '', endTime: 0, delayed: false };\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: MsgCreateVestingAccount.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined && (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = { maxMemoCharacters: 0, txSigLimit: 0, txSizeCostPerByte: 0, sigVerifyCostEd25519: 0, sigVerifyCostSecp256k1: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined && (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined && (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined && (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined && (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined && object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined && object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined && object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined && object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseContinuousVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseContinuousVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseContinuousVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => (e ? Period.toJSON(e) : undefined));\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePermanentLockedAccount = {};\nexport const PermanentLockedAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePermanentLockedAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePermanentLockedAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePermanentLockedAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PermanentLockedAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount, PermanentLockedAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n            PermanentLockedAccount: getStructure(PermanentLockedAccount.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/apps/transfer/v1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/apps/transfer/v1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/apps/transfer/v1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.upgrade.v1beta1';\nconst basePlan = { name: '', height: 0, info: '' };\nexport const Plan = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePlan };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePlan };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.height !== undefined && (obj.height = message.height);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePlan };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseSoftwareUpgradeProposal = { title: '', description: '' };\nexport const SoftwareUpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSoftwareUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        return message;\n    }\n};\nconst baseCancelSoftwareUpgradeProposal = { title: '', description: '' };\nexport const CancelSoftwareUpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Plan } from '../../../../cosmos/upgrade/v1beta1/upgrade';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined && (obj.clientState = message.clientState ? Any.toJSON(message.clientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusStateWithHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined && (obj.consensusState = message.consensusState ? Any.toJSON(message.consensusState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => (e ? ConsensusStateWithHeight.toJSON(e) : undefined));\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = { title: '', description: '', subjectClientId: '', substituteClientId: '' };\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.subjectClientId !== '') {\n            writer.uint32(26).string(message.subjectClientId);\n        }\n        if (message.substituteClientId !== '') {\n            writer.uint32(34).string(message.substituteClientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.subjectClientId = reader.string();\n                    break;\n                case 4:\n                    message.substituteClientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n            message.subjectClientId = String(object.subjectClientId);\n        }\n        else {\n            message.subjectClientId = '';\n        }\n        if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n            message.substituteClientId = String(object.substituteClientId);\n        }\n        else {\n            message.substituteClientId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.subjectClientId !== undefined && (obj.subjectClientId = message.subjectClientId);\n        message.substituteClientId !== undefined && (obj.substituteClientId = message.substituteClientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n            message.subjectClientId = object.subjectClientId;\n        }\n        else {\n            message.subjectClientId = '';\n        }\n        if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n            message.substituteClientId = object.substituteClientId;\n        }\n        else {\n            message.substituteClientId = '';\n        }\n        return message;\n    }\n};\nconst baseUpgradeProposal = { title: '', description: '' };\nexport const UpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.upgradedClientState !== undefined) {\n            Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.upgradedClientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromJSON(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        message.upgradedClientState !== undefined && (obj.upgradedClientState = message.upgradedClientState ? Any.toJSON(message.upgradedClientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromPartial(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined && (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined && (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = { sourcePort: '', sourceChannel: '', sender: '', receiver: '', timeoutTimestamp: 0 };\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined && (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined && (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined && (obj.timeoutHeight = message.timeoutHeight ? Height.toJSON(message.timeoutHeight) : undefined);\n        message.timeoutTimestamp !== undefined && (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: MsgTransfer.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = { denom: '', amount: 0, sender: '', receiver: '' };\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFungibleTokenPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFungibleTokenPacketData };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFungibleTokenPacketData };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined && (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title dyson/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryQueryScript\n         * @summary Queries a script by index.\n         * @request GET:/dyson/query\n         */\n        this.queryQueryScript = (query, params = {}) => this.request({\n            path: `/dyson/query`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySchema\n         * @summary Queries a script schema by index.\n         * @request GET:/dyson/schema\n         */\n        this.querySchema = (query, params = {}) => this.request({\n            path: `/dyson/schema`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryScript\n         * @summary Queries a script by index.\n         * @request GET:/dyson/script\n         */\n        this.queryScript = (query, params = {}) => this.request({\n            path: `/dyson/script`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryScriptAll\n         * @summary Queries a list of script items.\n         * @request GET:/dyson/scriptiAll\n         */\n        this.queryScriptAll = (query, params = {}) => this.request({\n            path: `/dyson/scriptiAll`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryStorage\n         * @summary Queries a storage by index.\n         * @request GET:/dyson/storage\n         */\n        this.queryStorage = (query, params = {}) => this.request({\n            path: `/dyson/storage`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryStorageAll\n         * @summary Queries a list of storage items.\n         * @request GET:/dyson/storageAll\n         */\n        this.queryStorageAll = (query, params = {}) => this.request({\n            path: `/dyson/storageAll`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPrefixStorage\n         * @request GET:/dyson/storageprefix\n         */\n        this.queryPrefixStorage = (query, params = {}) => this.request({\n            path: `/dyson/storageprefix`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryWsgi\n         * @summary Queries a script wsgi app by index.\n         * @request GET:/dyson/wsgi\n         */\n        this.queryWsgi = (query, params = {}) => this.request({\n            path: `/dyson/wsgi`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySchedualedRun\n         * @summary Queries a schedualedRun by index.\n         * @request GET:/org/dyson/dyson/schedualedRun\n         */\n        this.querySchedualedRun = (query, params = {}) => this.request({\n            path: `/org/dyson/dyson/schedualedRun`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySchedualedRunAll\n         * @summary Queries a list of schedualedRun items.\n         * @request GET:/org/dyson/dyson/schedualedRunAll\n         */\n        this.querySchedualedRunAll = (query, params = {}) => this.request({\n            path: `/org/dyson/dyson/schedualedRunAll`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'dyson';\nconst baseMsgRun = { creator: '', address: '', extraLines: '', functionName: '', args: '', kwargs: '', coins: '' };\nexport const MsgRun = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.address !== '') {\n            writer.uint32(18).string(message.address);\n        }\n        if (message.extraLines !== '') {\n            writer.uint32(26).string(message.extraLines);\n        }\n        if (message.functionName !== '') {\n            writer.uint32(34).string(message.functionName);\n        }\n        if (message.args !== '') {\n            writer.uint32(42).string(message.args);\n        }\n        if (message.kwargs !== '') {\n            writer.uint32(50).string(message.kwargs);\n        }\n        if (message.coins !== '') {\n            writer.uint32(58).string(message.coins);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRun };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.address = reader.string();\n                    break;\n                case 3:\n                    message.extraLines = reader.string();\n                    break;\n                case 4:\n                    message.functionName = reader.string();\n                    break;\n                case 5:\n                    message.args = reader.string();\n                    break;\n                case 6:\n                    message.kwargs = reader.string();\n                    break;\n                case 7:\n                    message.coins = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.extraLines !== undefined && object.extraLines !== null) {\n            message.extraLines = String(object.extraLines);\n        }\n        else {\n            message.extraLines = '';\n        }\n        if (object.functionName !== undefined && object.functionName !== null) {\n            message.functionName = String(object.functionName);\n        }\n        else {\n            message.functionName = '';\n        }\n        if (object.args !== undefined && object.args !== null) {\n            message.args = String(object.args);\n        }\n        else {\n            message.args = '';\n        }\n        if (object.kwargs !== undefined && object.kwargs !== null) {\n            message.kwargs = String(object.kwargs);\n        }\n        else {\n            message.kwargs = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            message.coins = String(object.coins);\n        }\n        else {\n            message.coins = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.address !== undefined && (obj.address = message.address);\n        message.extraLines !== undefined && (obj.extraLines = message.extraLines);\n        message.functionName !== undefined && (obj.functionName = message.functionName);\n        message.args !== undefined && (obj.args = message.args);\n        message.kwargs !== undefined && (obj.kwargs = message.kwargs);\n        message.coins !== undefined && (obj.coins = message.coins);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.extraLines !== undefined && object.extraLines !== null) {\n            message.extraLines = object.extraLines;\n        }\n        else {\n            message.extraLines = '';\n        }\n        if (object.functionName !== undefined && object.functionName !== null) {\n            message.functionName = object.functionName;\n        }\n        else {\n            message.functionName = '';\n        }\n        if (object.args !== undefined && object.args !== null) {\n            message.args = object.args;\n        }\n        else {\n            message.args = '';\n        }\n        if (object.kwargs !== undefined && object.kwargs !== null) {\n            message.kwargs = object.kwargs;\n        }\n        else {\n            message.kwargs = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            message.coins = object.coins;\n        }\n        else {\n            message.coins = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRunResponse = { response: '' };\nexport const MsgRunResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.response !== '') {\n            writer.uint32(10).string(message.response);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRunResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.response = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRunResponse };\n        if (object.response !== undefined && object.response !== null) {\n            message.response = String(object.response);\n        }\n        else {\n            message.response = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.response !== undefined && (obj.response = message.response);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRunResponse };\n        if (object.response !== undefined && object.response !== null) {\n            message.response = object.response;\n        }\n        else {\n            message.response = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { MsgRun, MsgRunResponse } from '../dyson/msgrun';\nexport const protobufPackage = 'dyson';\nconst baseMsgCreateSchedualedRun = { creator: '', height: 0, gas: 0 };\nexport const MsgCreateSchedualedRun = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(24).uint64(message.gas);\n        }\n        if (message.msg !== undefined) {\n            MsgRun.encode(message.msg, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateSchedualedRun };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.msg = MsgRun.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateSchedualedRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgRun.fromJSON(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.height !== undefined && (obj.height = message.height);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.msg !== undefined && (obj.msg = message.msg ? MsgRun.toJSON(message.msg) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateSchedualedRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgRun.fromPartial(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateSchedualedRunResponse = {};\nexport const MsgCreateSchedualedRunResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateSchedualedRunResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateSchedualedRunResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateSchedualedRunResponse };\n        return message;\n    }\n};\nconst baseMsgUpdateSchedualedRun = { creator: '', index: '' };\nexport const MsgUpdateSchedualedRun = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        if (message.msg !== undefined) {\n            MsgRun.encode(message.msg, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateSchedualedRun };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                case 3:\n                    message.msg = MsgRun.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateSchedualedRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgRun.fromJSON(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        message.msg !== undefined && (obj.msg = message.msg ? MsgRun.toJSON(message.msg) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateSchedualedRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgRun.fromPartial(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateSchedualedRunResponse = {};\nexport const MsgUpdateSchedualedRunResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateSchedualedRunResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateSchedualedRunResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateSchedualedRunResponse };\n        return message;\n    }\n};\nconst baseMsgDeleteSchedualedRun = { creator: '', index: '' };\nexport const MsgDeleteSchedualedRun = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteSchedualedRun };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteSchedualedRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteSchedualedRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteSchedualedRunResponse = {};\nexport const MsgDeleteSchedualedRunResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteSchedualedRunResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteSchedualedRunResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteSchedualedRunResponse };\n        return message;\n    }\n};\nconst baseMsgCreateStorage = { creator: '', index: '', data: '', force: false };\nexport const MsgCreateStorage = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        if (message.data !== '') {\n            writer.uint32(26).string(message.data);\n        }\n        if (message.force === true) {\n            writer.uint32(32).bool(message.force);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateStorage };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                case 3:\n                    message.data = reader.string();\n                    break;\n                case 4:\n                    message.force = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.force !== undefined && object.force !== null) {\n            message.force = Boolean(object.force);\n        }\n        else {\n            message.force = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        message.data !== undefined && (obj.data = message.data);\n        message.force !== undefined && (obj.force = message.force);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.force !== undefined && object.force !== null) {\n            message.force = object.force;\n        }\n        else {\n            message.force = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateStorageResponse = {};\nexport const MsgCreateStorageResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateStorageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateStorageResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateStorageResponse };\n        return message;\n    }\n};\nconst baseMsgUpdateStorage = { creator: '', index: '', data: '', force: false };\nexport const MsgUpdateStorage = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        if (message.data !== '') {\n            writer.uint32(26).string(message.data);\n        }\n        if (message.force === true) {\n            writer.uint32(32).bool(message.force);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateStorage };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                case 3:\n                    message.data = reader.string();\n                    break;\n                case 4:\n                    message.force = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.force !== undefined && object.force !== null) {\n            message.force = Boolean(object.force);\n        }\n        else {\n            message.force = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        message.data !== undefined && (obj.data = message.data);\n        message.force !== undefined && (obj.force = message.force);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.force !== undefined && object.force !== null) {\n            message.force = object.force;\n        }\n        else {\n            message.force = false;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateStorageResponse = {};\nexport const MsgUpdateStorageResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateStorageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateStorageResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateStorageResponse };\n        return message;\n    }\n};\nconst baseMsgDeleteStorage = { creator: '', index: '' };\nexport const MsgDeleteStorage = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteStorage };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteStorageResponse = {};\nexport const MsgDeleteStorageResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteStorageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteStorageResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteStorageResponse };\n        return message;\n    }\n};\nconst baseMsgCreateScript = { creator: '', code: '' };\nexport const MsgCreateScript = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.code !== '') {\n            writer.uint32(26).string(message.code);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateScript };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 3:\n                    message.code = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = String(object.code);\n        }\n        else {\n            message.code = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.code !== undefined && (obj.code = message.code);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateScriptResponse = { address: '' };\nexport const MsgCreateScriptResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateScriptResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateScriptResponse };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateScriptResponse };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateScript = { creator: '', code: '' };\nexport const MsgUpdateScript = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.code !== '') {\n            writer.uint32(26).string(message.code);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateScript };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 3:\n                    message.code = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = String(object.code);\n        }\n        else {\n            message.code = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.code !== undefined && (obj.code = message.code);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateScriptResponse = { address: '' };\nexport const MsgUpdateScriptResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateScriptResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateScriptResponse };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateScriptResponse };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteScript = { creator: '' };\nexport const MsgDeleteScript = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteScript };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteScriptResponse = {};\nexport const MsgDeleteScriptResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteScriptResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteScriptResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteScriptResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateSchedualedRun(request) {\n        const data = MsgCreateSchedualedRun.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'CreateSchedualedRun', data);\n        return promise.then((data) => MsgCreateSchedualedRunResponse.decode(new Reader(data)));\n    }\n    CreateStorage(request) {\n        const data = MsgCreateStorage.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'CreateStorage', data);\n        return promise.then((data) => MsgCreateStorageResponse.decode(new Reader(data)));\n    }\n    UpdateStorage(request) {\n        const data = MsgUpdateStorage.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'UpdateStorage', data);\n        return promise.then((data) => MsgUpdateStorageResponse.decode(new Reader(data)));\n    }\n    DeleteStorage(request) {\n        const data = MsgDeleteStorage.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'DeleteStorage', data);\n        return promise.then((data) => MsgDeleteStorageResponse.decode(new Reader(data)));\n    }\n    CreateScript(request) {\n        const data = MsgCreateScript.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'CreateScript', data);\n        return promise.then((data) => MsgCreateScriptResponse.decode(new Reader(data)));\n    }\n    UpdateScript(request) {\n        const data = MsgUpdateScript.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'UpdateScript', data);\n        return promise.then((data) => MsgUpdateScriptResponse.decode(new Reader(data)));\n    }\n    DeleteScript(request) {\n        const data = MsgDeleteScript.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'DeleteScript', data);\n        return promise.then((data) => MsgDeleteScriptResponse.decode(new Reader(data)));\n    }\n    Run(request) {\n        const data = MsgRun.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'Run', data);\n        return promise.then((data) => MsgRunResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgRun } from \"./types/dyson/msgrun\";\nimport { MsgCreateStorage } from \"./types/dyson/tx\";\nimport { MsgUpdateStorage } from \"./types/dyson/tx\";\nimport { MsgCreateScript } from \"./types/dyson/tx\";\nimport { MsgUpdateScript } from \"./types/dyson/tx\";\nimport { MsgDeleteStorage } from \"./types/dyson/tx\";\nimport { MsgCreateSchedualedRun } from \"./types/dyson/tx\";\nimport { MsgDeleteSchedualedRun } from \"./types/dyson/tx\";\nimport { MsgDeleteScript } from \"./types/dyson/tx\";\nimport { MsgUpdateSchedualedRun } from \"./types/dyson/tx\";\nconst types = [\n    [\"/dyson.MsgRun\", MsgRun],\n    [\"/dyson.MsgCreateStorage\", MsgCreateStorage],\n    [\"/dyson.MsgUpdateStorage\", MsgUpdateStorage],\n    [\"/dyson.MsgCreateScript\", MsgCreateScript],\n    [\"/dyson.MsgUpdateScript\", MsgUpdateScript],\n    [\"/dyson.MsgDeleteStorage\", MsgDeleteStorage],\n    [\"/dyson.MsgCreateSchedualedRun\", MsgCreateSchedualedRun],\n    [\"/dyson.MsgDeleteSchedualedRun\", MsgDeleteSchedualedRun],\n    [\"/dyson.MsgDeleteScript\", MsgDeleteScript],\n    [\"/dyson.MsgUpdateSchedualedRun\", MsgUpdateSchedualedRun],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgRun: (data) => ({ typeUrl: \"/dyson.MsgRun\", value: MsgRun.fromPartial(data) }),\n        msgCreateStorage: (data) => ({ typeUrl: \"/dyson.MsgCreateStorage\", value: MsgCreateStorage.fromPartial(data) }),\n        msgUpdateStorage: (data) => ({ typeUrl: \"/dyson.MsgUpdateStorage\", value: MsgUpdateStorage.fromPartial(data) }),\n        msgCreateScript: (data) => ({ typeUrl: \"/dyson.MsgCreateScript\", value: MsgCreateScript.fromPartial(data) }),\n        msgUpdateScript: (data) => ({ typeUrl: \"/dyson.MsgUpdateScript\", value: MsgUpdateScript.fromPartial(data) }),\n        msgDeleteStorage: (data) => ({ typeUrl: \"/dyson.MsgDeleteStorage\", value: MsgDeleteStorage.fromPartial(data) }),\n        msgCreateSchedualedRun: (data) => ({ typeUrl: \"/dyson.MsgCreateSchedualedRun\", value: MsgCreateSchedualedRun.fromPartial(data) }),\n        msgDeleteSchedualedRun: (data) => ({ typeUrl: \"/dyson.MsgDeleteSchedualedRun\", value: MsgDeleteSchedualedRun.fromPartial(data) }),\n        msgDeleteScript: (data) => ({ typeUrl: \"/dyson.MsgDeleteScript\", value: MsgDeleteScript.fromPartial(data) }),\n        msgUpdateSchedualedRun: (data) => ({ typeUrl: \"/dyson.MsgUpdateSchedualedRun\", value: MsgUpdateSchedualedRun.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MsgRun, MsgRunResponse } from '../dyson/msgrun';\nimport { Coin } from '../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'dyson';\nconst baseSchedualedRun = { index: '', creator: '', height: 0, gas: 0, error: '' };\nexport const SchedualedRun = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== '') {\n            writer.uint32(10).string(message.index);\n        }\n        if (message.creator !== '') {\n            writer.uint32(18).string(message.creator);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(32).uint64(message.gas);\n        }\n        if (message.msg !== undefined) {\n            MsgRun.encode(message.msg, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.resp !== undefined) {\n            MsgRunResponse.encode(message.resp, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.error !== '') {\n            writer.uint32(58).string(message.error);\n        }\n        if (message.gasprice !== undefined) {\n            Coin.encode(message.gasprice, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.fee !== undefined) {\n            Coin.encode(message.fee, writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSchedualedRun };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.string();\n                    break;\n                case 2:\n                    message.creator = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.msg = MsgRun.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.resp = MsgRunResponse.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.error = reader.string();\n                    break;\n                case 8:\n                    message.gasprice = Coin.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.fee = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSchedualedRun };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgRun.fromJSON(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        if (object.resp !== undefined && object.resp !== null) {\n            message.resp = MsgRunResponse.fromJSON(object.resp);\n        }\n        else {\n            message.resp = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        if (object.gasprice !== undefined && object.gasprice !== null) {\n            message.gasprice = Coin.fromJSON(object.gasprice);\n        }\n        else {\n            message.gasprice = undefined;\n        }\n        if (object.fee !== undefined && object.fee !== null) {\n            message.fee = Coin.fromJSON(object.fee);\n        }\n        else {\n            message.fee = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.height !== undefined && (obj.height = message.height);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.msg !== undefined && (obj.msg = message.msg ? MsgRun.toJSON(message.msg) : undefined);\n        message.resp !== undefined && (obj.resp = message.resp ? MsgRunResponse.toJSON(message.resp) : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        message.gasprice !== undefined && (obj.gasprice = message.gasprice ? Coin.toJSON(message.gasprice) : undefined);\n        message.fee !== undefined && (obj.fee = message.fee ? Coin.toJSON(message.fee) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSchedualedRun };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgRun.fromPartial(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        if (object.resp !== undefined && object.resp !== null) {\n            message.resp = MsgRunResponse.fromPartial(object.resp);\n        }\n        else {\n            message.resp = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        if (object.gasprice !== undefined && object.gasprice !== null) {\n            message.gasprice = Coin.fromPartial(object.gasprice);\n        }\n        else {\n            message.gasprice = undefined;\n        }\n        if (object.fee !== undefined && object.fee !== null) {\n            message.fee = Coin.fromPartial(object.fee);\n        }\n        else {\n            message.fee = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'dyson';\nconst baseScript = { creator: '', index: '', code: '' };\nexport const Script = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        if (message.code !== '') {\n            writer.uint32(26).string(message.code);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseScript };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                case 3:\n                    message.code = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = String(object.code);\n        }\n        else {\n            message.code = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        message.code !== undefined && (obj.code = message.code);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'dyson';\nconst baseStorage = { creator: '', index: '', data: '' };\nexport const Storage = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        if (message.data !== '') {\n            writer.uint32(26).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStorage };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                case 3:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SchedualedRun } from \"./module/types/dyson/schedualed_run\";\nimport { Script } from \"./module/types/dyson/script\";\nimport { Storage } from \"./module/types/dyson/storage\";\nimport { MsgUpdateSchedualedRunResponse } from \"./module/types/dyson/tx\";\nimport { MsgDeleteSchedualedRunResponse } from \"./module/types/dyson/tx\";\nexport { SchedualedRun, Script, Storage, MsgUpdateSchedualedRunResponse, MsgDeleteSchedualedRunResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        SchedualedRun: {},\n        SchedualedRunAll: {},\n        Storage: {},\n        StorageAll: {},\n        Script: {},\n        Schema: {},\n        Wsgi: {},\n        QueryScript: {},\n        ScriptAll: {},\n        PrefixStorage: {},\n        _Structure: {\n            SchedualedRun: getStructure(SchedualedRun.fromPartial({})),\n            Script: getStructure(Script.fromPartial({})),\n            Storage: getStructure(Storage.fromPartial({})),\n            MsgUpdateSchedualedRunResponse: getStructure(MsgUpdateSchedualedRunResponse.fromPartial({})),\n            MsgDeleteSchedualedRunResponse: getStructure(MsgDeleteSchedualedRunResponse.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getSchedualedRun: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SchedualedRun[JSON.stringify(params)] ?? {};\n        },\n        getSchedualedRunAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SchedualedRunAll[JSON.stringify(params)] ?? {};\n        },\n        getStorage: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Storage[JSON.stringify(params)] ?? {};\n        },\n        getStorageAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.StorageAll[JSON.stringify(params)] ?? {};\n        },\n        getScript: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Script[JSON.stringify(params)] ?? {};\n        },\n        getSchema: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Schema[JSON.stringify(params)] ?? {};\n        },\n        getWsgi: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Wsgi[JSON.stringify(params)] ?? {};\n        },\n        getQueryScript: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.QueryScript[JSON.stringify(params)] ?? {};\n        },\n        getScriptAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ScriptAll[JSON.stringify(params)] ?? {};\n        },\n        getPrefixStorage: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PrefixStorage[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: dyson initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QuerySchedualedRun({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySchedualedRun(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.querySchedualedRun({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SchedualedRun', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySchedualedRun', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSchedualedRun']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySchedualedRun', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySchedualedRunAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySchedualedRunAll(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.querySchedualedRunAll({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SchedualedRunAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySchedualedRunAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSchedualedRunAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySchedualedRunAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryStorage({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryStorage(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryStorage({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Storage', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryStorage', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getStorage']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryStorage', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryStorageAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryStorageAll(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryStorageAll({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'StorageAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryStorageAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getStorageAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryStorageAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryScript({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryScript(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryScript({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Script', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryScript', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getScript']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryScript', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySchema({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySchema(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.querySchema({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Schema', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySchema', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSchema']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySchema', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryWsgi({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryWsgi(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryWsgi({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Wsgi', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryWsgi', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getWsgi']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryWsgi', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryQueryScript({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryQueryScript(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryQueryScript({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'QueryScript', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryQueryScript', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getQueryScript']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryQueryScript', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryScriptAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryScriptAll(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryScriptAll({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ScriptAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryScriptAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getScriptAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryScriptAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPrefixStorage({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPrefixStorage(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryPrefixStorage({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PrefixStorage', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPrefixStorage', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPrefixStorage']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPrefixStorage', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgRun({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRun(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRun:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateStorage({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateStorage(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateStorage:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateStorage:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateStorage({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateStorage(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateStorage:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateStorage:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateScript({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateScript(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateScript:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateScript:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateScript({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateScript(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateScript:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateScript:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteStorage({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteStorage(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteStorage:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteStorage:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateSchedualedRun({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateSchedualedRun(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateSchedualedRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateSchedualedRun:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteSchedualedRun({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteSchedualedRun(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteSchedualedRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteSchedualedRun:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteScript({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteScript(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteScript:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteScript:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateSchedualedRun({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateSchedualedRun(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateSchedualedRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateSchedualedRun:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgRun({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRun(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRun:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateStorage({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateStorage(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateStorage:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateStorage:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateStorage({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateStorage(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateStorage:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateStorage:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateScript({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateScript(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateScript:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateScript:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateScript({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateScript(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateScript:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateScript:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteStorage({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteStorage(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteStorage:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteStorage:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateSchedualedRun({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateSchedualedRun(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateSchedualedRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateSchedualedRun:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteSchedualedRun({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteSchedualedRun(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteSchedualedRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteSchedualedRun:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteScript({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteScript(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteScript:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteScript:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateSchedualedRun({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateSchedualedRun(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateSchedualedRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateSchedualedRun:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title names/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGenerateCommit\n         * @summary Queries a list of GenerateCommit items.\n         * @request GET:/org/dyson/names/generate_commit/{owner}/{name}/{salt}\n         */\n        this.queryGenerateCommit = (owner, name, salt, params = {}) => this.request({\n            path: `/org/dyson/names/generate_commit/${owner}/${name}/${salt}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryName\n         * @summary Queries a Name by index.\n         * @request GET:/org/dyson/names/name\n         */\n        this.queryName = (query, params = {}) => this.request({\n            path: `/org/dyson/names/name`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNameAll\n         * @summary Queries a list of Name items.\n         * @request GET:/org/dyson/names/nameall\n         */\n        this.queryNameAll = (query, params = {}) => this.request({\n            path: `/org/dyson/names/nameall`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the parameters of the module.\n         * @request GET:/org/dyson/names/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/org/dyson/names/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResolve\n         * @summary Queries a list of Resolve items.\n         * @request GET:/org/dyson/names/resolve\n         */\n        this.queryResolve = (query, params = {}) => this.request({\n            path: `/org/dyson/names/resolve`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../google/protobuf/timestamp';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'names';\nconst baseName = { name: '', destination: '', price: '', authorized: '', owner: '' };\nexport const Name = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.destination !== '') {\n            writer.uint32(18).string(message.destination);\n        }\n        if (message.price !== '') {\n            writer.uint32(26).string(message.price);\n        }\n        if (message.expires !== undefined) {\n            Timestamp.encode(toTimestamp(message.expires), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.authorized !== '') {\n            writer.uint32(42).string(message.authorized);\n        }\n        if (message.owner !== '') {\n            writer.uint32(66).string(message.owner);\n        }\n        if (message.registered !== undefined) {\n            Timestamp.encode(toTimestamp(message.registered), writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseName };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.destination = reader.string();\n                    break;\n                case 3:\n                    message.price = reader.string();\n                    break;\n                case 4:\n                    message.expires = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.authorized = reader.string();\n                    break;\n                case 8:\n                    message.owner = reader.string();\n                    break;\n                case 10:\n                    message.registered = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseName };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.destination !== undefined && object.destination !== null) {\n            message.destination = String(object.destination);\n        }\n        else {\n            message.destination = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        if (object.expires !== undefined && object.expires !== null) {\n            message.expires = fromJsonTimestamp(object.expires);\n        }\n        else {\n            message.expires = undefined;\n        }\n        if (object.authorized !== undefined && object.authorized !== null) {\n            message.authorized = String(object.authorized);\n        }\n        else {\n            message.authorized = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.registered !== undefined && object.registered !== null) {\n            message.registered = fromJsonTimestamp(object.registered);\n        }\n        else {\n            message.registered = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.destination !== undefined && (obj.destination = message.destination);\n        message.price !== undefined && (obj.price = message.price);\n        message.expires !== undefined && (obj.expires = message.expires !== undefined ? message.expires.toISOString() : null);\n        message.authorized !== undefined && (obj.authorized = message.authorized);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.registered !== undefined && (obj.registered = message.registered !== undefined ? message.registered.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseName };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.destination !== undefined && object.destination !== null) {\n            message.destination = object.destination;\n        }\n        else {\n            message.destination = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        if (object.expires !== undefined && object.expires !== null) {\n            message.expires = object.expires;\n        }\n        else {\n            message.expires = undefined;\n        }\n        if (object.authorized !== undefined && object.authorized !== null) {\n            message.authorized = object.authorized;\n        }\n        else {\n            message.authorized = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.registered !== undefined && object.registered !== null) {\n            message.registered = object.registered;\n        }\n        else {\n            message.registered = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../google/protobuf/timestamp';\nimport { Name } from '../names/name';\nexport const protobufPackage = 'names';\nconst baseMsgRegister = { owner: '', commit: '', price: '' };\nexport const MsgRegister = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== '') {\n            writer.uint32(10).string(message.owner);\n        }\n        if (message.commit !== '') {\n            writer.uint32(18).string(message.commit);\n        }\n        if (message.price !== '') {\n            writer.uint32(34).string(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRegister };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = reader.string();\n                    break;\n                case 2:\n                    message.commit = reader.string();\n                    break;\n                case 4:\n                    message.price = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRegister };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = String(object.commit);\n        }\n        else {\n            message.commit = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.commit !== undefined && (obj.commit = message.commit);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRegister };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = object.commit;\n        }\n        else {\n            message.commit = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRegisterResponse = { fee: '' };\nexport const MsgRegisterResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.fee !== '') {\n            writer.uint32(10).string(message.fee);\n        }\n        if (message.expires !== undefined) {\n            Timestamp.encode(toTimestamp(message.expires), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRegisterResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fee = reader.string();\n                    break;\n                case 2:\n                    message.expires = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRegisterResponse };\n        if (object.fee !== undefined && object.fee !== null) {\n            message.fee = String(object.fee);\n        }\n        else {\n            message.fee = '';\n        }\n        if (object.expires !== undefined && object.expires !== null) {\n            message.expires = fromJsonTimestamp(object.expires);\n        }\n        else {\n            message.expires = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fee !== undefined && (obj.fee = message.fee);\n        message.expires !== undefined && (obj.expires = message.expires !== undefined ? message.expires.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRegisterResponse };\n        if (object.fee !== undefined && object.fee !== null) {\n            message.fee = object.fee;\n        }\n        else {\n            message.fee = '';\n        }\n        if (object.expires !== undefined && object.expires !== null) {\n            message.expires = object.expires;\n        }\n        else {\n            message.expires = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateName = { owner: '', name: '', destination: '', price: '', authorized: '', commit: '', salt: '' };\nexport const MsgUpdateName = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== '') {\n            writer.uint32(10).string(message.owner);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.destination !== '') {\n            writer.uint32(26).string(message.destination);\n        }\n        if (message.price !== '') {\n            writer.uint32(34).string(message.price);\n        }\n        if (message.expires !== undefined) {\n            Timestamp.encode(toTimestamp(message.expires), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.authorized !== '') {\n            writer.uint32(50).string(message.authorized);\n        }\n        if (message.commit !== '') {\n            writer.uint32(58).string(message.commit);\n        }\n        if (message.salt !== '') {\n            writer.uint32(66).string(message.salt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateName };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.destination = reader.string();\n                    break;\n                case 4:\n                    message.price = reader.string();\n                    break;\n                case 5:\n                    message.expires = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.authorized = reader.string();\n                    break;\n                case 7:\n                    message.commit = reader.string();\n                    break;\n                case 8:\n                    message.salt = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateName };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.destination !== undefined && object.destination !== null) {\n            message.destination = String(object.destination);\n        }\n        else {\n            message.destination = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        if (object.expires !== undefined && object.expires !== null) {\n            message.expires = fromJsonTimestamp(object.expires);\n        }\n        else {\n            message.expires = undefined;\n        }\n        if (object.authorized !== undefined && object.authorized !== null) {\n            message.authorized = String(object.authorized);\n        }\n        else {\n            message.authorized = '';\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = String(object.commit);\n        }\n        else {\n            message.commit = '';\n        }\n        if (object.salt !== undefined && object.salt !== null) {\n            message.salt = String(object.salt);\n        }\n        else {\n            message.salt = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.name !== undefined && (obj.name = message.name);\n        message.destination !== undefined && (obj.destination = message.destination);\n        message.price !== undefined && (obj.price = message.price);\n        message.expires !== undefined && (obj.expires = message.expires !== undefined ? message.expires.toISOString() : null);\n        message.authorized !== undefined && (obj.authorized = message.authorized);\n        message.commit !== undefined && (obj.commit = message.commit);\n        message.salt !== undefined && (obj.salt = message.salt);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateName };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.destination !== undefined && object.destination !== null) {\n            message.destination = object.destination;\n        }\n        else {\n            message.destination = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        if (object.expires !== undefined && object.expires !== null) {\n            message.expires = object.expires;\n        }\n        else {\n            message.expires = undefined;\n        }\n        if (object.authorized !== undefined && object.authorized !== null) {\n            message.authorized = object.authorized;\n        }\n        else {\n            message.authorized = '';\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = object.commit;\n        }\n        else {\n            message.commit = '';\n        }\n        if (object.salt !== undefined && object.salt !== null) {\n            message.salt = object.salt;\n        }\n        else {\n            message.salt = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateNameResponse = {};\nexport const MsgUpdateNameResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateNameResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateNameResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateNameResponse };\n        return message;\n    }\n};\nconst baseMsgDeleteName = { owner: '', name: '' };\nexport const MsgDeleteName = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== '') {\n            writer.uint32(10).string(message.owner);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteName };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteName };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteName };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteNameResponse = {};\nexport const MsgDeleteNameResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteNameResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteNameResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteNameResponse };\n        return message;\n    }\n};\nconst baseMsgReveal = { owner: '', name: '', salt: '' };\nexport const MsgReveal = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== '') {\n            writer.uint32(10).string(message.owner);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.salt !== '') {\n            writer.uint32(26).string(message.salt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgReveal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.salt = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgReveal };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.salt !== undefined && object.salt !== null) {\n            message.salt = String(object.salt);\n        }\n        else {\n            message.salt = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.name !== undefined && (obj.name = message.name);\n        message.salt !== undefined && (obj.salt = message.salt);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgReveal };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.salt !== undefined && object.salt !== null) {\n            message.salt = object.salt;\n        }\n        else {\n            message.salt = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevealResponse = {};\nexport const MsgRevealResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== undefined) {\n            Name.encode(message.name, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevealResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = Name.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevealResponse };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = Name.fromJSON(object.name);\n        }\n        else {\n            message.name = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name ? Name.toJSON(message.name) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevealResponse };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = Name.fromPartial(object.name);\n        }\n        else {\n            message.name = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSetPriceAndExtend = { owner: '', name: '', price: '' };\nexport const MsgSetPriceAndExtend = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== '') {\n            writer.uint32(10).string(message.owner);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.price !== '') {\n            writer.uint32(26).string(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetPriceAndExtend };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.price = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetPriceAndExtend };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.name !== undefined && (obj.name = message.name);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetPriceAndExtend };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetPriceAndExtendResponse = {};\nexport const MsgSetPriceAndExtendResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.expiry !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiry), writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetPriceAndExtendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 5:\n                    message.expiry = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetPriceAndExtendResponse };\n        if (object.expiry !== undefined && object.expiry !== null) {\n            message.expiry = fromJsonTimestamp(object.expiry);\n        }\n        else {\n            message.expiry = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.expiry !== undefined && (obj.expiry = message.expiry !== undefined ? message.expiry.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetPriceAndExtendResponse };\n        if (object.expiry !== undefined && object.expiry !== null) {\n            message.expiry = object.expiry;\n        }\n        else {\n            message.expiry = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgOfferTo = { owner: '', name: '', newOwner: '' };\nexport const MsgOfferTo = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== '') {\n            writer.uint32(10).string(message.owner);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgOfferTo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgOfferTo };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.name !== undefined && (obj.name = message.name);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgOfferTo };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgOfferToResponse = {};\nexport const MsgOfferToResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgOfferToResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgOfferToResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgOfferToResponse };\n        return message;\n    }\n};\nconst baseMsgAccept = { newOwner: '', name: '' };\nexport const MsgAccept = {\n    encode(message, writer = Writer.create()) {\n        if (message.newOwner !== '') {\n            writer.uint32(10).string(message.newOwner);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAccept };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.newOwner = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAccept };\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAccept };\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAcceptResponse = {};\nexport const MsgAcceptResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcceptResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgAcceptResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgAcceptResponse };\n        return message;\n    }\n};\nconst baseMsgBuy = { buyer: '', name: '' };\nexport const MsgBuy = {\n    encode(message, writer = Writer.create()) {\n        if (message.buyer !== '') {\n            writer.uint32(10).string(message.buyer);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBuy };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.buyer = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBuy };\n        if (object.buyer !== undefined && object.buyer !== null) {\n            message.buyer = String(object.buyer);\n        }\n        else {\n            message.buyer = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.buyer !== undefined && (obj.buyer = message.buyer);\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBuy };\n        if (object.buyer !== undefined && object.buyer !== null) {\n            message.buyer = object.buyer;\n        }\n        else {\n            message.buyer = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBuyResponse = {};\nexport const MsgBuyResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBuyResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBuyResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBuyResponse };\n        return message;\n    }\n};\nconst baseMsgMintCoins = { owner: '', amount: '' };\nexport const MsgMintCoins = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== '') {\n            writer.uint32(10).string(message.owner);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintCoins };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintCoins };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintCoins };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintCoinsResponse = {};\nexport const MsgMintCoinsResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintCoinsResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintCoinsResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintCoinsResponse };\n        return message;\n    }\n};\nconst baseMsgBurnCoins = { owner: '', amount: '' };\nexport const MsgBurnCoins = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== '') {\n            writer.uint32(10).string(message.owner);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnCoins };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnCoins };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnCoins };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnCoinsResponse = {};\nexport const MsgBurnCoinsResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnCoinsResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnCoinsResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnCoinsResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Register(request) {\n        const data = MsgRegister.encode(request).finish();\n        const promise = this.rpc.request('names.Msg', 'Register', data);\n        return promise.then((data) => MsgRegisterResponse.decode(new Reader(data)));\n    }\n    UpdateName(request) {\n        const data = MsgUpdateName.encode(request).finish();\n        const promise = this.rpc.request('names.Msg', 'UpdateName', data);\n        return promise.then((data) => MsgUpdateNameResponse.decode(new Reader(data)));\n    }\n    DeleteName(request) {\n        const data = MsgDeleteName.encode(request).finish();\n        const promise = this.rpc.request('names.Msg', 'DeleteName', data);\n        return promise.then((data) => MsgDeleteNameResponse.decode(new Reader(data)));\n    }\n    Reveal(request) {\n        const data = MsgReveal.encode(request).finish();\n        const promise = this.rpc.request('names.Msg', 'Reveal', data);\n        return promise.then((data) => MsgRevealResponse.decode(new Reader(data)));\n    }\n    SetPriceAndExtend(request) {\n        const data = MsgSetPriceAndExtend.encode(request).finish();\n        const promise = this.rpc.request('names.Msg', 'SetPriceAndExtend', data);\n        return promise.then((data) => MsgSetPriceAndExtendResponse.decode(new Reader(data)));\n    }\n    OfferTo(request) {\n        const data = MsgOfferTo.encode(request).finish();\n        const promise = this.rpc.request('names.Msg', 'OfferTo', data);\n        return promise.then((data) => MsgOfferToResponse.decode(new Reader(data)));\n    }\n    Accept(request) {\n        const data = MsgAccept.encode(request).finish();\n        const promise = this.rpc.request('names.Msg', 'Accept', data);\n        return promise.then((data) => MsgAcceptResponse.decode(new Reader(data)));\n    }\n    Buy(request) {\n        const data = MsgBuy.encode(request).finish();\n        const promise = this.rpc.request('names.Msg', 'Buy', data);\n        return promise.then((data) => MsgBuyResponse.decode(new Reader(data)));\n    }\n    MintCoins(request) {\n        const data = MsgMintCoins.encode(request).finish();\n        const promise = this.rpc.request('names.Msg', 'MintCoins', data);\n        return promise.then((data) => MsgMintCoinsResponse.decode(new Reader(data)));\n    }\n    BurnCoins(request) {\n        const data = MsgBurnCoins.encode(request).finish();\n        const promise = this.rpc.request('names.Msg', 'BurnCoins', data);\n        return promise.then((data) => MsgBurnCoinsResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgRegister } from \"./types/names/tx\";\nimport { MsgSetPriceAndExtend } from \"./types/names/tx\";\nimport { MsgReveal } from \"./types/names/tx\";\nimport { MsgBurnCoins } from \"./types/names/tx\";\nimport { MsgAccept } from \"./types/names/tx\";\nimport { MsgDeleteName } from \"./types/names/tx\";\nimport { MsgBuy } from \"./types/names/tx\";\nimport { MsgMintCoins } from \"./types/names/tx\";\nimport { MsgUpdateName } from \"./types/names/tx\";\nimport { MsgOfferTo } from \"./types/names/tx\";\nconst types = [\n    [\"/names.MsgRegister\", MsgRegister],\n    [\"/names.MsgSetPriceAndExtend\", MsgSetPriceAndExtend],\n    [\"/names.MsgReveal\", MsgReveal],\n    [\"/names.MsgBurnCoins\", MsgBurnCoins],\n    [\"/names.MsgAccept\", MsgAccept],\n    [\"/names.MsgDeleteName\", MsgDeleteName],\n    [\"/names.MsgBuy\", MsgBuy],\n    [\"/names.MsgMintCoins\", MsgMintCoins],\n    [\"/names.MsgUpdateName\", MsgUpdateName],\n    [\"/names.MsgOfferTo\", MsgOfferTo],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgRegister: (data) => ({ typeUrl: \"/names.MsgRegister\", value: MsgRegister.fromPartial(data) }),\n        msgSetPriceAndExtend: (data) => ({ typeUrl: \"/names.MsgSetPriceAndExtend\", value: MsgSetPriceAndExtend.fromPartial(data) }),\n        msgReveal: (data) => ({ typeUrl: \"/names.MsgReveal\", value: MsgReveal.fromPartial(data) }),\n        msgBurnCoins: (data) => ({ typeUrl: \"/names.MsgBurnCoins\", value: MsgBurnCoins.fromPartial(data) }),\n        msgAccept: (data) => ({ typeUrl: \"/names.MsgAccept\", value: MsgAccept.fromPartial(data) }),\n        msgDeleteName: (data) => ({ typeUrl: \"/names.MsgDeleteName\", value: MsgDeleteName.fromPartial(data) }),\n        msgBuy: (data) => ({ typeUrl: \"/names.MsgBuy\", value: MsgBuy.fromPartial(data) }),\n        msgMintCoins: (data) => ({ typeUrl: \"/names.MsgMintCoins\", value: MsgMintCoins.fromPartial(data) }),\n        msgUpdateName: (data) => ({ typeUrl: \"/names.MsgUpdateName\", value: MsgUpdateName.fromPartial(data) }),\n        msgOfferTo: (data) => ({ typeUrl: \"/names.MsgOfferTo\", value: MsgOfferTo.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'names';\nconst baseParams = {};\nexport const Params = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseParams };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseParams };\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Name } from \"./module/types/names/name\";\nimport { Params } from \"./module/types/names/params\";\nexport { Name, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        Name: {},\n        NameAll: {},\n        Resolve: {},\n        GenerateCommit: {},\n        _Structure: {\n            Name: getStructure(Name.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getName: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Name[JSON.stringify(params)] ?? {};\n        },\n        getNameAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NameAll[JSON.stringify(params)] ?? {};\n        },\n        getResolve: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resolve[JSON.stringify(params)] ?? {};\n        },\n        getGenerateCommit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GenerateCommit[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: names initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryName({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryName(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryName({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Name', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryName', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getName']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryName', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryNameAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryNameAll(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryNameAll({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'NameAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNameAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNameAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryNameAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResolve({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResolve(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryResolve({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resolve', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResolve', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResolve']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResolve', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGenerateCommit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGenerateCommit(key.owner, key.name, key.salt)).data;\n                commit('QUERY', { query: 'GenerateCommit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGenerateCommit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGenerateCommit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGenerateCommit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgRegister({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRegister(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRegister:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRegister:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetPriceAndExtend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetPriceAndExtend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetPriceAndExtend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetPriceAndExtend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgReveal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgReveal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgReveal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgReveal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnCoins({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnCoins(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnCoins:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnCoins:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAccept({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAccept(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAccept:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAccept:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteName({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteName(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteName:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteName:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBuy({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBuy(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBuy:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBuy:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintCoins({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintCoins(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintCoins:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintCoins:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateName({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateName(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateName:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateName:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgOfferTo({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgOfferTo(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgOfferTo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgOfferTo:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgRegister({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRegister(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRegister:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRegister:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetPriceAndExtend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetPriceAndExtend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetPriceAndExtend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetPriceAndExtend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgReveal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgReveal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgReveal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgReveal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnCoins({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnCoins(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnCoins:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnCoins:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAccept({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAccept(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAccept:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAccept:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteName({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteName(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteName:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteName:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBuy({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBuy(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBuy:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBuy:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintCoins({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintCoins(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintCoins:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintCoins:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateName({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateName(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateName:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateName:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgOfferTo({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgOfferTo(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgOfferTo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgOfferTo:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosAuthzV1Beta1 from './cosmos/cosmos-sdk/cosmos.authz.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosFeegrantV1Beta1 from './cosmos/cosmos-sdk/cosmos.feegrant.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosIbcGoIbcApplicationsTransferV1 from './cosmos/ibc-go/ibc.applications.transfer.v1';\nimport OrgDysonDyson from './org/dyson/dyson';\nimport OrgDysonNames from './org/dyson/names';\nexport default {\n    CosmosCosmosSdkCosmosAuthzV1Beta1: load(CosmosCosmosSdkCosmosAuthzV1Beta1, 'cosmos.authz.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosFeegrantV1Beta1: load(CosmosCosmosSdkCosmosFeegrantV1Beta1, 'cosmos.feegrant.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosIbcGoIbcApplicationsTransferV1: load(CosmosIbcGoIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    OrgDysonDyson: load(OrgDysonDyson, 'dyson'),\n    OrgDysonNames: load(OrgDysonNames, 'names'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n  <div>\n    <div class=\"container\">\n      <h1>\n        <div v-if=\"address\">\n          Go to your script:\n          <router-link class=\"sp-button\" :to=\"{ name: 'script-detail', params: { script_address: address } }\">\n            {{ address }}\n          </router-link>\n        </div>\n      </h1>\n      <SpTokenSend :address=\"address\" refresh=\"true\" />\n      <SpTransferList :address=\"address\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { JSONEditor } from '@json-editor/json-editor'\n\nclass CustomTheme extends JSONEditor.AbstractTheme {\n  getButton(text, icon, title) {\n    const el = super.getButton(text, icon, title)\n    //el.classList.add('sp-button')\n    return el\n  }\n\n  //getContainer() {\n  //  const el = document.createElement('div')\n  //  el.classList.add('sp-box', 'sp-shadow')\n  //  return el\n  //}\n\n  getFormControl(label, input, description, infoText) {\n    const group = document.createElement('div')\n\n    if (label && (input.type === 'checkbox' || input.type === 'radio')) {\n      group.classList.add(input.type)\n      label.insertBefore(input, label.firstChild)\n      group.appendChild(label)\n    } else {\n      input.classList.add('sp-input')\n      group.classList.add('form-group')\n      if (label) {\n        label.classList.add('control-label')\n        label.classList.add('sp-box-header')\n        group.appendChild(label)\n        if (infoText) label.appendChild(infoText)\n      }\n      group.appendChild(input)\n    }\n\n    if (description) group.appendChild(description)\n\n    return group\n  }\n}\nCustomTheme.rules = {}\nJSONEditor.defaults.themes.myCustom = CustomTheme\n\nexport default {\n  name: 'Index',\n  computed: {\n    address() {\n      return this.$store.getters['common/wallet/address']\n    },\n  },\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=5bac56ac\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"sp-type-list-empty\" v-if=\"!typeItems || typeItems.length == 0\"></div>\n  <template v-else>\n    <div v-for=\"item in typeItems\" v-bind:key=\"item.index\">\n      <router-link\n        :to=\"{ name: 'script-detail', params: { script_address: item.index } }\"\n        class=\"sp-button-primary sp-button\"\n      >\n        {{ item.index }}\n      </router-link>\n    </div>\n  </template>\n</template>\n<script>\nconst schema = {}\nexport default {\n  name: 'ScriptList',\n  computed: {\n    typeItems: function () {\n      const items = this.$store.getters['dyson/getScriptAll']()\n      window.items = items\n      return items ? items['Script'] : []\n    },\n  },\n  created: async function () {\n    await this.$store.dispatch('dyson/QueryScriptAll', {\n      options: { subscribe: false, all: true },\n    })\n  },\n  methods: {},\n  mounted: function () {\n    window.$store = this.$store\n  },\n}\n</script>\n","import { render } from \"./ScriptList.vue?vue&type=template&id=1f2810d2\"\nimport script from \"./ScriptList.vue?vue&type=script&lang=js\"\nexport * from \"./ScriptList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<style scoped>\n.smol-css-grid {\n  --min: 90ch;\n  --gap: 1rem;\n\n  display: grid;\n  grid-gap: var(--gap);\n  /* min() with 100% prevents overflow\n    in extra narrow spaces */\n  grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--min)), 1fr));\n  pre {\n    white-space: pre-wrap;\n  }\n}\n</style>\n\n<template>\n  <div class=\"container\">\n    <div class=\"smol-css-grid\">\n      <div id=\"schemas\">\n        <div v-if=\"schemas && schemas.error\">\n          {{ schemas.error }}\n        </div>\n        <div v-for=\"item in schemas\" v-bind:key=\"item.function\">\n          <FunctionDetail\n            v-if=\"item.schema\"\n            v-bind:schema=\"item.schema\"\n            v-bind:name=\"item.function\"\n            v-bind:scriptAddress=\"this.$route.params.script_address\"\n          />\n          <div v-if=\"item.error\" class=\"sp-box sp-shadow\">\n            <h3>{{ item.function }}</h3>\n            <pre>{{ item.error }}</pre>\n          </div>\n        </div>\n      </div>\n      <div id=\"code\">\n        <div v-if=\"script || address == this.$route.params.script_address\">\n          <VAceEditor v-model:value=\"code\" lang=\"python\" theme=\"chrome\" min-lines=\"30\" max-lines=\"200\" />\n          <button @click=\"save\" :disabled=\"inFlight || address != this.$route.params.script_address\" class=\"sp-button\">\n            save\n          </button>\n        </div>\n        <pre v-if=\"txResult\">\nTX hash: {{ txResult.transactionHash }}\nHeight: {{ txResult.height }}\nRaw Log: {{ txResult.rawLog }}\n        </pre>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FunctionDetail from './FunctionDetail'\nimport { VAceEditor } from 'vue3-ace-editor'\nimport 'ace-builds/src-noconflict/theme-chrome'\nimport 'ace-builds/src-noconflict/mode-python'\n\nexport default {\n  name: 'ScriptDetail',\n  data: function () {\n    return {\n      scriptAddress: null,\n      inFlight: false,\n      txResult: null,\n      editedCode: null,\n    }\n  },\n  components: {\n    FunctionDetail,\n    VAceEditor,\n  },\n  methods: {\n    async save(e) {\n      this.inFlight = true\n      this.txResult = null\n      const value = {\n        creator: this.address,\n        code: this.code,\n      }\n      try {\n        this.txResult = await this.$store.dispatch('dyson/sendMsgUpdateScript', {\n          value: value,\n          fee: [{ amount: '2000', denom: 'dys' }],\n        })\n        this.inFlight = false\n        console.log('txResult', this.txResult)\n      } catch (e) {\n        console.error(e)\n      } finally {\n        this.inFlight = false\n        this.update()\n      }\n    },\n    async update() {\n      this.scriptAddress = this.$route.params.script_address\n      this.$store\n        .dispatch('dyson/QueryScript', {\n          query: { index: this.$route.params.script_address },\n          options: { subscribe: false, all: false },\n        })\n        .then(() => {\n          this.editedCode = null\n        })\n      this.$store\n        .dispatch('dyson/QuerySchema', {\n          query: { index: this.$route.params.script_address },\n          options: { subscribe: false, all: false },\n        })\n        .then(console.log)\n    },\n  },\n  computed: {\n    address: function () {\n      return this.$store.getters['common/wallet/address']\n    },\n    code: {\n      get() {\n        if (this.editedCode === null) {\n          return this.script ? this.script.code : ''\n        } else {\n          return this.editedCode\n        }\n      },\n      set(newValue) {\n        this.editedCode = newValue\n      },\n    },\n    schemas: function () {\n      const result = this.$store.getters['dyson/getSchema']({\n        params: {},\n        query: { index: this.$route.params.script_address },\n      })\n\n      const schemas = result.schema ? JSON.parse(result.schema) : []\n      return schemas.filter((s) => {\n        return this.scriptAddress == this.address || (s.function != 'app' && !(s.function || '').startsWith('_'))\n      })\n    },\n    script: function () {\n      const result = this.$store.getters['dyson/getScript']({\n        params: {},\n        query: { index: this.$route.params.script_address },\n      })\n      return result ? result.script : {}\n    },\n  },\n  created: async function () {\n    this.update()\n  },\n}\n</script>\n","<template>\n  <div :class=\"{ modal: isModal }\">\n    <div :class=\"{ 'modal-content': isModal }\">\n      <form v-on:submit=\"submit\" class=\"sp-box sp-shadow\" :action=\"`#${name}`\">\n\n        <div v-if=\"isModal\" class=\"close\" @click=\"this.isModal=false\"> &times; </div>\n        <div v-bind:id=\"name\"></div>\n        <button name=\"action\"  @click=\"this.isModal=!this.isModal\" value=\"link\" class=\"sp-button\">link {{ name }}</button>\n        <button name=\"action\" :disabled=\"this.inflight\" type=\"submit\" value=\"query\" class=\"sp-button\">\n          Query {{ name }}\n        </button>\n        <button\n          name=\"action\"\n          :disabled=\"!address || this.inflight\"\n          type=\"submit\"\n          value=\"run\"\n          class=\"sp-button sp-button-primary\"\n        >\n          Run {{ name }}\n        </button>\n        <button class=\"sp-button\" v-on:click=\"isHidden = !isHidden\">Coins to Send</button>\n        <div class=\"form-group\" v-show=\"!isHidden\">\n          <label class=\"control-label sp-box-header\">Coins</label>\n          <input class=\"sp-input\" v-model=\"coins\" />\n        </div>\n      </form>\n      <pre v-if=\"runResponse\">\nTX hash: {{ runResponse.tx }}\nCumulative Size: {{ runResponse.cumsize }}\nNodes Evaluated: {{ runResponse.nodes_called }}\nGas consumed: {{ runResponse.gasUsed }}\nGas Limit: {{ runResponse.gasWanted }}\n\nResult: {{ runResponse.result }}\n\nException: {{ runResponse.exception }}\n\nStdout:\n{{ runResponse.stdout }}\n  </pre\n      >\n      <pre v-if=\"queryResponseErr\">{{ queryResponseErr }}</pre>\n      <pre v-if=\"queryResponse\">\nCumulative Size: {{ queryResponse.cumsize }}\nNodes Evaluated: {{ queryResponse.nodes_called }}\nEstimated Gas Consumed: {{ queryResponse.script_gas_consumed }}\nGas Limit: {{ queryResponse.gas_limit }}\nResult: {{ queryResponse.result }}\nException: {{ queryResponse.exception }}\nStdout:\n{{ queryResponse.stdout }}\n  </pre\n      >\n    </div>\n  </div>\n</template>\n<script>\nvar qs = require('qs')\nimport { JSONEditor } from '@json-editor/json-editor'\nimport 'animate.css'\n\nexport default {\n  name: 'FunctionDetail',\n  props: {\n    schema: Object,\n    name: String,\n    scriptAddress: String,\n  },\n  data: function () {\n    return {\n      runResponse: null,\n      queryResponse: null,\n      queryResponseErr: null,\n      inflight: false,\n      coins: '',\n      isHidden: true,\n      isModal: false,\n    }\n  },\n  computed: {\n    queryData: function () {\n      let uri = window.location.search.substring(1)\n      return qs.parse(uri)[this.name]\n    },\n    address: function () {\n      return this.$store.getters['common/wallet/address']\n    },\n  },\n  methods: {\n    submit: async function (e) {\n      console.log(e.submitter.value)\n      if (e.submitter.value != 'link') {\n        e.preventDefault()\n      }\n      this.runResponse = null\n      this.queryResponse = null\n      this.queryResponseErr = null\n      if (this._depsLoaded) {\n        const value = {\n          creator: this.address,\n          address: this.scriptAddress,\n          functionName: this.name,\n          kwargs: JSON.stringify(this.editor.getValue()),\n          coins: this.coins,\n        }\n        console.log(value)\n\n        if (e.submitter.value == 'run') {\n          var txResult = {}\n          try {\n            this.editor.disable()\n            this.inflight = true\n            var runResponse = {}\n            try {\n              txResult = await this.$store.dispatch('dyson/sendMsgRun', {\n                value: value,\n                fee: [{ amount: '2000', denom: 'dys' }],\n              })\n              console.log('txResult', txResult)\n              runResponse = JSON.parse(\n                JSON.parse(txResult['rawLog'])[0]\n                  ['events'].filter((i) => i.type == 'run')[0]\n                  ['attributes'].slice(-1)[0]['value'],\n              )\n              runResponse.gasUsed = txResult.gasUsed\n              runResponse.gasWanted = txResult.gasWanted   \n            } catch (objError) {\n              console.info('objError', objError)\n              if (objError instanceof SyntaxError) {\n                runResponse.exception = txResult['rawLog']\n              } else {\n                runResponse.exception = objError.message\n              }\n            }\n\n            console.log('runResponse', runResponse)\n            this.runResponse = runResponse\n            this.runResponse.tx = txResult.transactionHash\n          } catch (e) {\n            console.log('uncaught error', e)\n          } finally {\n            this.editor.enable()\n            this.inflight = false\n          }\n        } else if (e.submitter.value == 'query') {\n          try {\n            this.editor.disable()\n            this.inflight = true\n            const resp = await this.$store.dispatch('dyson/QueryQueryScript', {\n              params: {},\n              query: value,\n              options: { subscribe: false },\n            })\n            console.log('queryResponse', resp)\n            try {\n              this.queryResponse = JSON.parse(resp.response)\n            } catch (e) {\n              if (e instanceof SyntaxError) {\n                this.queryResponseErr = resp.response\n              }\n            }\n          } catch (e) {\n            this.queryResponseErr = e\n            console.error(e)\n          } finally {\n            this.editor.enable()\n            this.inflight = false\n          }\n        }\n      }\n    },\n    setupEditor() {\n      if (this.editor) {\n        this.editor.destroy()\n      }\n      const element = document.getElementById(this.name)\n\n      this.editor = new JSONEditor(element, {\n        form_name_root: this.name,\n        schema: this.schema,\n        disable_collapse: true,\n        //disable_properties: true,\n        //disable_edit_json: true,\n        show_opt_in: true,\n        theme: 'myCustom',\n      })\n      window[this.name + 'editor'] = this.editor\n      this.editor.setValue(this.queryData)\n      this.inflight = false\n\n      if ('#' + this.name === window.location.hash) {\n        element.scrollIntoView()\n        this.isModal = true\n      } else {\n        this.isModal = false\n      }\n    },\n  },\n  watch: {\n    schema: function (val) {\n      if (JSON.stringify(val) !== JSON.stringify(this.editor.schema)) {\n        this.setupEditor()\n      }\n    },\n  },\n\n  mounted: function () {\n    this.$nextTick(function () {\n      this.setupEditor()\n    })\n  },\n}\n</script>\n<style>\n.sp-box {\n  margin-bottom: 15px;\n}\npre {\n  white-space: pre-wrap;\n}\n\n.close {\n  display: none;\n}\n\n/* The Modal (background) */\n.modal {\n  position: fixed; /* Stay in place */\n  z-index: 10; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.5); /* Black w/ opacity */\n}\n\n.modal .close {\n  display: block;\n}\n/* Modal Content/Box */\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto; /* 15% from the top and centered */\n  padding: 20px;\n  border: 1px solid #888;\n  width: 50%; /* Could be more or less, depending on screen size */\n}\n\n/* The Close Button */\n.close {\n  color: #aaa;\n  font-size: 28px;\n  font-weight: bold;\n  text-align: right;\n}\n\n.close:hover,\n.close:focus {\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n}\n</style>\n","import { render } from \"./FunctionDetail.vue?vue&type=template&id=07bcec6e\"\nimport script from \"./FunctionDetail.vue?vue&type=script&lang=js\"\nexport * from \"./FunctionDetail.vue?vue&type=script&lang=js\"\n\nimport \"./FunctionDetail.vue?vue&type=style&index=0&id=07bcec6e&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ScriptDetail.vue?vue&type=template&id=2c9be5e0&scoped=true\"\nimport script from \"./ScriptDetail.vue?vue&type=script&lang=js\"\nexport * from \"./ScriptDetail.vue?vue&type=script&lang=js\"\n\nimport \"./ScriptDetail.vue?vue&type=style&index=0&id=2c9be5e0&scoped=true&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2c9be5e0\"]])\n\nexport default __exports__","<style scoped>\n.smol-css-grid {\n  --min: 90ch;\n  --gap: 1rem;\n\n  display: grid;\n  grid-gap: var(--gap);\n  /* min() with 100% prevents overflow\n    in extra narrow spaces */\n  grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--min)), 1fr));\n}\n</style>\n<template>\n  <div class=\"container\">\n    <div class=\"smol-css-grid\">\n      <div class=\"sp-box sp-shadow\">\n        <select v-model=\"command\">\n          <option disabled value=\"\">Please select one</option>\n          <option v-for=\"c in tx\" v-bind:key=\"c\" v-bind:value=\"c\">Tx - {{ c }}</option>\n          <option v-for=\"c in query\" v-bind:key=\"c\" v-bind:value=\"c\">Query - {{ c }}</option>\n        </select>\n        <div class=\"sp-box-header\">\n          {{ command }}\n        </div>\n        <form v-on:submit=\"submit\" class=\"\">\n          <div class=\"form-group\">\n            <VAceEditor v-model:value=\"data\" lang=\"json\" theme=\"chrome\" min-lines=\"10\" max-lines=\"200\" />\n            <div>{{ error }}</div>\n            <button name=\"action\" :disabled=\"disabled\" type=\"submit\" value=\"run\" class=\"sp-button sp-button-primary\">\n              {{ buttontxt }}\n            </button>\n            <div class=\"form-group\" v-show=\"showFee\">\n              <label class=\"control-label sp-box-header\">DYS gas fee</label>\n              <input class=\"sp-input\" v-model=\"fee\" />\n            </div>\n          </div>\n        </form>\n      </div>\n      <div>\n        <pre>\nfrom dys import rpc\n\n\ndef example():\n    return rpc(\"{{ command || 'example/command' }}\"{{ command_kwargs }})\n\n</pre\n        >\n      </div>\n    </div>\n    <div class=\"smol-css-grid\">\n      <div id=\"editor\"></div>\n      <div id=\"responseEditor\"></div>\n    </div>\n  </div>\n</template>\n<script>\nimport { VAceEditor } from 'vue3-ace-editor'\nimport 'ace-builds/src-noconflict/theme-chrome'\nimport 'ace-builds/src-noconflict/mode-json'\nimport command_schema from './command_schema.json'\nimport { JSONEditor } from '@json-editor/json-editor'\n\nwindow.command_schema = command_schema\n\nconst snakeToCamel = (s) => s.replace(/(_\\w)/g, (k) => k[1].toUpperCase())\n\nconst flattenObject = (obj, prefix = '') =>\n  Object.keys(obj).reduce((acc, k) => {\n    const pre = prefix.length ? prefix + '.' : ''\n    if (typeof obj[k] === 'object') Object.assign(acc, flattenObject(obj[k], pre + k))\n    else acc[pre + k] = obj[k]\n    return acc\n  }, {})\n\nconst pythonify = (obj) => {\n  if (obj === true) return 'True'\n  if (obj === false) return 'False'\n  if (obj === undefined) return 'None'\n  if (obj === null) return 'None'\n  if (Array.isArray(obj)) {\n    return (\n      '[' +\n      Object.keys(obj)\n        .map((i) => {\n          return pythonify(obj[i])\n        })\n        .join(', ') +\n      ']'\n    )\n  }\n  if (typeof obj === 'object') {\n    return (\n      '{' +\n      Object.keys(obj)\n        .map((key) => {\n          return `\"${key}\": ${pythonify(obj[key])}`\n        })\n        .join(', ') +\n      '}'\n    )\n  }\n  return JSON.stringify(obj)\n}\n\nwindow.pythonify = pythonify\n\nfunction deepen(obj) {\n  const result = {}\n\n  // For each object path (property key) in the object\n  for (const objectPath in obj) {\n    // Split path into component parts\n    const parts = objectPath.split('.')\n\n    // Create sub-objects along path as needed\n    let target = result\n    while (parts.length > 1) {\n      const part = parts.shift()\n      target = target[part] = target[part] || {}\n    }\n\n    // Set value at end of path\n    target[parts[0]] = obj[objectPath]\n  }\n\n  return result\n}\n\nexport default {\n  data: function () {\n    return {\n      tx: [],\n      query: [],\n      command: '',\n      command_kwargs: '',\n      inflight: false,\n      data: '{}',\n      editorData: {},\n      error: '',\n      response: '',\n      fee: \"2000\",\n      showFee: false,\n    }\n  },\n  watch: {\n    command: function (val, oldVal) {\n      console.log('watch command:', val, oldVal)\n      const query = { ...this.$route.query, command: val }\n      this.$router.replace({ query })\n      this.setupEditor()\n      this.setupResponseEditor()\n    },\n    data: function (val, oldVal) {\n      console.log('watch data:', val, oldVal)\n      try {\n        if (JSON.stringify(JSON.parse(val)) !== JSON.stringify(JSON.parse(oldVal))) {\n          const s = JSON.stringify(JSON.parse(val), null, 2)\n          const obj = JSON.parse(val)\n          const query = { ...this.$route.query, data: JSON.stringify(obj) }\n          this.data = s\n          this.$router.replace({ query })\n          var deepData = { ...obj.value, ...obj.query, ...obj.params }\n          deepData = deepen(deepData)\n          if (this.editor) this.editor.setValue(deepData)\n        }\n        this.error = null\n      } catch (e) {\n        this.error = e\n      }\n    },\n    fee: function (val, oldVal) {\n      console.log('watch fee', val, oldVal)\n      if (oldVal !== null) {\n        this.editorChanged()\n      }\n    },\n    response: function (val, oldVal) {\n      this.responseEditor.setValue(val)\n      this.responseEditor.disable()\n    },\n  },\n  computed: {\n    address: function () {\n      return this.$store.getters['common/wallet/address']\n    },\n    buttontxt: function () {\n      if (this.tx.includes(this.command)) {\n        if (!this.address) {\n          return 'Unlock Wallet to Sign Transaction'\n        } else {\n          return 'Sign Transaction'\n        }\n      }\n      if (this.query.includes(this.command)) {\n        return 'Run Query'\n      }\n      return 'Select Command'\n    },\n    disabled: function () {\n      if (this.inflight || this.error || !this.command) {\n        return true\n      }\n      if (!this.address && this.tx.includes(this.command)) {\n        return true\n      }\n      return false\n    },\n  },\n  methods: {\n    editorChanged() {\n      console.log('editorChanged', this.data)\n      if (command_schema[this.command].service_name === 'Query') {\n        this.showFee = false\n        var query = JSON.parse(JSON.stringify(this.editor.getValue()))\n        var params = {}\n        const rules = command_schema[this.command].http_rules\n        if (rules) {\n          const rule = rules[0]\n          for (let i in rule.Params) {\n            // Needed because starport g vuex is using json_fieldnames\n            const param = rule.Params[i]\n            params[rule.Params[i]] = query[param]\n            delete query[param]\n          }\n          query = flattenObject(query)\n        }\n        this.data = JSON.stringify({ query: query, params: params }, null, 2)\n      } else if (command_schema[this.command].service_name === 'Msg') {\n        this.showFee = true\n        var value = JSON.parse(JSON.stringify(this.editor.getValue()))\n        const fee = [{ amount: this.fee, denom: 'dys' }]\n        this.data = JSON.stringify({ value: value, fee: fee }, null, 2)\n      }\n      var data = JSON.parse(JSON.stringify(this.editor.getValue()))\n      this.command_kwargs = Object.keys(data)\n        .map(function (key, index) {\n          return ', ' + key + '=' + pythonify(data[key])\n        })\n        .join('')\n    },\n    setupEditor() {\n      console.log('setupEditor', self.data)\n      const element = document.getElementById('editor')\n      if (!element) return\n      if (this.editor) {\n        this.editor.destroy()\n      }\n\n      this.editor = new JSONEditor(element, {\n        form_name_root: 'editor',\n        schema: command_schema[this.command].request_schema || {},\n        disable_collapse: true,\n        disable_properties: true,\n        disable_edit_json: true,\n        show_opt_in: true,\n        theme: 'myCustom',\n      })\n      this.editor.on('change', this.editorChanged)\n\n      window['editor'] = this.editor\n      this.inflight = false\n    },\n    submit: async function (e) {\n      e.preventDefault()\n\t  this.responseEditor.setValue({})\n      this.$store\n        .dispatch(this.command, JSON.parse(this.data))\n        .then((res) => (this.response = res))\n        .catch((res) => (this.error = res))\n    },\n    setupResponseEditor() {\n      const element = document.getElementById('responseEditor')\n      if (!element) return\n      if (this.responseEditor) {\n        this.responseEditor.destroy()\n      }\n\n      this.responseEditor = new JSONEditor(element, {\n        form_name_root: 'responseEditor',\n        schema: command_schema[this.command]['resp_schema'] || {},\n        disable_collapse: true,\n        disable_properties: true,\n        disable_edit_json: true,\n        show_opt_in: false,\n        theme: 'myCustom',\n      })\n      this.responseEditor.disable()\n\n      window['responseEditor'] = this.responseEditor\n    },\n  },\n  created: async function () {\n    console.log('created')\n    window.$store = this.$store\n  },\n  components: {\n    VAceEditor,\n  },\n\n  mounted: function () {\n    console.log('mounted')\n    this.tx = Object.keys(this.$store['_actions']).filter((key) => key.match('sendMsg'))\n    this.query = Object.keys(this.$store['_actions']).filter((key) => key.match('Query'))\n    this.command = this.$route.query.command\n    const data = JSON.parse(this.$route.query.data || '{}')\n    const s = JSON.stringify(data, null, 2)\n    if (data.fee !== undefined) {\n      for (const fee of data.fee) {\n        console.log('fee', fee)\n        if (fee.denom === 'dys') {\n          this.fee = fee.amount\n        }\n      }\n    }\n\n    this.data = s\n    this.setupEditor()\n    this.setupResponseEditor()\n  },\n}\n</script>\n","import { render } from \"./TxBuilder.vue?vue&type=template&id=fc57cfce&scoped=true\"\nimport script from \"./TxBuilder.vue?vue&type=script&lang=js\"\nexport * from \"./TxBuilder.vue?vue&type=script&lang=js\"\n\nimport \"./TxBuilder.vue?vue&type=style&index=0&id=fc57cfce&scoped=true&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fc57cfce\"]])\n\nexport default __exports__","<style scoped>\n.smol-css-grid {\n  --min: 90ch;\n  --gap: 1rem;\n\n  display: grid;\n  grid-gap: var(--gap);\n  /* min() with 100% prevents overflow\n    in extra narrow spaces */\n  grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--min)), 1fr));\n  pre {\n    white-space: pre-wrap;\n  }\n}\n</style>\n<template>\n  <div class=\"container\">\n    <div class=\"search-wrapper\">\n      <input type=\"text\" v-model=\"search\" placeholder=\"Search function..\" />\n      <button @click=\"search = ''\">clear</button>\n    </div>\n    <div class=\"smol-css-grid\">\n      <div>\n        <h1>Documentation</h1>\n        <div v-bind:id=\"propertyName\" v-for=\"(value, propertyName) in dyslang_docs\" v-bind:key=\"propertyName\">\n          <div v-if=\"propertyName.toLowerCase().includes(search.toLowerCase())\">\n            <pre><strong><a v-bind:href=\"'#' + propertyName\">{{ propertyName }}</a>{{ value.definition }}{{ value.init_definition }}</strong>\n\n{{ value.docstring }}</pre>\n            <hr />\n          </div>\n        </div>\n      </div>\n      <div>\n        <h1>Index</h1>\n        <div v-for=\"(value, propertyName) in dyslang_docs\" v-bind:key=\"propertyName\">\n          <div v-if=\"propertyName.toLowerCase().includes(search.toLowerCase())\">\n            <a v-bind:href=\"'#' + propertyName\">{{ propertyName }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <pre>{{ filteredList }}</pre>\n</template>\n<script>\nimport dyslang_docs from './dyslang_docs.json'\n\nexport default {\n  name: 'Docs',\n  data: function () {\n    return {\n      dyslang_docs,\n      search: '',\n    }\n  },\n  computed: {},\n  watch: {},\n}\n</script>\n","import { render } from \"./Docs.vue?vue&type=template&id=9098bccc&scoped=true\"\nimport script from \"./Docs.vue?vue&type=script&lang=js\"\nexport * from \"./Docs.vue?vue&type=script&lang=js\"\n\nimport \"./Docs.vue?vue&type=style&index=0&id=9098bccc&scoped=true&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9098bccc\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Relayers from '@/views/Relayers.vue'\nimport ScriptList from '@/views/ScriptList.vue'\nimport ScriptDetail from '@/views/ScriptDetail.vue'\nimport TxBuilder from '@/views/TxBuilder.vue'\nimport Docs from '@/views/Docs.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n  { path: '/', component: Index },\n  { path: '/relayers', component: Relayers },\n  { path: '/scripts', name: 'script-list', component: ScriptList },\n  { path: '/scripts/:script_address', name: 'script-detail', component: ScriptDetail },\n  { path: '/txbuilder', name: 'tx-builder', component: TxBuilder},\n  { path: '/docs', name: 'docs', component: Docs},\n]\n\nconst router = createRouter({\n  history: routerHistory,\n  routes,\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nwindow.vueStore = store\n\n// This is probbly not great, but we want to use the same\n//\nwindow.startVueApp = function() {\n    const app = createApp(App)\n    app.config.globalProperties._depsLoaded = true\n    app.use(store).use(router).use(vueLib).mount('#app')\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkDyson\"] = self[\"webpackChunkDyson\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(11184); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["initialized","ref","$refs","menu","closeDropdown","sidebar","content","sidebarOpen","default","link","text","icon","address","footer","showText","name","data","computed","hasWallet","this","$store","hasModule","getters","__exports__","components","Sidebar","async","dispatch","errorCaptured","err","console","log","render","ContentType","HttpClient","constructor","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","input","JSON","stringify","FormData","Object","keys","reduce","key","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","get","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","r","response","error","ok","catch","e","assign","addQueryParam","value","encodeURIComponent","Array","isArray","join","rawQuery","filter","map","addQueryParams","params1","params2","Api","super","arguments","queryGrants","method","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","length","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","object","Number","toJSON","obj","fromPartial","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseAny","typeUrl","Any","string","bytes","String","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","push","fromCharCode","baseGenericAuthorization","msg","GenericAuthorization","baseGrant","Grant","authorization","fork","ldelim","expiration","toTimestamp","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","t","millis","Date","o","baseMsgGrant","granter","grantee","MsgGrant","grant","baseMsgExec","MsgExec","v","msgs","baseMsgRevoke","msgTypeUrl","MsgRevoke","types","MissingWalletError","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","client","SigningStargateClient","getAccounts","signAndBroadcast","fee","memo","msgExec","msgRevoke","msgGrant","queryClient","baseEventGrant","EventGrant","baseEventRevoke","EventRevoke","baseGrantAuthorization","GrantAuthorization","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","Grants","_Structure","_Registry","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getGrants","getTypeStructure","getRegistry","actions","init","rootGetters","on","resetState","commit","unsubscribe","forEach","sub","parse","action","payload","SpVuexError","options","subscribe","all","pagination","next_key","result","queryAllBalances","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","Coin","baseParams","defaultSendEnabled","Params","sendEnabled","SendEnabled","bool","Boolean","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","total","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","description","base","display","symbol","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseSendAuthorization","SendAuthorization","spendLimit","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","queryCommunityPool","queryDelegationTotalRewards","delegatorAddress","queryDelegationRewards","validatorAddress","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseDecCoin","DecCoin","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgWithdrawDelegatorReward","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","ValidatorHistoricalRewards","cumulativeRewardRatio","baseValidatorCurrentRewards","period","ValidatorCurrentRewards","rewards","uint64","baseValidatorAccumulatedCommission","ValidatorAccumulatedCommission","commission","baseValidatorOutstandingRewards","ValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","ValidatorSlashEvent","baseValidatorSlashEvents","ValidatorSlashEvents","validatorSlashEvents","baseFeePool","FeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","CommunityPoolSpendProposal","baseDelegatorStartingInfo","previousPeriod","stake","height","DelegatorStartingInfo","baseDelegationDelegatorReward","DelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","CommunityPoolSpendProposalWithDeposit","baseDelegatorWithdrawInfo","DelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","ValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","ValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","ValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","ValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","DelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","ValidatorSlashEventRecord","validatorSlashEvent","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","validator_address","delegator_address","queryAllEvidence","queryEvidence","evidenceHash","baseMsgSubmitEvidence","submitter","MsgSubmitEvidence","evidence","msgSubmitEvidence","baseEquivocation","power","consensusAddress","Equivocation","time","Evidence","AllEvidence","getEvidence","getAllEvidence","evidence_hash","queryAllowance","queryAllowances","baseMsgGrantAllowance","MsgGrantAllowance","allowance","baseMsgRevokeAllowance","MsgRevokeAllowance","msgRevokeAllowance","msgGrantAllowance","baseDuration","Duration","baseBasicAllowance","BasicAllowance","basePeriodicAllowance","PeriodicAllowance","basic","periodSpendLimit","periodCanSpend","periodReset","baseAllowedMsgAllowance","allowedMessages","AllowedMsgAllowance","Allowance","Allowances","V1Beta1ProposalStatus","V1Beta1VoteOption","getAllowance","getAllowances","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","UNRECOGNIZED","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseWeightedVoteOption","option","weight","WeightedVoteOption","baseTextProposal","TextProposal","baseDeposit","Deposit","baseProposal","status","Proposal","finalTallyResult","TallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","Vote","baseDepositParams","DepositParams","minDeposit","maxDepositPeriod","baseVotingParams","VotingParams","votingPeriod","baseTallyParams","TallyParams","quorum","threshold","vetoThreshold","baseMsgSubmitProposal","proposer","MsgSubmitProposal","initialDeposit","baseMsgVote","MsgVote","baseMsgVoteWeighted","MsgVoteWeighted","baseMsgDeposit","MsgDeposit","msgVote","msgDeposit","msgSubmitProposal","msgVoteWeighted","Proposals","Votes","Deposits","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","proposal_id","params_type","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","ValidatorSigningInfo","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseSigningInfo","SigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","ValidatorMissedBlocks","missedBlocks","MissedBlock","baseMissedBlock","index","missed","SigningInfos","V1Beta1BondStatus","getSigningInfo","getSigningInfos","cons_address","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseConsensus","block","app","Consensus","BlockIDFlag","SignedMsgType","basePartSetHeader","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","Header","version","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","proposerAddress","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","header","valset","Validator","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","baseValidator","operatorAddress","jailed","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","baseValAddresses","addresses","ValAddresses","baseDVPair","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","maxValidators","maxEntries","historicalEntries","bondDenom","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgBeginRedelegate","msgDelegate","msgUndelegate","msgCreateValidator","msgEditValidator","AuthorizationType","authorizationTypeFromJSON","AUTHORIZATION_TYPE_UNSPECIFIED","AUTHORIZATION_TYPE_DELEGATE","AUTHORIZATION_TYPE_UNDELEGATE","AUTHORIZATION_TYPE_REDELEGATE","authorizationTypeToJSON","baseStakeAuthorization","authorizationType","StakeAuthorization","maxTokens","allowList","StakeAuthorization_Validators","denyList","baseStakeAuthorization_Validators","baseLastValidatorPower","LastValidatorPower","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","validator_addr","delegator_addr","baseMsgCreateVestingAccount","endTime","delayed","MsgCreateVestingAccount","msgCreateVestingAccount","baseBaseAccount","accountNumber","sequence","BaseAccount","pubKey","baseBaseVestingAccount","BaseVestingAccount","baseAccount","originalVesting","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","basePermanentLockedAccount","PermanentLockedAccount","queryDenomTraces","queryDenomTrace","baseHeight","revisionNumber","revisionHeight","Height","baseMsgTransfer","sourcePort","sourceChannel","receiver","timeoutTimestamp","MsgTransfer","token","timeoutHeight","msgTransfer","baseFungibleTokenPacketData","FungibleTokenPacketData","baseDenomTrace","baseDenom","DenomTrace","receiveEnabled","DenomTraces","getDenomTrace","getDenomTraces","queryQueryScript","querySchema","queryScript","queryScriptAll","queryStorage","queryStorageAll","queryPrefixStorage","queryWsgi","querySchedualedRun","querySchedualedRunAll","baseMsgRun","creator","extraLines","functionName","args","kwargs","MsgRun","baseMsgRunResponse","MsgRunResponse","baseMsgCreateSchedualedRun","MsgCreateSchedualedRun","baseMsgUpdateSchedualedRun","MsgUpdateSchedualedRun","baseMsgUpdateSchedualedRunResponse","MsgUpdateSchedualedRunResponse","_","baseMsgDeleteSchedualedRun","MsgDeleteSchedualedRun","baseMsgDeleteSchedualedRunResponse","MsgDeleteSchedualedRunResponse","baseMsgCreateStorage","force","MsgCreateStorage","baseMsgUpdateStorage","MsgUpdateStorage","baseMsgDeleteStorage","MsgDeleteStorage","baseMsgCreateScript","code","MsgCreateScript","baseMsgUpdateScript","MsgUpdateScript","baseMsgDeleteScript","MsgDeleteScript","msgRun","msgCreateStorage","msgUpdateStorage","msgCreateScript","msgUpdateScript","msgDeleteStorage","msgCreateSchedualedRun","msgDeleteSchedualedRun","msgDeleteScript","msgUpdateSchedualedRun","baseSchedualedRun","SchedualedRun","resp","gasprice","baseScript","Script","baseStorage","Storage","SchedualedRunAll","StorageAll","Schema","Wsgi","QueryScript","ScriptAll","PrefixStorage","getSchedualedRun","getSchedualedRunAll","getStorage","getStorageAll","getScript","getSchema","getWsgi","getQueryScript","getScriptAll","getPrefixStorage","queryGenerateCommit","owner","salt","queryName","queryNameAll","queryResolve","baseName","destination","price","authorized","Name","expires","registered","baseMsgRegister","MsgRegister","baseMsgUpdateName","MsgUpdateName","baseMsgDeleteName","MsgDeleteName","baseMsgReveal","MsgReveal","baseMsgSetPriceAndExtend","MsgSetPriceAndExtend","baseMsgOfferTo","newOwner","MsgOfferTo","baseMsgAccept","MsgAccept","baseMsgBuy","buyer","MsgBuy","baseMsgMintCoins","MsgMintCoins","baseMsgBurnCoins","MsgBurnCoins","msgRegister","msgSetPriceAndExtend","msgReveal","msgBurnCoins","msgAccept","msgDeleteName","msgBuy","msgMintCoins","msgUpdateName","msgOfferTo","NameAll","Resolve","GenerateCommit","getName","getNameAll","getResolve","getGenerateCommit","CosmosCosmosSdkCosmosAuthzV1Beta1","load","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosFeegrantV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosIbcGoIbcApplicationsTransferV1","OrgDysonDyson","OrgDysonNames","mod","fullns","store","registerModule","mutation","root","moduleInit","values","generated","transfers","blocks","env","relayers","createStore","class","to","refresh","CustomTheme","JSONEditor","getButton","el","getFormControl","label","infoText","group","document","createElement","classList","appendChild","insertBefore","firstChild","rules","typeItems","item","items","created","methods","mounted","id","schemas","function","schema","scriptAddress","$route","script_address","script","lang","theme","save","disabled","inFlight","txResult","transactionHash","rawLog","isModal","submit","inflight","isHidden","runResponse","tx","cumsize","nodes_called","gasUsed","gasWanted","exception","stdout","queryResponseErr","queryResponse","script_gas_consumed","gas_limit","qs","props","queryData","uri","location","search","substring","preventDefault","_depsLoaded","editor","getValue","disable","slice","objError","info","SyntaxError","enable","setupEditor","destroy","element","getElementById","form_name_root","disable_collapse","show_opt_in","setValue","scrollIntoView","watch","val","$nextTick","editedCode","FunctionDetail","VAceEditor","update","newValue","s","startsWith","command","c","buttontxt","showFee","command_kwargs","command_schema","flattenObject","prefix","acc","k","pre","pythonify","deepen","objectPath","parts","split","target","part","shift","editorData","oldVal","$router","replace","setupResponseEditor","deepData","editorChanged","responseEditor","includes","service_name","http_rules","rule","param","request_schema","disable_properties","disable_edit_json","res","match","placeholder","dyslang_docs","propertyName","toLowerCase","href","definition","init_definition","docstring","filteredList","routerHistory","createWebHistory","routes","component","Index","Relayers","ScriptList","ScriptDetail","TxBuilder","Docs","router","createRouter","history","vueStore","startVueApp","createApp","App","config","globalProperties","use","vueLib","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","amdD","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","a","defineProperty","enumerable","g","Function","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}