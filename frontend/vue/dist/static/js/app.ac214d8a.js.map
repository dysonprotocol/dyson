{"version":3,"file":"static/js/app.ac214d8a.js","mappings":"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","sources":["webpack://Dyson/./src/App.vue","webpack://Dyson/./src/components/Sidebar.vue","webpack://Dyson/./src/components/Sidebar.vue?a564","webpack://Dyson/./src/App.vue?30d2","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/authz.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/event.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/genesis.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/authz.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/feegrant/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/duration.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/feegrant/v1beta1/feegrant.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/authz.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack://Dyson/./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/rest.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/google/protobuf/timestamp.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/cosmos/upgrade/v1beta1/upgrade.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/index.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack://Dyson/./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/index.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/rest.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/types/dyson/msgrun.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/types/dyson/tx.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/index.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/types/cosmos/base/v1beta1/coin.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/types/dyson/schedualed_run.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/types/dyson/script.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/module/types/dyson/storage.js","webpack://Dyson/./src/store/generated/org/dyson/dyson/index.js","webpack://Dyson/./src/store/generated/index.js","webpack://Dyson/./src/store/config.js","webpack://Dyson/./src/store/index.js","webpack://Dyson/./src/views/Index.vue","webpack://Dyson/./src/views/Index.vue?365c","webpack://Dyson/./src/views/Relayers.vue","webpack://Dyson/./src/views/Relayers.vue?d402","webpack://Dyson/./src/views/ScriptList.vue","webpack://Dyson/./src/views/ScriptList.vue?45fa","webpack://Dyson/./src/views/ScriptDetail.vue","webpack://Dyson/./src/views/FunctionDetail.vue","webpack://Dyson/./src/views/FunctionDetail.vue?2962","webpack://Dyson/./src/views/ScriptDetail.vue?a71f","webpack://Dyson/./src/views/TxBuilder.vue","webpack://Dyson/./src/views/TxBuilder.vue?4858","webpack://Dyson/./src/router/index.js","webpack://Dyson/./src/main.js","webpack://Dyson/webpack/bootstrap","webpack://Dyson/webpack/runtime/amd define","webpack://Dyson/webpack/runtime/amd options","webpack://Dyson/webpack/runtime/chunk loaded","webpack://Dyson/webpack/runtime/compat get default export","webpack://Dyson/webpack/runtime/define property getters","webpack://Dyson/webpack/runtime/global","webpack://Dyson/webpack/runtime/hasOwnProperty shorthand","webpack://Dyson/webpack/runtime/make namespace object","webpack://Dyson/webpack/runtime/node module decorator","webpack://Dyson/webpack/runtime/jsonp chunk loading","webpack://Dyson/webpack/startup"],"sourcesContent":["<template>\n  <div v-if=\"initialized\">\n    <SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n    <SpLayout>\n      <template v-slot:sidebar>\n        <Sidebar />\n      </template>\n      <template v-slot:content>\n        <router-view />\n      </template>\n    </SpLayout>\n  </div>\n</template>\n\n<style>\nbody {\n  margin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\n//import '@picocss/pico'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n  components: {\n    Sidebar,\n  },\n  data() {\n    return {\n      initialized: false,\n    }\n  },\n  computed: {\n    hasWallet() {\n      return this.$store.hasModule(['common', 'wallet'])\n    },\n  },\n  async created() {\n    await this.$store.dispatch('common/env/init')\n    this.initialized = true\n  },\n  errorCaptured(err) {\n    console.log(err)\n    return false\n  },\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/scripts\" text=\"Scripts\" icon=\"Docs\" />\n\t\t\t<SpLinkIcon link=\"/txbuilder\" text=\"Tx Builder\" icon=\"Form\" />\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=1f5d0c37\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=33192345\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=33192345&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/authz/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGrants\n         * @summary Returns list of `Authorization`, granted to the grantee by the granter.\n         * @request GET:/cosmos/authz/v1beta1/grants\n         */\n        this.queryGrants = (query, params = {}) => this.request({\n            path: `/cosmos/authz/v1beta1/grants`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseGenericAuthorization = { msg: '' };\nexport const GenericAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.msg !== '') {\n            writer.uint32(10).string(message.msg);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenericAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msg = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenericAuthorization };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = String(object.msg);\n        }\n        else {\n            message.msg = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msg !== undefined && (obj.msg = message.msg);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenericAuthorization };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = object.msg;\n        }\n        else {\n            message.msg = '';\n        }\n        return message;\n    }\n};\nconst baseGrant = {};\nexport const Grant = {\n    encode(message, writer = Writer.create()) {\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrant };\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authorization !== undefined && (obj.authorization = message.authorization ? Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrant };\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Grant } from '../../../cosmos/authz/v1beta1/authz';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseMsgGrant = { granter: '', grantee: '' };\nexport const MsgGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.grant !== undefined) {\n            Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.grant = Grant.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromJSON(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.grant !== undefined && (obj.grant = message.grant ? Grant.toJSON(message.grant) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromPartial(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgExecResponse = {};\nexport const MsgExecResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.results) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.results.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.results) {\n            obj.results = message.results.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.results = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgExec = { grantee: '' };\nexport const MsgExec = {\n    encode(message, writer = Writer.create()) {\n        if (message.grantee !== '') {\n            writer.uint32(10).string(message.grantee);\n        }\n        for (const v of message.msgs) {\n            Any.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grantee = reader.string();\n                    break;\n                case 2:\n                    message.msgs.push(Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        if (message.msgs) {\n            obj.msgs = message.msgs.map((e) => (e ? Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.msgs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgGrantResponse = {};\nexport const MsgGrantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    }\n};\nconst baseMsgRevoke = { granter: '', grantee: '', msgTypeUrl: '' };\nexport const MsgRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(26).string(message.msgTypeUrl);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeResponse = {};\nexport const MsgRevokeResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Grant(request) {\n        const data = MsgGrant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Grant', data);\n        return promise.then((data) => MsgGrantResponse.decode(new Reader(data)));\n    }\n    Exec(request) {\n        const data = MsgExec.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Exec', data);\n        return promise.then((data) => MsgExecResponse.decode(new Reader(data)));\n    }\n    Revoke(request) {\n        const data = MsgRevoke.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Revoke', data);\n        return promise.then((data) => MsgRevokeResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgExec } from \"./types/cosmos/authz/v1beta1/tx\";\nimport { MsgGrant } from \"./types/cosmos/authz/v1beta1/tx\";\nimport { MsgRevoke } from \"./types/cosmos/authz/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.authz.v1beta1.MsgExec\", MsgExec],\n    [\"/cosmos.authz.v1beta1.MsgGrant\", MsgGrant],\n    [\"/cosmos.authz.v1beta1.MsgRevoke\", MsgRevoke],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgExec: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgExec\", value: MsgExec.fromPartial(data) }),\n        msgGrant: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgGrant\", value: MsgGrant.fromPartial(data) }),\n        msgRevoke: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgRevoke\", value: MsgRevoke.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseEventGrant = { msgTypeUrl: '', granter: '', grantee: '' };\nexport const EventGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(18).string(message.msgTypeUrl);\n        }\n        if (message.granter !== '') {\n            writer.uint32(26).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(34).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 3:\n                    message.granter = reader.string();\n                    break;\n                case 4:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventGrant };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventGrant };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\nconst baseEventRevoke = { msgTypeUrl: '', granter: '', grantee: '' };\nexport const EventRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(18).string(message.msgTypeUrl);\n        }\n        if (message.granter !== '') {\n            writer.uint32(26).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(34).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 3:\n                    message.granter = reader.string();\n                    break;\n                case 4:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventRevoke };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventRevoke };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.authorization) {\n            GrantAuthorization.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization.push(GrantAuthorization.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        if (object.authorization !== undefined && object.authorization !== null) {\n            for (const e of object.authorization) {\n                message.authorization.push(GrantAuthorization.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.authorization) {\n            obj.authorization = message.authorization.map((e) => (e ? GrantAuthorization.toJSON(e) : undefined));\n        }\n        else {\n            obj.authorization = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        if (object.authorization !== undefined && object.authorization !== null) {\n            for (const e of object.authorization) {\n                message.authorization.push(GrantAuthorization.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseGrantAuthorization = { granter: '', grantee: '' };\nexport const GrantAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrantAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrantAuthorization };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.authorization !== undefined && (obj.authorization = message.authorization ? Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrantAuthorization };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { GenericAuthorization } from \"./module/types/cosmos/authz/v1beta1/authz\";\nimport { Grant } from \"./module/types/cosmos/authz/v1beta1/authz\";\nimport { EventGrant } from \"./module/types/cosmos/authz/v1beta1/event\";\nimport { EventRevoke } from \"./module/types/cosmos/authz/v1beta1/event\";\nimport { GrantAuthorization } from \"./module/types/cosmos/authz/v1beta1/genesis\";\nexport { GenericAuthorization, Grant, EventGrant, EventRevoke, GrantAuthorization };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Grants: {},\n        _Structure: {\n            GenericAuthorization: getStructure(GenericAuthorization.fromPartial({})),\n            Grant: getStructure(Grant.fromPartial({})),\n            EventGrant: getStructure(EventGrant.fromPartial({})),\n            EventRevoke: getStructure(EventRevoke.fromPartial({})),\n            GrantAuthorization: getStructure(GrantAuthorization.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getGrants: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Grants[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.authz.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryGrants({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGrants(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryGrants({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Grants', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGrants', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGrants']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGrants', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgExec({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgExec(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgExec:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgExec:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevoke({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevoke(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevoke:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevoke:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgExec({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgExec(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgExec:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgExec:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevoke({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevoke(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevoke:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevoke:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => (e ? SendEnabled.toJSON(e) : undefined));\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined && (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '', name: '', symbol: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(50).string(message.symbol);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.symbol = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => (e ? DenomUnit.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        message.name !== undefined && (obj.name = message.name);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => (e ? Output.toJSON(e) : undefined));\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: MsgMultiSend.fromPartial(data) }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: MsgSend.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseSendAuthorization = {};\nexport const SendAuthorization = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.spendLimit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => (e ? Balance.toJSON(e) : undefined));\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => (e ? Metadata.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SendAuthorization } from \"./module/types/cosmos/bank/v1beta1/authz\";\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { SendAuthorization, Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            SendAuthorization: getStructure(SendAuthorization.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryTotalSupply({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = { sender: '', invariantModuleName: '', invariantRoute: '' };\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined && object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined && (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined && (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined && object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVerifyInvariantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVerifyInvariantResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: MsgVerifyInvariant.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = { delegatorAddress: '', withdrawAddress: '' };\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: MsgWithdrawDelegatorReward.fromPartial(data) }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: MsgWithdrawValidatorCommission.fromPartial(data) }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: MsgSetWithdrawAddress.fromPartial(data) }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: MsgFundCommunityPool.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = { communityTax: '', baseProposerReward: '', bonusProposerReward: '', withdrawAddrEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined && (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined && (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined && (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined && (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined && (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined && (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => (e ? ValidatorSlashEvent.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = { title: '', description: '', recipient: '' };\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = { previousPeriod: 0, stake: '', height: 0 };\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined && (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = { title: '', description: '', recipient: '', amount: '', deposit: '' };\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = { delegatorAddress: '', withdrawAddress: '' };\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = { validatorAddress: '' };\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined && (obj.accumulated = message.accumulated ? ValidatorAccumulatedCommission.toJSON(message.accumulated) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = { validatorAddress: '', period: 0 };\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorHistoricalRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorCurrentRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = { delegatorAddress: '', validatorAddress: '' };\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfoRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfoRecord };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined && (obj.startingInfo = message.startingInfo ? DelegatorStartingInfo.toJSON(message.startingInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfoRecord };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = { validatorAddress: '', height: 0, period: 0 };\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEventRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEventRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEventRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined && object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined && (obj.feePool = message.feePool ? FeePool.toJSON(message.feePool) : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => (e ? DelegatorWithdrawInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined && (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => (e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => (e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => (e ? DelegatorStartingInfoRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => (e ? ValidatorSlashEventRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined && object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined && (obj.evidence = message.evidence ? Any.toJSON(message.evidence) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: MsgSubmitEvidence.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined && object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined && (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined && object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/feegrant/v1beta1/feegrant.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllowance\n         * @summary Allowance returns fee granted to the grantee by the granter.\n         * @request GET:/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}\n         */\n        this.queryAllowance = (granter, grantee, params = {}) => this.request({\n            path: `/cosmos/feegrant/v1beta1/allowance/${granter}/${grantee}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllowances\n         * @summary Allowances returns all the grants for address.\n         * @request GET:/cosmos/feegrant/v1beta1/allowances/{grantee}\n         */\n        this.queryAllowances = (grantee, query, params = {}) => this.request({\n            path: `/cosmos/feegrant/v1beta1/allowances/${grantee}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.feegrant.v1beta1';\nconst baseMsgGrantAllowance = { granter: '', grantee: '' };\nexport const MsgGrantAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAllowance };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAllowanceResponse = {};\nexport const MsgGrantAllowanceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAllowanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantAllowanceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantAllowanceResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeAllowance = { granter: '', grantee: '' };\nexport const MsgRevokeAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAllowance };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAllowanceResponse = {};\nexport const MsgRevokeAllowanceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    GrantAllowance(request) {\n        const data = MsgGrantAllowance.encode(request).finish();\n        const promise = this.rpc.request('cosmos.feegrant.v1beta1.Msg', 'GrantAllowance', data);\n        return promise.then((data) => MsgGrantAllowanceResponse.decode(new Reader(data)));\n    }\n    RevokeAllowance(request) {\n        const data = MsgRevokeAllowance.encode(request).finish();\n        const promise = this.rpc.request('cosmos.feegrant.v1beta1.Msg', 'RevokeAllowance', data);\n        return promise.then((data) => MsgRevokeAllowanceResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgGrantAllowance } from \"./types/cosmos/feegrant/v1beta1/tx\";\nimport { MsgRevokeAllowance } from \"./types/cosmos/feegrant/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", MsgGrantAllowance],\n    [\"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", MsgRevokeAllowance],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgGrantAllowance: (data) => ({ typeUrl: \"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", value: MsgGrantAllowance.fromPartial(data) }),\n        msgRevokeAllowance: (data) => ({ typeUrl: \"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", value: MsgRevokeAllowance.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.feegrant.v1beta1';\nconst baseBasicAllowance = {};\nexport const BasicAllowance = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.spendLimit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriodicAllowance = {};\nexport const PeriodicAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.basic !== undefined) {\n            BasicAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== undefined) {\n            Duration.encode(message.period, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.periodSpendLimit) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.periodCanSpend) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.periodReset !== undefined) {\n            Timestamp.encode(toTimestamp(message.periodReset), writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.basic = BasicAllowance.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.period = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.periodSpendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.periodCanSpend.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.periodReset = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = BasicAllowance.fromJSON(object.basic);\n        }\n        else {\n            message.basic = undefined;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Duration.fromJSON(object.period);\n        }\n        else {\n            message.period = undefined;\n        }\n        if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n            for (const e of object.periodSpendLimit) {\n                message.periodSpendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n            for (const e of object.periodCanSpend) {\n                message.periodCanSpend.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = fromJsonTimestamp(object.periodReset);\n        }\n        else {\n            message.periodReset = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.basic !== undefined && (obj.basic = message.basic ? BasicAllowance.toJSON(message.basic) : undefined);\n        message.period !== undefined && (obj.period = message.period ? Duration.toJSON(message.period) : undefined);\n        if (message.periodSpendLimit) {\n            obj.periodSpendLimit = message.periodSpendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodSpendLimit = [];\n        }\n        if (message.periodCanSpend) {\n            obj.periodCanSpend = message.periodCanSpend.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodCanSpend = [];\n        }\n        message.periodReset !== undefined && (obj.periodReset = message.periodReset !== undefined ? message.periodReset.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = BasicAllowance.fromPartial(object.basic);\n        }\n        else {\n            message.basic = undefined;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Duration.fromPartial(object.period);\n        }\n        else {\n            message.period = undefined;\n        }\n        if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n            for (const e of object.periodSpendLimit) {\n                message.periodSpendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n            for (const e of object.periodCanSpend) {\n                message.periodCanSpend.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = object.periodReset;\n        }\n        else {\n            message.periodReset = undefined;\n        }\n        return message;\n    }\n};\nconst baseAllowedMsgAllowance = { allowedMessages: '' };\nexport const AllowedMsgAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.allowedMessages) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowedMessages.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n            for (const e of object.allowedMessages) {\n                message.allowedMessages.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        if (message.allowedMessages) {\n            obj.allowedMessages = message.allowedMessages.map((e) => e);\n        }\n        else {\n            obj.allowedMessages = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n            for (const e of object.allowedMessages) {\n                message.allowedMessages.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseGrant = { granter: '', grantee: '' };\nexport const Grant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BasicAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { PeriodicAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { AllowedMsgAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { Grant } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nexport { BasicAllowance, PeriodicAllowance, AllowedMsgAllowance, Grant };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Allowance: {},\n        Allowances: {},\n        _Structure: {\n            BasicAllowance: getStructure(BasicAllowance.fromPartial({})),\n            PeriodicAllowance: getStructure(PeriodicAllowance.fromPartial({})),\n            AllowedMsgAllowance: getStructure(AllowedMsgAllowance.fromPartial({})),\n            Grant: getStructure(Grant.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getAllowance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Allowance[JSON.stringify(params)] ?? {};\n        },\n        getAllowances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Allowances[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.feegrant.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryAllowance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllowance(key.granter, key.grantee)).data;\n                commit('QUERY', { query: 'Allowance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllowance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllowance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllowance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllowances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllowances(key.grantee, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryAllowances(key.grantee, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Allowances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllowances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllowances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllowances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgGrantAllowance({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAllowance(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAllowance({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAllowance(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAllowance({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAllowance(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAllowance({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAllowance(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseWeightedVoteOption = { option: 0, weight: '' };\nexport const WeightedVoteOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.option !== 0) {\n            writer.uint32(8).int32(message.option);\n        }\n        if (message.weight !== '') {\n            writer.uint32(18).string(message.weight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseWeightedVoteOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.option = reader.int32();\n                    break;\n                case 2:\n                    message.weight = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseWeightedVoteOption };\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.weight !== undefined && object.weight !== null) {\n            message.weight = String(object.weight);\n        }\n        else {\n            message.weight = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        message.weight !== undefined && (obj.weight = message.weight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseWeightedVoteOption };\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.weight !== undefined && object.weight !== null) {\n            message.weight = object.weight;\n        }\n        else {\n            message.weight = '';\n        }\n        return message;\n    }\n};\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined && (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined && (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined && (obj.finalTallyResult = message.finalTallyResult ? TallyResult.toJSON(message.finalTallyResult) : undefined);\n        message.submitTime !== undefined && (obj.submitTime = message.submitTime !== undefined ? message.submitTime.toISOString() : null);\n        message.depositEndTime !== undefined && (obj.depositEndTime = message.depositEndTime !== undefined ? message.depositEndTime.toISOString() : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined && (obj.votingStartTime = message.votingStartTime !== undefined ? message.votingStartTime.toISOString() : null);\n        message.votingEndTime !== undefined && (obj.votingEndTime = message.votingEndTime !== undefined ? message.votingEndTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        for (const v of message.options) {\n            WeightedVoteOption.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        message.options = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                case 4:\n                    message.options.push(WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined && (obj.maxDepositPeriod = message.maxDepositPeriod ? Duration.toJSON(message.maxDepositPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined && (obj.votingPeriod = message.votingPeriod ? Duration.toJSON(message.votingPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined && (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined && (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined && (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined ? message.vetoThreshold : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { WeightedVoteOption, voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined && (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposalResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgVoteWeighted = { proposalId: 0, voter: '' };\nexport const MsgVoteWeighted = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        for (const v of message.options) {\n            WeightedVoteOption.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.options.push(WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgVoteWeightedResponse = {};\nexport const MsgVoteWeightedResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteWeightedResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteWeightedResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteWeightedResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    VoteWeighted(request) {\n        const data = MsgVoteWeighted.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'VoteWeighted', data);\n        return promise.then((data) => MsgVoteWeightedResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVoteWeighted } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgVoteWeighted\", MsgVoteWeighted],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: MsgDeposit.fromPartial(data) }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: MsgVote.fromPartial(data) }),\n        msgVoteWeighted: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVoteWeighted\", value: MsgVoteWeighted.fromPartial(data) }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: MsgSubmitProposal.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { WeightedVoteOption } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { WeightedVoteOption, TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            WeightedVoteOption: getStructure(WeightedVoteOption.fromPartial({})),\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgVoteWeighted({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVoteWeighted(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgVoteWeighted({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVoteWeighted(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: MsgUnjail.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = { address: '', startHeight: 0, indexOffset: 0, tombstoned: false, missedBlocksCounter: 0 };\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined && (obj.jailedUntil = message.jailedUntil !== undefined ? message.jailedUntil.toISOString() : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined && (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined && (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined ? message.minSignedPerWindow : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration ? Duration.toJSON(message.downtimeJailDuration) : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined ? message.slashFractionDoubleSign : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined ? message.slashFractionDowntime : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => (e ? SigningInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => (e ? ValidatorMissedBlocks.toJSON(e) : undefined));\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => (e ? MissedBlock.toJSON(e) : undefined));\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined && (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined && (obj.ed25519 = message.ed25519 !== undefined ? base64FromBytes(message.ed25519) : undefined);\n        message.secp256k1 !== undefined && (obj.secp256k1 = message.secp256k1 !== undefined ? base64FromBytes(message.secp256k1) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer ? Validator.toJSON(message.proposer) : undefined);\n        message.totalVotingPower !== undefined && (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined && (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined && (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined && (obj.partSetHeader = message.partSetHeader ? PartSetHeader.toJSON(message.partSetHeader) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version ? Consensus.toJSON(message.version) : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined && (obj.lastBlockId = message.lastBlockId ? BlockID.toJSON(message.lastBlockId) : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined ? message.lastCommitHash : new Uint8Array()));\n        message.dataHash !== undefined && (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined ? message.validatorsHash : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n        message.consensusHash !== undefined && (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined ? message.consensusHash : new Uint8Array()));\n        message.appHash !== undefined && (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined ? message.lastResultsHash : new Uint8Array()));\n        message.evidenceHash !== undefined && (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined ? message.evidenceHash : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined ? message.proposerAddress : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.validatorIndex !== undefined && (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (e ? CommitSig.toJSON(e) : undefined));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined && (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined && (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined && (obj.signedHeader = message.signedHeader ? SignedHeader.toJSON(message.signedHeader) : undefined);\n        message.validatorSet !== undefined && (obj.validatorSet = message.validatorSet ? ValidatorSet.toJSON(message.validatorSet) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined && (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined && (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined && (obj.commissionRates = message.commissionRates ? CommissionRates.toJSON(message.commissionRates) : undefined);\n        message.updateTime !== undefined && (obj.updateTime = message.updateTime !== undefined ? message.updateTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = { moniker: '', identity: '', website: '', securityContact: '', details: '' };\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined && (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = { operatorAddress: '', jailed: false, status: 0, tokens: '', delegatorShares: '', unbondingHeight: 0, minSelfDelegation: '' };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined && (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined && (obj.consensusPubkey = message.consensusPubkey ? Any.toJSON(message.consensusPubkey) : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined && (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined && (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.unbondingHeight !== undefined && (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime !== undefined ? message.unbondingTime.toISOString() : null);\n        message.commission !== undefined && (obj.commission = message.commission ? Commission.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => (e ? DVVTriplet.toJSON(e) : undefined));\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = { delegatorAddress: '', validatorAddress: '', shares: '' };\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = { delegatorAddress: '', validatorAddress: '' };\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? UnbondingDelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = { creationHeight: 0, initialBalance: '', balance: '' };\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined && (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = { creationHeight: 0, initialBalance: '', sharesDst: '' };\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined && (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? RedelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = { maxValidators: 0, maxEntries: 0, historicalEntries: 0, bondDenom: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime ? Duration.toJSON(message.unbondingTime) : undefined);\n        message.maxValidators !== undefined && (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined && (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined && (obj.delegation = message.delegation ? Delegation.toJSON(message.delegation) : undefined);\n        message.balance !== undefined && (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntryResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntryResponse };\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry ? RedelegationEntry.toJSON(message.redelegationEntry) : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntryResponse };\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined && (obj.redelegation = message.redelegation ? Redelegation.toJSON(message.redelegation) : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? RedelegationEntryResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined && (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined && (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = { minSelfDelegation: '', delegatorAddress: '', validatorAddress: '' };\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.commission !== undefined && (obj.commission = message.commission ? CommissionRates.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined && (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined && (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidatorResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateValidatorResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateValidatorResponse };\n        return message;\n    }\n};\nconst baseMsgEditValidator = { validatorAddress: '', commissionRate: '', minSelfDelegation: '' };\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined && (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidatorResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditValidatorResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditValidatorResponse };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: MsgBeginRedelegate.fromPartial(data) }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: MsgCreateValidator.fromPartial(data) }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: MsgEditValidator.fromPartial(data) }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: MsgUndelegate.fromPartial(data) }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: MsgDelegate.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** AuthorizationType defines the type of staking module authorization type */\nexport var AuthorizationType;\n(function (AuthorizationType) {\n    /** AUTHORIZATION_TYPE_UNSPECIFIED - AUTHORIZATION_TYPE_UNSPECIFIED specifies an unknown authorization type */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNSPECIFIED\"] = 0] = \"AUTHORIZATION_TYPE_UNSPECIFIED\";\n    /** AUTHORIZATION_TYPE_DELEGATE - AUTHORIZATION_TYPE_DELEGATE defines an authorization type for Msg/Delegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_DELEGATE\"] = 1] = \"AUTHORIZATION_TYPE_DELEGATE\";\n    /** AUTHORIZATION_TYPE_UNDELEGATE - AUTHORIZATION_TYPE_UNDELEGATE defines an authorization type for Msg/Undelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNDELEGATE\"] = 2] = \"AUTHORIZATION_TYPE_UNDELEGATE\";\n    /** AUTHORIZATION_TYPE_REDELEGATE - AUTHORIZATION_TYPE_REDELEGATE defines an authorization type for Msg/BeginRedelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_REDELEGATE\"] = 3] = \"AUTHORIZATION_TYPE_REDELEGATE\";\n    AuthorizationType[AuthorizationType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(AuthorizationType || (AuthorizationType = {}));\nexport function authorizationTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'AUTHORIZATION_TYPE_UNSPECIFIED':\n            return AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED;\n        case 1:\n        case 'AUTHORIZATION_TYPE_DELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_DELEGATE;\n        case 2:\n        case 'AUTHORIZATION_TYPE_UNDELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE;\n        case 3:\n        case 'AUTHORIZATION_TYPE_REDELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return AuthorizationType.UNRECOGNIZED;\n    }\n}\nexport function authorizationTypeToJSON(object) {\n    switch (object) {\n        case AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED:\n            return 'AUTHORIZATION_TYPE_UNSPECIFIED';\n        case AuthorizationType.AUTHORIZATION_TYPE_DELEGATE:\n            return 'AUTHORIZATION_TYPE_DELEGATE';\n        case AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE:\n            return 'AUTHORIZATION_TYPE_UNDELEGATE';\n        case AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE:\n            return 'AUTHORIZATION_TYPE_REDELEGATE';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseStakeAuthorization = { authorizationType: 0 };\nexport const StakeAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxTokens !== undefined) {\n            Coin.encode(message.maxTokens, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.allowList !== undefined) {\n            StakeAuthorization_Validators.encode(message.allowList, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.denyList !== undefined) {\n            StakeAuthorization_Validators.encode(message.denyList, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.authorizationType !== 0) {\n            writer.uint32(32).int32(message.authorizationType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxTokens = Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.denyList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.authorizationType = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromJSON(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromJSON(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromJSON(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined && object.authorizationType !== null) {\n            message.authorizationType = authorizationTypeFromJSON(object.authorizationType);\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxTokens !== undefined && (obj.maxTokens = message.maxTokens ? Coin.toJSON(message.maxTokens) : undefined);\n        message.allowList !== undefined && (obj.allowList = message.allowList ? StakeAuthorization_Validators.toJSON(message.allowList) : undefined);\n        message.denyList !== undefined && (obj.denyList = message.denyList ? StakeAuthorization_Validators.toJSON(message.denyList) : undefined);\n        message.authorizationType !== undefined && (obj.authorizationType = authorizationTypeToJSON(message.authorizationType));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromPartial(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromPartial(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromPartial(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined && object.authorizationType !== null) {\n            message.authorizationType = object.authorizationType;\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    }\n};\nconst baseStakeAuthorization_Validators = { address: '' };\nexport const StakeAuthorization_Validators = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.address) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.address) {\n            obj.address = message.address.map((e) => e);\n        }\n        else {\n            obj.address = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(e);\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined ? message.lastTotalPower : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => (e ? LastValidatorPower.toJSON(e) : undefined));\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => (e ? Delegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => (e ? UnbondingDelegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => (e ? Redelegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { StakeAuthorization } from \"./module/types/cosmos/staking/v1beta1/authz\";\nimport { StakeAuthorization_Validators } from \"./module/types/cosmos/staking/v1beta1/authz\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { StakeAuthorization, StakeAuthorization_Validators, LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            StakeAuthorization: getStructure(StakeAuthorization.fromPartial({})),\n            StakeAuthorization_Validators: getStructure(StakeAuthorization_Validators.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = { fromAddress: '', toAddress: '', endTime: 0, delayed: false };\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: MsgCreateVestingAccount.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined && (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = { maxMemoCharacters: 0, txSigLimit: 0, txSizeCostPerByte: 0, sigVerifyCostEd25519: 0, sigVerifyCostSecp256k1: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined && (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined && (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined && (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined && (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined && object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined && object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined && object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined && object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseContinuousVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseContinuousVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseContinuousVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => (e ? Period.toJSON(e) : undefined));\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePermanentLockedAccount = {};\nexport const PermanentLockedAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePermanentLockedAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePermanentLockedAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePermanentLockedAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PermanentLockedAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount, PermanentLockedAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n            PermanentLockedAccount: getStructure(PermanentLockedAccount.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/apps/transfer/v1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/apps/transfer/v1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/apps/transfer/v1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.upgrade.v1beta1';\nconst basePlan = { name: '', height: 0, info: '' };\nexport const Plan = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePlan };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePlan };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.height !== undefined && (obj.height = message.height);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePlan };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseSoftwareUpgradeProposal = { title: '', description: '' };\nexport const SoftwareUpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSoftwareUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        return message;\n    }\n};\nconst baseCancelSoftwareUpgradeProposal = { title: '', description: '' };\nexport const CancelSoftwareUpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Plan } from '../../../../cosmos/upgrade/v1beta1/upgrade';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined && (obj.clientState = message.clientState ? Any.toJSON(message.clientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusStateWithHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined && (obj.consensusState = message.consensusState ? Any.toJSON(message.consensusState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => (e ? ConsensusStateWithHeight.toJSON(e) : undefined));\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = { title: '', description: '', subjectClientId: '', substituteClientId: '' };\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.subjectClientId !== '') {\n            writer.uint32(26).string(message.subjectClientId);\n        }\n        if (message.substituteClientId !== '') {\n            writer.uint32(34).string(message.substituteClientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.subjectClientId = reader.string();\n                    break;\n                case 4:\n                    message.substituteClientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n            message.subjectClientId = String(object.subjectClientId);\n        }\n        else {\n            message.subjectClientId = '';\n        }\n        if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n            message.substituteClientId = String(object.substituteClientId);\n        }\n        else {\n            message.substituteClientId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.subjectClientId !== undefined && (obj.subjectClientId = message.subjectClientId);\n        message.substituteClientId !== undefined && (obj.substituteClientId = message.substituteClientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n            message.subjectClientId = object.subjectClientId;\n        }\n        else {\n            message.subjectClientId = '';\n        }\n        if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n            message.substituteClientId = object.substituteClientId;\n        }\n        else {\n            message.substituteClientId = '';\n        }\n        return message;\n    }\n};\nconst baseUpgradeProposal = { title: '', description: '' };\nexport const UpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.upgradedClientState !== undefined) {\n            Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.upgradedClientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromJSON(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        message.upgradedClientState !== undefined && (obj.upgradedClientState = message.upgradedClientState ? Any.toJSON(message.upgradedClientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromPartial(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined && (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined && (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = { sourcePort: '', sourceChannel: '', sender: '', receiver: '', timeoutTimestamp: 0 };\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined && (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined && (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined && (obj.timeoutHeight = message.timeoutHeight ? Height.toJSON(message.timeoutHeight) : undefined);\n        message.timeoutTimestamp !== undefined && (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: MsgTransfer.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = { denom: '', amount: 0, sender: '', receiver: '' };\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFungibleTokenPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFungibleTokenPacketData };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFungibleTokenPacketData };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined && (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title dyson/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryQueryScript\n         * @summary Queries a script by index.\n         * @request GET:/dyson/query\n         */\n        this.queryQueryScript = (query, params = {}) => this.request({\n            path: `/dyson/query`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySchema\n         * @summary Queries a script schema by index.\n         * @request GET:/dyson/schema\n         */\n        this.querySchema = (query, params = {}) => this.request({\n            path: `/dyson/schema`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryScript\n         * @summary Queries a script by index.\n         * @request GET:/dyson/script\n         */\n        this.queryScript = (query, params = {}) => this.request({\n            path: `/dyson/script`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryScriptAll\n         * @summary Queries a list of script items.\n         * @request GET:/dyson/scriptiAll\n         */\n        this.queryScriptAll = (query, params = {}) => this.request({\n            path: `/dyson/scriptiAll`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryStorage\n         * @summary Queries a storage by index.\n         * @request GET:/dyson/storage\n         */\n        this.queryStorage = (query, params = {}) => this.request({\n            path: `/dyson/storage`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryStorageAll\n         * @summary Queries a list of storage items.\n         * @request GET:/dyson/storageAll\n         */\n        this.queryStorageAll = (query, params = {}) => this.request({\n            path: `/dyson/storageAll`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPrefixStorage\n         * @request GET:/dyson/storageprefix\n         */\n        this.queryPrefixStorage = (query, params = {}) => this.request({\n            path: `/dyson/storageprefix`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryWsgi\n         * @summary Queries a script wsgi app by index.\n         * @request GET:/dyson/wsgi\n         */\n        this.queryWsgi = (query, params = {}) => this.request({\n            path: `/dyson/wsgi`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySchedualedRun\n         * @summary Queries a schedualedRun by index.\n         * @request GET:/org/dyson/dyson/schedualedRun\n         */\n        this.querySchedualedRun = (query, params = {}) => this.request({\n            path: `/org/dyson/dyson/schedualedRun`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySchedualedRunAll\n         * @summary Queries a list of schedualedRun items.\n         * @request GET:/org/dyson/dyson/schedualedRunAll\n         */\n        this.querySchedualedRunAll = (query, params = {}) => this.request({\n            path: `/org/dyson/dyson/schedualedRunAll`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'dyson';\nconst baseMsgRun = { creator: '', address: '', extraLines: '', functionName: '', args: '', kwargs: '', coins: '' };\nexport const MsgRun = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.address !== '') {\n            writer.uint32(18).string(message.address);\n        }\n        if (message.extraLines !== '') {\n            writer.uint32(26).string(message.extraLines);\n        }\n        if (message.functionName !== '') {\n            writer.uint32(34).string(message.functionName);\n        }\n        if (message.args !== '') {\n            writer.uint32(42).string(message.args);\n        }\n        if (message.kwargs !== '') {\n            writer.uint32(50).string(message.kwargs);\n        }\n        if (message.coins !== '') {\n            writer.uint32(58).string(message.coins);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRun };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.address = reader.string();\n                    break;\n                case 3:\n                    message.extraLines = reader.string();\n                    break;\n                case 4:\n                    message.functionName = reader.string();\n                    break;\n                case 5:\n                    message.args = reader.string();\n                    break;\n                case 6:\n                    message.kwargs = reader.string();\n                    break;\n                case 7:\n                    message.coins = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.extraLines !== undefined && object.extraLines !== null) {\n            message.extraLines = String(object.extraLines);\n        }\n        else {\n            message.extraLines = '';\n        }\n        if (object.functionName !== undefined && object.functionName !== null) {\n            message.functionName = String(object.functionName);\n        }\n        else {\n            message.functionName = '';\n        }\n        if (object.args !== undefined && object.args !== null) {\n            message.args = String(object.args);\n        }\n        else {\n            message.args = '';\n        }\n        if (object.kwargs !== undefined && object.kwargs !== null) {\n            message.kwargs = String(object.kwargs);\n        }\n        else {\n            message.kwargs = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            message.coins = String(object.coins);\n        }\n        else {\n            message.coins = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.address !== undefined && (obj.address = message.address);\n        message.extraLines !== undefined && (obj.extraLines = message.extraLines);\n        message.functionName !== undefined && (obj.functionName = message.functionName);\n        message.args !== undefined && (obj.args = message.args);\n        message.kwargs !== undefined && (obj.kwargs = message.kwargs);\n        message.coins !== undefined && (obj.coins = message.coins);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.extraLines !== undefined && object.extraLines !== null) {\n            message.extraLines = object.extraLines;\n        }\n        else {\n            message.extraLines = '';\n        }\n        if (object.functionName !== undefined && object.functionName !== null) {\n            message.functionName = object.functionName;\n        }\n        else {\n            message.functionName = '';\n        }\n        if (object.args !== undefined && object.args !== null) {\n            message.args = object.args;\n        }\n        else {\n            message.args = '';\n        }\n        if (object.kwargs !== undefined && object.kwargs !== null) {\n            message.kwargs = object.kwargs;\n        }\n        else {\n            message.kwargs = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            message.coins = object.coins;\n        }\n        else {\n            message.coins = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRunResponse = { response: '' };\nexport const MsgRunResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.response !== '') {\n            writer.uint32(10).string(message.response);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRunResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.response = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRunResponse };\n        if (object.response !== undefined && object.response !== null) {\n            message.response = String(object.response);\n        }\n        else {\n            message.response = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.response !== undefined && (obj.response = message.response);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRunResponse };\n        if (object.response !== undefined && object.response !== null) {\n            message.response = object.response;\n        }\n        else {\n            message.response = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { MsgRun, MsgRunResponse } from '../dyson/msgrun';\nexport const protobufPackage = 'dyson';\nconst baseMsgCreateSchedualedRun = { creator: '', height: 0, gas: 0 };\nexport const MsgCreateSchedualedRun = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(24).uint64(message.gas);\n        }\n        if (message.msg !== undefined) {\n            MsgRun.encode(message.msg, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateSchedualedRun };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.msg = MsgRun.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateSchedualedRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgRun.fromJSON(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.height !== undefined && (obj.height = message.height);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.msg !== undefined && (obj.msg = message.msg ? MsgRun.toJSON(message.msg) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateSchedualedRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgRun.fromPartial(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateSchedualedRunResponse = {};\nexport const MsgCreateSchedualedRunResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateSchedualedRunResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateSchedualedRunResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateSchedualedRunResponse };\n        return message;\n    }\n};\nconst baseMsgUpdateSchedualedRun = { creator: '', index: '' };\nexport const MsgUpdateSchedualedRun = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        if (message.msg !== undefined) {\n            MsgRun.encode(message.msg, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateSchedualedRun };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                case 3:\n                    message.msg = MsgRun.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateSchedualedRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgRun.fromJSON(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        message.msg !== undefined && (obj.msg = message.msg ? MsgRun.toJSON(message.msg) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateSchedualedRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgRun.fromPartial(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateSchedualedRunResponse = {};\nexport const MsgUpdateSchedualedRunResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateSchedualedRunResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateSchedualedRunResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateSchedualedRunResponse };\n        return message;\n    }\n};\nconst baseMsgDeleteSchedualedRun = { creator: '', index: '' };\nexport const MsgDeleteSchedualedRun = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteSchedualedRun };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteSchedualedRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteSchedualedRun };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteSchedualedRunResponse = {};\nexport const MsgDeleteSchedualedRunResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteSchedualedRunResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteSchedualedRunResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteSchedualedRunResponse };\n        return message;\n    }\n};\nconst baseMsgCreateStorage = { creator: '', index: '', data: '', force: false };\nexport const MsgCreateStorage = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        if (message.data !== '') {\n            writer.uint32(26).string(message.data);\n        }\n        if (message.force === true) {\n            writer.uint32(32).bool(message.force);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateStorage };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                case 3:\n                    message.data = reader.string();\n                    break;\n                case 4:\n                    message.force = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.force !== undefined && object.force !== null) {\n            message.force = Boolean(object.force);\n        }\n        else {\n            message.force = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        message.data !== undefined && (obj.data = message.data);\n        message.force !== undefined && (obj.force = message.force);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.force !== undefined && object.force !== null) {\n            message.force = object.force;\n        }\n        else {\n            message.force = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateStorageResponse = {};\nexport const MsgCreateStorageResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateStorageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateStorageResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateStorageResponse };\n        return message;\n    }\n};\nconst baseMsgUpdateStorage = { creator: '', index: '', data: '', force: false };\nexport const MsgUpdateStorage = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        if (message.data !== '') {\n            writer.uint32(26).string(message.data);\n        }\n        if (message.force === true) {\n            writer.uint32(32).bool(message.force);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateStorage };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                case 3:\n                    message.data = reader.string();\n                    break;\n                case 4:\n                    message.force = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.force !== undefined && object.force !== null) {\n            message.force = Boolean(object.force);\n        }\n        else {\n            message.force = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        message.data !== undefined && (obj.data = message.data);\n        message.force !== undefined && (obj.force = message.force);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.force !== undefined && object.force !== null) {\n            message.force = object.force;\n        }\n        else {\n            message.force = false;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateStorageResponse = {};\nexport const MsgUpdateStorageResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateStorageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateStorageResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateStorageResponse };\n        return message;\n    }\n};\nconst baseMsgDeleteStorage = { creator: '', index: '' };\nexport const MsgDeleteStorage = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteStorage };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteStorageResponse = {};\nexport const MsgDeleteStorageResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteStorageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteStorageResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteStorageResponse };\n        return message;\n    }\n};\nconst baseMsgCreateScript = { creator: '', code: '' };\nexport const MsgCreateScript = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.code !== '') {\n            writer.uint32(26).string(message.code);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateScript };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 3:\n                    message.code = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = String(object.code);\n        }\n        else {\n            message.code = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.code !== undefined && (obj.code = message.code);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateScriptResponse = { address: '' };\nexport const MsgCreateScriptResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateScriptResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateScriptResponse };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateScriptResponse };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateScript = { creator: '', code: '' };\nexport const MsgUpdateScript = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.code !== '') {\n            writer.uint32(26).string(message.code);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateScript };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 3:\n                    message.code = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = String(object.code);\n        }\n        else {\n            message.code = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.code !== undefined && (obj.code = message.code);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateScriptResponse = { address: '' };\nexport const MsgUpdateScriptResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateScriptResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateScriptResponse };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateScriptResponse };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteScript = { creator: '' };\nexport const MsgDeleteScript = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteScript };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteScriptResponse = {};\nexport const MsgDeleteScriptResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteScriptResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteScriptResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteScriptResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateSchedualedRun(request) {\n        const data = MsgCreateSchedualedRun.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'CreateSchedualedRun', data);\n        return promise.then((data) => MsgCreateSchedualedRunResponse.decode(new Reader(data)));\n    }\n    CreateStorage(request) {\n        const data = MsgCreateStorage.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'CreateStorage', data);\n        return promise.then((data) => MsgCreateStorageResponse.decode(new Reader(data)));\n    }\n    UpdateStorage(request) {\n        const data = MsgUpdateStorage.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'UpdateStorage', data);\n        return promise.then((data) => MsgUpdateStorageResponse.decode(new Reader(data)));\n    }\n    DeleteStorage(request) {\n        const data = MsgDeleteStorage.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'DeleteStorage', data);\n        return promise.then((data) => MsgDeleteStorageResponse.decode(new Reader(data)));\n    }\n    CreateScript(request) {\n        const data = MsgCreateScript.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'CreateScript', data);\n        return promise.then((data) => MsgCreateScriptResponse.decode(new Reader(data)));\n    }\n    UpdateScript(request) {\n        const data = MsgUpdateScript.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'UpdateScript', data);\n        return promise.then((data) => MsgUpdateScriptResponse.decode(new Reader(data)));\n    }\n    DeleteScript(request) {\n        const data = MsgDeleteScript.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'DeleteScript', data);\n        return promise.then((data) => MsgDeleteScriptResponse.decode(new Reader(data)));\n    }\n    Run(request) {\n        const data = MsgRun.encode(request).finish();\n        const promise = this.rpc.request('dyson.Msg', 'Run', data);\n        return promise.then((data) => MsgRunResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateSchedualedRun } from \"./types/dyson/tx\";\nimport { MsgDeleteScript } from \"./types/dyson/tx\";\nimport { MsgDeleteSchedualedRun } from \"./types/dyson/tx\";\nimport { MsgUpdateSchedualedRun } from \"./types/dyson/tx\";\nimport { MsgRun } from \"./types/dyson/msgrun\";\nimport { MsgCreateStorage } from \"./types/dyson/tx\";\nimport { MsgUpdateStorage } from \"./types/dyson/tx\";\nimport { MsgDeleteStorage } from \"./types/dyson/tx\";\nimport { MsgUpdateScript } from \"./types/dyson/tx\";\nimport { MsgCreateScript } from \"./types/dyson/tx\";\nconst types = [\n    [\"/dyson.MsgCreateSchedualedRun\", MsgCreateSchedualedRun],\n    [\"/dyson.MsgDeleteScript\", MsgDeleteScript],\n    [\"/dyson.MsgDeleteSchedualedRun\", MsgDeleteSchedualedRun],\n    [\"/dyson.MsgUpdateSchedualedRun\", MsgUpdateSchedualedRun],\n    [\"/dyson.MsgRun\", MsgRun],\n    [\"/dyson.MsgCreateStorage\", MsgCreateStorage],\n    [\"/dyson.MsgUpdateStorage\", MsgUpdateStorage],\n    [\"/dyson.MsgDeleteStorage\", MsgDeleteStorage],\n    [\"/dyson.MsgUpdateScript\", MsgUpdateScript],\n    [\"/dyson.MsgCreateScript\", MsgCreateScript],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nexport const registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    let client;\n    if (addr) {\n        client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    }\n    else {\n        client = await SigningStargateClient.offline(wallet, { registry });\n    }\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateSchedualedRun: (data) => ({ typeUrl: \"/dyson.MsgCreateSchedualedRun\", value: MsgCreateSchedualedRun.fromPartial(data) }),\n        msgDeleteScript: (data) => ({ typeUrl: \"/dyson.MsgDeleteScript\", value: MsgDeleteScript.fromPartial(data) }),\n        msgDeleteSchedualedRun: (data) => ({ typeUrl: \"/dyson.MsgDeleteSchedualedRun\", value: MsgDeleteSchedualedRun.fromPartial(data) }),\n        msgUpdateSchedualedRun: (data) => ({ typeUrl: \"/dyson.MsgUpdateSchedualedRun\", value: MsgUpdateSchedualedRun.fromPartial(data) }),\n        msgRun: (data) => ({ typeUrl: \"/dyson.MsgRun\", value: MsgRun.fromPartial(data) }),\n        msgCreateStorage: (data) => ({ typeUrl: \"/dyson.MsgCreateStorage\", value: MsgCreateStorage.fromPartial(data) }),\n        msgUpdateStorage: (data) => ({ typeUrl: \"/dyson.MsgUpdateStorage\", value: MsgUpdateStorage.fromPartial(data) }),\n        msgDeleteStorage: (data) => ({ typeUrl: \"/dyson.MsgDeleteStorage\", value: MsgDeleteStorage.fromPartial(data) }),\n        msgUpdateScript: (data) => ({ typeUrl: \"/dyson.MsgUpdateScript\", value: MsgUpdateScript.fromPartial(data) }),\n        msgCreateScript: (data) => ({ typeUrl: \"/dyson.MsgCreateScript\", value: MsgCreateScript.fromPartial(data) }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MsgRun, MsgRunResponse } from '../dyson/msgrun';\nimport { Coin } from '../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'dyson';\nconst baseSchedualedRun = { index: '', creator: '', height: 0, gas: 0, error: '' };\nexport const SchedualedRun = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== '') {\n            writer.uint32(10).string(message.index);\n        }\n        if (message.creator !== '') {\n            writer.uint32(18).string(message.creator);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(32).uint64(message.gas);\n        }\n        if (message.msg !== undefined) {\n            MsgRun.encode(message.msg, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.resp !== undefined) {\n            MsgRunResponse.encode(message.resp, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.error !== '') {\n            writer.uint32(58).string(message.error);\n        }\n        if (message.gasprice !== undefined) {\n            Coin.encode(message.gasprice, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.fee !== undefined) {\n            Coin.encode(message.fee, writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSchedualedRun };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.string();\n                    break;\n                case 2:\n                    message.creator = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.msg = MsgRun.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.resp = MsgRunResponse.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.error = reader.string();\n                    break;\n                case 8:\n                    message.gasprice = Coin.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.fee = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSchedualedRun };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgRun.fromJSON(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        if (object.resp !== undefined && object.resp !== null) {\n            message.resp = MsgRunResponse.fromJSON(object.resp);\n        }\n        else {\n            message.resp = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        if (object.gasprice !== undefined && object.gasprice !== null) {\n            message.gasprice = Coin.fromJSON(object.gasprice);\n        }\n        else {\n            message.gasprice = undefined;\n        }\n        if (object.fee !== undefined && object.fee !== null) {\n            message.fee = Coin.fromJSON(object.fee);\n        }\n        else {\n            message.fee = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.height !== undefined && (obj.height = message.height);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.msg !== undefined && (obj.msg = message.msg ? MsgRun.toJSON(message.msg) : undefined);\n        message.resp !== undefined && (obj.resp = message.resp ? MsgRunResponse.toJSON(message.resp) : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        message.gasprice !== undefined && (obj.gasprice = message.gasprice ? Coin.toJSON(message.gasprice) : undefined);\n        message.fee !== undefined && (obj.fee = message.fee ? Coin.toJSON(message.fee) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSchedualedRun };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgRun.fromPartial(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        if (object.resp !== undefined && object.resp !== null) {\n            message.resp = MsgRunResponse.fromPartial(object.resp);\n        }\n        else {\n            message.resp = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        if (object.gasprice !== undefined && object.gasprice !== null) {\n            message.gasprice = Coin.fromPartial(object.gasprice);\n        }\n        else {\n            message.gasprice = undefined;\n        }\n        if (object.fee !== undefined && object.fee !== null) {\n            message.fee = Coin.fromPartial(object.fee);\n        }\n        else {\n            message.fee = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'dyson';\nconst baseScript = { creator: '', index: '', code: '' };\nexport const Script = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        if (message.code !== '') {\n            writer.uint32(26).string(message.code);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseScript };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                case 3:\n                    message.code = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = String(object.code);\n        }\n        else {\n            message.code = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        message.code !== undefined && (obj.code = message.code);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseScript };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'dyson';\nconst baseStorage = { creator: '', index: '', data: '' };\nexport const Storage = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.index !== '') {\n            writer.uint32(18).string(message.index);\n        }\n        if (message.data !== '') {\n            writer.uint32(26).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStorage };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.index = reader.string();\n                    break;\n                case 3:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = String(object.index);\n        }\n        else {\n            message.index = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.index !== undefined && (obj.index = message.index);\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStorage };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError, registry } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SchedualedRun } from \"./module/types/dyson/schedualed_run\";\nimport { Script } from \"./module/types/dyson/script\";\nimport { Storage } from \"./module/types/dyson/storage\";\nimport { MsgUpdateSchedualedRunResponse } from \"./module/types/dyson/tx\";\nimport { MsgDeleteSchedualedRunResponse } from \"./module/types/dyson/tx\";\nexport { SchedualedRun, Script, Storage, MsgUpdateSchedualedRunResponse, MsgDeleteSchedualedRunResponse };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        SchedualedRun: {},\n        SchedualedRunAll: {},\n        Storage: {},\n        StorageAll: {},\n        Script: {},\n        Schema: {},\n        Wsgi: {},\n        QueryScript: {},\n        ScriptAll: {},\n        PrefixStorage: {},\n        _Structure: {\n            SchedualedRun: getStructure(SchedualedRun.fromPartial({})),\n            Script: getStructure(Script.fromPartial({})),\n            Storage: getStructure(Storage.fromPartial({})),\n            MsgUpdateSchedualedRunResponse: getStructure(MsgUpdateSchedualedRunResponse.fromPartial({})),\n            MsgDeleteSchedualedRunResponse: getStructure(MsgDeleteSchedualedRunResponse.fromPartial({})),\n        },\n        _Registry: registry,\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(JSON.stringify(subscription));\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(JSON.stringify(subscription));\n        }\n    },\n    getters: {\n        getSchedualedRun: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SchedualedRun[JSON.stringify(params)] ?? {};\n        },\n        getSchedualedRunAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SchedualedRunAll[JSON.stringify(params)] ?? {};\n        },\n        getStorage: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Storage[JSON.stringify(params)] ?? {};\n        },\n        getStorageAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.StorageAll[JSON.stringify(params)] ?? {};\n        },\n        getScript: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Script[JSON.stringify(params)] ?? {};\n        },\n        getSchema: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Schema[JSON.stringify(params)] ?? {};\n        },\n        getWsgi: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Wsgi[JSON.stringify(params)] ?? {};\n        },\n        getQueryScript: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.QueryScript[JSON.stringify(params)] ?? {};\n        },\n        getScriptAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ScriptAll[JSON.stringify(params)] ?? {};\n        },\n        getPrefixStorage: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PrefixStorage[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        },\n        getRegistry: (state) => {\n            return state._Registry;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: dyson initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    const sub = JSON.parse(subscription);\n                    await dispatch(sub.action, sub.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QuerySchedualedRun({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySchedualedRun(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.querySchedualedRun({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SchedualedRun', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySchedualedRun', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSchedualedRun']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySchedualedRun', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySchedualedRunAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySchedualedRunAll(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.querySchedualedRunAll({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SchedualedRunAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySchedualedRunAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSchedualedRunAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySchedualedRunAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryStorage({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryStorage(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryStorage({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Storage', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryStorage', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getStorage']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryStorage', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryStorageAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryStorageAll(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryStorageAll({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'StorageAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryStorageAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getStorageAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryStorageAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryScript({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryScript(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryScript({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Script', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryScript', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getScript']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryScript', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySchema({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySchema(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.querySchema({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Schema', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySchema', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSchema']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySchema', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryWsgi({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryWsgi(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryWsgi({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Wsgi', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryWsgi', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getWsgi']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryWsgi', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryQueryScript({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryQueryScript(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryQueryScript({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'QueryScript', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryQueryScript', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getQueryScript']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryQueryScript', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryScriptAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryScriptAll(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryScriptAll({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ScriptAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryScriptAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getScriptAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryScriptAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPrefixStorage({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params, query = null }) {\n            try {\n                const key = params ?? {};\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPrefixStorage(query)).data;\n                while (all && value.pagination && value.pagination.next_key != null) {\n                    let next_values = (await queryClient.queryPrefixStorage({ ...query, 'pagination.key': value.pagination.next_key })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PrefixStorage', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPrefixStorage', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPrefixStorage']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPrefixStorage', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgCreateSchedualedRun({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateSchedualedRun(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateSchedualedRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateSchedualedRun:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteScript({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteScript(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteScript:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteScript:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteSchedualedRun({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteSchedualedRun(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteSchedualedRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteSchedualedRun:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateSchedualedRun({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateSchedualedRun(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateSchedualedRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateSchedualedRun:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRun({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRun(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRun:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateStorage({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateStorage(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateStorage:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateStorage:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateStorage({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateStorage(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateStorage:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateStorage:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteStorage({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteStorage(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteStorage:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteStorage:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateScript({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateScript(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateScript:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateScript:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateScript({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateScript(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateScript:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateScript:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateSchedualedRun({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateSchedualedRun(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateSchedualedRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateSchedualedRun:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteScript({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteScript(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteScript:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteScript:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteSchedualedRun({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteSchedualedRun(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteSchedualedRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteSchedualedRun:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateSchedualedRun({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateSchedualedRun(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateSchedualedRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateSchedualedRun:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRun({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRun(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRun:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRun:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateStorage({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateStorage(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateStorage:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateStorage:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateStorage({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateStorage(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateStorage:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateStorage:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteStorage({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteStorage(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteStorage:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteStorage:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateScript({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateScript(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateScript:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateScript:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateScript({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateScript(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateScript:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateScript:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosAuthzV1Beta1 from './cosmos/cosmos-sdk/cosmos.authz.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosFeegrantV1Beta1 from './cosmos/cosmos-sdk/cosmos.feegrant.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosIbcGoIbcApplicationsTransferV1 from './cosmos/ibc-go/ibc.applications.transfer.v1';\nimport OrgDysonDyson from './org/dyson/dyson';\nexport default {\n    CosmosCosmosSdkCosmosAuthzV1Beta1: load(CosmosCosmosSdkCosmosAuthzV1Beta1, 'cosmos.authz.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosFeegrantV1Beta1: load(CosmosCosmosSdkCosmosFeegrantV1Beta1, 'cosmos.feegrant.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosIbcGoIbcApplicationsTransferV1: load(CosmosIbcGoIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    OrgDysonDyson: load(OrgDysonDyson, 'dyson'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n  <div>\n    <div class=\"container\">\n      <h1>\n        <div v-if=\"address\">\n          Go to your script:\n          <router-link class=\"sp-button\" :to=\"{ name: 'script-detail', params: { script_address: address } }\">\n            {{ address }}\n          </router-link>\n        </div>\n      </h1>\n      <SpTokenSend :address=\"address\" refresh=\"true\" />\n      <SpTransferList :address=\"address\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { JSONEditor } from '@json-editor/json-editor'\n\nclass CustomTheme extends JSONEditor.AbstractTheme {\n  getButton(text, icon, title) {\n    const el = super.getButton(text, icon, title)\n    //el.classList.add('sp-button')\n    return el\n  }\n\n  //getContainer() {\n  //  const el = document.createElement('div')\n  //  el.classList.add('sp-box', 'sp-shadow')\n  //  return el\n  //}\n\n  getFormControl(label, input, description, infoText) {\n    const group = document.createElement('div')\n\n    if (label && (input.type === 'checkbox' || input.type === 'radio')) {\n      group.classList.add(input.type)\n      label.insertBefore(input, label.firstChild)\n      group.appendChild(label)\n    } else {\n      input.classList.add('sp-input')\n      group.classList.add('form-group')\n      if (label) {\n        label.classList.add('control-label')\n        label.classList.add('sp-box-header')\n        group.appendChild(label)\n        if (infoText) label.appendChild(infoText)\n      }\n      group.appendChild(input)\n    }\n\n    if (description) group.appendChild(description)\n\n    return group\n  }\n}\nCustomTheme.rules = {}\nJSONEditor.defaults.themes.myCustom = CustomTheme\n\nexport default {\n  name: 'Index',\n  computed: {\n    address() {\n      return this.$store.getters['common/wallet/address']\n    },\n  },\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=5bac56ac\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"sp-type-list-empty\" v-if=\"!typeItems || typeItems.length == 0\"></div>\n  <template v-else>\n    <div v-for=\"item in typeItems\" v-bind:key=\"item.index\">\n      <router-link\n        :to=\"{ name: 'script-detail', params: { script_address: item.index } }\"\n        class=\"sp-button-primary sp-button\"\n      >\n        {{ item.index }}\n      </router-link>\n    </div>\n  </template>\n</template>\n<script>\nconst schema = {}\nexport default {\n  name: 'ScriptList',\n  computed: {\n    typeItems: function () {\n      const items = this.$store.getters['dyson/getScriptAll']()\n      window.items = items\n      return items ? items['Script'] : []\n    },\n  },\n  created: async function () {\n    await this.$store.dispatch('dyson/QueryScriptAll', {\n      options: { subscribe: false, all: true },\n    })\n  },\n  methods: {},\n  mounted: function () {\n    window.$store = this.$store\n  },\n}\n</script>\n","import { render } from \"./ScriptList.vue?vue&type=template&id=1f2810d2\"\nimport script from \"./ScriptList.vue?vue&type=script&lang=js\"\nexport * from \"./ScriptList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<style scoped>\n.smol-css-grid {\n  --min: 90ch;\n  --gap: 1rem;\n\n  display: grid;\n  grid-gap: var(--gap);\n  /* min() with 100% prevents overflow\n\t\tin extra narrow spaces */\n  grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--min)), 1fr));\n  pre {\n      white-space: pre-wrap;\n  }\n}\n</style>\n\n<template>\n  <div class=\"container\">\n    <div class=\"smol-css-grid\">\n      <div id=\"schemas\">\n        <div v-if=\"schemas && schemas.error\">\n          {{ schemas.error }}\n        </div>\n        <div v-for=\"item in schemas\" v-bind:key=\"item.function\">\n          <FunctionDetail\n            v-if=\"item.schema\"\n            v-bind:schema=\"item.schema\"\n            v-bind:name=\"item.function\"\n            v-bind:scriptAddress=\"this.$route.params.script_address\"\n          />\n          <div v-if=\"item.error\" class=\"sp-box sp-shadow\">\n            <h3>{{ item.function }}</h3>\n            <pre>{{ item.error }}</pre>\n          </div>\n        </div>\n      </div>\n      <div id=\"code\">\n        <div v-if=\"script || address == this.$route.params.script_address\">\n          <VAceEditor v-model:value=\"code\" lang=\"python\" theme=\"chrome\" min-lines=\"30\" max-lines=\"200\" />\n          <button @click=\"save\" :disabled=\"inFlight || address != this.$route.params.script_address\">save</button>\n        </div>\n        <pre v-if=\"txResult\">\n        TX hash: {{ txResult.tx }}\n        Height: {{ txResult.height }}\n        Raw Log: {{ txResult.rawLog }}\n        </pre>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport FunctionDetail from './FunctionDetail'\nimport { VAceEditor } from 'vue3-ace-editor'\nimport 'ace-builds/src-noconflict/theme-chrome'\nimport 'ace-builds/src-noconflict/mode-python'\n\nexport default {\n  name: 'ScriptDetail',\n  data: function () {\n    return {\n      scriptAddress: null,\n      inFlight: false,\n      txResult: null,\n      editedCode: null,\n    }\n  },\n  components: {\n    FunctionDetail,\n    VAceEditor,\n  },\n  methods: {\n    async save(e) {\n        this.inFlight = true\n        this.txResult  = null\n      const value = {\n        creator: this.address,\n        code: this.code,\n      }\n      try {\n        this.txResult = await this.$store.dispatch('dyson/sendMsgUpdateScript', {\n          value: value,\n          fee: [{ amount: '2000', denom: 'dys' }],\n        })\n        this.inFlight = false\n        console.log('txResult', this.txResult)\n      } catch (e) {\n        console.error(e)\n      } finally {\n        this.inFlight = false\n      }\n    },\n  },\n  computed: {\n    code: {\n      get() {\n        if (this.editedCode === null) {\n          return this.script ? this.script.code : ''\n        } else {\n          return this.editedCode\n        }\n      },\n      set(newValue) {\n        this.editedCode = newValue\n      },\n    },\n    address: function () {\n      return this.$store.getters['common/wallet/address']\n    },\n    schemas: function () {\n        const result = this.$store.getters['dyson/getSchema']({params:{}, query: { index: this.$route.params.script_address } })\n\n      const schemas = result.schema ? JSON.parse(result.schema) : []\n      return schemas.filter((s) => s.function != 'app' && !(s.function || '').startsWith('_'))\n    },\n    script: function () {\n        const result = this.$store.getters['dyson/getScript']({params:{}, query: { index: this.$route.params.script_address } })\n      return result ? result.script : {}\n    },\n  },\n  created: async function () {\n    window.$store = this.$store\n    this.scriptAddress = this.$route.params.script_address\n    this.$store\n      .dispatch('dyson/QueryScript', {\n        query: { index: this.$route.params.script_address },\n        options: { subscribe: true, all: false },\n      })\n      .then(console.log)\n    this.$store\n      .dispatch('dyson/QuerySchema', {\n        query: { index: this.$route.params.script_address },\n        options: { subscribe: true, all: false },\n      })\n      .then(console.log)\n  },\n  beforeUnmount: async function () {\n    this.$store.dispatch('dyson/unsubscribe', {\n      action: 'QuerySchema',\n      payload: { options: { all: false }, query: { index: this.scriptAddress }, params: null },\n    })\n    this.$store.dispatch('dyson/unsubscribe', {\n      action: 'QueryScript',\n      payload: { options: { all: false }, query: { index: this.scriptAddress }, params: null },\n    })\n  },\n}\n</script>\n\n","<template>\n  <div :class=\"{ modal: isModal }\">\n    <form v-on:submit=\"submit\" class=\"sp-box sp-shadow\" :action=\"`#${name}`\"  :class=\"{ 'modal-content': isModal }\">\n      <div v-bind:id=\"name\"></div>\n      <span v-if=\"isModal\" class=\"close\" @click=\"this.isModal=false\"> &times; </span>\n      <button name=\"action\" type=\"submit\" value=\"link\" class=\"sp-button\">link {{ name }}</button>\n      <button name=\"action\" :disabled=\"this.inflight\" type=\"submit\" value=\"query\" class=\"sp-button\">\n        Query {{ name }}\n      </button>\n      <button\n        name=\"action\"\n        :disabled=\"!address || this.inflight\"\n        type=\"submit\"\n        value=\"run\"\n        class=\"sp-button sp-button-primary\"\n      >\n        Run {{ name }}\n      </button>\n      <button class=\"sp-button\" v-on:click=\"isHidden = !isHidden\">Coins to Send</button>\n      <div class=\"form-group\" v-show=\"!isHidden\">\n        <label class=\"control-label sp-box-header\">Coins</label>\n        <input class=\"sp-input\" v-model=\"coins\" />\n      </div>\n    </form>\n    <pre v-if=\"runResponse\">\nTX hash: {{ runResponse.tx }}\nCumulative Size: {{ runResponse.cumsize }}\nNodes Evaluated: {{ runResponse.nodes_called }}\nResult: {{ runResponse.result }}\nException: {{ runResponse.exception }}\nStdout:\n{{ runResponse.stdout }}\n</pre\n    >\n    <pre v-if=\"queryResponseErr\">{{ queryResponseErr }}</pre>\n    <pre v-if=\"queryResponse\">\nCumulative Size: {{ queryResponse.cumsize }}\nNodes Evaluated: {{ queryResponse.nodes_called }}\nResult: {{ queryResponse.result }}\nException: {{ queryResponse.exception }}\nStdout:\n{{ queryResponse.stdout }}\n</pre\n    >\n  </div>\n</template>\n<script>\nvar qs = require('qs')\nimport { JSONEditor } from '@json-editor/json-editor'\nimport 'animate.css'\n\nexport default {\n  name: 'FunctionDetail',\n  props: {\n    schema: Object,\n    name: String,\n    scriptAddress: String,\n  },\n  data: function () {\n    return {\n      runResponse: null,\n      queryResponse: null,\n      queryResponseErr: null,\n      inflight: false,\n      coins: '',\n      isHidden: true,\n      isModal: false,\n    }\n  },\n  computed: {\n    queryData: function () {\n      let uri = window.location.search.substring(1)\n      return qs.parse(uri)[this.name]\n    },\n    address: function () {\n      return this.$store.getters['common/wallet/address']\n    },\n  },\n  methods: {\n    submit: async function (e) {\n      console.log(e.submitter.value)\n      if (e.submitter.value != 'link') {\n        e.preventDefault()\n      }\n      this.runResponse = null\n      this.queryResponse = null\n      this.queryResponseErr = null\n      if (this._depsLoaded) {\n        const value = {\n          creator: this.address,\n          address: this.scriptAddress,\n          functionName: this.name,\n          kwargs: JSON.stringify(this.editor.getValue()),\n          coins: this.coins,\n        }\n        console.log(value)\n\n        if (e.submitter.value == 'run') {\n          var txResult = {}\n          try {\n            this.editor.disable()\n            this.inflight = true\n            var runResponse = {}\n            try {\n              txResult = await this.$store.dispatch('dyson/sendMsgRun', {\n                value: value,\n                fee: [{ amount: '2000', denom: 'dys' }],\n              })\n              console.log('txResult', txResult)\n              runResponse = JSON.parse(\n                JSON.parse(txResult['rawLog'])[0]\n                  ['events'].filter((i) => i.type == 'run')[0]\n                  ['attributes'].slice(-1)[0]['value'],\n              )\n            } catch (objError) {\n              console.info('objError', objError)\n              if (objError instanceof SyntaxError) {\n                runResponse.exception = txResult['rawLog']\n              } else {\n                runResponse.exception = objError.message\n              }\n            }\n\n            console.log('runResponse', runResponse)\n            this.runResponse = runResponse\n            this.runResponse.tx = txResult.transactionHash\n          } catch (e) {\n            console.log('uncaught error', e)\n          } finally {\n            this.editor.enable()\n            this.inflight = false\n          }\n        } else if (e.submitter.value == 'query') {\n          try {\n            this.editor.disable()\n            this.inflight = true\n            const resp = await this.$store.dispatch('dyson/QueryQueryScript', {\n              params: {},\n              query: value,\n              options: { subscribe: false },\n            })\n            console.log('queryResponse', resp)\n            try {\n              this.queryResponse = JSON.parse(resp.response)\n            } catch (e) {\n              if (e instanceof SyntaxError) {\n                this.queryResponseErr = resp.response\n              }\n            }\n          } catch (e) {\n            this.queryResponseErr = e\n            console.error(e)\n          } finally {\n            this.editor.enable()\n            this.inflight = false\n          }\n        }\n      }\n    },\n    setupEditor() {\n      if (this.editor) {\n        this.editor.destroy()\n      }\n      const element = document.getElementById(this.name)\n\n      this.editor = new JSONEditor(element, {\n        form_name_root: this.name,\n        schema: this.schema,\n        disable_collapse: true,\n        //disable_properties: true,\n        //disable_edit_json: true,\n        show_opt_in: true,\n        theme: 'myCustom',\n      })\n      window[this.name + 'editor'] = this.editor\n      this.editor.setValue(this.queryData)\n      this.inflight = false\n\n      if ('#' + this.name === window.location.hash) {\n        element.scrollIntoView()\n        this.isModal = true\n      } else {\n        this.isModal = false\n      }\n    },\n  },\n  watch: {\n    schema: function (val) {\n      if (JSON.stringify(val) !== JSON.stringify(this.editor.schema)) {\n        this.setupEditor()\n      }\n    },\n  },\n\n  mounted: function () {\n    this.$nextTick(function () {\n      this.setupEditor()\n    })\n  },\n}\n</script>\n<style>\n.sp-box {\n  margin-bottom: 15px;\n}\npre {\n  white-space: pre-wrap;\n}\n\n.close {\n  display: none;\n}\n\n/* The Modal (background) */\n.modal {\n  position: fixed; /* Stay in place */\n  z-index: 10; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.5); /* Black w/ opacity */\n}\n\n.modal .close {\n  display: inline;\n}\n/* Modal Content/Box */\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto; /* 15% from the top and centered */\n  padding: 20px;\n  border: 1px solid #888;\n  width: 50%; /* Could be more or less, depending on screen size */\n}\n\n/* The Close Button */\n.close {\n  color: #aaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n}\n</style>\n","import { render } from \"./FunctionDetail.vue?vue&type=template&id=d5a0098c\"\nimport script from \"./FunctionDetail.vue?vue&type=script&lang=js\"\nexport * from \"./FunctionDetail.vue?vue&type=script&lang=js\"\n\nimport \"./FunctionDetail.vue?vue&type=style&index=0&id=d5a0098c&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ScriptDetail.vue?vue&type=template&id=bb3f3d62&scoped=true\"\nimport script from \"./ScriptDetail.vue?vue&type=script&lang=js\"\nexport * from \"./ScriptDetail.vue?vue&type=script&lang=js\"\n\nimport \"./ScriptDetail.vue?vue&type=style&index=0&id=bb3f3d62&scoped=true&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-bb3f3d62\"]])\n\nexport default __exports__","<style scoped>\n.smol-css-grid {\n  --min: 90ch;\n  --gap: 1rem;\n\n  display: grid;\n  grid-gap: var(--gap);\n  /* min() with 100% prevents overflow\n    in extra narrow spaces */\n  grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--min)), 1fr));\n}\n</style>\n<template>\n  <div class=\"container\">\n    <div class=\"smol-css-grid\">\n      <div class=\"sp-box sp-shadow\">\n        <select v-model=\"command\">\n          <option disabled value=\"\">Please select one</option>\n          <option v-for=\"c in tx\" v-bind:key=\"c\" v-bind:value=\"c\">Tx - {{ c }}</option>\n          <option v-for=\"c in query\" v-bind:key=\"c\" v-bind:value=\"c\">Query - {{ c }}</option>\n        </select>\n        <div class=\"sp-box-header\">\n          {{ command }}\n        </div>\n        <form v-on:submit=\"submit\" class=\"\">\n          <div class=\"form-group\">\n            <VAceEditor v-model:value=\"data\" lang=\"json\" theme=\"chrome\" min-lines=\"10\" max-lines=\"200\" />\n            <div>{{ error }}</div>\n            <button name=\"action\" :disabled=\"disabled\" type=\"submit\" value=\"run\" class=\"sp-button sp-button-primary\">\n              {{ buttontxt }}\n            </button>\n            <div class=\"form-group\" v-show=\"showFee\">\n              <label class=\"control-label sp-box-header\">DYS gas fee</label>\n              <input class=\"sp-input\" v-model=\"fee\" />\n            </div>\n          </div>\n        </form>\n      </div>\n      <div>\n        <pre>\nfrom dys import rpc\n\n\ndef example():\n    return rpc(\"{{ command || 'example/command' }}\"{{ command_kwargs }})\n\n</pre\n        >\n      </div>\n    </div>\n    <div class=\"smol-css-grid\">\n      <div id=\"editor\"></div>\n      <div id=\"responseEditor\"></div>\n    </div>\n  </div>\n</template>\n<script>\nimport { VAceEditor } from 'vue3-ace-editor'\nimport 'ace-builds/src-noconflict/theme-chrome'\nimport 'ace-builds/src-noconflict/mode-json'\nimport command_schema from './command_schema.json'\nimport { JSONEditor } from '@json-editor/json-editor'\n\nconst snakeToCamel = (s) => s.replace(/(_\\w)/g, (k) => k[1].toUpperCase())\n\nconst flattenObject = (obj, prefix = '') =>\n  Object.keys(obj).reduce((acc, k) => {\n    const pre = prefix.length ? prefix + '.' : ''\n    if (typeof obj[k] === 'object') Object.assign(acc, flattenObject(obj[k], pre + k))\n    else acc[pre + k] = obj[k]\n    return acc\n  }, {})\n\nconst pythonify = (obj) => {\n  if (obj === true) return 'True'\n  if (obj === false) return 'False'\n  if (obj === undefined) return 'None'\n  if (obj === null) return 'None'\n  if (Array.isArray(obj)) {\n    return (\n      '[' +\n      Object.keys(obj)\n        .map((i) => {\n          return pythonify(obj[i])\n        })\n        .join(', ') +\n      ']'\n    )\n  }\n  if (typeof obj === 'object') {\n    return (\n      '{' +\n      Object.keys(obj)\n        .map((key) => {\n          return `\"${key}\": ${pythonify(obj[key])}`\n        })\n        .join(', ') +\n      '}'\n    )\n  }\n  return JSON.stringify(obj)\n}\n\nwindow.pythonify = pythonify\n\nfunction deepen(obj) {\n  const result = {}\n\n  // For each object path (property key) in the object\n  for (const objectPath in obj) {\n    // Split path into component parts\n    const parts = objectPath.split('.')\n\n    // Create sub-objects along path as needed\n    let target = result\n    while (parts.length > 1) {\n      const part = parts.shift()\n      target = target[part] = target[part] || {}\n    }\n\n    // Set value at end of path\n    target[parts[0]] = obj[objectPath]\n  }\n\n  return result\n}\n\nexport default {\n  data: function () {\n    return {\n      tx: [],\n      query: [],\n      command: '',\n      command_kwargs: '',\n      inflight: false,\n      data: '{}',\n      editorData: {},\n      error: '',\n      response: '',\n      fee: null,\n      showFee: false,\n    }\n  },\n  watch: {\n    command: function (val, oldVal) {\n      console.log('watch command:', val, oldVal)\n      const query = { ...this.$route.query, command: val }\n      this.$router.replace({ query })\n      this.setupEditor()\n      this.setupResponseEditor()\n    },\n    data: function (val, oldVal) {\n      console.log('watch data:', val, oldVal)\n      try {\n        if (JSON.stringify(JSON.parse(val)) !== JSON.stringify(JSON.parse(oldVal))) {\n          const s = JSON.stringify(JSON.parse(val), null, 2)\n          const obj = JSON.parse(val)\n          const query = { ...this.$route.query, data: JSON.stringify(obj) }\n          this.data = s\n          this.$router.replace({ query })\n          var deepData = { ...obj.value, ...obj.query, ...obj.params }\n          deepData = deepen(deepData)\n          if (this.editor) this.editor.setValue(deepData)\n        }\n        this.error = null\n      } catch (e) {\n        this.error = e\n      }\n    },\n    fee: function (val, oldVal) {\n      console.log('watch fee', val, oldVal)\n      if (oldVal !== null) {\n        this.editorChanged()\n      }\n    },\n    response: function (val, oldVal) {\n      this.responseEditor.setValue(val)\n      this.responseEditor.disable()\n    },\n  },\n  computed: {\n    address: function () {\n      return this.$store.getters['common/wallet/address']\n    },\n    buttontxt: function () {\n      if (this.tx.includes(this.command)) {\n        if (!this.address) {\n          return 'Unlock Wallet to Sign Transaction'\n        } else {\n          return 'Sign Transaction'\n        }\n      }\n      if (this.query.includes(this.command)) {\n        return 'Run Query'\n      }\n      return 'Select Command'\n    },\n    disabled: function () {\n      if (this.inflight || this.error || !this.command) {\n        return true\n      }\n      if (!this.address && this.tx.includes(this.command)) {\n        return true\n      }\n      return false\n    },\n  },\n  methods: {\n    editorChanged() {\n      console.log('editorChanged', this.data)\n      if (command_schema[this.command].service_name === 'Query') {\n        this.showFee = false\n        var query = JSON.parse(JSON.stringify(this.editor.getValue()))\n        var params = {}\n        const rules = command_schema[this.command].http_rules\n        if (rules) {\n          const rule = rules[0]\n          for (let i in rule.Params) {\n            // Needed because starport g vuex is using json_fieldnames\n            const param = rule.Params[i]\n            params[rule.Params[i]] = query[param]\n            delete query[param]\n          }\n          query = flattenObject(query)\n        }\n        this.data = JSON.stringify({ query: query, params: params }, null, 2)\n      } else if (command_schema[this.command].service_name === 'Msg') {\n        this.showFee = true\n        var value = JSON.parse(JSON.stringify(this.editor.getValue()))\n        const fee = [{ amount: this.fee, denom: 'dys' }]\n        this.data = JSON.stringify({ value: value, fee: fee }, null, 2)\n      }\n      var data = JSON.parse(JSON.stringify(this.editor.getValue()))\n      this.command_kwargs = Object.keys(data)\n        .map(function (key, index) {\n          return ', ' + key + '=' + pythonify(data[key])\n        })\n        .join('')\n    },\n    setupEditor() {\n      console.log('setupEditor', self.data)\n      const element = document.getElementById('editor')\n      if (!element) return\n      if (this.editor) {\n        this.editor.destroy()\n      }\n\n      this.editor = new JSONEditor(element, {\n        form_name_root: 'editor',\n        schema: command_schema[this.command].request_schema || {},\n        disable_collapse: true,\n        disable_properties: true,\n        disable_edit_json: true,\n        show_opt_in: true,\n        theme: 'myCustom',\n      })\n      this.editor.on('change', this.editorChanged)\n\n      window['editor'] = this.editor\n      this.inflight = false\n    },\n    submit: async function (e) {\n      e.preventDefault()\n      this.$store\n        .dispatch(this.command, JSON.parse(this.data))\n        .then((res) => (this.response = res))\n        .catch((res) => (this.error = res))\n    },\n    setupResponseEditor() {\n      const element = document.getElementById('responseEditor')\n      if (!element) return\n      if (this.responseEditor) {\n        this.responseEditor.destroy()\n      }\n\n      this.responseEditor = new JSONEditor(element, {\n        form_name_root: 'responseEditor',\n        schema: command_schema[this.command]['resp_schema'] || {},\n        disable_collapse: true,\n        disable_properties: true,\n        disable_edit_json: true,\n        show_opt_in: false,\n        theme: 'myCustom',\n      })\n      this.responseEditor.disable()\n\n      window['responseEditor'] = this.responseEditor\n    },\n  },\n  created: async function () {\n    console.log('created')\n    window.$store = this.$store\n  },\n  components: {\n    VAceEditor,\n  },\n\n  mounted: function () {\n    console.log('mounted')\n    this.tx = Object.keys(this.$store['_actions']).filter((key) => key.match('sendMsg'))\n    this.query = Object.keys(this.$store['_actions']).filter((key) => key.match('Query'))\n    this.command = this.$route.query.command\n    const data = JSON.parse(this.$route.query.data || '{}')\n    const s = JSON.stringify(data, null, 2)\n    if (data.fee !== undefined) {\n      for (const fee of data.fee) {\n        console.log('fee', fee)\n        if (fee.denom === 'dys') {\n          this.fee = fee.amount\n        }\n      }\n    }\n\n    this.data = s\n    this.setupEditor()\n    this.setupResponseEditor()\n  },\n}\n</script>\n","import { render } from \"./TxBuilder.vue?vue&type=template&id=52450392&scoped=true\"\nimport script from \"./TxBuilder.vue?vue&type=script&lang=js\"\nexport * from \"./TxBuilder.vue?vue&type=script&lang=js\"\n\nimport \"./TxBuilder.vue?vue&type=style&index=0&id=52450392&scoped=true&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-52450392\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Relayers from '@/views/Relayers.vue'\nimport ScriptList from '@/views/ScriptList.vue'\nimport ScriptDetail from '@/views/ScriptDetail.vue'\nimport TxBuilder from '@/views/TxBuilder.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n  { path: '/', component: Index },\n  { path: '/relayers', component: Relayers },\n  { path: '/scripts', name: 'script-list', component: ScriptList },\n  { path: '/scripts/:script_address', name: 'script-detail', component: ScriptDetail },\n  { path: '/txbuilder', name: 'tx-builder', component: TxBuilder},\n]\n\nconst router = createRouter({\n  history: routerHistory,\n  routes,\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nwindow.vueStore = store\n\n// This is probbly not great, but we want to use the same\n//\nwindow.startVueApp = function() {\n    const app = createApp(App)\n    app.config.globalProperties._depsLoaded = true\n    app.use(store).use(router).use(vueLib).mount('#app')\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkDyson\"] = self[\"webpackChunkDyson\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(6193); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","footer","showText","name","data","computed","hasWallet","this","$store","hasModule","__exports__","components","Sidebar","async","dispatch","errorCaptured","err","console","log","render","ContentType","HttpClient","constructor","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","input","JSON","stringify","FormData","Object","keys","reduce","key","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","get","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","type","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","r","response","error","ok","catch","e","assign","addQueryParam","value","encodeURIComponent","Array","isArray","join","rawQuery","filter","map","addQueryParams","params1","params2","Api","super","arguments","queryGrants","method","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","length","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","object","Number","toJSON","obj","fromPartial","globalThis","self","window","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseAny","typeUrl","Any","string","bytes","String","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byteLength","push","fromCharCode","baseGenericAuthorization","msg","GenericAuthorization","baseGrant","Grant","authorization","fork","ldelim","expiration","toTimestamp","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","t","millis","Date","o","baseMsgGrant","granter","grantee","MsgGrant","grant","baseMsgExec","MsgExec","v","msgs","baseMsgRevoke","msgTypeUrl","MsgRevoke","types","MissingWalletError","registry","Registry","defaultFee","amount","gas","txClient","wallet","addr","client","SigningStargateClient","address","getAccounts","signAndBroadcast","fee","memo","msgExec","msgGrant","msgRevoke","queryClient","baseEventGrant","EventGrant","baseEventRevoke","EventRevoke","baseGrantAuthorization","GrantAuthorization","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","entries","field","getDefaultState","Grants","_Structure","_Registry","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getGrants","getTypeStructure","getRegistry","actions","init","rootGetters","on","resetState","commit","unsubscribe","forEach","sub","parse","action","payload","SpVuexError","options","subscribe","all","pagination","next_key","result","queryAllBalances","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","Coin","baseParams","defaultSendEnabled","Params","sendEnabled","SendEnabled","bool","Boolean","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","total","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","description","base","display","symbol","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseSendAuthorization","SendAuthorization","spendLimit","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","queryCommunityPool","queryDelegationTotalRewards","delegatorAddress","queryDelegationRewards","validatorAddress","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseDecCoin","DecCoin","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgWithdrawDelegatorReward","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","ValidatorHistoricalRewards","cumulativeRewardRatio","baseValidatorCurrentRewards","period","ValidatorCurrentRewards","rewards","uint64","baseValidatorAccumulatedCommission","ValidatorAccumulatedCommission","commission","baseValidatorOutstandingRewards","ValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","ValidatorSlashEvent","baseValidatorSlashEvents","ValidatorSlashEvents","validatorSlashEvents","baseFeePool","FeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","CommunityPoolSpendProposal","baseDelegatorStartingInfo","previousPeriod","stake","height","DelegatorStartingInfo","baseDelegationDelegatorReward","DelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","CommunityPoolSpendProposalWithDeposit","baseDelegatorWithdrawInfo","DelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","ValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","ValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","ValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","ValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","DelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","ValidatorSlashEventRecord","validatorSlashEvent","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","validator_address","delegator_address","queryAllEvidence","queryEvidence","evidenceHash","baseMsgSubmitEvidence","submitter","MsgSubmitEvidence","evidence","msgSubmitEvidence","baseEquivocation","power","consensusAddress","Equivocation","time","Evidence","AllEvidence","getEvidence","getAllEvidence","evidence_hash","queryAllowance","queryAllowances","baseMsgGrantAllowance","MsgGrantAllowance","allowance","baseMsgRevokeAllowance","MsgRevokeAllowance","msgGrantAllowance","msgRevokeAllowance","baseDuration","Duration","baseBasicAllowance","BasicAllowance","basePeriodicAllowance","PeriodicAllowance","basic","periodSpendLimit","periodCanSpend","periodReset","baseAllowedMsgAllowance","allowedMessages","AllowedMsgAllowance","Allowance","Allowances","V1Beta1ProposalStatus","V1Beta1VoteOption","getAllowance","getAllowances","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","UNRECOGNIZED","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseWeightedVoteOption","option","weight","WeightedVoteOption","baseTextProposal","TextProposal","baseDeposit","Deposit","baseProposal","status","Proposal","finalTallyResult","TallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","Vote","baseDepositParams","DepositParams","minDeposit","maxDepositPeriod","baseVotingParams","VotingParams","votingPeriod","baseTallyParams","TallyParams","quorum","threshold","vetoThreshold","baseMsgSubmitProposal","proposer","MsgSubmitProposal","initialDeposit","baseMsgVote","MsgVote","baseMsgVoteWeighted","MsgVoteWeighted","baseMsgDeposit","MsgDeposit","msgDeposit","msgVote","msgVoteWeighted","msgSubmitProposal","Proposals","Votes","Deposits","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","proposal_id","params_type","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","ValidatorSigningInfo","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseSigningInfo","SigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","ValidatorMissedBlocks","missedBlocks","MissedBlock","baseMissedBlock","index","missed","SigningInfos","V1Beta1BondStatus","getSigningInfo","getSigningInfos","cons_address","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseConsensus","block","app","Consensus","BlockIDFlag","SignedMsgType","basePartSetHeader","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","Header","version","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","proposerAddress","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","header","valset","Validator","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","baseValidator","operatorAddress","jailed","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","baseValAddresses","addresses","ValAddresses","baseDVPair","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","maxValidators","maxEntries","historicalEntries","bondDenom","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgBeginRedelegate","msgCreateValidator","msgEditValidator","msgUndelegate","msgDelegate","AuthorizationType","authorizationTypeFromJSON","AUTHORIZATION_TYPE_UNSPECIFIED","AUTHORIZATION_TYPE_DELEGATE","AUTHORIZATION_TYPE_UNDELEGATE","AUTHORIZATION_TYPE_REDELEGATE","authorizationTypeToJSON","baseStakeAuthorization","authorizationType","StakeAuthorization","maxTokens","allowList","StakeAuthorization_Validators","denyList","baseStakeAuthorization_Validators","baseLastValidatorPower","LastValidatorPower","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","validator_addr","delegator_addr","baseMsgCreateVestingAccount","endTime","delayed","MsgCreateVestingAccount","msgCreateVestingAccount","baseBaseAccount","accountNumber","sequence","BaseAccount","pubKey","baseBaseVestingAccount","BaseVestingAccount","baseAccount","originalVesting","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","basePermanentLockedAccount","PermanentLockedAccount","queryDenomTraces","queryDenomTrace","baseHeight","revisionNumber","revisionHeight","Height","baseMsgTransfer","sourcePort","sourceChannel","receiver","timeoutTimestamp","MsgTransfer","token","timeoutHeight","msgTransfer","baseFungibleTokenPacketData","FungibleTokenPacketData","baseDenomTrace","baseDenom","DenomTrace","receiveEnabled","DenomTraces","getDenomTrace","getDenomTraces","queryQueryScript","querySchema","queryScript","queryScriptAll","queryStorage","queryStorageAll","queryPrefixStorage","queryWsgi","querySchedualedRun","querySchedualedRunAll","baseMsgRun","creator","extraLines","functionName","args","kwargs","MsgRun","baseMsgRunResponse","MsgRunResponse","baseMsgCreateSchedualedRun","MsgCreateSchedualedRun","baseMsgUpdateSchedualedRun","MsgUpdateSchedualedRun","baseMsgUpdateSchedualedRunResponse","MsgUpdateSchedualedRunResponse","_","baseMsgDeleteSchedualedRun","MsgDeleteSchedualedRun","baseMsgDeleteSchedualedRunResponse","MsgDeleteSchedualedRunResponse","baseMsgCreateStorage","force","MsgCreateStorage","baseMsgUpdateStorage","MsgUpdateStorage","baseMsgDeleteStorage","MsgDeleteStorage","baseMsgCreateScript","code","MsgCreateScript","baseMsgUpdateScript","MsgUpdateScript","baseMsgDeleteScript","MsgDeleteScript","msgCreateSchedualedRun","msgDeleteScript","msgDeleteSchedualedRun","msgUpdateSchedualedRun","msgRun","msgCreateStorage","msgUpdateStorage","msgDeleteStorage","msgUpdateScript","msgCreateScript","baseSchedualedRun","SchedualedRun","resp","gasprice","baseScript","Script","baseStorage","Storage","SchedualedRunAll","StorageAll","Schema","Wsgi","QueryScript","ScriptAll","PrefixStorage","getSchedualedRun","getSchedualedRunAll","getStorage","getStorageAll","getScript","getSchema","getWsgi","getQueryScript","getScriptAll","getPrefixStorage","CosmosCosmosSdkCosmosAuthzV1Beta1","load","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosFeegrantV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosIbcGoIbcApplicationsTransferV1","OrgDysonDyson","mod","fullns","store","registerModule","mutation","root","moduleInit","values","generated","transfers","blocks","env","relayers","createStore","to","refresh","CustomTheme","JSONEditor","getButton","el","getFormControl","label","infoText","group","document","createElement","classList","appendChild","insertBefore","firstChild","rules","typeItems","item","items","created","methods","mounted","id","schemas","function","schema","scriptAddress","$route","script_address","script","lang","theme","save","disabled","inFlight","txResult","tx","rawLog","isModal","submit","inflight","isHidden","runResponse","cumsize","nodes_called","exception","stdout","queryResponseErr","queryResponse","qs","props","queryData","uri","location","search","substring","preventDefault","_depsLoaded","editor","getValue","disable","slice","objError","info","SyntaxError","transactionHash","enable","setupEditor","destroy","element","getElementById","form_name_root","disable_collapse","show_opt_in","setValue","scrollIntoView","watch","val","$nextTick","editedCode","FunctionDetail","VAceEditor","newValue","s","startsWith","beforeUnmount","command","c","buttontxt","showFee","command_kwargs","flattenObject","prefix","acc","k","pre","pythonify","deepen","objectPath","parts","split","target","part","shift","editorData","oldVal","$router","replace","setupResponseEditor","deepData","editorChanged","responseEditor","includes","service_name","http_rules","rule","param","request_schema","disable_properties","disable_edit_json","res","match","routerHistory","createWebHistory","routes","component","Index","Relayers","ScriptList","ScriptDetail","TxBuilder","router","createRouter","history","vueStore","startVueApp","createApp","App","config","globalProperties","use","vueLib","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","amdD","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","a","definition","defineProperty","enumerable","g","Function","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}