var Z_=Object.defineProperty,j_=Object.defineProperties;var ev=Object.getOwnPropertyDescriptors;var Ns=Object.getOwnPropertySymbols;var fm=Object.prototype.hasOwnProperty,mm=Object.prototype.propertyIsEnumerable;var hm=(e,t,n)=>t in e?Z_(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,r=(e,t)=>{for(var n in t||(t={}))fm.call(t,n)&&hm(e,n,t[n]);if(Ns)for(var n of Ns(t))mm.call(t,n)&&hm(e,n,t[n]);return e},k=(e,t)=>j_(e,ev(t));var K=(e,t)=>{var n={};for(var s in e)fm.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(e!=null&&Ns)for(var s of Ns(e))t.indexOf(s)<0&&mm.call(e,s)&&(n[s]=e[s]);return n};import{c as O,d as D,a as _,o as y,b as f,n as ie,e as U,t as E,f as m,g as tv,h as nv,r as _e,w as Kn,i as gm,u as iv,j as ov,k as ge,l as pt,m as tn,p as js,q,s as F,v as I,T as As,x as A,y as me,z as nn,A as er,B as sv,C as ym,D as ve,E as be,F as qe,G as He,H as rv,I as G,J as Z,K as _m,L as av,S as tr,M as dv,N as lv,O as Ro,P as vm,Q as uv,R as nr,U as bm,V as cv,W as pv,X as fv,Y as Mt,Z as mv,_ as hv,$ as J,a0 as gv,a1 as wm,a2 as Y,a3 as l,a4 as S,a5 as yv,a6 as _v,a7 as vv,a8 as bv,a9 as wv}from"./vendor.78292a4f.js";const Sv=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const d of o.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&s(d)}).observe(document,{childList:!0,subtree:!0});function n(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerpolicy&&(o.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?o.credentials="include":i.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=n(i);fetch(i.href,o)}};Sv();const kv=(e,t)=>{t&&e.component(t.name||"",t)};function Sm({$s:e}){let t=async(d,c)=>{try{let a=["no-legacy-stdTx"],p=e.getters["cosmos.staking.v1beta1/getParams"](),u=e.getters["cosmos.bank.v1beta1/getTotalSupply"](),g=e.getters["common/env/chainId"],b=e.getters["common/env/chainName"],N=e.getters["common/env/apiTendermint"],C=e.getters["common/env/apiCosmos"],P=e.getters["common/env/addrPrefix"],T={coinDenom:p.params.bond_denom.toUpperCase(),coinMinimalDenom:p.params.bond_denom,coinDecimals:0},v={coinType:118},h={bech32PrefixAccAddr:P,bech32PrefixAccPub:P+"pub",bech32PrefixValAddr:P+"valoper",bech32PrefixValPub:P+"valoperpub",bech32PrefixConsAddr:P+"valcons",bech32PrefixConsPub:P+"valconspub"},R=u.supply.map(Ce=>{const fe={amount:"0",denom:"",coinDenom:"",coinMinimalDenom:"",coinDecimals:0};return fe.coinDenom=Ce.denom.toUpperCase(),fe.coinMinimalDenom=Ce.denom,fe.coinDecimals=0,fe}),w=u.supply.map(Ce=>{const fe={amount:"0",denom:"",coinDenom:"",coinMinimalDenom:"",coinDecimals:0};return fe.coinDenom=Ce.denom.toUpperCase(),fe.coinMinimalDenom=Ce.denom,fe.coinDecimals=0,fe}),ut=118,We={low:.001,average:.002,high:.01};g?(await window.keplr.experimentalSuggestChain({features:a,chainId:g,chainName:b,rpc:N,rest:C,stakeCurrency:T,bip44:v,bech32Config:h,currencies:R,feeCurrencies:w,coinType:ut,gasPriceStep:We}),window.keplr.defaultOptions={sign:{preferNoSetFee:!0,preferNoSetMemo:!0}},await window.keplr.enable(g),d()):(console.error("Cannot access chain data from vuex store"),c())}catch(a){console.error(a),c()}},n=O(()=>!!window.keplr);return{connectToKeplr:t,isKeplrAvailable:n,getOfflineSigner:d=>window.keplr.getOfflineSigner(d),getKeplrAccParams:async d=>await window.keplr.getKey(d),listenToAccChange:d=>{window.addEventListener("keplr_keystorechange",d)}}}var x=(e,t)=>{const n=e.__vccOpts||e;for(const[s,i]of t)n[s]=i;return n};const Pv=D({name:"SpChevronRight"}),Cv={width:"8",height:"12",viewBox:"0 0 8 12",fill:"none",xmlns:"http://www.w3.org/2000/svg"},Rv=f("path",{d:"M2.0001 11.4001L0.600098 10.0001L4.6001 6.0001L0.600098 2.0001L2.0001 0.600098L7.4001 6.0001L2.0001 11.4001Z",fill:"black","fill-opacity":"0.667"},null,-1),Ev=[Rv];function Tv(e,t,n,s,i,o){return y(),_("svg",Cv,Ev)}var Nv=x(Pv,[["render",Tv]]);const Av=D({name:"SpExternalArrow"}),Ov={width:"10",height:"10",viewBox:"0 0 10 10",fill:"none",xmlns:"http://www.w3.org/2000/svg"},qv=f("path",{d:"M1.79119 9.07955L8.3821 2.47727L8.37074 7.56818H9.60938V0.363636H2.41619L2.40483 1.59091H7.49574L0.90483 8.19318L1.79119 9.07955Z",fill:"black"},null,-1),Uv=[qv];function $v(e,t,n,s,i,o){return y(),_("svg",Ov,Uv)}var ir=x(Av,[["render",$v]]);const Iv=D({name:"SpLinkIcon",props:{link:{type:String},href:{type:String},target:{type:String},icon:{type:String},text:{type:String,required:!0}}}),xv={class:"sp-link-icon"},Dv=["alt","title","href","target"],Qv={class:"sp-link-icon__icon"},Mv=m(),Bv={class:"sp-link-icon__text"},Jv=["alt","title"],Gv={class:"sp-link-icon__icon"},Lv=m(),Vv={class:"sp-link-icon__text"};function Wv(e,t,n,s,i,o){return y(),_("div",xv,[e.href?(y(),_("a",{key:0,class:"sp-link-icon-wrapper",alt:e.text,title:e.text,href:e.href,target:e.target},[f("div",Qv,[e.icon?(y(),_("span",{key:0,class:ie(["sp-icon","sp-icon-"+e.icon])},null,2)):U("",!0)]),Mv,f("div",Bv,E(e.text),1)],8,Dv)):(y(),_("a",{key:1,class:"sp-link-icon-wrapper",alt:e.text,title:e.text},[f("div",Gv,[e.icon?(y(),_("span",{key:0,class:ie(["sp-icon","sp-icon-"+e.icon])},null,2)):U("",!0)]),Lv,f("div",Vv,E(e.text),1)],8,Jv))])}var km=x(Iv,[["render",Wv]]);const Fv=D({name:"SpProfileIcon",props:{address:{type:String,default:"Demo Account"}},setup(e){return{getAvatar:()=>tv(nv.exports.MD5(e.address)+"",64)}}}),Hv=["innerHTML"];function zv(e,t,n,s,i,o){return y(),_("div",{class:"avatar",innerHTML:e.getAvatar()},null,8,Hv)}var or=x(Fv,[["render",zv]]);async function Yv({$s:e}){let t=_e(),{address:n}=Je({$s:e}),s=O(()=>e.getters["common/env/client"]),i=O(()=>{var o;return(o=s.value)==null?void 0:o.signingClient});return Kn(()=>n.value,async()=>{i.value&&n.value?t.value=await i.value.getAccount(n.value):t.value=void 0},{immediate:!0}),{acc:t}}function Je({$s:e}){let t=O(()=>e.getters["common/wallet/address"]),n=O(()=>t.value.substring(0,10)+"..."+t.value.slice(-4));return{address:t,shortAddress:n}}async function Pm({opts:{initialPage:e=1},getters:{fetchList:t}}){let n=_e(e),s=_e([]),i=_e(0),o=O(()=>Math.floor(i.value/100)),d=O(()=>n.value<o.value),c=O(()=>n.value>1),a=async()=>{n.value++,s.value=[],await u()},p=async()=>{n.value--,s.value=[],await u()},u=async()=>{let g=await t({offset:n.value===1?0:(n.value-1)*100});s.value=[...g.data],i.value=g.total};return{pager:{hasNextPage:d,hasBackPage:c,amountOfPages:o,currentPage:n,total:i,next:a,back:p,page:s,load:u}}}function Xv(e,t){let n=_e([...t.page.value,...e.page.value]),s=O(()=>t.amountOfPages.value+e.amountOfPages.value),i=O(()=>t.total.value+e.total.value),o=O(()=>-1),d=O(()=>t.hasBackPage.value||e.hasBackPage.value),c=O(()=>t.hasNextPage.value||e.hasNextPage.value);return{load:async()=>{await t.load(),await e.load()},total:i,currentPage:o,back:()=>{let g=[];return t.hasBackPage&&g.concat(new Promise(t.back)),e.hasBackPage&&g.concat(new Promise(e.back)),Promise.all(g)},next:()=>{let g=[];return t.hasNextPage&&g.concat(new Promise(t.next)),e.hasNextPage&&g.concat(new Promise(e.next)),Promise.all(g)},amountOfPages:s,page:n,hasBackPage:d,hasNextPage:c}}function Cm({$s:e,opts:t}){let n=_e({isLoading:!0,assets:[]}),{address:s}=Je({$s:e}),{getDenomTrace:i}=Kv({$s:e}),o=a=>e.dispatch("cosmos.bank.v1beta1/QueryAllBalances",a);gm(async()=>{s.value&&o({params:{address:s.value},options:{subscribe:!0}}).finally(()=>{n.value.isLoading=!1})});let d=O(()=>{var a,p;return(p=(a=e.getters["cosmos.bank.v1beta1/getAllBalances"]({params:{address:s.value}}))==null?void 0:a.balances)!=null?p:[]}),c=async a=>{var g;let p=a.denom.indexOf("ibc/")==0,u={amount:{amount:"",denom:""}};if(p){let b=await i(a.denom);u.path=(t==null?void 0:t.extractChannels)?(g=b.denom_trace.path.match(/\d+/g))==null?void 0:g.reverse():b.denom_trace.path,u.amount.denom=b.denom_trace.base_denom}else u.amount.denom=a.denom;return u.amount.amount=a.amount,u};return Kn(()=>[s.value,d.value],async([a],[p])=>{a!==p&&o({params:{address:a},options:{subscribe:!0}}).finally(()=>{n.value.isLoading=!1});let u=d.value.map(c);Promise.all(u).then(g=>{n.value.assets=g})}),{balancesRaw:d,normalize:c,balances:n}}function sr(e){const t=Boolean(navigator&&"clipboard"in navigator),n=_e(!1);async function s(i){t&&(await navigator.clipboard.writeText(iv(i)),n.value=!0,setTimeout(()=>n.value=!1,(e==null?void 0:e.resetAfter)||1e3))}return{isSupported:t,copy:s,hasCopied:n}}function Kv({$s:e}){let t=i=>e.dispatch("ibc.applications.transfer.v1/QueryDenomTrace",i),n=async i=>{let o=i.split("/")[1];return await t({options:{subscribe:!1,all:!1},params:{hash:o}})};return{getDenomTrace:n,normalizeDenom:async i=>{let o=i.toUpperCase();return i.indexOf("ibc/")==0&&(o=(await n(i)).denom_trace.base_denom),o}}}async function Rm({$s:e,opts:{order:t,realTime:n}}){let s=v=>{let{txs:h,tx_responses:R,pagination:w}=v.data;return console.log("resp",v),{data:h.map((We,Ce)=>r(r({},We),R[Ce])),total:Number(w==null?void 0:w.total)}},i=v=>!0,o=v=>{var We,Ce;let h=fe=>{let Fe="in";return fe.receiver===fe.sender&&fe.receiver===c.value?Fe="self":fe.receiver===c.value?Fe="in":fe.sender===c.value&&(Fe="out"),Fe},R={},w=v.body.messages[0]["@type"].includes("ibc.applications.transfer.v1.MsgTransfer"),ut=v.body.messages[0]["@type"].includes("cosmos.bank.v1beta1.MsgSend");if(w){let Fe=(L=>JSON.parse(window.atob(L)))((Ce=(We=v.body.messages[0])==null?void 0:We.packet)==null?void 0:Ce.data);R.sender=Fe.sender,R.receiver=Fe.receiver,R.amount={amount:Fe.amount,denom:Fe.denom},R.height=Number(v.height)}else ut&&(R.sender=v.body.messages[0].from_address,R.receiver=v.body.messages[0].to_address,R.amount=v.body.messages[0].amount,R.height=Number(v.height));return R.type=v.body.messages[0]["@type"],R.timestamp=v.timestamp,R.hash=v.txhash,R.dir=h(R),R},d=async(v,h,R)=>ov.get(`${p.value}/cosmos/tx/v1beta1/txs?events=${h}&pagination.offset=${v}&order_by=${R}`),c=O(()=>e.getters["common/wallet/address"]),a=O(()=>e.getters["common/env/client"]),p=O(()=>e.getters["common/env/apiCosmos"]),u=O(()=>`transfer.sender%3D%27${c.value}%27`),g=O(()=>`transfer.recipient%3D%27${c.value}%27`),b=t==="asc"?1:2,N=_e(0),C=await Pm({opts:{},getters:{fetchList:async({offset:v})=>s(await d(v,g.value,b))}}),P=await Pm({opts:{},getters:{fetchList:async({offset:v})=>s(await d(v,u.value,b))}});await C.pager.load(),await P.pager.load();let T=O(()=>Xv(C.pager,P.pager));return Kn(()=>c.value,async()=>{await T.value.load()}),n&&a.value.on("newblock",async()=>{var We,Ce;let v=await d(0,g.value,b),h=await d(0,u.value,b),R=T.value.total.value,ut=Number((We=v.data.pagination)==null?void 0:We.total)+Number((Ce=h.data.pagination)==null?void 0:Ce.total)-R;N.value=ut}),{newTxs:N,pager:T,normalize:o,filterSupportedTypes:i}}var Em;(function(e){e[e.DEFAULT=1]="DEFAULT",e[e.SETTINGS=2]="SETTINGS"})(Em||(Em={}));let Zv={currentUIState:1};const jv=D({name:"SpAccountDropdown",components:{SpProfileIcon:or,SpChevronRightIcon:Nv,SpExternalArrowIcon:ir,SpLinkIcon:km},props:{wallet:{type:Object,required:!0},accName:{type:String,required:!0}},emits:["disconnect","close"],setup(e,{emit:t}){let n=ge(),{address:s,shortAddress:i}=Je({$s:n}),{copy:o}=sr(),d=O(()=>n.getters["common/env/chainId"]),c=O(()=>n.getters["common/env/apiConnected"]),a=O(()=>n.getters["common/env/rpcConnected"]),p=O(()=>n.getters["common/env/wsConnected"]),u=O(()=>b.currentUIState===1),g=O(()=>b.currentUIState===2),b=pt(Zv),N=T=>{let v=document.querySelector(".account-dropdown"),h=document.querySelector(".account-dropdown-button");!(v==null?void 0:v.contains(T.target))&&!(h==null?void 0:h.contains(T.target))&&(t("close"),b.currentUIState=1)},C=()=>{b.currentUIState=2},P=()=>{b.currentUIState=1};return tn(()=>{document.addEventListener("click",N)}),js(()=>{document.removeEventListener("click",N)}),{state:b,address:s,shortAddress:i,copy:o,switchToDefault:P,switchToSettings:C,showDefault:u,showSettings:g,chainId:d,apiConnected:c,rpcConnected:a,wsConnected:p}}}),e0={key:0,class:"account-dropdown"},t0=f("span",{class:"description-grey mb-3 d-block"},"Connected wallet",-1),n0=m(),i0={class:"mb-3",style:{display:"flex","align-items":"center"}},o0=m(),s0={style:{display:"flex","flex-flow":"column","margin-left":"12px"}},r0={class:"account-name"},a0=m(),d0=f("svg",{width:"12",height:"12",viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{d:"M8.625 0.375H0.375V8.625H8.625V0.375Z",stroke:"#094EFD","stroke-linecap":"round","stroke-linejoin":"round"}),m(),f("path",{d:"M10.125 3.375H11.625V11.625H3.375V10.125",stroke:"#094EFD","stroke-linecap":"round","stroke-linejoin":"round"})],-1),l0=m(),u0=f("span",null," Disconnect wallet ",-1),c0=[u0],p0=m(),f0=f("hr",{class:"divider"},null,-1),m0=m(),h0=f("span",null," Settings ",-1),g0=m(),y0=m(),_0=f("hr",{class:"divider"},null,-1),v0=m(),b0={class:"dropdown-option mb-3"},w0=f("span",null," Support ",-1),S0=m(),k0=m(),P0={class:"dropdown-option mb-3"},C0=f("span",null," Twitter ",-1),R0=m(),E0=m(),T0={class:"dropdown-option mb-3"},N0=f("span",null," Telegram ",-1),A0=m(),O0=m(),q0=f("div",{style:{"text-align":"center","margin-top":"2rem"}},[f("span",{class:"description-grey terms-link mr-2"},"Privacy"),m(`\u2022
        `),f("span",{class:"description-grey terms-link mr-2 ml-1"},"Terms of use"),m(`\u2022
        `),f("span",{class:"description-grey terms-link ml-1"},"Cookies")],-1),U0={key:1,class:"account-dropdown"},$0={class:"account-dropdown__header"},I0=f("svg",{width:"22",height:"20",viewBox:"0 0 22 20",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{d:"M20.5 10L1 10M1 10L9.53125 19M1 10L9.53125 1",stroke:"black","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"})],-1),x0=[I0],D0=m(),Q0=f("div",{class:"account-dropdown__title"},"Settings",-1),M0=m(),B0={class:"dropdown-option mb-3"},J0=f("span",null," Chain ",-1),G0=m(),L0=m(),V0=f("hr",{class:"divider"},null,-1),W0=m(),F0={class:"dropdown-option mb-3"},H0=f("span",null," Cosmos SDK API ",-1),z0=m(),Y0=m(),X0=f("hr",{class:"divider"},null,-1),K0=m(),Z0={class:"dropdown-option mb-3"},j0=f("span",null," Tendermint RPC ",-1),eb=m(),tb=m(),nb=f("hr",{class:"divider"},null,-1),ib=m(),ob={class:"dropdown-option mb-3"},sb=f("span",null," WebSocket ",-1),rb=m();function ab(e,t,n,s,i,o){const d=q("SpProfileIcon"),c=q("SpChevronRightIcon"),a=q("SpExternalArrowIcon");return y(),F(As,{name:"dropdown-fade"},{default:I(()=>[e.showDefault?(y(),_("div",e0,[t0,n0,f("div",i0,[A(d,{address:e.address},null,8,["address"]),o0,f("div",s0,[f("span",r0,E(e.accName),1),a0,f("span",{class:"description-grey copy-address",title:"Copy address",onClick:t[0]||(t[0]=p=>e.copy(e.address))},[m(E(e.shortAddress)+" ",1),d0])])]),l0,f("div",{class:"dropdown-option",onClick:t[1]||(t[1]=p=>e.$emit("disconnect"))},c0),p0,f0,m0,f("div",{class:"dropdown-option",onClick:t[2]||(t[2]=(...p)=>e.switchToSettings&&e.switchToSettings(...p))},[h0,g0,A(c)]),y0,_0,v0,f("div",b0,[w0,S0,A(a)]),k0,f("div",P0,[C0,R0,A(a)]),E0,f("div",T0,[N0,A0,A(a)]),O0,q0])):e.showSettings?(y(),_("div",U0,[f("header",$0,[f("div",{class:"account-dropdown__back",onClick:t[3]||(t[3]=(...p)=>e.switchToDefault&&e.switchToDefault(...p))},x0),D0,Q0]),M0,f("div",B0,[J0,G0,f("span",null,E(e.chainId),1)]),L0,V0,W0,f("div",F0,[H0,z0,f("span",null,E(e.apiConnected?"connected":"disconnected"),1)]),Y0,X0,K0,f("div",Z0,[j0,eb,f("span",null,E(e.rpcConnected?"connected":"disconnected"),1)]),tb,nb,ib,f("div",ob,[sb,rb,f("span",null,E(e.wsConnected?"connected":"disconnected"),1)])])):U("",!0)]),_:1})}var db=x(jv,[["render",ab]]);const lb=D({name:"SpButton",props:{busy:{type:Boolean},link:{type:String},href:{type:String},target:{type:String},type:{type:String},disabled:{type:Boolean,default:!1}}}),ub={class:"sp-button__text"},cb=m(),pb=f("div",{class:"sp-button__loading"},[f("div",{class:"sp-icon sp-icon-Reload"})],-1),fb=["href","disabled","target"],mb={class:"sp-button__text"},hb=m(),gb=f("div",{class:"sp-button__loading"},[f("div",{class:"sp-icon sp-icon-Reload"})],-1),yb=["disabled"],_b={class:"sp-button__text"},vb=m(),bb=f("div",{class:"sp-button__loading"},[f("div",{class:"sp-icon sp-icon-Reload"})],-1);function wb(e,t,n,s,i,o){const d=q("router-link");return e.link?(y(),F(d,{key:0,to:e.link,class:ie(["sp-button",[e.busy?"sp-button__progress":"","sp-button-"+e.type]]),disabled:e.disabled},{default:I(()=>[f("span",ub,[me(e.$slots,"default")]),cb,pb]),_:3},8,["to","class","disabled"])):e.href?(y(),_("a",{key:1,href:e.href,class:ie(["sp-button",[e.busy?"sp-button__progress":"","sp-button-"+e.type]]),disabled:e.disabled,target:e.target},[f("span",mb,[me(e.$slots,"default")]),hb,gb],10,fb)):(y(),_("button",{key:2,type:"button",class:ie(["sp-button",[e.busy?"sp-button__progress":"","sp-button-"+e.type]]),disabled:e.disabled},[f("span",_b,[me(e.$slots,"default")]),vb,bb],10,yb))}var Ue=x(lb,[["render",wb]]);const Sb=D({name:"SpChevronDown"}),kb={width:"12",height:"8",viewBox:"0 0 12 8",fill:"none",xmlns:"http://www.w3.org/2000/svg"},Pb=f("path",{d:"M10 2L6 6L2 2",stroke:"black","stroke-width":"2","stroke-miterlimit":"10","stroke-linecap":"square"},null,-1),Cb=[Pb];function Rb(e,t,n,s,i,o){return y(),_("svg",kb,Cb)}var Tm=x(Sb,[["render",Rb]]);const Eb=D({name:"SpKeplrIcon"}),Tb={width:"48",height:"49",viewBox:"0 0 48 49",fill:"none",xmlns:"http://www.w3.org/2000/svg",style:{"margin-bottom":"1rem"}},Nb=nn('<path d="M44.16 0.5H3.84C1.71923 0.5 0 2.21923 0 4.34V44.66C0 46.7808 1.71923 48.5 3.84 48.5H44.16C46.2808 48.5 48 46.7808 48 44.66V4.34C48 2.21923 46.2808 0.5 44.16 0.5Z" fill="url(#paint0_radial_463_11054)"></path> <path d="M44.16 0.5H3.84C1.71923 0.5 0 2.21923 0 4.34V44.66C0 46.7808 1.71923 48.5 3.84 48.5H44.16C46.2808 48.5 48 46.7808 48 44.66V4.34C48 2.21923 46.2808 0.5 44.16 0.5Z" fill="url(#paint1_radial_463_11054)" fill-opacity="0.57"></path> <path d="M44.16 0.5H3.84C1.71923 0.5 0 2.21923 0 4.34V44.66C0 46.7808 1.71923 48.5 3.84 48.5H44.16C46.2808 48.5 48 46.7808 48 44.66V4.34C48 2.21923 46.2808 0.5 44.16 0.5Z" fill="url(#paint2_radial_463_11054)" fill-opacity="0.68"></path> <path d="M44.16 0.5H3.84C1.71923 0.5 0 2.21923 0 4.34V44.66C0 46.7808 1.71923 48.5 3.84 48.5H44.16C46.2808 48.5 48 46.7808 48 44.66V4.34C48 2.21923 46.2808 0.5 44.16 0.5Z" fill="url(#paint3_radial_463_11054)" fill-opacity="0.08"></path> <path d="M44.16 0.5H3.84C1.71923 0.5 0 2.21923 0 4.34V44.66C0 46.7808 1.71923 48.5 3.84 48.5H44.16C46.2808 48.5 48 46.7808 48 44.66V4.34C48 2.21923 46.2808 0.5 44.16 0.5Z" fill="url(#paint4_linear_463_11054)" fill-opacity="0.03"></path> <path d="M16.896 41.3002V26.4202L30.96 41.3002H38.784V40.9162L22.608 23.9722L37.536 7.8922V7.7002H29.664L16.896 21.9082V7.7002H10.56V41.3002H16.896Z" fill="white"></path> <defs><radialGradient id="paint0_radial_463_11054" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(-37.1557 23.4718) rotate(140.172) scale(82.5605 99.6279)"><stop stop-color="#2F80F2"></stop> <stop offset="0.999657" stop-color="#A942B5"></stop></radialGradient> <radialGradient id="paint1_radial_463_11054" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(-0.777489 1.2476) rotate(46.3208) scale(76.3717 80.0265)"><stop stop-color="#45F9DE"></stop> <stop offset="1" stop-color="#A942B5" stop-opacity="0"></stop></radialGradient> <radialGradient id="paint2_radial_463_11054" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(-47.52 -23.8545) rotate(180) scale(46.101 23.7402)"><stop stop-color="#E957C5"></stop> <stop offset="1" stop-color="#A942B5" stop-opacity="0"></stop></radialGradient> <radialGradient id="paint3_radial_463_11054" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(-42.8213 3.44693) rotate(119.938) scale(27.6729 41.487)"><stop stop-opacity="0.184878"></stop> <stop offset="1" stop-color="#101010"></stop></radialGradient> <linearGradient id="paint4_linear_463_11054" x1="45.234" y1="28.8037" x2="0" y2="0.5" gradientUnits="userSpaceOnUse"><stop stop-color="white" stop-opacity="0.184878"></stop> <stop offset="1" stop-color="white"></stop></linearGradient></defs>',13),Ab=[Nb];function Ob(e,t,n,s,i,o){return y(),_("svg",Tb,Ab)}var Nm=x(Eb,[["render",Ob]]);const qb=D({name:"SpTimesIcon"}),Ub={width:"16",height:"16",viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg"},$b=f("path",{d:"M15 1L1 15",stroke:"black","stroke-width":"2","stroke-miterlimit":"10","stroke-linecap":"round"},null,-1),Ib=m(),xb=f("path",{d:"M15 15L1 1",stroke:"black","stroke-width":"2","stroke-miterlimit":"10","stroke-linecap":"round"},null,-1),Db=[$b,Ib,xb];function Qb(e,t,n,s,i,o){return y(),_("svg",Ub,Db)}var Am=x(qb,[["render",Qb]]);const Mb=D({name:"SpModal",components:{SpButton:Ue,SpTimesIcon:Am},props:{visible:{type:Boolean,defaultsTo:!1},title:{type:String,defaultsTo:null},submitButton:{type:Boolean,defaultsTo:!0},closeIcon:{type:Boolean,defaultsTo:!0},cancelButton:{type:Boolean,defaultsTo:!0}},watch:{visible:function(e){e?document.addEventListener("keyup",this.escapeHandler):document.removeEventListener("keyup",this.escapeHandler)}},methods:{escapeHandler(e){e.key==="Escape"&&this.$emit("close")}}}),Bb={id:"modalTitle",class:"modal-header"},Jb=m(),Gb={id:"modalDescription",class:"modal-body"},Lb=m(" Default body "),Vb=m(),Wb={class:"modal-footer"},Fb=m(`
              Save changes
            `),Hb=m(),zb=m(`
              Cancel
            `),Yb=m(),Xb=m(`
          Close
        `);function Kb(e,t,n,s,i,o){const d=q("SpButton"),c=q("SpTimesIcon");return y(),F(As,{name:"modal-fade"},{default:I(()=>[e.visible?(y(),_("div",{key:0,class:"modal-backdrop",onClick:t[4]||(t[4]=a=>e.$emit("close"))},[f("div",{class:"modal sp-box sp-shadow",role:"dialog",tabindex:"0",onClick:t[3]||(t[3]=er(()=>{},["stop"]))},[f("header",Bb,[me(e.$slots,"header",{},()=>[f("h3",null,E(e.title||"Default title"),1)],!0)]),Jb,f("section",Gb,[me(e.$slots,"body",{},()=>[Lb],!0)]),Vb,f("footer",Wb,[me(e.$slots,"footer",{},()=>[e.submitButton?(y(),F(d,{key:0,"aria-label":"Submit",type:"primary",onClick:t[0]||(t[0]=a=>e.$emit("submit"))},{default:I(()=>[Fb]),_:1})):U("",!0),Hb,e.cancelButton?(y(),F(d,{key:1,"aria-label":"Close modal",type:"secondary",onClick:t[1]||(t[1]=a=>e.$emit("close"))},{default:I(()=>[zb]),_:1})):U("",!0)],!0)]),Yb,e.closeIcon?(y(),F(c,{key:0,class:"modal__close-icon",style:{position:"absolute",top:"26px",right:"20px",cursor:"pointer"},onClick:t[2]||(t[2]=a=>e.$emit("close"))},{default:I(()=>[Xb]),_:1})):U("",!0)])])):U("",!0)]),_:3})}var Bt=x(Mb,[["render",Kb],["__scopeId","data-v-7e6f5bca"]]);const Zb=D({name:"SpSpinner",props:{size:{type:Number,default:32}},setup(e){return{getStrokeWidth:O(()=>e.size>32?3:4)}}}),jb=["stroke-width"];function ew(e,t,n,s,i,o){return y(),_("svg",{class:"animate-spin",width:"32",height:"32",viewBox:"0 0 32 32",fill:"none",xmlns:"http://www.w3.org/2000/svg",style:sv(`width: ${e.$props.size}px; height: ${e.$props.size}`)},[f("path",{d:"M30 16C30 8.26801 23.732 2 16 2C8.26801 2 2 8.26801 2 16C2 23.732 8.26801 30 16 30",stroke:"black","stroke-width":e.getStrokeWidth,"stroke-linecap":"round"},null,8,jb)],4)}var Eo=x(Zb,[["render",ew]]);const tw=D({name:"SpWarningIcon"}),nw={width:"48",height:"48",viewBox:"0 0 48 48",fill:"none",xmlns:"http://www.w3.org/2000/svg"},iw=f("path",{d:"M24 36.5C24.5523 36.5 25 36.0523 25 35.5C25 34.9477 24.5523 34.5 24 34.5C23.4477 34.5 23 34.9477 23 35.5C23 36.0523 23.4477 36.5 24 36.5Z",fill:"#FC8C0B"},null,-1),ow=m(),sw=f("path",{d:"M24 47C36.7025 47 47 36.7025 47 24C47 11.2975 36.7025 1 24 1C11.2975 1 1 11.2975 1 24C1 36.7025 11.2975 47 24 47Z",stroke:"#FC8C0B","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),rw=m(),aw=f("path",{d:"M24 12V28",stroke:"#FC8C0B","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),dw=m(),lw=f("path",{d:"M24 36.5C24.5523 36.5 25 36.0523 25 35.5C25 34.9477 24.5523 34.5 24 34.5C23.4477 34.5 23 34.9477 23 35.5C23 36.0523 23.4477 36.5 24 36.5Z",stroke:"#FC8C0B","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1),uw=[iw,ow,sw,rw,aw,dw,lw];function cw(e,t,n,s,i,o){return y(),_("svg",nw,uw)}var Om=x(tw,[["render",cw]]);let pw={modalPage:"connect",connectWalletModal:!1,accountDropdown:!1,keplrParams:{name:"",bech32Address:""}};const fw=D({name:"SpAcc",components:{SpModal:Bt,SpButton:Ue,SpSpinner:Eo,SpProfileIcon:or,SpAccDropdown:db,SpKeplrIcon:Nm,SpWarningIcon:Om,SpExternalArrowIcon:ir,SpChevronDownIcon:Tm},setup(){let e=ge(),t=pt(pw),{connectToKeplr:n,isKeplrAvailable:s,getOfflineSigner:i,getKeplrAccParams:o,listenToAccChange:d}=Sm({$s:e}),c=O(()=>e.getters["common/wallet/wallet"]),a=O(()=>e.getters["common/env/chainId"]),p=async C=>e.dispatch("common/wallet/connectWithKeplr",C),u=async()=>e.dispatch("common/wallet/signOut"),g=()=>{t.modalPage="connecting";let C=async()=>{let{name:T,bech32Address:v}=await o(a.value);t.keplrParams.name=T,t.keplrParams.bech32Address=v;let h=i(a.value);p(h),d(C),t.connectWalletModal=!1,t.modalPage="connect"};n(C,()=>{t.modalPage="error"})},b=()=>{var C,P;return((C=c.value)==null?void 0:C.name)==="Keplr Integration"?((P=t.keplrParams)==null?void 0:P.name)+"":""},N=()=>{t.accountDropdown=!1,u()};return tn(async()=>{if(a.value)try{await g()}catch{console.warn("Keplr not connected")}}),{isKeplrAvailable:s,tryToConnectToKeplr:g,disconnect:N,state:t,wallet:c,getAccName:b}}}),To=e=>(ve("data-v-369663c6"),e=e(),be(),e),mw={class:"sp-acc"},hw={class:"hide-on-small",style:{display:"flex","align-items":"center"}},gw=m(),yw={style:{"margin-left":"12px","margin-right":"12px"}},_w=m(`
      Connect wallet
    `),vw=m(),bw=m(),ww={key:0},Sw=m(),kw={key:0},Pw={key:1},Cw={key:1},Rw=To(()=>f("div",{class:"description-grey"},"Opening Keplr",-1)),Ew=m(),Tw=To(()=>f("h3",null,"Connecting",-1)),Nw=[Rw,Ew,Tw],Aw={key:2},Ow=m(),qw=To(()=>f("h3",null,"Keplr cannot launch",-1)),Uw={style:{"max-width":"320px","text-align":"center",margin:"auto"}},$w={key:0},Iw={key:0},xw={key:1},Dw={key:1},Qw={style:{"margin-top":"2rem"}},Mw=m(),Bw=m(`
              Cancel
            `),Jw=m(),Gw=To(()=>f("div",{class:"external-link",style:{"margin-top":"2rem"}},`
              Having trouble opening Keplr?
            `,-1)),Lw={key:2,style:{padding:"20px 0"}},Vw={class:"external-link"},Ww=To(()=>f("span",null,"Keplr troubleshooting",-1)),Fw=m(),Hw={key:0},zw=m(`
            Connect Keplr
          `),Yw=m(),Xw={key:1,style:{gap:"10px",display:"flex","justify-content":"center"}},Kw=m(`
            Cancel
          `),Zw=m(),jw=m(`
            Try again
          `);function eS(e,t,n,s,i,o){var C;const d=q("SpProfileIcon"),c=q("SpButton"),a=q("SpAccDropdown"),p=q("SpKeplrIcon"),u=q("SpWarningIcon"),g=q("SpSpinner"),b=q("SpExternalArrowIcon"),N=q("SpModal");return y(),_("div",mw,[e.wallet?(y(),_("div",{key:0,class:ie(["sp-nav-link selected account-dropdown-button",[e.state.accountDropdown?"active":""]]),style:{display:"flex","align-items":"center"},onClick:t[0]||(t[0]=P=>e.state.accountDropdown=!e.state.accountDropdown)},[f("div",hw,[A(d,{address:(C=e.state.keplrParams)==null?void 0:C.bech32Address},null,8,["address"]),gw,f("span",yw,E(e.getAccName()),1)])],2)):(y(),F(c,{key:1,"aria-label":"Connect wallet",type:"primary",onClick:t[1]||(t[1]=P=>e.state.connectWalletModal=!0)},{default:I(()=>[_w]),_:1})),vw,e.state.accountDropdown?(y(),F(a,{key:2,wallet:e.wallet,"acc-name":e.getAccName(),onDisconnect:e.disconnect,onClose:t[2]||(t[2]=P=>e.state.accountDropdown=!1)},null,8,["wallet","acc-name","onDisconnect"])):U("",!0),bw,A(N,{visible:e.state.connectWalletModal,"close-icon":!1,"cancel-button":!1,"submit-button":!1,style:{"text-align":"center"},onClose:t[6]||(t[6]=P=>e.state.connectWalletModal=!1),onSubmit:t[7]||(t[7]=P=>e.state.connectWalletModal=!1)},ym({header:I(()=>[e.state.modalPage==="connect"?(y(),_("div",ww,[A(p),Sw,e.isKeplrAvailable?(y(),_("h3",kw,"Connect your wallet")):(y(),_("h3",Pw,"Install Keplr"))])):e.state.modalPage==="connecting"?(y(),_("div",Cw,Nw)):e.state.modalPage==="error"?(y(),_("div",Aw,[A(u,{style:{"margin-bottom":"20px"}}),Ow,qw])):U("",!0)]),body:I(()=>[f("div",Uw,[e.state.modalPage==="connect"?(y(),_("div",$w,[e.isKeplrAvailable?(y(),_("p",Iw,`
              Connect your Keplr wallet via the Keplr browser extension to use
              this app.
            `)):(y(),_("p",xw,`
              Install & connect your Keplr wallet via the Keplr browser
              extension to use this app.
            `))])):e.state.modalPage==="connecting"?(y(),_("div",Dw,[f("div",Qw,[A(g)]),Mw,A(c,{"aria-label":"Cancel",type:"secondary",style:{"margin-top":"3rem"},onClick:t[3]||(t[3]=P=>e.state.modalPage="connect")},{default:I(()=>[Bw]),_:1}),Jw,Gw])):e.state.modalPage==="error"?(y(),_("div",Lw,[f("div",Vw,[Ww,Fw,A(b,{style:{"margin-left":"0.5rem"}})])])):U("",!0)])]),_:2},[e.isKeplrAvailable?{name:"footer",fn:I(()=>[e.state.modalPage==="connect"?(y(),_("div",Hw,[A(c,{"aria-label":"Connect Keplr",type:"primary",onClick:e.tryToConnectToKeplr},{default:I(()=>[zw]),_:1},8,["onClick"])])):U("",!0),Yw,e.state.modalPage==="error"?(y(),_("div",Xw,[A(c,{"aria-label":"Connect Keplr",type:"secondary",onClick:t[4]||(t[4]=P=>e.state.connectWalletModal=!1)},{default:I(()=>[Kw]),_:1}),Zw,A(c,{"aria-label":"Connect Keplr",type:"primary",onClick:t[5]||(t[5]=P=>e.state.modalPage="connect")},{default:I(()=>[jw]),_:1})])):U("",!0)])}:void 0]),1032,["visible"])])}var qm=x(fw,[["render",eS],["__scopeId","data-v-369663c6"]]);const tS=D({name:"SpAmountInput",props:{modelValue:{type:[String,Number],default:""},maxDecimals:{type:Number,default:0},placeholder:{type:String,default:"0"}},emits:["update"],setup(e,{emit:t}){let n=_e(null),s=o=>{let d=o;d=d.replace(",","."),d=e.maxDecimals>0?d:d.replace(".",""),d=d.replace(/[^0-9.]/g,""),d.startsWith(".")&&(d="0"+d),d.split("").filter(p=>p===".").length>1&&(d=d.replace(/(?<=\..*)\./g,""));let[c,a]=d.split(".");return(a==null?void 0:a.length)>e.maxDecimals&&(d=`${c}.${a.slice(0,e.maxDecimals)}`),d},i=O({get:()=>(e.modelValue||"").toString(),set:o=>{if(!n.value)return;let d=o;for(;parseFloat(d)>Number.MAX_SAFE_INTEGER;)d=d.slice(0,-1);let c=s(d);t("update",c);let a=n.value;a.value=c}});return{inputRef:n,format:s,model:i}}}),nS=["placeholder"];function iS(e,t,n,s,i,o){return qe((y(),_("input",{ref:"inputRef","onUpdate:modelValue":t[0]||(t[0]=d=>e.model=d),placeholder:e.placeholder,type:"text",inputmode:"decimal",pattern:"^[0-9]*[.,]?[0-9]*$",autocomplete:"off",minlength:"1",spellcheck:"false"},null,8,nS)),[[He,e.model]])}var oS=x(tS,[["render",iS]]);const sS=D({name:"SpDenom",props:{denom:{type:String,required:!0},modifier:{type:String,default:"base"},size:{type:String,default:"medium"}},setup(e){return{sizeClassObject:O(()=>({"token-avatar--small":e.size==="small","token-avatar--medium":e.size==="medium","token-avatar--large":e.size==="large"}))}}}),rS={key:0},aS={key:1};function dS(e,t,n,s,i,o){return e.modifier==="base"?(y(),_("span",rS,E(e.denom.toUpperCase()),1)):e.modifier==="path"?(y(),_("span",aS,E(e.denom),1)):e.modifier==="avatar"?(y(),_("div",{key:2,class:ie([e.sizeClassObject,"token-avatar"])},E(e.denom.slice(0,1)),3)):U("",!0)}var Os=x(sS,[["render",dS],["__scopeId","data-v-a43291d2"]]);let lS={tokenSearch:"",modalOpen:!1};const uS=D({name:"SpAmountSelect",components:{SpModal:Bt,SpDenom:Os,SpAmountInput:oS},emits:["update"],props:{selected:{type:Array},balances:{type:Array}},setup(e,{emit:t}){let n=pt(lS),s=O(()=>{let u=b=>e.selected.every(N=>{let C=b.amount.denom!==N.amount.denom,P=b.path!==N.path;return C||P}),g=b=>b.amount.denom.includes(n.tokenSearch.toLowerCase());return e.balances.filter(u).filter(g)}),i=(u,g)=>g.path===u.path&&u.amount.denom===g.amount.denom,o=u=>u==""?0:parseInt(u),d=(u,g)=>{let b=new rv(u),N=[...e.selected],C=N.findIndex(P=>i(g,P));N[C].amount.amount=b.toString(),t("update",{selected:N})},c=u=>{let g=[...e.selected,k(r({},u),{amount:{amount:"",denom:u.amount.denom}})];t("update",{selected:g}),n.modalOpen=!1},a=u=>{var g,b;return(b=(g=e.balances.find(N=>i(u,N)))==null?void 0:g.amount)==null?void 0:b.amount};return{state:n,ableToBeSelected:s,parseAmount:o,hasEnoughBalance:(u,g)=>o(a(u))>=o(g),handleAmountInput:d,handleTokenSelect:c,getBalanceAmount:a}}}),No=e=>(ve("data-v-172ab59b"),e=e(),be(),e),cS={class:"amount-select"},pS=m(),fS=No(()=>f("div",{style:{width:"12px",height:"100%"}},null,-1)),mS=m(),hS={class:"token-info"},gS={class:"token-denom"},yS=m(),_S=m(),vS={class:"input-wrapper"},bS=m(),wS=No(()=>f("div",{class:"focus-background"},null,-1)),SS=m(),kS=nn('<div class="add-icon" data-v-172ab59b><svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-172ab59b><circle cx="16" cy="16" r="15.5" stroke="black" stroke-opacity="0.07" data-v-172ab59b></circle> <g clip-path="url(#clip0_721_8528)" data-v-172ab59b><path d="M16 8.5L16 24.5" stroke="black" stroke-opacity="0.33" stroke-miterlimit="10" stroke-linecap="square" stroke-linejoin="round" data-v-172ab59b></path> <path d="M24 16.5L8 16.5" stroke="black" stroke-opacity="0.33" stroke-miterlimit="10" stroke-linecap="square" stroke-linejoin="round" data-v-172ab59b></path></g> <defs data-v-172ab59b><clipPath id="clip0_721_8528" data-v-172ab59b><rect width="16" height="16" fill="white" transform="translate(8 8.5)" data-v-172ab59b></rect></clipPath></defs></svg></div> <div style="width:12px;height:100%;" data-v-172ab59b></div> <div class="action-text" data-v-172ab59b>Add asset</div>',5),PS=[kS],CS=m(),RS={class:"modal-body"},ES={class:"search"},TS=No(()=>f("span",{class:"search-icon"},[f("svg",{width:"15",height:"15",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{d:"M6.5 12.5C9.81371 12.5 12.5 9.81371 12.5 6.5C12.5 3.18629 9.81371 0.5 6.5 0.5C3.18629 0.5 0.5 3.18629 0.5 6.5C0.5 9.81371 3.18629 12.5 6.5 12.5Z",stroke:"black","stroke-miterlimit":"10","stroke-linecap":"round","stroke-linejoin":"round"}),m(),f("path",{d:"M14.5002 14.5002L10.7422 10.7422",stroke:"black","stroke-miterlimit":"10","stroke-linecap":"round","stroke-linejoin":"round"})])],-1)),NS=m(),AS=m(),OS=No(()=>f("div",{style:{width:"100%",height:"16px"}},null,-1)),qS=m(),US={class:"modal-list"},$S=["index","onClick"],IS=m(),xS=No(()=>f("div",{style:{width:"12px",height:"100%"}},null,-1)),DS=m(),QS={class:"token-info"},MS={class:"token-denom"},BS=m(),JS={class:"token-amount"};function GS(e,t,n,s,i,o){const d=q("SpDenom"),c=q("SpAmountInput"),a=q("SpModal");return y(),_("div",cS,[(y(!0),_(G,null,Z(e.selected,(p,u)=>(y(),_("div",{key:`${p.amount.denom}-${p.path}-${u}`,class:"selected-item"},[A(d,{denom:p.amount.denom,modifier:"avatar"},null,8,["denom"]),pS,fS,mS,f("div",hS,[f("div",gS,[A(d,{denom:p.amount.denom},null,8,["denom"])]),yS,f("div",{class:ie(["token-amount",{error:!e.hasEnoughBalance(p,p.amount.amount)}])},E(e.getBalanceAmount(p))+` available
        `,3)]),_S,f("div",vS,[A(c,{class:"input secondary",onUpdate:g=>e.handleAmountInput(g,p)},null,8,["onUpdate"]),bS,wS])]))),128)),SS,e.ableToBeSelected.length>0?(y(),_("div",{key:0,class:"add-token",onClick:t[0]||(t[0]=p=>e.state.modalOpen=!0)},PS)):U("",!0),CS,A(a,{visible:e.state.modalOpen,"close-icon":!0,title:"Select asset",class:"modal--assets-select",onClose:t[2]||(t[2]=p=>e.state.modalOpen=!1)},{body:I(()=>[f("div",RS,[f("div",ES,[TS,NS,qe(f("input",{"onUpdate:modelValue":t[1]||(t[1]=p=>e.state.tokenSearch=p),class:"input primary",placeholder:"Search assets"},null,512),[[He,e.state.tokenSearch]])]),AS,OS,qS,f("div",US,[(y(!0),_(G,null,Z(e.ableToBeSelected,(p,u)=>(y(),_("div",{key:"balance"+u,class:"modal-list-item",index:u,onClick:()=>e.handleTokenSelect(p)},[A(d,{denom:p.amount.denom,modifier:"avatar"},null,8,["denom"]),IS,xS,DS,f("div",QS,[f("div",MS,[A(d,{denom:p.amount.denom},null,8,["denom"])]),BS,f("div",JS,E(e.parseAmount(p.amount.amount))+` available
                `,1)])],8,$S))),128))])])]),_:1},8,["visible"])])}var Um=x(uS,[["render",GS],["__scopeId","data-v-172ab59b"]]);const LS=D({name:"SpAssets",components:{SpDenom:Os},props:{displayLimit:{type:Number,default:3,required:!1}},setup(e){let t=ge();const n=_e({isLoading:!0,searchQuery:"",balanceList:[],displayLimit:e.displayLimit,searchInput:_e(null)});let{address:s}=Je({$s:t}),{balances:i}=Cm({$s:t,opts:{extractChannels:!0}});const o=O(()=>n.value.searchQuery?i.value.assets.filter(g=>g.amount.denom.toLowerCase().includes(n.value.searchQuery)):i.value.assets.slice(0,n.value.displayLimit)),d=O(()=>!o.value.length&&n.value.searchQuery.length&&!i.value.isLoading),c=O(()=>n.value.searchQuery?o.value.length>n.value.displayLimit:o.value.length<i.value.assets.length&&!d.value);return r({address:s,balances:i,filteredBalanceList:o,noSearchResults:d,isShowMore:c,onShowMore:()=>{n.value.displayLimit+=n.value.displayLimit},resetDisplayLimit:()=>{n.value.displayLimit=e.displayLimit},resetSearch:()=>{n.value.searchQuery="",av(()=>{var g;return(g=n.value.searchInput)==null?void 0:g.focus()})}},_m(n.value))}}),on=e=>(ve("data-v-33933a0d"),e=e(),be(),e),VS={class:"assets-header"},WS=on(()=>f("h2",{class:"title"},"Assets",-1)),FS=m(),HS={key:0,class:"assets-header__search"},zS={class:"assets-header__search-content"},YS={class:"search-container"},XS=on(()=>f("span",{class:"search-icon"},[f("svg",{width:"15",height:"15",viewBox:"0 0 15 15",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{d:"M6.5 12.5C9.81371 12.5 12.5 9.81371 12.5 6.5C12.5 3.18629 9.81371 0.5 6.5 0.5C3.18629 0.5 0.5 3.18629 0.5 6.5C0.5 9.81371 3.18629 12.5 6.5 12.5Z",stroke:"black","stroke-miterlimit":"10","stroke-linecap":"round","stroke-linejoin":"round"}),m(),f("path",{d:"M14.5002 14.5002L10.7422 10.7422",stroke:"black","stroke-miterlimit":"10","stroke-linecap":"round","stroke-linejoin":"round"})])],-1)),KS=m(),ZS=m(),jS=on(()=>f("svg",{width:"16",height:"16",viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M8 16C12.4183 16 16 12.4182 16 8C16 3.5818 12.4183 0 8 0C3.58172 0 0 3.5818 0 8C0 12.4182 3.58172 16 8 16ZM11.5442 4.45588C11.8382 4.74977 11.8382 5.22656 11.5442 5.52068L9.06483 8L11.5442 10.4793C11.8382 10.7734 11.8382 11.2502 11.5442 11.5441C11.2501 11.8382 10.7734 11.8382 10.4793 11.5441L8 9.0648L5.52065 11.5441C5.22662 11.8382 4.74989 11.8382 4.45582 11.5441C4.16179 11.2502 4.16179 10.7734 4.45582 10.4793L6.93517 8L4.45582 5.52068C4.16179 5.22656 4.16179 4.74977 4.45582 4.45588C4.74986 4.16176 5.22659 4.16176 5.52065 4.45588L8 6.9352L10.4793 4.45588C10.7734 4.16176 11.2501 4.16176 11.5442 4.45588Z",fill:"black","fill-opacity":"0.20"})],-1)),e1=[jS],t1=m(),n1={class:"assets-table"},i1={key:0,class:"assets-table__thead"},o1=on(()=>f("tr",null,[f("td",null,"Asset"),m(),f("td"),m(),f("td",{class:"assets-table__align-right"},"Available balance")],-1)),s1=[o1],r1=m(),a1={class:"assets-table__denom"},d1={class:"sp-denom-marker"},l1=m(),u1={class:"sp-denom-name"},c1=m(),p1={key:0},f1=on(()=>f("li",null,"Channels",-1)),m1=m(),h1=m(),g1={class:"assets-table__amount"},y1=m(),_1={key:0,class:"assets-table__row"},v1={class:"assets-table__row--no-results",colspan:"3"},b1=m(),w1=on(()=>f("p",null,"Try again with another search",-1)),S1=m(),k1=nn('<div class="loading__col" data-v-33933a0d><span class="loading__avatar" data-v-33933a0d></span> <span class="loading__denom" data-v-33933a0d></span></div> <div class="loading__col loading__col--justify-end" data-v-33933a0d><span class="loading__ibc" data-v-33933a0d></span></div> <div class="loading__col loading__col--justify-end" data-v-33933a0d><span class="loading__amount" data-v-33933a0d></span></div>',5),P1=[k1],C1=m(),R1={key:1,class:"no-result-label"},E1=m(),T1=m(`
      Show more
      `),N1=on(()=>f("span",{class:"arrow-icon"},[f("svg",{width:"12",height:"8",viewBox:"0 0 12 8",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{d:"M6.0001 7.4001L0.600098 2.0001L2.0001 0.600098L6.0001 4.6001L10.0001 0.600098L11.4001 2.0001L6.0001 7.4001Z",fill:"black"})])],-1)),A1=[T1,N1];function O1(e,t,n,s,i,o){const d=q("SpDenom");return y(),_("section",null,[f("header",VS,[WS,FS,e.balances.assets.length?(y(),_("div",HS,[f("div",zS,[f("div",YS,[XS,KS,qe(f("input",{ref:"searchInput","onUpdate:modelValue":t[0]||(t[0]=c=>e.searchQuery=c),type:"search",autocomplete:"off",placeholder:"Search assets",class:"input--search",onInput:t[1]||(t[1]=(...c)=>e.resetDisplayLimit&&e.resetDisplayLimit(...c))},null,544),[[He,e.searchQuery]]),ZS,e.searchQuery?(y(),_("span",{key:0,class:"clear-icon",onClick:t[2]||(t[2]=er((...c)=>e.resetSearch&&e.resetSearch(...c),["prevent"]))},e1)):U("",!0)])])])):U("",!0)]),t1,f("table",n1,[e.balances.assets.length?(y(),_("thead",i1,s1)):U("",!0),r1,f("tbody",null,[(y(!0),_(G,null,Z(e.filteredBalanceList.slice(0,e.displayLimit),(c,a)=>(y(),_("tr",{key:a,class:"assets-table__row"},[f("td",a1,[f("div",d1,[A(d,{denom:c.amount.denom,modifier:"avatar"},null,8,["denom"])]),l1,f("div",u1,[A(d,{denom:c.amount.denom},null,8,["denom"])])]),c1,f("td",{class:ie([typeof c.path=="object"?"assets-table__channels--object":null,"assets-table__channels"])},[c.path?(y(),_("ul",p1,[f1,m1,(y(!0),_(G,null,Z(c.path,(p,u)=>(y(),_("li",{key:u},[f("div",null,E(p),1)]))),128))])):U("",!0)],2),h1,f("td",g1,E(new Intl.NumberFormat("en-GB").format(c.amount.amount)),1)]))),128)),y1,e.noSearchResults?(y(),_("tr",_1,[f("td",v1,[f("h4",null,"No results for '"+E(e.searchQuery)+"'",1),b1,w1])])):U("",!0)])]),S1,e.address&&e.balances.isLoading?(y(),_(G,{key:0},Z(2,c=>f("div",{key:c,class:"loading__row"},P1)),64)):U("",!0),C1,!e.address||!e.balances.isLoading&&!e.balances.assets.length?(y(),_("div",R1,`
      You have no assets
    `)):U("",!0),E1,!e.balances.isLoading&&e.isShowMore?(y(),_("div",{key:2,class:"show-more",onClick:t[3]||(t[3]=(...c)=>e.onShowMore&&e.onShowMore(...c))},A1)):U("",!0)])}var $m=x(LS,[["render",O1],["__scopeId","data-v-33933a0d"]]);const q1=D({name:"SpCard"}),U1={class:"sp-card-wrapper"},$1={class:"sp-card-top"},I1=m(),x1={class:"sp-card-bottom"};function D1(e,t,n,s,i,o){return y(),_("div",U1,[f("div",$1,[me(e.$slots,"top",{},void 0,!0)]),I1,f("div",x1,[me(e.$slots,"bottom",{},void 0,!0)])])}var Im=x(q1,[["render",D1],["__scopeId","data-v-4c89741f"]]);const Q1=D({name:"SpClipboard",components:{SpButton:Ue},props:{text:{type:String,default:""}},setup(){let{copy:e}=sr();return{copy:e}}}),M1=e=>(ve("data-v-7f0fb000"),e=e(),be(),e),B1={class:"clipboard"},J1=M1(()=>f("svg",{width:"16",height:"16",viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{d:"M12 1.33325H1.33331V11.9999H12V1.33325Z",stroke:"#094EFD","stroke-width":"1.2","stroke-linecap":"round","stroke-linejoin":"round"}),m(),f("path",{d:"M12.7273 4H14.6667V14.6667H4V12.7273",stroke:"#094EFD","stroke-width":"1.2","stroke-linecap":"round","stroke-linejoin":"round"})],-1));function G1(e,t,n,s,i,o){const d=q("SpButton");return y(),_("div",B1,[A(d,{onClick:t[0]||(t[0]=()=>e.copy(e.text))},{default:I(()=>[J1]),_:1})])}var xm=x(Q1,[["render",G1],["__scopeId","data-v-7f0fb000"]]);const L1=D({name:"SpDropdown",components:{},props:{},setup(){let e=_e(!1),t=_e(null);const n=s=>{var i;((i=t.value)==null?void 0:i.contains(s.target))||(e.value=!1)};return tn(()=>{document.addEventListener("click",n)}),js(()=>{document.removeEventListener("click",n)}),{visible:e,buttonEl:t}}}),V1={style:{position:"relative"}},W1=m(),F1={key:0,class:"dropdown-dropdown"};function H1(e,t,n,s,i,o){return y(),_("div",V1,[f("div",{ref:"buttonEl",class:"dropdown-button",onClick:t[0]||(t[0]=d=>e.visible=!0)},[me(e.$slots,"button")],512),W1,A(As,{name:"dropdown-fade"},{default:I(()=>[e.visible?(y(),_("div",F1,[me(e.$slots,"dropdown")])):U("",!0)]),_:3})])}var Ao=x(L1,[["render",H1]]);const z1=D({name:"SpSpacer",props:{size:{type:String,required:!0}}});function Y1(e,t,n,s,i,o){return y(),_("div",{class:ie(["spacer",e.size])},null,2)}var Oo=x(z1,[["render",Y1],["__scopeId","data-v-6475412b"]]);const X1={props:{modifier:{type:String,default:"content"},feedback:{type:String,required:!1},size:{type:String,required:!0}},inject:{inverse:{default:!1}}};function K1(e,t,n,s,i,o){return y(),_("div",{class:ie(["typography",o.inverse&&"inverse",n.feedback,n.modifier,n.size])},[me(e.$slots,"default",{},void 0,!0)],2)}var Zn=x(X1,[["render",K1],["__scopeId","data-v-91429952"]]);const Z1=D({name:"SpCrudCreate",components:{SpSpacer:Oo,SpTypography:Zn,SpButton:Ue,SpDropdown:Ao,SpModal:Bt},props:{storeName:{type:String,required:!0},itemName:{type:String,required:!0},commandName:{type:String,required:!0}},setup(e,{emit:t}){let n=ge(),s=pt({}),i=O(()=>n.getters[e.storeName+"/getTypeStructure"](e.itemName)),o=O(()=>i.value.filter(a=>a.name!=="id"&&a.name!=="creator")),d=n.getters["common/wallet/address"];return{itemFieldsFiltered:o,formData:s,submitItem:async()=>{n.dispatch(e.storeName+e.commandName,{value:k(r({},s),{creator:d})}),t("close")}}}}),j1=m(),ek=["for"],tk=m(),nk=["id","onUpdate:modelValue","placeholder","name"],ik=m();function ok(e,t,n,s,i,o){const d=q("SpSpacer"),c=q("SpModal");return y(),F(c,{visible:!0,title:`Create ${e.itemName}`,"close-icon":!0,"submit-button":!0,"cancel-button":!0,style:{"text-align":"center"},onClose:t[0]||(t[0]=a=>e.$emit("close")),onSubmit:e.submitItem},{body:I(()=>[A(d,{size:"sm"}),j1,(y(!0),_(G,null,Z(e.itemFieldsFiltered,a=>(y(),_("div",null,[f("label",{for:`p${a.name}`,class:"sp-label capitalize-first-letter"},E(a.name),9,ek),tk,qe(f("input",{id:`p${a.name}`,"onUpdate:modelValue":p=>e.formData[a.name]=p,placeholder:`Enter ${a.name}`,type:"text",name:`p${a.name}`,class:"sp-input"},null,8,nk),[[He,e.formData[a.name]]]),ik,A(d,{size:"xs"})]))),256))]),_:1},8,["title","onSubmit"])}var Dm=x(Z1,[["render",ok],["__scopeId","data-v-9aa1622a"]]);const sk=D({name:"SpCrudDelete",components:{SpSpacer:Oo,SpTypography:Zn,SpButton:Ue,SpDropdown:Ao,SpModal:Bt},props:{storeName:{type:String,required:!0},itemName:{type:String,required:!0},itemData:{type:Object,required:!0},commandName:{type:String,required:!0}},setup(e,{emit:t}){let n=ge(),s=n.getters["common/wallet/address"];return{deleteItem:async()=>{n.dispatch(e.storeName+e.commandName,{value:{creator:s,id:e.itemData.id}}),t("close")}}}}),rk=e=>(ve("data-v-8c79ada6"),e=e(),be(),e),ak=m(),dk=rk(()=>f("div",{style:{"text-align":"center"}},[f("svg",{width:"48",height:"48",viewBox:"0 0 48 48",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{d:"M6 12H10H42",stroke:"#D80228","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"}),m(),f("path",{d:"M16 12V8C16 6.93913 16.4214 5.92172 17.1716 5.17157C17.9217 4.42143 18.9391 4 20 4H28C29.0609 4 30.0783 4.42143 30.8284 5.17157C31.5786 5.92172 32 6.93913 32 8V12M38 12V40C38 41.0609 37.5786 42.0783 36.8284 42.8284C36.0783 43.5786 35.0609 44 34 44H14C12.9391 44 11.9217 43.5786 11.1716 42.8284C10.4214 42.0783 10 41.0609 10 40V12H38Z",stroke:"#D80228","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"}),m(),f("path",{d:"M20 22V34",stroke:"#D80228","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"}),m(),f("path",{d:"M28 22V34",stroke:"#D80228","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"})])],-1)),lk=m(),uk=m(),ck=m(`
        Delete this item?
      `),pk=m(),fk=m(" This item will be deleted. "),mk=m(),hk=m(" You can\u2019t undo this action. "),gk=m(),yk=m(),_k={style:{display:"flex",gap:"10px","justify-content":"center"}},vk=m(`
          Cancel
        `),bk=m(),wk=m(`
          Delete
        `);function Sk(e,t,n,s,i,o){const d=q("SpSpacer"),c=q("SpTypography"),a=q("SpButton"),p=q("SpModal");return y(),F(p,{visible:!0,closeIcon:!0,onClose:t[1]||(t[1]=u=>e.$emit("close")),onSubmit:t[2]||(t[2]=u=>e.$emit("close")),style:{"text-align":"center"}},{header:I(()=>[A(d,{size:"sm"}),ak,dk,lk,A(d,{size:"xs"}),uk,A(c,{size:"sm",modifier:"highlight",style:{"font-weight":"700"}},{default:I(()=>[ck]),_:1})]),body:I(()=>[A(d,{size:"sm"}),pk,A(c,{size:"md"},{default:I(()=>[fk]),_:1}),mk,A(c,{size:"md"},{default:I(()=>[hk]),_:1}),gk,A(d,{size:"md"}),yk,f("div",_k,[A(a,{type:"secondary",onClick:t[0]||(t[0]=u=>e.$emit("close")),style:{width:"40%"}},{default:I(()=>[vk]),_:1}),bk,A(a,{type:"primary",onClick:e.deleteItem,style:{width:"40%"}},{default:I(()=>[wk]),_:1},8,["onClick"])])]),_:1})}var Qm=x(sk,[["render",Sk],["__scopeId","data-v-8c79ada6"]]);const kk=D({name:"SpCrudRead",components:{SpSpacer:Oo,SpTypography:Zn,SpButton:Ue,SpDropdown:Ao,SpModal:Bt},props:{storeName:{type:String,required:!0},itemName:{type:String,required:!0},commandName:{type:String,required:!0}},setup(e){let t=ge(),{address:n,shortAddress:s}=Je({$s:t}),i=O(()=>t.getters[e.storeName+"/getTypeStructure"](e.itemName)),o=O(()=>{const d=t.state[e.storeName][e.itemName+"All"],c=Object.keys(d)[0];return c&&d[c]?d[c][e.itemName].sort((a,p)=>p.id-a.id):[]});return tn(()=>{t.dispatch(`${e.storeName}${e.commandName}`,{options:{subscribe:!0},params:{},query:{}})}),{address:n,itemFields:i,shortAddress:s,items:o}}}),Pk=e=>(ve("data-v-8e880b84"),e=e(),be(),e),Ck={key:0,style:{"max-width":"600px"}},Rk=nn('<div style="width:50px;" data-v-8e880b84><svg width="46" height="46" viewBox="0 0 46 46" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-8e880b84><path d="M0 8C0 3.58172 3.58172 0 8 0H38C42.4183 0 46 3.58172 46 8V38C46 42.4183 42.4183 46 38 46H8C3.58172 46 0 42.4183 0 38V8Z" fill="black" fill-opacity="0.03" data-v-8e880b84></path> <path d="M24.3334 16.3335H19.0001C18.6465 16.3335 18.3073 16.474 18.0573 16.724C17.8072 16.9741 17.6667 17.3132 17.6667 17.6668V28.3335C17.6667 28.6871 17.8072 29.0263 18.0573 29.2763C18.3073 29.5264 18.6465 29.6668 19.0001 29.6668H27.0001C27.3537 29.6668 27.6928 29.5264 27.9429 29.2763C28.1929 29.0263 28.3334 28.6871 28.3334 28.3335V20.3335L24.3334 16.3335Z" stroke="black" stroke-opacity="0.64" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" data-v-8e880b84></path> <path d="M24.3333 16.3335V20.3335H28.3333" stroke="black" stroke-opacity="0.64" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" data-v-8e880b84></path> <path d="M25.6666 23.6665H20.3333" stroke="black" stroke-opacity="0.64" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" data-v-8e880b84></path> <path d="M25.6666 26.3335H20.3333" stroke="black" stroke-opacity="0.64" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" data-v-8e880b84></path> <path d="M21.6666 21H20.9999H20.3333" stroke="black" stroke-opacity="0.64" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" data-v-8e880b84></path></svg></div> ',2),Ek={style:{width:"100%"}},Tk={class:"item-title capitalize-first-letter"},Nk=m(),Ak={class:"item-value"},Ok=m(),qk=m(),Uk={style:{width:"20px"}},$k=Pk(()=>f("svg",{width:"40",height:"40",viewBox:"0 0 40 40",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("circle",{cx:"15",cy:"20",r:"1.5",fill:"black"}),m(),f("circle",{cx:"20",cy:"20",r:"1.5",fill:"black"}),m(),f("circle",{cx:"25",cy:"20",r:"1.5",fill:"black"})],-1)),Ik={style:{width:"160px"}},xk=["onClick"],Dk=m(),Qk=["onClick"],Mk=m(),Bk={key:0},Jk=m(),Gk=m("No items");function Lk(e,t,n,s,i,o){const d=q("SpSpacer"),c=q("SpDropdown"),a=q("SpTypography");return y(),_("div",null,[e.items?(y(),_("div",Ck,[(y(!0),_(G,null,Z(e.items,p=>(y(),_("div",{key:p.id,style:{display:"flex","justify-content":"space-between",gap:"14px","margin-bottom":"3rem"}},[Rk,f("div",Ek,[(y(!0),_(G,null,Z(e.itemFields,u=>(y(),_("div",null,[f("div",Tk,E(u.name),1),Nk,f("div",Ak,E(p[u.name]),1),Ok,A(d,{size:"xsm"})]))),256))]),qk,f("div",Uk,[A(c,null,{button:I(()=>[$k]),dropdown:I(()=>[f("div",Ik,[f("div",{class:"dropdown-option",onClick:u=>e.$emit("editItem",p)},`
                  Edit
                `,8,xk),Dk,f("div",{class:"dropdown-option",style:{color:"#d80228"},onClick:u=>e.$emit("deleteItem",p)},`
                  Delete
                `,8,Qk)])]),_:2},1024)])]))),128)),Mk,(e.items||[]).length===0?(y(),_("div",Bk,[A(d,{size:"md"}),Jk,A(a,{size:"md",class:"empty"},{default:I(()=>[Gk]),_:1})])):U("",!0)])):U("",!0)])}var Mm=x(kk,[["render",Lk],["__scopeId","data-v-8e880b84"]]);const Vk=D({name:"SpCrudUpdate",components:{SpSpacer:Oo,SpTypography:Zn,SpButton:Ue,SpDropdown:Ao,SpModal:Bt},props:{storeName:{type:String,required:!0},itemName:{type:String,required:!0},itemData:{type:Object,required:!0},commandName:{type:String,required:!0}},setup(e,{emit:t}){let n=ge(),s=pt(r({},e.itemData)),i=O(()=>n.getters[e.storeName+"/getTypeStructure"](e.itemName)),o=O(()=>i.value.filter(a=>a.name!=="id"&&a.name!=="creator")),d=n.getters["common/wallet/address"];return{itemFieldsFiltered:o,formData:s,editItem:async()=>{n.dispatch(e.storeName+e.commandName,{value:k(r({},s),{creator:d,id:e.itemData.id})}),t("close")}}}}),Wk=m(),Fk=["for"],Hk=m(),zk=["id","onUpdate:modelValue","placeholder","name"],Yk=m();function Xk(e,t,n,s,i,o){const d=q("SpSpacer"),c=q("SpModal");return y(),F(c,{visible:!0,title:`Edit ${e.itemName.toLowerCase()}`,"close-icon":!0,"submit-button":!0,"cancel-button":!0,style:{"text-align":"center"},onClose:t[0]||(t[0]=a=>e.$emit("close")),onSubmit:e.editItem},{body:I(()=>[A(d,{size:"sm"}),Wk,(y(!0),_(G,null,Z(e.itemFieldsFiltered,a=>(y(),_("div",null,[f("label",{for:`p${a.name}`,class:"sp-label capitalize-first-letter"},E(a.name),9,Fk),Hk,qe(f("input",{id:`p${a.name}`,"onUpdate:modelValue":p=>e.formData[a.name]=p,placeholder:`Enter ${a.name}`,type:"text",name:`p${a.name}`,class:"sp-input"},null,8,zk),[[He,e.formData[a.name]]]),Yk,A(d,{size:"xs"})]))),256))]),_:1},8,["title","onSubmit"])}var Bm=x(Vk,[["render",Xk],["__scopeId","data-v-3fc91364"]]);let Kk={visibleModal:"",activeItem:{},moduleAvailable:!1};const Zk=D({name:"SpCrud",components:{SpTypography:Zn,SpButton:Ue,SpCrudRead:Mm,SpCrudUpdate:Bm,SpCrudCreate:Dm,SpCrudDelete:Qm},props:{storeName:{type:String,required:!0},itemName:{type:String,required:!0}},setup(e){let t=ge(),{address:n}=Je({$s:t}),s=pt(Kk),i=O(()=>e.itemName.replace(/^\w/,o=>o.toUpperCase()));return s.moduleAvailable=t.hasModule(e.storeName),k(r({},_m(s)),{address:n,moduleNameNormalized:i})}}),jk={key:0,class:"container crud--position"},eP={class:"row"},tP={class:"col-6"},nP=m(),iP={class:"col-6 text-align--right"},oP=m(),sP=m(),rP=m(),aP=m();function dP(e,t,n,s,i,o){const d=q("SpTypography"),c=q("SpButton"),a=q("SpCrudRead"),p=q("SpCrudCreate"),u=q("SpCrudUpdate"),g=q("SpCrudDelete");return e.moduleAvailable?(y(),_("div",jk,[f("div",eP,[f("div",tP,[A(d,{modifier:"highlight",size:"md",style:{"font-weight":"700"}},{default:I(()=>[m(E(e.moduleNameNormalized)+` items
        `,1)]),_:1})]),nP,f("div",iP,[A(c,{type:"primary",disabled:!e.address,onClick:t[0]||(t[0]=b=>e.visibleModal="create-item")},{default:I(()=>[m(`
          Create `+E(e.moduleNameNormalized),1)]),_:1},8,["disabled"])])]),oP,A(a,{"store-name":e.storeName,"item-name":e.moduleNameNormalized,"command-name":`/Query${e.moduleNameNormalized}All`,onCreateItem:t[1]||(t[1]=b=>e.visibleModal="create-item"),onEditItem:t[2]||(t[2]=b=>{e.activeItem=b,e.visibleModal="edit-item"}),onDeleteItem:t[3]||(t[3]=b=>{e.activeItem=b,e.visibleModal="delete-item"})},null,8,["store-name","item-name","command-name"]),sP,e.visibleModal==="create-item"?(y(),F(p,{key:0,"store-name":e.storeName,"item-name":e.moduleNameNormalized,"command-name":`/sendMsgCreate${e.moduleNameNormalized}`,onClose:t[4]||(t[4]=b=>e.visibleModal="")},null,8,["store-name","item-name","command-name"])):U("",!0),rP,e.visibleModal==="edit-item"?(y(),F(u,{key:1,"store-name":e.storeName,"item-name":e.moduleNameNormalized,"item-data":e.activeItem,"command-name":`/sendMsgUpdate${e.moduleNameNormalized}`,onClose:t[5]||(t[5]=b=>e.visibleModal="")},null,8,["store-name","item-name","item-data","command-name"])):U("",!0),aP,e.visibleModal==="delete-item"?(y(),F(g,{key:2,"store-name":e.storeName,"item-name":e.moduleNameNormalized,"item-data":e.activeItem,"command-name":`/sendMsgDelete${e.moduleNameNormalized}`,onClose:t[6]||(t[6]=b=>e.visibleModal="")},null,8,["store-name","item-name","item-data","command-name"])):U("",!0)])):U("",!0)}var lP=x(Zk,[["render",dP],["__scopeId","data-v-e4f2574a"]]);var rr;(function(e){e.self="Self",e.in="Receive",e.out="Send"})(rr||(rr={}));var ar;(function(e){e.self="self",e.in="from",e.out="to"})(ar||(ar={}));var dr;(function(e){e.self="",e.in="+",e.out="-"})(dr||(dr={}));const uP=D({name:"SpTokenTransferListItem",props:{tx:{type:Object,required:!0}},components:{SpDenom:Os},setup(e){let t=O(()=>rr[e.tx.dir]),n=O(()=>ar[e.tx.dir]),s=O(()=>e.tx.dir==="in"?e.tx.sender:e.tx.receiver),i=O(()=>{var c,a;return((c=s.value)==null?void 0:c.substring(0,10))+"..."+((a=s.value)==null?void 0:a.slice(-4))}),o=O(()=>new Date(e.tx.timestamp).toLocaleString("en-US",{month:"long",day:"numeric",hour:"numeric",minute:"numeric"})),d=O(()=>dr[e.tx.dir]);return{addrDesc:n,shortAddr:i,dirDescription:t,amountSign:d,txDate:o}}}),Jm=e=>(ve("data-v-7da77b8d"),e=e(),be(),e),cP={class:"tx-row"},pP={class:"tx-container"},fP=Jm(()=>f("svg",{width:"16",height:"16",viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{d:"M8 13V3",stroke:"black","stroke-width":"1.6","stroke-miterlimit":"10","stroke-linecap":"round","stroke-linejoin":"round"}),m(),f("path",{d:"M4 6L8 2L12 6",stroke:"black","stroke-width":"1.6","stroke-miterlimit":"10","stroke-linecap":"round","stroke-linejoin":"round"})],-1)),mP=[fP],hP=m(),gP=Jm(()=>f("div",{style:{width:"16px",height:"100%"}},null,-1)),yP=m(),_P={class:"tx-info"},vP={class:"tx-direction"},bP=m(),wP={class:"tx-meta"},SP=m(),kP={class:"tx-payload"},PP=m(),CP={class:"tx-denom"};function RP(e,t,n,s,i,o){var c,a;const d=q("SpDenom");return y(),_("div",cP,[f("div",pP,[f("div",{class:ie(["tx-icon",(c=e.tx)==null?void 0:c.dir])},mP,2),hP,gP,yP,f("div",_P,[f("div",vP,E(e.dirDescription),1),bP,f("div",wP,E(e.txDate),1)]),SP,f("div",kP,[((a=e.tx.amount)==null?void 0:a.length)?(y(!0),_(G,{key:0},Z(e.tx.amount,(p,u)=>{var g;return y(),_("span",{key:`${p.amount}-${p.denom}-${u}`,class:ie(["tx-amount",(g=e.tx)==null?void 0:g.dir])},[m(E(e.amountSign+" "+p.amount)+" ",1),A(d,{denom:p.denom},null,8,["denom"])],2)}),128)):(y(),_(G,{key:1},[m(E(e.tx),1)],64)),PP,f("div",CP,E(e.addrDesc+" "+e.shortAddr),1)])])])}var EP=x(uP,[["render",RP],["__scopeId","data-v-7da77b8d"]]);let TP={listSize:10,listMaxSize:15,isNewTxLoading:!1};const NP=D({name:"SpGetTokenTransferList",components:{SpSpinner:Eo,SpTokenTransferListItem:EP},async setup(){let e=ge(),t=pt(TP),{address:n}=Je({$s:e}),{pager:s,normalize:i,newTxs:o,filterSupportedTypes:d}=await Rm({$s:e,opts:{order:"desc",realTime:!0}}),c=O(()=>s.value.page.value.filter(d).map(i).slice(0,t.listSize).sort((T,v)=>v.height-T.height)),a=O(()=>C("timestamp")(c.value)),p=O(()=>t.listSize<t.listMaxSize&&s.value.page.value.length>t.listSize),u=O(()=>`${o.value} new ${o.value>1?"items":"item"}`),g=async()=>{t.isNewTxLoading=!0,await s.value.load(),t.isNewTxLoading=!!o.value},b=()=>{t.listSize=t.listMaxSize},N=T=>new Date(T).toLocaleString("en-US",{year:"numeric",month:"long"}),C=T=>v=>v.reduce((h,R)=>{const w=N(R[T]);return h[w]=(h[w]||[]).concat(R),h},{});return{newTxs:o,address:n,list:c,leftToShowMore:p,showMoreText:u,loadNewItems:g,showMoreItems:b,txByMonth:a,getTxMonth:N,getMonthGroup:T=>{const v=new Date().getFullYear();return Number(T.replace(/\D/g,""))<v?T:T.replace(/[0-9]/g,"")},state:t}}}),Gm=e=>(ve("data-v-7199a820"),e=e(),be(),e),AP={class:"tx-list"},OP=Gm(()=>f("div",{class:"title"},"Transactions",-1)),qP=m(),UP=m(),$P={key:1,class:"empty"},IP={key:2,class:"list"},xP=["textContent"],DP=m(),QP=m(),MP=m(`
      Show more
      `),BP=Gm(()=>f("span",{class:"arrow-icon"},[f("svg",{width:"12",height:"8",viewBox:"0 0 12 8",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{d:"M6.0001 7.4001L0.600098 2.0001L2.0001 0.600098L6.0001 4.6001L10.0001 0.600098L11.4001 2.0001L6.0001 7.4001Z",fill:"black"})])],-1)),JP=[MP,BP];function GP(e,t,n,s,i,o){const d=q("SpSpinner"),c=q("SpTokenTransferListItem");return y(),_("div",AP,[OP,qP,e.newTxs?(y(),_("div",{key:0,class:"load-more",role:"button",onClick:t[0]||(t[0]=(...a)=>e.loadNewItems&&e.loadNewItems(...a))},[e.state.isNewTxLoading?(y(),F(d,{key:0,size:16})):(y(),_(G,{key:1},[m(E(e.showMoreText),1)],64))])):U("",!0),UP,!e.address||Object.keys(e.txByMonth).length<=0?(y(),_("div",$P,`
      Transaction history is empty
    `)):Object.keys(e.txByMonth).length>0?(y(),_("div",IP,[(y(!0),_(G,null,Z(e.txByMonth,(a,p,u)=>(y(),_("div",{key:`${u}`},[f("h3",{class:"tx-list__subheading",textContent:E(e.getMonthGroup(p))},null,8,xP),DP,(y(!0),_(G,null,Z(a,(g,b)=>(y(),F(c,{key:`${g.hash}-${g.timestamp}-${b}`,tx:g},null,8,["tx"]))),128))]))),128))])):U("",!0),QP,e.leftToShowMore?(y(),_("div",{key:3,class:"show-more",role:"button",onClick:t[1]||(t[1]=(...a)=>e.showMoreItems&&e.showMoreItems(...a))},JP)):U("",!0)])}var Lm=x(NP,[["render",GP],["__scopeId","data-v-7199a820"]]);const LP=D({name:"SpSystemBar",async setup(){let e=ge(),{acc:t}=await Yv({$s:e});return{acc:t}}}),VP={key:0,class:"sp-system-bar warning"},WP=nn(`<span class="icon" data-v-03fa9c8d><svg width="17" height="16" viewBox="0 0 17 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-03fa9c8d><g clip-path="url(#clip0_1442_621)" data-v-03fa9c8d><path d="M8.5 15.5C12.6421 15.5 16 12.1421 16 8C16 3.85786 12.6421 0.5 8.5 0.5C4.35786 0.5 1 3.85786 1 8C1 12.1421 4.35786 15.5 8.5 15.5Z" stroke="black" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" data-v-03fa9c8d></path> <path d="M3.19727 13.3028L13.8033 2.69678" stroke="black" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round" data-v-03fa9c8d></path></g> <defs data-v-03fa9c8d><clipPath id="clip0_1442_621" data-v-03fa9c8d><rect width="16" height="16" fill="white" transform="translate(0.5)" data-v-03fa9c8d></rect></clipPath></defs></svg></span> <div class="text" data-v-03fa9c8d><div class="msg bold" data-v-03fa9c8d>
        Account number must be 1 or higher to send transactions.\xA0
      </div> <div class="msg" data-v-03fa9c8d>
        Account number 0 is unable to send transactions as identified in\xA0<a target="_blank" rel="noreferrer noopener" href="https://github.com/chainapsis/keplr-wallet/issues/217" class="msg bold" data-v-03fa9c8d>this issue</a>.
      </div></div>`,3),FP=[WP];function HP(e,t,n,s,i,o){var d;return((d=e.acc)==null?void 0:d.accountNumber)===0?(y(),_("div",VP,FP)):U("",!0)}var Vm=x(LP,[["render",HP],["__scopeId","data-v-03fa9c8d"]]);const zP=D({name:"SpNavbar",components:{SpAcc:qm,SpModal:Bt,SpButton:Ue,SpSystemBar:Vm},props:{links:{type:Object,required:!0},activeRoute:{type:String,required:!1}}}),YP=e=>(ve("data-v-2692eaba"),e=e(),be(),e),XP=m(),KP={class:"navbar-wrapper"},ZP={class:"navbar-section"},jP=YP(()=>f("div",{style:{display:"flex","align-items":"center"}},[f("svg",{width:"26",height:"25",viewBox:"0 0 26 25",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{d:"M24.9678 12.7084L24.587 13.3666L23.0423 16.0452L22.6543 16.7154C22.3055 17.3265 21.8021 17.835 21.1946 18.1897C20.5871 18.5443 19.897 18.7327 19.1936 18.7358H6.79696C6.52052 18.7352 6.25053 18.8193 6.02337 18.9769C5.87808 19.0798 5.75511 19.211 5.66188 19.3627L5.64501 19.3892C5.63851 19.3983 5.63286 19.408 5.62814 19.4181L5.44499 19.7316L4.48102 21.3879H9.88648C10.1637 21.3889 10.4346 21.3048 10.6625 21.1468C10.8194 21.0358 10.9502 20.8918 11.0457 20.7249C11.0464 20.7193 11.0464 20.7136 11.0457 20.708L11.6048 19.7436H14.6967L13.7327 21.4L13.3785 22.01L13.3447 22.0678C12.9917 22.6776 12.4845 23.1838 11.8741 23.5354C11.2637 23.8871 10.5716 24.0719 9.8672 24.0714H2.15785C1.92317 24.072 1.69263 24.0095 1.4903 23.8905C1.37502 23.8265 1.27019 23.7452 1.17942 23.6494C0.985516 23.4407 0.863022 23.1756 0.829662 22.8926C0.796303 22.6095 0.853808 22.3232 0.99386 22.0751L1.16737 21.7761L1.37463 21.4193L2.3386 19.7629L2.93144 18.7358L3.28329 18.1283L3.31703 18.068C3.67033 17.4577 4.17784 16.9511 4.78864 16.5991C5.39943 16.247 6.09203 16.0618 6.79696 16.062H19.1189C19.1478 16.0645 19.1768 16.0645 19.2057 16.062C19.4255 16.0545 19.6402 15.9932 19.8309 15.8835C20.0216 15.7738 20.1826 15.6191 20.2998 15.4328L20.3214 15.3942L21.4758 13.3931H2.15785C1.92357 13.393 1.6934 13.3315 1.4903 13.2147C1.37554 13.1498 1.27082 13.0686 1.17942 12.9736C0.984118 12.7635 0.861196 12.4963 0.828671 12.2113C0.796145 11.9262 0.855724 11.6383 0.99868 11.3895L1.17942 11.0785L1.38668 10.7193L2.93144 8.04067L3.31944 7.37041C3.67207 6.75937 4.17936 6.25203 4.79026 5.89947C5.40116 5.5469 6.09411 5.36154 6.79937 5.36205H19.2081C19.4279 5.3543 19.6425 5.29292 19.8332 5.18325C20.0239 5.07357 20.1849 4.91893 20.3022 4.73278L20.3239 4.6918V4.67733L20.5191 4.33979L21.483 2.68344H16.0728C15.7962 2.68169 15.5258 2.76594 15.2992 2.92454C15.154 3.02653 15.031 3.15695 14.9377 3.30789C14.9377 3.30789 14.9377 3.32717 14.9208 3.33923C14.9159 3.34593 14.9118 3.35322 14.9088 3.36093C14.908 3.36653 14.908 3.37221 14.9088 3.37781L14.3617 4.32533H11.2529L12.2169 2.66897L12.6001 2.00595C12.953 1.39535 13.4604 0.888502 14.0713 0.536372C14.6822 0.184241 15.375 -0.000750862 16.08 2.29054e-06H23.8086C24.0436 -0.000271035 24.2746 0.0614207 24.4782 0.178864C24.6818 0.296308 24.8509 0.465355 24.9684 0.668982C25.086 0.872608 25.1478 1.10362 25.1477 1.33876C25.1476 1.57389 25.0855 1.80485 24.9678 2.00836L24.5798 2.67862L23.6158 4.33497L23.0254 5.35723L22.6374 6.02749C22.2878 6.63427 21.7855 7.13893 21.1805 7.49127C20.5755 7.84361 19.8888 8.03136 19.1888 8.03584H6.79696C6.56606 8.03569 6.33905 8.09535 6.13803 8.209C5.93701 8.32265 5.76882 8.48643 5.64983 8.6844C5.64937 8.69082 5.64937 8.69727 5.64983 8.70369V8.72298L4.51235 10.6928H23.8375C24.0722 10.6922 24.3027 10.7546 24.5051 10.8736C24.8096 11.0555 25.0294 11.351 25.1162 11.6951C25.203 12.0392 25.1496 12.4037 24.9678 12.7084Z",fill:"url(#paint0_radial_918_10381)"}),m(),f("path",{d:"M24.9678 12.7084L24.587 13.3666L23.0423 16.0452L22.6543 16.7154C22.3055 17.3265 21.8021 17.835 21.1946 18.1897C20.5871 18.5443 19.897 18.7327 19.1936 18.7358H6.79696C6.52052 18.7352 6.25053 18.8193 6.02337 18.9769C5.87808 19.0798 5.75511 19.211 5.66188 19.3627L5.64501 19.3892C5.63851 19.3983 5.63286 19.408 5.62814 19.4181L5.44499 19.7316L4.48102 21.3879H9.88648C10.1637 21.3889 10.4346 21.3048 10.6625 21.1468C10.8194 21.0358 10.9502 20.8918 11.0457 20.7249C11.0464 20.7193 11.0464 20.7136 11.0457 20.708L11.6048 19.7436H14.6967L13.7327 21.4L13.3785 22.01L13.3447 22.0678C12.9917 22.6776 12.4845 23.1838 11.8741 23.5354C11.2637 23.8871 10.5716 24.0719 9.8672 24.0714H2.15785C1.92317 24.072 1.69263 24.0095 1.4903 23.8905C1.37502 23.8265 1.27019 23.7452 1.17942 23.6494C0.985516 23.4407 0.863022 23.1756 0.829662 22.8926C0.796303 22.6095 0.853808 22.3232 0.99386 22.0751L1.16737 21.7761L1.37463 21.4193L2.3386 19.7629L2.93144 18.7358L3.28329 18.1283L3.31703 18.068C3.67033 17.4577 4.17784 16.9511 4.78864 16.5991C5.39943 16.247 6.09203 16.0618 6.79696 16.062H19.1189C19.1478 16.0645 19.1768 16.0645 19.2057 16.062C19.4255 16.0545 19.6402 15.9932 19.8309 15.8835C20.0216 15.7738 20.1826 15.6191 20.2998 15.4328L20.3214 15.3942L21.4758 13.3931H2.15785C1.92357 13.393 1.6934 13.3315 1.4903 13.2147C1.37554 13.1498 1.27082 13.0686 1.17942 12.9736C0.984118 12.7635 0.861196 12.4963 0.828671 12.2113C0.796145 11.9262 0.855724 11.6383 0.99868 11.3895L1.17942 11.0785L1.38668 10.7193L2.93144 8.04067L3.31944 7.37041C3.67207 6.75937 4.17936 6.25203 4.79026 5.89947C5.40116 5.5469 6.09411 5.36154 6.79937 5.36205H19.2081C19.4279 5.3543 19.6425 5.29292 19.8332 5.18325C20.0239 5.07357 20.1849 4.91893 20.3022 4.73278L20.3239 4.6918V4.67733L20.5191 4.33979L21.483 2.68344H16.0728C15.7962 2.68169 15.5258 2.76594 15.2992 2.92454C15.154 3.02653 15.031 3.15695 14.9377 3.30789C14.9377 3.30789 14.9377 3.32717 14.9208 3.33923C14.9159 3.34593 14.9118 3.35322 14.9088 3.36093C14.908 3.36653 14.908 3.37221 14.9088 3.37781L14.3617 4.32533H11.2529L12.2169 2.66897L12.6001 2.00595C12.953 1.39535 13.4604 0.888502 14.0713 0.536372C14.6822 0.184241 15.375 -0.000750862 16.08 2.29054e-06H23.8086C24.0436 -0.000271035 24.2746 0.0614207 24.4782 0.178864C24.6818 0.296308 24.8509 0.465355 24.9684 0.668982C25.086 0.872608 25.1478 1.10362 25.1477 1.33876C25.1476 1.57389 25.0855 1.80485 24.9678 2.00836L24.5798 2.67862L23.6158 4.33497L23.0254 5.35723L22.6374 6.02749C22.2878 6.63427 21.7855 7.13893 21.1805 7.49127C20.5755 7.84361 19.8888 8.03136 19.1888 8.03584H6.79696C6.56606 8.03569 6.33905 8.09535 6.13803 8.209C5.93701 8.32265 5.76882 8.48643 5.64983 8.6844C5.64937 8.69082 5.64937 8.69727 5.64983 8.70369V8.72298L4.51235 10.6928H23.8375C24.0722 10.6922 24.3027 10.7546 24.5051 10.8736C24.8096 11.0555 25.0294 11.351 25.1162 11.6951C25.203 12.0392 25.1496 12.4037 24.9678 12.7084Z",fill:"url(#paint1_radial_918_10381)"}),m(),f("path",{d:"M24.9678 12.7084L24.587 13.3666L23.0423 16.0452L22.6543 16.7154C22.3055 17.3265 21.8021 17.835 21.1946 18.1897C20.5871 18.5443 19.897 18.7327 19.1936 18.7358H6.79696C6.52052 18.7352 6.25053 18.8193 6.02337 18.9769C5.87808 19.0798 5.75511 19.211 5.66188 19.3627L5.64501 19.3892C5.63851 19.3983 5.63286 19.408 5.62814 19.4181L5.44499 19.7316L4.48102 21.3879H9.88648C10.1637 21.3889 10.4346 21.3048 10.6625 21.1468C10.8194 21.0358 10.9502 20.8918 11.0457 20.7249C11.0464 20.7193 11.0464 20.7136 11.0457 20.708L11.6048 19.7436H14.6967L13.7327 21.4L13.3785 22.01L13.3447 22.0678C12.9917 22.6776 12.4845 23.1838 11.8741 23.5354C11.2637 23.8871 10.5716 24.0719 9.8672 24.0714H2.15785C1.92317 24.072 1.69263 24.0095 1.4903 23.8905C1.37502 23.8265 1.27019 23.7452 1.17942 23.6494C0.985516 23.4407 0.863022 23.1756 0.829662 22.8926C0.796303 22.6095 0.853808 22.3232 0.99386 22.0751L1.16737 21.7761L1.37463 21.4193L2.3386 19.7629L2.93144 18.7358L3.28329 18.1283L3.31703 18.068C3.67033 17.4577 4.17784 16.9511 4.78864 16.5991C5.39943 16.247 6.09203 16.0618 6.79696 16.062H19.1189C19.1478 16.0645 19.1768 16.0645 19.2057 16.062C19.4255 16.0545 19.6402 15.9932 19.8309 15.8835C20.0216 15.7738 20.1826 15.6191 20.2998 15.4328L20.3214 15.3942L21.4758 13.3931H2.15785C1.92357 13.393 1.6934 13.3315 1.4903 13.2147C1.37554 13.1498 1.27082 13.0686 1.17942 12.9736C0.984118 12.7635 0.861196 12.4963 0.828671 12.2113C0.796145 11.9262 0.855724 11.6383 0.99868 11.3895L1.17942 11.0785L1.38668 10.7193L2.93144 8.04067L3.31944 7.37041C3.67207 6.75937 4.17936 6.25203 4.79026 5.89947C5.40116 5.5469 6.09411 5.36154 6.79937 5.36205H19.2081C19.4279 5.3543 19.6425 5.29292 19.8332 5.18325C20.0239 5.07357 20.1849 4.91893 20.3022 4.73278L20.3239 4.6918V4.67733L20.5191 4.33979L21.483 2.68344H16.0728C15.7962 2.68169 15.5258 2.76594 15.2992 2.92454C15.154 3.02653 15.031 3.15695 14.9377 3.30789C14.9377 3.30789 14.9377 3.32717 14.9208 3.33923C14.9159 3.34593 14.9118 3.35322 14.9088 3.36093C14.908 3.36653 14.908 3.37221 14.9088 3.37781L14.3617 4.32533H11.2529L12.2169 2.66897L12.6001 2.00595C12.953 1.39535 13.4604 0.888502 14.0713 0.536372C14.6822 0.184241 15.375 -0.000750862 16.08 2.29054e-06H23.8086C24.0436 -0.000271035 24.2746 0.0614207 24.4782 0.178864C24.6818 0.296308 24.8509 0.465355 24.9684 0.668982C25.086 0.872608 25.1478 1.10362 25.1477 1.33876C25.1476 1.57389 25.0855 1.80485 24.9678 2.00836L24.5798 2.67862L23.6158 4.33497L23.0254 5.35723L22.6374 6.02749C22.2878 6.63427 21.7855 7.13893 21.1805 7.49127C20.5755 7.84361 19.8888 8.03136 19.1888 8.03584H6.79696C6.56606 8.03569 6.33905 8.09535 6.13803 8.209C5.93701 8.32265 5.76882 8.48643 5.64983 8.6844C5.64937 8.69082 5.64937 8.69727 5.64983 8.70369V8.72298L4.51235 10.6928H23.8375C24.0722 10.6922 24.3027 10.7546 24.5051 10.8736C24.8096 11.0555 25.0294 11.351 25.1162 11.6951C25.203 12.0392 25.1496 12.4037 24.9678 12.7084Z",fill:"url(#paint2_linear_918_10381)"}),m(),f("path",{d:"M24.9678 12.7084L24.587 13.3666L23.0423 16.0452L22.6543 16.7154C22.3055 17.3265 21.8021 17.835 21.1946 18.1897C20.5871 18.5443 19.897 18.7327 19.1936 18.7358H6.79696C6.52052 18.7352 6.25053 18.8193 6.02337 18.9769C5.87808 19.0798 5.75511 19.211 5.66188 19.3627L5.64501 19.3892C5.63851 19.3983 5.63286 19.408 5.62814 19.4181L5.44499 19.7316L4.48102 21.3879H9.88648C10.1637 21.3889 10.4346 21.3048 10.6625 21.1468C10.8194 21.0358 10.9502 20.8918 11.0457 20.7249C11.0464 20.7193 11.0464 20.7136 11.0457 20.708L11.6048 19.7436H14.6967L13.7327 21.4L13.3785 22.01L13.3447 22.0678C12.9917 22.6776 12.4845 23.1838 11.8741 23.5354C11.2637 23.8871 10.5716 24.0719 9.8672 24.0714H2.15785C1.92317 24.072 1.69263 24.0095 1.4903 23.8905C1.37502 23.8265 1.27019 23.7452 1.17942 23.6494C0.985516 23.4407 0.863022 23.1756 0.829662 22.8926C0.796303 22.6095 0.853808 22.3232 0.99386 22.0751L1.16737 21.7761L1.37463 21.4193L2.3386 19.7629L2.93144 18.7358L3.28329 18.1283L3.31703 18.068C3.67033 17.4577 4.17784 16.9511 4.78864 16.5991C5.39943 16.247 6.09203 16.0618 6.79696 16.062H19.1189C19.1478 16.0645 19.1768 16.0645 19.2057 16.062C19.4255 16.0545 19.6402 15.9932 19.8309 15.8835C20.0216 15.7738 20.1826 15.6191 20.2998 15.4328L20.3214 15.3942L21.4758 13.3931H2.15785C1.92357 13.393 1.6934 13.3315 1.4903 13.2147C1.37554 13.1498 1.27082 13.0686 1.17942 12.9736C0.984118 12.7635 0.861196 12.4963 0.828671 12.2113C0.796145 11.9262 0.855724 11.6383 0.99868 11.3895L1.17942 11.0785L1.38668 10.7193L2.93144 8.04067L3.31944 7.37041C3.67207 6.75937 4.17936 6.25203 4.79026 5.89947C5.40116 5.5469 6.09411 5.36154 6.79937 5.36205H19.2081C19.4279 5.3543 19.6425 5.29292 19.8332 5.18325C20.0239 5.07357 20.1849 4.91893 20.3022 4.73278L20.3239 4.6918V4.67733L20.5191 4.33979L21.483 2.68344H16.0728C15.7962 2.68169 15.5258 2.76594 15.2992 2.92454C15.154 3.02653 15.031 3.15695 14.9377 3.30789C14.9377 3.30789 14.9377 3.32717 14.9208 3.33923C14.9159 3.34593 14.9118 3.35322 14.9088 3.36093C14.908 3.36653 14.908 3.37221 14.9088 3.37781L14.3617 4.32533H11.2529L12.2169 2.66897L12.6001 2.00595C12.953 1.39535 13.4604 0.888502 14.0713 0.536372C14.6822 0.184241 15.375 -0.000750862 16.08 2.29054e-06H23.8086C24.0436 -0.000271035 24.2746 0.0614207 24.4782 0.178864C24.6818 0.296308 24.8509 0.465355 24.9684 0.668982C25.086 0.872608 25.1478 1.10362 25.1477 1.33876C25.1476 1.57389 25.0855 1.80485 24.9678 2.00836L24.5798 2.67862L23.6158 4.33497L23.0254 5.35723L22.6374 6.02749C22.2878 6.63427 21.7855 7.13893 21.1805 7.49127C20.5755 7.84361 19.8888 8.03136 19.1888 8.03584H6.79696C6.56606 8.03569 6.33905 8.09535 6.13803 8.209C5.93701 8.32265 5.76882 8.48643 5.64983 8.6844C5.64937 8.69082 5.64937 8.69727 5.64983 8.70369V8.72298L4.51235 10.6928H23.8375C24.0722 10.6922 24.3027 10.7546 24.5051 10.8736C24.8096 11.0555 25.0294 11.351 25.1162 11.6951C25.203 12.0392 25.1496 12.4037 24.9678 12.7084Z",fill:"url(#paint3_linear_918_10381)"}),m(),f("path",{d:"M24.9678 12.7084L24.587 13.3666L23.0423 16.0452L22.6543 16.7154C22.3055 17.3265 21.8021 17.835 21.1946 18.1897C20.5871 18.5443 19.897 18.7327 19.1936 18.7358H6.79696C6.52052 18.7352 6.25053 18.8193 6.02337 18.9769C5.87808 19.0798 5.75511 19.211 5.66188 19.3627L5.64501 19.3892C5.63851 19.3983 5.63286 19.408 5.62814 19.4181L5.44499 19.7316L4.48102 21.3879H9.88648C10.1637 21.3889 10.4346 21.3048 10.6625 21.1468C10.8194 21.0358 10.9502 20.8918 11.0457 20.7249C11.0464 20.7193 11.0464 20.7136 11.0457 20.708L11.6048 19.7436H14.6967L13.7327 21.4L13.3785 22.01L13.3447 22.0678C12.9917 22.6776 12.4845 23.1838 11.8741 23.5354C11.2637 23.8871 10.5716 24.0719 9.8672 24.0714H2.15785C1.92317 24.072 1.69263 24.0095 1.4903 23.8905C1.37502 23.8265 1.27019 23.7452 1.17942 23.6494C0.985516 23.4407 0.863022 23.1756 0.829662 22.8926C0.796303 22.6095 0.853808 22.3232 0.99386 22.0751L1.16737 21.7761L1.37463 21.4193L2.3386 19.7629L2.93144 18.7358L3.28329 18.1283L3.31703 18.068C3.67033 17.4577 4.17784 16.9511 4.78864 16.5991C5.39943 16.247 6.09203 16.0618 6.79696 16.062H19.1189C19.1478 16.0645 19.1768 16.0645 19.2057 16.062C19.4255 16.0545 19.6402 15.9932 19.8309 15.8835C20.0216 15.7738 20.1826 15.6191 20.2998 15.4328L20.3214 15.3942L21.4758 13.3931H2.15785C1.92357 13.393 1.6934 13.3315 1.4903 13.2147C1.37554 13.1498 1.27082 13.0686 1.17942 12.9736C0.984118 12.7635 0.861196 12.4963 0.828671 12.2113C0.796145 11.9262 0.855724 11.6383 0.99868 11.3895L1.17942 11.0785L1.38668 10.7193L2.93144 8.04067L3.31944 7.37041C3.67207 6.75937 4.17936 6.25203 4.79026 5.89947C5.40116 5.5469 6.09411 5.36154 6.79937 5.36205H19.2081C19.4279 5.3543 19.6425 5.29292 19.8332 5.18325C20.0239 5.07357 20.1849 4.91893 20.3022 4.73278L20.3239 4.6918V4.67733L20.5191 4.33979L21.483 2.68344H16.0728C15.7962 2.68169 15.5258 2.76594 15.2992 2.92454C15.154 3.02653 15.031 3.15695 14.9377 3.30789C14.9377 3.30789 14.9377 3.32717 14.9208 3.33923C14.9159 3.34593 14.9118 3.35322 14.9088 3.36093C14.908 3.36653 14.908 3.37221 14.9088 3.37781L14.3617 4.32533H11.2529L12.2169 2.66897L12.6001 2.00595C12.953 1.39535 13.4604 0.888502 14.0713 0.536372C14.6822 0.184241 15.375 -0.000750862 16.08 2.29054e-06H23.8086C24.0436 -0.000271035 24.2746 0.0614207 24.4782 0.178864C24.6818 0.296308 24.8509 0.465355 24.9684 0.668982C25.086 0.872608 25.1478 1.10362 25.1477 1.33876C25.1476 1.57389 25.0855 1.80485 24.9678 2.00836L24.5798 2.67862L23.6158 4.33497L23.0254 5.35723L22.6374 6.02749C22.2878 6.63427 21.7855 7.13893 21.1805 7.49127C20.5755 7.84361 19.8888 8.03136 19.1888 8.03584H6.79696C6.56606 8.03569 6.33905 8.09535 6.13803 8.209C5.93701 8.32265 5.76882 8.48643 5.64983 8.6844C5.64937 8.69082 5.64937 8.69727 5.64983 8.70369V8.72298L4.51235 10.6928H23.8375C24.0722 10.6922 24.3027 10.7546 24.5051 10.8736C24.8096 11.0555 25.0294 11.351 25.1162 11.6951C25.203 12.0392 25.1496 12.4037 24.9678 12.7084Z",fill:"url(#paint4_linear_918_10381)"}),m(),f("defs",null,[f("radialGradient",{id:"paint0_radial_918_10381",cx:"0",cy:"0",r:"1",gradientUnits:"userSpaceOnUse",gradientTransform:"translate(12.9884 12.0357) rotate(78.7999) scale(7.69045 46.0636)"},[f("stop",{"stop-color":"#4050F9"}),m(),f("stop",{offset:"1","stop-color":"#01D7E5"})]),m(),f("radialGradient",{id:"paint1_radial_918_10381",cx:"0",cy:"0",r:"1",gradientUnits:"userSpaceOnUse",gradientTransform:"translate(13.6387 3.90821) rotate(-38.9884) scale(34.1053 96.3072)"},[f("stop",{"stop-color":"#4151FA","stop-opacity":"0"}),m(),f("stop",{offset:"0.93319","stop-color":"#4151FA"})]),m(),f("linearGradient",{id:"paint2_linear_918_10381",x1:"14.3617",y1:"7.7658",x2:"14.3617",y2:"3.18491",gradientUnits:"userSpaceOnUse"},[f("stop",{"stop-color":"#4151FA"}),m(),f("stop",{offset:"0.80232","stop-color":"#4151FA","stop-opacity":"0"})]),m(),f("linearGradient",{id:"paint3_linear_918_10381",x1:"13.8797",y1:"19.8208",x2:"15.3269",y2:"12.588",gradientUnits:"userSpaceOnUse"},[f("stop",{"stop-color":"#00D9E5"}),m(),f("stop",{offset:"1","stop-color":"#00D9E5","stop-opacity":"0"})]),m(),f("linearGradient",{id:"paint4_linear_918_10381",x1:"-3.47173",y1:"-4.65082",x2:"6.89886",y2:"21.0231",gradientUnits:"userSpaceOnUse"},[f("stop",{offset:"0.527646","stop-color":"#4151FA","stop-opacity":"0"}),m(),f("stop",{offset:"0.800615","stop-color":"#4151FA"}),m(),f("stop",{offset:"1","stop-color":"#4151FA","stop-opacity":"0"})])])]),m(),f("span",{style:{padding:"4px 8px","margin-left":"10px",background:"rgba(0, 0, 0, 0.03)","border-radius":"24px","font-weight":"500","font-size":"10px"}},`
              Beta
            `)],-1)),e2=m(),t2=m(),n2={class:"navbar-section"};function i2(e,t,n,s,i,o){const d=q("SpSystemBar"),c=q("router-link"),a=q("SpAcc");return y(),_(G,null,[(y(),F(tr,null,{default:I(()=>[A(d)]),_:1})),XP,f("div",KP,[f("div",ZP,[me(e.$slots,"logo",{},()=>[A(c,{to:"/",class:"sp-nav-link hide-on-small",alt:"Home",title:"Home"},{default:I(()=>[jP]),_:1})],!0),e2,(y(!0),_(G,null,Z(e.links,(p,u)=>(y(),F(c,{key:`link-${u}`,to:p.url,class:"sp-nav-link",alt:p.name,title:p.name},{default:I(()=>[f("div",{class:ie(p.url===e.activeRoute?"link-active":"")},E(p.name),3)]),_:2},1032,["to","alt","title"]))),128))]),t2,f("div",n2,[A(a)])])],64)}var o2=x(zP,[["render",i2],["__scopeId","data-v-2692eaba"]]);const s2=D({name:"SpTheme"});function r2(e,t,n,s,i,o){return me(e.$slots,"default")}var a2=x(s2,[["render",r2]]);const d2=D({name:"SpQrCode",props:{value:{type:String,default:""},width:{type:Number,default:100},background:{type:String,default:"#0000"},color:{type:String,default:"#000000ff"}},setup(e){let t=_e(null),n=()=>{const s={margin:0,width:e.width,color:{dark:e.color,light:e.background}};dv(t.value,e.value,s)};return tn(n),Kn(e,n),{canvas:t}}}),l2={ref:"canvas",class:"qr-code"};function u2(e,t,n,s,i,o){return y(),_("canvas",l2,[me(e.$slots,"default")],512)}var c2=x(d2,[["render",u2]]);var Wm;(function(e){e[e.FRESH=1]="FRESH",e[e.BOOTSTRAPED=2]="BOOTSTRAPED",e[e.WALLET_LOCKED=3]="WALLET_LOCKED",e[e.SEND=100]="SEND",e[e.SEND_ADD_TOKEN=101]="SEND_ADD_TOKEN",e[e.TX_SIGNING=300]="TX_SIGNING",e[e.TX_SUCCESS=301]="TX_SUCCESS",e[e.TX_ERROR=302]="TX_ERROR",e[e.RECEIVE=400]="RECEIVE"})(Wm||(Wm={}));let p2={tx:{receiver:"",ch:"",amount:[],memo:"",fees:[]},currentUIState:100,advancedOpen:!1};const f2=D({name:"SpTokenTransfer",components:{SpCard:Im,SpAmountSelect:Um,SpQrCode:c2,SpButton:Ue,SpClipboard:xm,SpSpinner:Eo},setup(){let e=ge(),t=pt(p2),{address:n}=Je({$s:e}),{balances:s}=Cm({$s:e}),i=L=>e.dispatch("cosmos.bank.v1beta1/sendMsgSend",L),o=L=>e.dispatch("ibc.applications.transfer.v1/sendMsgTransfer",L),d=()=>{t.currentUIState=100},c=()=>{n.value&&(t.currentUIState=400)},a=L=>L==""?0:parseInt(L),p=()=>{t.tx.amount=[],t.tx.receiver="",t.tx.memo="",t.tx.ch="",t.tx.fees=[],t.currentUIState=100},u=async()=>{t.currentUIState=300;let L=t.tx.fees.map(ct=>({denom:ct.amount.denom,amount:ct.amount.amount==""?"0":ct.amount.amount})),Rt=t.tx.amount.map(ct=>({denom:ct.amount.denom,amount:ct.amount.amount==""?"0":ct.amount.amount})),pm=t.tx.memo,K_=t.tx.ch!=="",Zs,Ts={amount:Rt,toAddress:t.tx.receiver,fromAddress:n.value};try{if(K_?(Ts=k(r({},Ts),{sourcePort:"transfer",sourceChannel:t.tx.ch,sender:n.value,receiver:t.tx.receiver,timeoutHeight:0,timeoutTimestamp:lv.fromNumber(new Date().getTime()+6e4).multiply(1e6),token:t.tx.amount[0]}),Zs=()=>o({value:Ts,fee:L,memo:pm})):Zs=()=>i({value:Ts,fee:L,memo:pm}),(await Zs()).code)throw new Error;t.currentUIState=301}catch(ct){console.error(ct),t.currentUIState=302}},g=()=>{t.tx.fees=[]},b=({selected:L})=>{t.tx.amount=L},N=({selected:L})=>{t.tx.fees=L},C=()=>{if(h.value){let L=s.value.assets[0];t.tx.amount[0]=k(r({},L),{amount:{amount:"",denom:L.amount.denom}})}},P=O(()=>t.currentUIState===100),T=O(()=>t.currentUIState===400),v=O(()=>t.currentUIState===3),h=O(()=>s.value.assets.length>0&&s.value.assets.some(L=>a(L.amount.amount)>0)),R=O(()=>t.currentUIState===300),w=O(()=>t.currentUIState===301),ut=O(()=>t.currentUIState===302),We=O(()=>t.tx.fees.every(L=>{let Rt=a(L.amount.amount);return!isNaN(Rt)&&Rt>0})),Ce=O(()=>t.tx.amount.length>0&&t.tx.amount.every(L=>{let Rt=a(L.amount.amount);return!isNaN(Rt)&&Rt>0})),fe=O(()=>{let L;try{L=!!Ro.Bech32.decode(t.tx.receiver)}catch{L=!1}return L}),Fe=O(()=>Ce.value&&fe.value&&We.value&&!!n.value);return Kn(()=>n.value,async()=>{p()}),Kn(()=>s.value.assets,async(L,Rt)=>{L.length>0&&Rt.length===0&&C()}),{state:t,address:n,showSend:P,showReceive:T,showWalletLocked:v,balances:s,hasAnyBalance:h,isTxOngoing:R,isTxSuccess:w,isTxError:ut,ableToTx:Fe,validReceiver:fe,switchToSend:d,switchToReceive:c,parseAmount:a,resetTx:p,sendTx:u,resetFees:g,handleTxAmountUpdate:b,handleTxFeesUpdate:N}}}),oe=e=>(ve("data-v-6373a72b"),e=e(),be(),e),m2={class:"tx"},h2={key:0,class:"feedback"},g2={class:"loading-spinner"},y2=m(),_2=oe(()=>f("div",{style:{width:"100%",height:"24px"}},null,-1)),v2=m(),b2=oe(()=>f("div",{class:"tx-ongoing-title"},"Opening Keplr",-1)),w2=m(),S2=oe(()=>f("div",{style:{width:"100%",height:"8px"}},null,-1)),k2=m(),P2=oe(()=>f("div",{class:"tx-ongoing-subtitle"},"Sign transaction...",-1)),C2={key:1,class:"feedback"},R2=nn('<div class="check-icon" data-v-6373a72b><svg width="64" height="63" viewBox="0 0 64 63" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-6373a72b><circle cx="32" cy="31.5" r="29.5" stroke="#00CF30" stroke-width="4" stroke-linecap="round" data-v-6373a72b></circle> <path d="M19 30.1362L28.6557 40L45 23" stroke="#00CF30" stroke-width="4" data-v-6373a72b></path></svg></div> <div style="width:100%;height:24px;" data-v-6373a72b></div> <div class="tx-feedback-title" data-v-6373a72b>Assets transferred</div> <div style="width:100%;height:8px;" data-v-6373a72b></div> ',8),E2=["index"],T2=m(),N2=oe(()=>f("div",{style:{width:"100%",height:"8px"}},null,-1)),A2=m(),O2={style:{width:"100%"}},q2=m("Done"),U2={key:2,class:"feedback"},$2=nn(`<div class="warning-icon" data-v-6373a72b><svg width="58" height="54" viewBox="0 0 58 54" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-6373a72b><path d="M29 44.5625C29.7249 44.5625 30.3125 43.9749 30.3125 43.25C30.3125 42.5251 29.7249 41.9375 29 41.9375C28.2751 41.9375 27.6875 42.5251 27.6875 43.25C27.6875 43.9749 28.2751 44.5625 29 44.5625Z" fill="#FE475F" data-v-6373a72b></path> <path d="M1.4375 52.4375L29 1.25L56.5625 52.4375H1.4375Z" stroke="#FE475F" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" data-v-6373a72b></path> <path d="M29 19.625V34.0625" stroke="#FE475F" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" data-v-6373a72b></path> <path d="M29 44.5625C29.7249 44.5625 30.3125 43.9749 30.3125 43.25C30.3125 42.5251 29.7249 41.9375 29 41.9375C28.2751 41.9375 27.6875 42.5251 27.6875 43.25C27.6875 43.9749 28.2751 44.5625 29 44.5625Z" stroke="#FE475F" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" data-v-6373a72b></path></svg></div> <div style="width:100%;height:24px;" data-v-6373a72b></div> <div class="tx-feedback-title" data-v-6373a72b>Something went wrong</div> <div style="width:100%;height:16px;" data-v-6373a72b></div> <div class="tx-feedback-subtitle" data-v-6373a72b>
        Your tokens could not be transferred and will remain on your wallet.
      </div> <div style="width:100%;height:24px;" data-v-6373a72b></div> `,12),I2={style:{width:"100%"}},x2=m("Try again"),D2=m(),Q2=oe(()=>f("div",{style:{width:"100%",height:"8px"}},null,-1)),M2=m(),B2=m("Cancel"),J2={key:3},G2=oe(()=>f("div",{class:"wallet-locked-wrapper"},"unlock your wallet",-1)),L2=[G2],V2={key:4},W2={class:"title-wrapper"},F2=m(),H2=oe(()=>f("div",{style:{width:"24px",height:"100%"}},null,-1)),z2=m(),Y2=m(),X2=oe(()=>f("div",{style:{width:"100%",height:"32px"}},null,-1)),K2=m(),Z2={key:0},j2={class:"enter-address-wrapper"},eC=oe(()=>f("div",{class:"input-label"},"Send to",-1)),tC=m(),nC={class:"input-wrapper"},iC=["disabled"],oC=m(),sC={key:0,class:"error-message"},rC=m(),aC=oe(()=>f("div",{style:{width:"100%",height:"21px"}},null,-1)),dC=m(),lC={key:0},uC=m(),cC=oe(()=>f("div",{style:{width:"100%",height:"34px"}},null,-1)),pC=m(),fC=m(`
          Advanced
          `),mC={key:0,width:"12",height:"8",viewBox:"0 0 12 8",fill:"none",xmlns:"http://www.w3.org/2000/svg",style:{"margin-left":"7px"}},hC=oe(()=>f("path",{d:"M5.99998 7.4L0.599976 2L1.99998 0.599998L5.99998 4.6L9.99998 0.599998L11.4 2L5.99998 7.4Z",fill:"black"},null,-1)),gC=[hC],yC={key:1,width:"12",height:"8",viewBox:"0 0 12 8",fill:"none",xmlns:"http://www.w3.org/2000/svg",style:{"margin-left":"7px"}},_C=oe(()=>f("path",{d:"M10.0001 7.4001L6.0001 3.4001L2.0001 7.4001L0.600098 6.0001L6.0001 0.600098L11.4001 6.0001L10.0001 7.4001Z",fill:"black"},null,-1)),vC=[_C],bC=m(),wC={key:1,style:{width:"100%",height:"24px"}},SC=m(),kC={key:2,class:"advanced"},PC=oe(()=>f("div",{class:"input-label"},"Fees",-1)),CC=m(),RC=oe(()=>f("div",{style:{width:"100%",height:"14px"}},null,-1)),EC=m(),TC=m(),NC=oe(()=>f("div",{style:{width:"100%",height:"35px"}},null,-1)),AC=m(),OC=oe(()=>f("div",{class:"input-label"},"Reference (memo)",-1)),qC=m(),UC={class:"input-wrapper"},$C=m(),IC=oe(()=>f("div",{style:{width:"100%",height:"16px"}},null,-1)),xC=m(),DC=oe(()=>f("div",{class:"input-label"},"Channel",-1)),QC=m(),MC={class:"input-wrapper"},BC=m(),JC=oe(()=>f("div",{style:{width:"100%",height:"24px"}},null,-1)),GC=m(),LC=m("Send"),VC={key:1},WC={class:"receive-wrapper"},FC={class:"qrcode-wrapper"},HC={class:"address-wrapper"},zC={class:"address"},YC=m(),XC={class:"copy"};function KC(e,t,n,s,i,o){const d=q("SpSpinner"),c=q("SpButton"),a=q("SpAmountSelect"),p=q("SpQrCode"),u=q("SpClipboard"),g=q("SpCard");return y(),_("div",m2,[e.isTxOngoing?(y(),_("div",h2,[f("div",g2,[A(d,{size:"46"})]),y2,_2,v2,b2,w2,S2,k2,P2])):e.isTxSuccess?(y(),_("div",C2,[R2,(y(!0),_(G,null,Z(e.state.tx.amount,(b,N)=>(y(),_("div",{key:"amount"+N,class:"tx-feedback-subtitle amount",index:N},E(e.parseAmount(b.amount.amount))+" "+E(b.amount.denom),9,E2))),128)),T2,N2,A2,f("div",O2,[A(c,{style:{width:"100%"},onClick:e.resetTx},{default:I(()=>[q2]),_:1},8,["onClick"])])])):e.isTxError?(y(),_("div",U2,[$2,f("div",I2,[A(c,{style:{width:"100%"},onClick:e.sendTx},{default:I(()=>[x2]),_:1},8,["onClick"]),D2,Q2,M2,A(c,{style:{width:"100%"},type:"secondary",onClick:e.resetTx},{default:I(()=>[B2]),_:1},8,["onClick"])])])):e.showWalletLocked?(y(),_("div",J2,L2)):(y(),_("div",V2,[f("div",W2,[f("div",{class:ie(["title",{active:e.showSend}]),onClick:t[0]||(t[0]=(...b)=>e.switchToSend&&e.switchToSend(...b))},`
          Send
        `,2),F2,H2,z2,f("div",{class:ie(["title",{active:e.showReceive,disabled:!e.hasAnyBalance}]),onClick:t[1]||(t[1]=(...b)=>e.switchToReceive&&e.switchToReceive(...b))},`
          Receive
        `,2)]),Y2,X2,K2,e.showSend?(y(),_("div",Z2,[f("div",j2,[eC,tC,f("div",nC,[qe(f("input",{"onUpdate:modelValue":t[2]||(t[2]=b=>e.state.tx.receiver=b),class:ie(["input",{error:e.state.tx.receiver.length>0&&!e.validReceiver}]),placeholder:"Recipient address",disabled:!e.hasAnyBalance},null,10,iC),[[He,e.state.tx.receiver]]),oC,e.state.tx.receiver.length>0&&!e.validReceiver?(y(),_("div",sC,`
              Invalid address
            `)):U("",!0)])]),rC,aC,dC,e.hasAnyBalance?(y(),_("div",lC,[A(a,{class:"token-selector--main",selected:e.state.tx.amount,balances:e.balances.assets,onUpdate:e.handleTxAmountUpdate},null,8,["selected","balances","onUpdate"]),uC,cC])):U("",!0),pC,f("div",{class:ie(["advanced-label",{"advanced-label--disabled":!e.hasAnyBalance}]),onClick:t[3]||(t[3]=b=>e.hasAnyBalance&&(e.state.advancedOpen=!e.state.advancedOpen))},[fC,e.hasAnyBalance?(y(),_(G,{key:0},[e.state.advancedOpen?(y(),_("svg",yC,vC)):(y(),_("svg",mC,gC))],64)):U("",!0)],2),bC,e.state.advancedOpen&&e.hasAnyBalance?(y(),_("div",wC)):U("",!0),SC,e.state.advancedOpen&&e.hasAnyBalance?(y(),_("div",kC,[PC,CC,RC,EC,A(a,{class:"token-selector",selected:e.state.tx.fees,balances:e.balances.assets,onUpdate:e.handleTxFeesUpdate},null,8,["selected","balances","onUpdate"]),TC,NC,AC,OC,qC,f("div",UC,[qe(f("input",{"onUpdate:modelValue":t[4]||(t[4]=b=>e.state.tx.memo=b),class:"input",placeholder:"Enter a reference"},null,512),[[He,e.state.tx.memo]])]),$C,IC,xC,DC,QC,f("div",MC,[qe(f("input",{"onUpdate:modelValue":t[5]||(t[5]=b=>e.state.tx.ch=b),class:"input",placeholder:"Enter a channel"},null,512),[[He,e.state.tx.ch]])])])):U("",!0),BC,JC,GC,f("div",null,[A(c,{style:{width:"100%"},disabled:!e.ableToTx,onClick:e.sendTx},{default:I(()=>[LC]),_:1},8,["disabled","onClick"])])])):e.showReceive?(y(),_("div",VC,[f("div",WC,[A(g,null,{top:I(()=>[f("div",FC,[A(p,{value:e.address,color:"#000",width:"112"},null,8,["value"])])]),bottom:I(()=>[f("div",HC,[f("div",zC,E(e.address),1),YC,f("div",XC,[A(u,{text:e.address},null,8,["text"])])])]),_:1})])])):U("",!0)]))])}var Fm=x(f2,[["render",KC],["__scopeId","data-v-6373a72b"]]);const ZC=D({name:"SpTokenTransferList",components:{SpGetTokenTransferList:Lm},setup(){let e=ge(),{address:t}=Je({$s:e});return{address:t}}}),qo=e=>(ve("data-v-4f377f7d"),e=e(),be(),e),jC={class:"tx-list"},eR=qo(()=>f("div",{class:"title"},"Transactions",-1)),tR=m(),nR=qo(()=>f("div",{class:"loading__col"},[f("span",{class:"loading__avatar"}),m(),f("span",{class:"loading__denom"})],-1)),iR=m(),oR=qo(()=>f("div",{class:"loading__col loading__col--justify-end"},[f("span",{class:"loading__amount"})],-1)),sR=[nR,iR,oR],rR={key:1,class:"tx-list"},aR=qo(()=>f("div",{class:"title"},"Transactions",-1)),dR=m(),lR=qo(()=>f("div",{class:"empty"},"Transaction history is empty",-1)),uR=[aR,dR,lR];function cR(e,t,n,s,i,o){const d=q("SpGetTokenTransferList");return e.address?(y(),F(tr,{key:0},{default:I(()=>[A(d)]),fallback:I(()=>[f("div",jC,[eR,tR,(y(),_(G,null,Z(4,c=>f("div",{key:c,class:"loading__row"},sR)),64))])]),_:1})):(y(),_("div",rR,uR))}var pR=x(ZC,[["render",cR],["__scopeId","data-v-4f377f7d"]]);const fR=D({name:"DysModal",components:{SpButton:Ue,SpTimesIcon:Am},props:{visible:{type:Boolean,defaultsTo:!1},title:{type:String,defaultsTo:null},submitButton:{type:Boolean,defaultsTo:!0},closeIcon:{type:Boolean,defaultsTo:!0},cancelButton:{type:Boolean,defaultsTo:!0}},watch:{visible:function(e){e?document.addEventListener("keyup",this.escapeHandler):document.removeEventListener("keyup",this.escapeHandler)}},methods:{escapeHandler(e){e.key==="Escape"&&this.$emit("close")}}}),mR={class:"modal-content"},hR={id:"modalTitle",class:"modal-header"},gR=m(),yR={id:"modalDescription",class:"modal-body"},_R=m(" Default body "),vR=m(),bR={class:"modal-footer"},wR=m(`
              Save changes
            `),SR=m(),kR=m(`
              Cancel
            `),PR=m(),CR=m(`
          Close
        `);function RR(e,t,n,s,i,o){const d=q("SpButton"),c=q("SpTimesIcon");return y(),_("div",{class:"modal-dialog",role:"dialog",tabindex:"0",onClick:t[3]||(t[3]=er(()=>{},["stop"]))},[f("div",mR,[f("header",hR,[me(e.$slots,"header",{},()=>[f("h3",null,E(e.title||"Default title"),1)])]),gR,f("section",yR,[me(e.$slots,"body",{},()=>[_R])]),vR,f("footer",bR,[me(e.$slots,"footer",{},()=>[e.submitButton?(y(),F(d,{key:0,"aria-label":"Submit",type:"primary",onClick:t[0]||(t[0]=a=>e.$emit("submit"))},{default:I(()=>[wR]),_:1})):U("",!0),SR,e.cancelButton?(y(),F(d,{key:1,"aria-label":"Close modal",type:"secondary",onClick:t[1]||(t[1]=a=>e.$emit("close"))},{default:I(()=>[kR]),_:1})):U("",!0)])]),PR,e.closeIcon?(y(),F(c,{key:0,class:"modal__close-icon",style:{position:"absolute",top:"26px",right:"20px",cursor:"pointer"},onClick:t[2]||(t[2]=a=>e.$emit("close"))},{default:I(()=>[CR]),_:1})):U("",!0)])])}var Hm=x(fR,[["render",RR]]);let ER={modalPage:"connect",connectWalletModal:!1,accountdropdown:!1,keplrParams:{name:"",bech32Address:""}};const TR=D({name:"DysAcc",components:{DysModal:Hm,SpButton:Ue,SpSpinner:Eo,SpProfileIcon:or,SpKeplrIcon:Nm,SpWarningIcon:Om,SpExternalArrowIcon:ir,SpChevronDownIcon:Tm},setup(){let e=ge(),t=pt(ER),{address:n,shortAddress:s}=Je({$s:e}),{copy:i}=sr(),{connectToKeplr:o,isKeplrAvailable:d,getOfflineSigner:c,getKeplrAccParams:a,listenToAccChange:p}=Sm({$s:e}),u=O(()=>e.getters["common/wallet/wallet"]),g=O(()=>e.getters["common/env/chainId"]),b=async v=>e.dispatch("common/wallet/connectWithKeplr",v),N=async()=>e.dispatch("common/wallet/signOut"),C=()=>{t.modalPage="connecting";let v=async()=>{let{name:R,bech32Address:w}=await a(g.value);t.keplrParams.name=R,t.keplrParams.bech32Address=w;let ut=c(g.value);b(ut),p(v),t.connectWalletModal=!1,t.modalPage="connect",$("#exampleModal").modal("hide")};o(v,()=>{t.modalPage="error"})},P=()=>{var v,h;return((v=u.value)==null?void 0:v.name)==="Keplr Integration"?((h=t.keplrParams)==null?void 0:h.name)+"":""},T=()=>{t.accountDropdown=!1,N()};return tn(async()=>{if(g.value)try{await C()}catch{console.warn("Keplr not connected")}}),{address:n,shortAddress:s,copy:i,isKeplrAvailable:d,tryToConnectToKeplr:C,disconnect:T,state:t,wallet:u,getAccName:P}}}),NR={key:0,class:"nav-item dropdown"},AR=m(),OR={key:0,class:"dropdown-menu show"},qR=m(),UR={key:1,class:"nav-item"},$R=m(),IR={class:"modal fade",id:"exampleModal",tabindex:"-1","aria-labelledby":"exampleModalLabel","aria-hidden":"true"},xR={key:0},DR={key:0},QR={key:1},MR={key:1},BR=f("div",{class:""},"Opening Keplr",-1),JR=m(),GR=f("h3",null,"Connecting",-1),LR=[BR,JR,GR],VR={key:2},WR=m(),FR=f("h3",null,"Keplr cannot launch",-1),HR={style:{"max-width":"320px","text-align":"center",margin:"auto"}},zR=m(),YR={key:0},XR={key:0},KR={key:1},ZR={key:1},jR={style:{"margin-top":"2rem"}},e3=m(),t3=m(`
              Cancel
            `),n3=m(),i3=f("div",{class:"",style:{"margin-top":"2rem"}},`
              Having trouble opening Keplr?
            `,-1),o3={key:2,style:{padding:"20px 0"}},s3={class:""},r3=f("span",null,"Keplr troubleshooting",-1),a3=m(),d3={key:0},l3=m(`
            Connect Keplr
          `),u3=m(),c3={key:1,style:{gap:"10px",display:"flex","justify-content":"center"}},p3=m(`
            Cancel
          `),f3=m(),m3=m(`
            Try again
          `);function h3(e,t,n,s,i,o){const d=q("SpWarningIcon"),c=q("SpKeplrIcon"),a=q("SpSpinner"),p=q("SpButton"),u=q("SpExternalArrowIcon"),g=q("DysModal");return y(),_(G,null,[e.wallet?(y(),_("div",NR,[f("a",{class:"nav-link dropdown",onClick:t[0]||(t[0]=b=>e.state.accountDropdown=!e.state.accountDropdown),role:"button"},`
      Wallet: `+E(e.getAccName()),1),AR,e.state.accountDropdown?(y(),_("ul",OR,[f("li",null,[f("button",{class:"dropdown-item",onClick:t[1]||(t[1]=b=>e.copy(e.address))},`
          Copy `+E(e.shortAddress),1)]),qR,f("li",null,[f("button",{class:"dropdown-item",onClick:t[2]||(t[2]=(...b)=>e.disconnect&&e.disconnect(...b))},"Disconnect")])])):U("",!0)])):(y(),_("div",UR,[f("a",{class:"nav-link",href:"#",onClick:t[3]||(t[3]=b=>e.state.connectWalletModal=!0),"data-toggle":"modal","data-target":"#exampleModal"},"Connect with Keplr")])),$R,f("div",IR,[A(g,{visible:e.state.connectWalletModal,"close-icon":!1,"cancel-button":!1,"submit-button":!1,style:{"text-align":"center"}},ym({header:I(()=>[e.state.modalPage==="connect"?(y(),_("div",xR,[e.isKeplrAvailable?(y(),_("h3",DR,"Connect your wallet")):(y(),_("h3",QR,"Install Keplr"))])):e.state.modalPage==="connecting"?(y(),_("div",MR,LR)):e.state.modalPage==="error"?(y(),_("div",VR,[A(d,{style:{"margin-bottom":"20px"}}),WR,FR])):U("",!0)]),body:I(()=>[f("div",HR,[A(c),zR,e.state.modalPage==="connect"?(y(),_("div",YR,[e.isKeplrAvailable?(y(),_("p",XR,`
              Connect your Keplr wallet via the Keplr browser extension to use
              this app.
            `)):(y(),_("p",KR,`
              Install & connect your Keplr wallet via the Keplr browser
              extension to use this app.
            `))])):e.state.modalPage==="connecting"?(y(),_("div",ZR,[f("div",jR,[A(a)]),e3,A(p,{"aria-label":"Cancel",type:"secondary",style:{"margin-top":"3rem"},onClick:t[4]||(t[4]=b=>e.state.modalPage="connect")},{default:I(()=>[t3]),_:1}),n3,i3])):e.state.modalPage==="error"?(y(),_("div",o3,[f("div",s3,[r3,a3,A(u,{style:{"margin-left":"0.5rem"}})])])):U("",!0)])]),_:2},[e.isKeplrAvailable?{name:"footer",fn:I(()=>[e.state.modalPage==="connect"?(y(),_("div",d3,[A(p,{"aria-label":"Connect Keplr",type:"primary",onClick:e.tryToConnectToKeplr},{default:I(()=>[l3]),_:1},8,["onClick"])])):U("",!0),u3,e.state.modalPage==="error"?(y(),_("div",c3,[A(p,{"aria-label":"Connect Keplr",type:"secondary",onClick:t[5]||(t[5]=b=>e.state.connectWalletModal=!1)},{default:I(()=>[p3]),_:1}),f3,A(p,{"aria-label":"Connect Keplr",type:"primary",onClick:t[6]||(t[6]=b=>e.state.modalPage="connect")},{default:I(()=>[m3]),_:1})])):U("",!0)])}:void 0]),1032,["visible"])])],64)}var g3=x(TR,[["render",h3]]);const y3=D({name:"DysDropdown",components:{},props:{},setup(){let e=_e(!1),t=_e(null);const n=s=>{var i;((i=t.value)==null?void 0:i.contains(s.target))||(e.value=!1)};return tn(()=>{document.addEventListener("click",n)}),js(()=>{document.removeEventListener("click",n)}),{visible:e,buttonEl:t}}}),_3={style:{}},v3=m(),b3={key:0,class:""};function w3(e,t,n,s,i,o){return y(),_("div",_3,[f("div",{ref:"buttonEl",class:"",onClick:t[0]||(t[0]=d=>e.visible=!0)},[me(e.$slots,"button")],512),v3,A(As,{name:"dropdown-fade"},{default:I(()=>[e.visible?(y(),_("div",b3,[me(e.$slots,"dropdown")])):U("",!0)]),_:3})])}var S3=x(y3,[["render",w3]]);var zm;(function(e){e.self="Self",e.in="Receive",e.out="Send"})(zm||(zm={}));var Ym;(function(e){e.self="self",e.in="from",e.out="to"})(Ym||(Ym={}));var Xm;(function(e){e.self="",e.in="+",e.out="-"})(Xm||(Xm={}));const k3=D({name:"DysTokenTransferListItem",props:{tx:{type:Object,required:!0}},components:{SpDenom:Os},setup(e){return{txDate:O(()=>new Date(e.tx.timestamp).toLocaleString("en-US",{month:"long",day:"numeric",hour:"numeric",minute:"numeric"}))}}}),Km=e=>(ve("data-v-7a1c64df"),e=e(),be(),e),P3={class:"tx-row"},C3={class:"tx-container"},R3=Km(()=>f("svg",{width:"16",height:"16",viewBox:"0 0 16 16",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{d:"M8 13V3",stroke:"black","stroke-width":"1.6","stroke-miterlimit":"10","stroke-linecap":"round","stroke-linejoin":"round"}),m(),f("path",{d:"M4 6L8 2L12 6",stroke:"black","stroke-width":"1.6","stroke-miterlimit":"10","stroke-linecap":"round","stroke-linejoin":"round"})],-1)),E3=[R3],T3=m(),N3=Km(()=>f("div",{style:{width:"16px",height:"100%"}},null,-1)),A3=m(),O3={class:"tx-info"},q3={class:"tx-direction"},U3=m(),$3={class:"tx-meta"},I3=m(),x3={class:"tx-payload"},D3=m(),Q3={class:"tx-denom"};function M3(e,t,n,s,i,o){var c,a;const d=q("SpDenom");return y(),_("div",P3,[f("div",C3,[f("div",{class:ie(["tx-icon",(c=e.tx)==null?void 0:c.dir])},E3,2),T3,N3,A3,f("div",O3,[f("div",q3,E(e.dirDescription),1),U3,f("div",$3,E(e.txDate),1)]),I3,f("div",x3,[((a=e.tx.amount)==null?void 0:a.length)?(y(!0),_(G,{key:0},Z(e.tx.amount,(p,u)=>{var g;return y(),_("span",{key:`${p.amount}-${p.denom}-${u}`,class:ie(["tx-amount",(g=e.tx)==null?void 0:g.dir])},[m(E(e.amountSign+" "+p.amount)+" ",1),A(d,{denom:p.denom},null,8,["denom"])],2)}),128)):(y(),_(G,{key:1},[m(E(e.tx),1)],64)),D3,f("div",Q3,E(e.addrDesc+" "+e.shortAddr),1)])])])}var B3=x(k3,[["render",M3],["__scopeId","data-v-7a1c64df"]]);let J3={listSize:10,listMaxSize:15,isNewTxLoading:!1};const G3=D({name:"DysGetTokenTransferList",components:{SpSpinner:Eo,DysTokenTransferListItem:B3},async setup(){let e=ge(),t=pt(J3),{address:n}=Je({$s:e}),{pager:s,normalize:i,newTxs:o,filterSupportedTypes:d}=await Rm({$s:e,opts:{order:"desc",realTime:!0}}),c=O(()=>s.value.page.value.slice(0,t.listSize).sort((T,v)=>v.height-T.height)),a=O(()=>C("timestamp")(c.value)),p=O(()=>t.listSize<t.listMaxSize&&s.value.page.value.length>t.listSize),u=O(()=>`${o.value} new ${o.value>1?"items":"item"}`),g=async()=>{t.isNewTxLoading=!0,await s.value.load(),t.isNewTxLoading=!!o.value},b=()=>{t.listSize=t.listMaxSize},N=T=>new Date(T).toLocaleString("en-US",{year:"numeric",month:"long"}),C=T=>v=>v.reduce((h,R)=>{const w=N(R[T]);return h[w]=(h[w]||[]).concat(R),h},{});return{newTxs:o,address:n,list:c,leftToShowMore:p,showMoreText:u,loadNewItems:g,showMoreItems:b,txByMonth:a,getTxMonth:N,getMonthGroup:T=>{const v=new Date().getFullYear();return Number(T.replace(/\D/g,""))<v?T:T.replace(/[0-9]/g,"")},state:t}}}),Zm=e=>(ve("data-v-59d69b02"),e=e(),be(),e),L3={class:"tx-list"},V3=Zm(()=>f("div",{class:"title"},"Transactions",-1)),W3=m(),F3=m(),H3={key:1,class:"empty"},z3={key:2,class:"list"},Y3=["textContent"],X3=m(),K3={class:"list-group"},Z3={key:0},j3={key:1},eE={key:2},tE=m(),nE=m(`
      Show more
      `),iE=Zm(()=>f("span",{class:"arrow-icon"},[f("svg",{width:"12",height:"8",viewBox:"0 0 12 8",fill:"none",xmlns:"http://www.w3.org/2000/svg"},[f("path",{d:"M6.0001 7.4001L0.600098 2.0001L2.0001 0.600098L6.0001 4.6001L10.0001 0.600098L11.4001 2.0001L6.0001 7.4001Z",fill:"black"})])],-1)),oE=[nE,iE];function sE(e,t,n,s,i,o){const d=q("SpSpinner");return y(),_("div",L3,[V3,W3,e.newTxs?(y(),_("div",{key:0,class:"load-more",role:"button",onClick:t[0]||(t[0]=(...c)=>e.loadNewItems&&e.loadNewItems(...c))},[e.state.isNewTxLoading?(y(),F(d,{key:0,size:16})):(y(),_(G,{key:1},[m(E(e.showMoreText),1)],64))])):U("",!0),F3,!e.address||Object.keys(e.txByMonth).length<=0?(y(),_("div",H3,`
      Transaction history is empty
    `)):Object.keys(e.txByMonth).length>0?(y(),_("div",z3,[(y(!0),_(G,null,Z(e.txByMonth,(c,a,p)=>(y(),_("div",{key:`${p}`},[f("h3",{class:"tx-list__subheading",textContent:E(e.getMonthGroup(a))},null,8,Y3),X3,f("div",K3,[(y(!0),_(G,null,Z(c,(u,g)=>(y(),_("div",{key:u.hash,class:"list-group-item"},[m(E(u.height)+" - "+E(u.timestamp)+" ",1),u.body.messages[0]["@type"]=="/dyson.MsgRun"?(y(),_("div",Z3,[m(E(u.body.messages[0]["@type"])+" ",1),f("pre",null,"Msg creator: "+E(u.body.messages[0].creator)+`
Script Address: `+E(u.body.messages[0].address)+`
Function name: `+E(u.body.messages[0].function_name)+`
kwargs: `+E(u.body.messages[0].kwargs),1)])):u.body.messages[0]["@type"]=="/dyson.MsgUpdateScript"?(y(),_("div",j3,E(u.body.messages[0]["@type"]),1)):(y(),_("pre",eE,E(JSON.stringify(k(r({},u.body.messages[0]),{height:u.height,timestamp:u.timestamp,hash:u.hash,raw_log:u.logs.length>0?null:u.raw_log}),null,2)),1))]))),128))])]))),128))])):U("",!0),tE,e.leftToShowMore?(y(),_("div",{key:3,class:"show-more",role:"button",onClick:t[1]||(t[1]=(...c)=>e.showMoreItems&&e.showMoreItems(...c))},oE)):U("",!0)])}var jm=x(G3,[["render",sE],["__scopeId","data-v-59d69b02"]]);const rE=D({name:"DysTokenTransferList",components:{DysGetTokenTransferList:jm},setup(){let e=ge(),{address:t}=Je({$s:e});return{address:t}}}),Uo=e=>(ve("data-v-e0e98da0"),e=e(),be(),e),aE={class:"tx-list"},dE=Uo(()=>f("div",{class:"title"},"Transactions",-1)),lE=m(),uE=Uo(()=>f("div",{class:"loading__col"},[f("span",{class:"loading__avatar"}),m(),f("span",{class:"loading__denom"})],-1)),cE=m(),pE=Uo(()=>f("div",{class:"loading__col loading__col--justify-end"},[f("span",{class:"loading__amount"})],-1)),fE=[uE,cE,pE],mE={key:1,class:"tx-list"},hE=Uo(()=>f("div",{class:"title"},"Transactions",-1)),gE=m(),yE=Uo(()=>f("div",{class:"empty"},"Transaction history is empty",-1)),_E=[hE,gE,yE];function vE(e,t,n,s,i,o){const d=q("DysGetTokenTransferList");return e.address?(y(),F(tr,{key:0},{default:I(()=>[A(d)]),fallback:I(()=>[f("div",aE,[dE,lE,(y(),_(G,null,Z(4,c=>f("div",{key:c,class:"loading__row"},fE)),64))])]),_:1})):(y(),_("div",mE,_E))}var eh=x(rE,[["render",vE],["__scopeId","data-v-e0e98da0"]]),th=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",SpAcc:qm,SpAmountSelect:Um,SpAssets:$m,SpButton:Ue,SpCardNew:Im,SpClipboard:xm,SpCrud:lP,SpCrudCreate:Dm,SpCrudDelete:Qm,SpCrudRead:Mm,SpCrudUpdate:Bm,SpDropdown:Ao,SpGetTokenTransferList:Lm,SpLinkIcon:km,SpModal:Bt,SpNavbar:o2,SpSpacer:Oo,SpSystemBar:Vm,SpTheme:a2,SpTokenTransfer:Fm,SpTokenTransferList:pR,SpTypography:Zn,DysAcc:g3,DysDropdown:S3,DysModal:Hm,DysGetTokenTransferList:jm,DysTokenTransferList:eh});globalThis.Buffer=vm.Buffer;const bE=e=>{for(const t in th)kv(e,th[t])};const wE={components:{},setup(){let e=ge(),t=uv(),n=O(()=>e.getters["common/wallet/address"]),s=O(()=>e.getters["common/env/chainId"]),i=O(()=>e.getters["common/env/apiConnected"]),o=O(()=>e.getters["common/env/rpcConnected"]),d=O(()=>e.getters["common/env/wsConnected"]),c=O(()=>e.getters["common/env/apiCosmos"]);return gm(async()=>{await e.dispatch("common/env/init")}),{router:t,address:n,chainId:s,apiConnected:i,rpcConnected:o,wsConnected:d,apiCosmos:c}}},SE={class:"container-fluid"},kE={class:"navbar navbar-expand-md navbar-light bg-light"},PE=m("Dyson Protocol "),CE=m(),RE=f("button",{class:"navbar-toggler",type:"button","data-toggle":"collapse","data-target":"#navbarNav","aria-controls":"navbarNav","aria-expanded":"false","aria-label":"Toggle navigation"},[f("span",{class:"navbar-toggler-icon"})],-1),EE=m(),TE={class:"collapse navbar-collapse",id:"navbarNav"},NE={class:"navbar-nav"},AE={class:"nav-item"},OE=m("Commands"),qE=m(),UE={class:"nav-item"},$E=m("Documentation"),IE=m(),xE={class:"nav-item"},DE=["href"],QE=m(),ME={class:"nav-item"},BE=m(`
              My script
            `),JE={key:1,class:"nav-link disabled"},GE=m(),LE=m();function VE(e,t,n,s,i,o){const d=q("router-link"),c=q("DysAcc"),a=q("router-view");return y(),_("div",SE,[f("nav",kE,[A(d,{class:"navbar-brand",to:"/"},{default:I(()=>[PE]),_:1}),CE,RE,EE,f("div",TE,[f("ul",NE,[f("li",AE,[A(d,{class:"nav-link","active-class":"active",to:"/commands"},{default:I(()=>[OE]),_:1})]),qE,f("li",UE,[A(d,{class:"nav-link","active-class":"active",to:"/docs"},{default:I(()=>[$E]),_:1})]),IE,f("li",xE,[f("a",{class:"nav-link","active-class":"active",href:s.apiCosmos,target:"_blank"},`
            API 
            `,8,DE)]),QE,f("li",ME,[s.address?(y(),F(d,{key:0,"active-class":"active",class:"nav-link",to:{name:"script-detail",params:{script_address:s.address}}},{default:I(()=>[BE]),_:1},8,["to"])):(y(),_("a",JE,"My script"))]),GE,A(c)])])]),LE,A(a)])}var WE=x(wE,[["render",VE]]);const FE={name:"Portfolio",components:{SpTokenTransfer:Fm,SpAssets:$m,DysTokenTransferList:eh},setup(){let e=ge();return{address:O(()=>e.getters["common/wallet/address"])}}},HE={class:"container-fluid"},zE={class:"row row-sm"},YE={class:"col-12 col-md-4"},XE=m(),KE={class:"col-12 col-md-8"};function ZE(e,t,n,s,i,o){const d=q("SpAssets"),c=q("DysTokenTransferList");return y(),_("div",HE,[f("div",zE,[f("div",YE,[A(d)]),XE,f("div",KE,[(y(),F(c,{key:s.address}))])])])}var nh=x(FE,[["render",ZE],["__scopeId","data-v-cb8d3e0e"]]);const jE={docstring:"Base class for arithmetic errors.",init_definition:"(self, *args)",isclass:!0},eT={docstring:"Assertion failed.",init_definition:"(self, *args)",isclass:!0},tT={docstring:"Attribute not found.",init_definition:"(self, *args, obj=None, name=None)",isclass:!0},nT={docstring:"Common base class for all non-exit exceptions.",init_definition:"(self, *args)",isclass:!0},iT={docstring:"Floating point operation failed.",init_definition:"(self, *args)",isclass:!0},oT={docstring:"Import can't find module, or can't find name in module.",init_definition:"(self, *args, name=None, path=None)",isclass:!0},sT={docstring:"Sequence index out of range.",init_definition:"(self, *args)",isclass:!0},rT={docstring:"Mapping key not found.",init_definition:"(self, *args)",isclass:!0},aT={docstring:"Base class for lookup errors.",init_definition:"(self, *args)",isclass:!0},dT={docstring:"Out of memory.",init_definition:"(self, *args)",isclass:!0},lT={docstring:"Module not found.",init_definition:"(self, *args, name=None, path=None)",isclass:!0},uT={docstring:"Name not found globally.",init_definition:"(self, *args, name=None)",isclass:!0},cT={docstring:"Method or function hasn't been implemented yet.",init_definition:"(self, *args)",isclass:!0},pT={docstring:"Result too large to be represented.",init_definition:"(self, *args)",isclass:!0},fT={docstring:"Not enough permissions.",init_definition:"(self, *args, **keywords)",isclass:!0},mT={docstring:"Recursion limit exceeded.",init_definition:"(self, *args)",isclass:!0},hT={docstring:"Local name referenced but not bound to a value.",init_definition:"(self, *args, name=None)",isclass:!0},gT={docstring:"Unicode decoding error.",init_definition:"(self, encoding, object, start, end, reason)",isclass:!0},yT={docstring:"Unicode encoding error.",init_definition:"(self, encoding, object, start, end, reason)",isclass:!0},_T={docstring:"Unicode related error.",init_definition:"(self, *args)",isclass:!0},vT={docstring:"Unicode translation error.",init_definition:"(self, object, start, end, reason)",isclass:!0},bT={docstring:"Inappropriate argument value (of correct type).",init_definition:"(self, *args)",isclass:!0},wT={docstring:"Second argument to a division or modulo operation was zero.",init_definition:"(self, *args)",isclass:!0},ST={definition:"(val)",docstring:`abs(number) -> number

Return the absolute value of the argument.`},kT={definition:"(seq)",docstring:`all(iterable) -> bool

Return True if bool(x) is True for all values x in the iterable.`},PT={definition:"(seq)",docstring:`any(iterable) -> bool

Return True if bool(x) is True for any x in the iterable.`},CT={docstring:`bool(x) -> bool

Returns True when the argument x is true, False otherwise.
The builtins True and False are the only two instances of the class bool.
The class bool is a subclass of the class int, and cannot be subclassed.`,init_definition:"(obj, *args, **keywords)",isclass:!0},RT={docstring:`dict() -> new empty dictionary.
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs.
dict(seq) -> new dictionary initialized as if via:
    d = {}
    for k, v in seq:
        d[k] = v
dict(**kwargs) -> new dictionary initialized with the name=value pairs
    in the keyword argument list.  For example:  dict(one=1, two=2)`,init_definition:"(self, *args, **keywords)",isclass:!0},ET={docstring:"<no docstring>",init_definition:"(obj, *args, **keywords)",isclass:!0},TT={docstring:`float(x) -> floating point number

Convert a string or number to a floating point number, if possible.`,init_definition:"(obj, *args, **keywords)",isclass:!0},NT={definition:"(x)",docstring:`Return the hexadecimal representation of an integer.

>>> hex(12648430)
'0xc0ffee'`},AT={docstring:`int([x]) -> integer
int(x, base=10) -> integer

Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.__int__().  For floating point
numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by '+' or '-' and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.
>>> int('0b100', base=0)
4`,init_definition:"(obj, *args, **keywords)",isclass:!0},OT={definition:"(obj, klass_or_tuple)",docstring:`Check whether an object is an instance of a class (or of a subclass
thereof).  When using a tuple as the second argument, check whether 'obj'
is an instance of any of the classes listed in the tuple.`},qT={definition:"(cls, klass_or_tuple)",docstring:`Check whether a class 'cls' is a subclass (i.e., a derived class) of
another class.  When using a tuple as the second argument, check whether
'cls' is a subclass of any of the classes listed in the tuple.`},UT={definition:"(collection_or_callable, sentinel=<no value>)",docstring:`iter(collection) -> iterator over the elements of the collection.

iter(callable, sentinel) -> iterator calling callable() until it returns
                            the sentinel.`},$T={definition:"(obj)",docstring:`len(object) -> integer

Return the number of items of a sequence or mapping.`},IT={docstring:`list() -> new empty list
list(iterable) -> new list initialized from iterable's items`,init_definition:"(self, *args, **keywords)",init_docstring:"Initialize self.  See help(type(self)) for accurate signature.",isclass:!0},xT={definition:"(*args, **keywords)",docstring:`max(iterable, *[, default=obj, key=func]) -> value
max(arg1, arg2, *args, *[, key=func]) -> value

With a single iterable argument, return its biggest item. The
default keyword-only argument specifies an object to return if
the provided iterable is empty.
With two or more arguments, return the largest argument.
    `},DT={definition:"(*args, **keywords)",docstring:`min(iterable, *[, default=obj, key=func]) -> value
min(arg1, arg2, *args, *[, key=func]) -> value

With a single iterable argument, return its smallest item. The
default keyword-only argument specifies an object to return if
the provided iterable is empty.
With two or more arguments, return the smallest argument.
    `},QT={definition:"(*args, sep=' ', end='\\n', file=None, flush=False)",docstring:`print(value, ..., sep=' ', end='\\n', file=sys.stdout, flush=False)

Prints the values to a stream, or to sys.stdout by default.
Optional keyword arguments:
file:  a file-like object (stream); defaults to the current sys.stdout.
sep:   string inserted between values, default a space.
end:   string appended after the last value, default a newline.
flush: whether to forcibly flush the stream.`},MT={docstring:"<no docstring>",init_definition:"(obj, *args, **keywords)",isclass:!0},BT={definition:"(number, ndigits=<no value>)",docstring:`round(number[, ndigits]) -> number

Round a number to a given precision in decimal digits (default 0 digits).
This returns an int when called with one argument or if ndigits=None,
otherwise the same type as the number. ndigits may be negative.`},JT={docstring:`set(iterable) --> set object

Build an unordered collection.`,init_definition:"(self, *args, **keywords)",isclass:!0},GT={definition:"(iterable, /, *, key=None, reverse=False)",docstring:"sorted(iterable, key=None, reverse=False) --> new sorted list"},LT={docstring:`str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.`,init_definition:"(obj, *args, **keywords)",isclass:!0},VT={definition:"(sequence, start=0)",docstring:`sum(sequence[, start]) -> value

Returns the sum of a sequence of numbers (NOT strings) plus the value
of parameter 'start' (which defaults to 0).  When the sequence is
empty, returns start.`},WT={docstring:`tuple() -> an empty tuple
tuple(sequence) -> tuple initialized from sequence's items

If the argument is a tuple, the return value is the same object.`,init_definition:"(obj, *args, **keywords)",isclass:!0};var FT={ArithmeticError:jE,AssertionError:eT,AttributeError:tT,Exception:nT,FloatingPointError:iT,ImportError:oT,IndexError:sT,KeyError:rT,LookupError:aT,MemoryError:dT,ModuleNotFoundError:lT,NameError:uT,NotImplementedError:cT,OverflowError:pT,PermissionError:fT,RecursionError:mT,SyntaxError:{docstring:"Invalid syntax.",init_definition:"(self, *args)",isclass:!0},TypeError:{docstring:"Inappropriate argument type.",init_definition:"(self, *args)",isclass:!0},UnboundLocalError:hT,UnicodeDecodeError:gT,UnicodeEncodeError:yT,UnicodeError:_T,UnicodeTranslateError:vT,ValueError:bT,ZeroDivisionError:wT,abs:ST,all:kT,any:PT,"base64.b64decode":{definition:"(s, altchars=None, validate=False)",docstring:`Decode the Base64 encoded bytes-like object or ASCII string s.

Optional altchars must be a bytes-like object or ASCII string of length 2
which specifies the alternative alphabet used instead of the '+' and '/'
characters.

The result is returned as a bytes object.  A binascii.Error is raised if
s is incorrectly padded.

If validate is False (the default), characters that are neither in the
normal base-64 alphabet nor the alternative alphabet are discarded prior
to the padding check.  If validate is True, these non-alphabet characters
in the input result in a binascii.Error.`},"base64.b64encode":{definition:"(s, altchars=None)",docstring:`Encode the bytes-like object s using Base64 and return a bytes object.

Optional altchars should be a byte string of length 2 which specifies an
alternative alphabet for the '+' and '/' characters.  This allows an
application to e.g. generate url or filesystem safe Base64 strings.`},"base64.decodebytes":{definition:"(s)",docstring:"Decode a bytestring of base-64 data into a bytes object."},"base64.encodebytes":{definition:"(s)",docstring:`Encode a bytestring into a bytes object containing multiple lines
of base-64 data.`},"base64.urlsafe_b64decode":{definition:"(s)",docstring:`Decode bytes using the URL- and filesystem-safe Base64 alphabet.

Argument s is a bytes-like object or ASCII string to decode.  The result
is returned as a bytes object.  A binascii.Error is raised if the input
is incorrectly padded.  Characters that are not in the URL-safe base-64
alphabet, and are not a plus '+' or slash '/', are discarded prior to the
padding check.

The alphabet uses '-' instead of '+' and '_' instead of '/'.`},"base64.urlsafe_b64encode":{definition:"(s)",docstring:`Encode bytes using the URL- and filesystem-safe Base64 alphabet.

Argument s is a bytes-like object to encode.  The result is returned as a
bytes object.  The alphabet uses '-' instead of '+' and '_' instead of
'/'.`},bool:CT,"datetime.date":{docstring:`Concrete date type.

Constructors:

__new__()
fromtimestamp()
today()
fromordinal()

Operators:

__repr__, __str__
__eq__, __le__, __lt__, __ge__, __gt__, __hash__
__add__, __radd__, __sub__ (add/radd only with timedelta arg)

Methods:

timetuple()
toordinal()
weekday()
isoweekday(), isocalendar(), isoformat()
ctime()
strftime()

Properties (readonly):
year, month, day`,init_definition:"(year, month=None, day=None)",isclass:!0},"datetime.datetime":{docstring:`datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])

The year, month and day arguments are required. tzinfo may be None, or an
instance of a tzinfo subclass. The remaining arguments may be ints.`,init_definition:`(
    year,
    month=None,
    day=None,
    hour=0,
    minute=0,
    second=0,
    microsecond=0,
    tzinfo=None,
    *,
    fold=0,
)`,isclass:!0},"datetime.datetime.isoformat":{definition:"(self, sep='T', timespec='auto')",docstring:`Return the time formatted according to ISO.

The full format looks like 'YYYY-MM-DD HH:MM:SS.mmmmmm'.
By default, the fractional part is omitted if self.microsecond == 0.

If self.tzinfo is not None, the UTC offset is also attached, giving
giving a full format of 'YYYY-MM-DD HH:MM:SS.mmmmmm+HH:MM'.

Optional argument sep specifies the separator between date and
time, default 'T'.

The optional argument timespec specifies the number of additional
terms of the time to include. Valid options are 'auto', 'hours',
'minutes', 'seconds', 'milliseconds' and 'microseconds'.`},"datetime.datetime.now":{definition:"(tz=None)",docstring:"Construct a datetime from time.time() and optional time zone info."},"datetime.datetime.timestamp":{definition:"(self)",docstring:"Return POSIX timestamp as float"},"datetime.time":{docstring:`Time with time zone.

Constructors:

__new__()

Operators:

__repr__, __str__
__eq__, __le__, __lt__, __ge__, __gt__, __hash__

Methods:

strftime()
isoformat()
utcoffset()
tzname()
dst()

Properties (readonly):
hour, minute, second, microsecond, tzinfo, fold`,init_definition:"(hour=0, minute=0, second=0, microsecond=0, tzinfo=None, *, fold=0)",isclass:!0},"datetime.timedelta":{docstring:`Represent the difference between two datetime objects.

Supported operators:

- add, subtract timedelta
- unary plus, minus, abs
- compare to timedelta
- multiply, divide by int

In addition, datetime supports subtraction of two datetime objects
returning a timedelta, and addition or subtraction of a datetime
and a timedelta giving a datetime.

Representation: (days, seconds, microseconds).  Why?  Because I
felt like it.`,init_definition:`(
    days=0,
    seconds=0,
    microseconds=0,
    milliseconds=0,
    minutes=0,
    hours=0,
    weeks=0,
)`,isclass:!0},"datetime.timezone":{docstring:`Abstract base class for time zone info classes.

Subclasses must override the name(), utcoffset() and dst() methods.`,init_definition:"(offset, name=<object object at 0x234567>)",isclass:!0},"datetime.tzinfo":{docstring:`Abstract base class for time zone info classes.

Subclasses must override the name(), utcoffset() and dst() methods.`,init_definition:"(*args, **kwds)",isclass:!0},"decimal.Decimal":{docstring:"Floating point class for decimal arithmetic.",init_definition:"(value='0', context=None)",isclass:!0},dict:RT,"dict.clear":{definition:"(self)",docstring:"D.clear() -> None.  Remove all items from D."},"dict.copy":{definition:"(self)",docstring:"D.copy() -> a shallow copy of D"},"dict.fromkeys":{definition:"(iterable, value=<no value>)",docstring:"<no docstring>"},"dict.get":{definition:"(self, key, default=None)",docstring:"D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None."},"dict.items":{definition:"(self)",docstring:"D.items() -> a set-like object providing a view on D's items"},"dict.keys":{definition:"(self)",docstring:"D.keys() -> a set-like object providing a view on D's keys"},"dict.pop":{definition:"(self, key, default=<no value>)",docstring:`D.pop(k[,d]) -> v, remove specified key and return the
        corresponding value
If key is not found, d is returned if given,
        otherwise KeyError is raised
        `},"dict.popitem":{definition:"(self)",docstring:`D.popitem() -> (k, v), remove and return some (key, value) pair as
        a
2-tuple; but raise KeyError if D is empty`},"dict.setdefault":{definition:"(self, key, default=None)",docstring:"D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D"},"dict.update":{definition:"(self, *args, **keywords)",docstring:`D.update(E, **F) -> None.  Update D from E and F: for k in E: D[k]
        = E[k]
(if E has keys else: for (k, v) in E: D[k] = v) then: for k in
        F: D[k] = F[k]`},"dict.values":{definition:"(self)",docstring:"D.values() -> an object providing a view on D's values"},"dys._chain":{definition:"(method, **params)",docstring:`The main way to interact with the chain from a script.

:param method: the command to call on the chain, see TxBuilder for a list of possible commands
\`**kwargs\` will depend on the command being called

:returns: the response of the command or error`},"dys.get_block_info":{definition:"() -> dict",docstring:"Returns a dictionary of the current block info"},"dys.get_caller":{definition:"() -> str",docstring:"Returns the address of the caller of this script."},"dys.get_coins_sent":{definition:"()",docstring:`Returns the coins sent to this function.
This is not the gas or gas fees.`},"dys.get_cumulative_size":{definition:"()",docstring:"The cumulative size of memory used for each node called in this query or script"},"dys.get_gas_consumed":{definition:"()",docstring:"The total amount of gas consumed so far."},"dys.get_gas_limit":{definition:"()",docstring:"The maximum amount of gas that can be used in this query or transaction"},"dys.get_nodes_called":{definition:"()",docstring:"The number of Python AST nodes evaluated in this query or transaction"},"dys.get_script_address":{definition:"() -> str",docstring:"Returns the address of this current script."},"dys.rpc":{definition:"(method, **params)",docstring:`Depricated
see: dyson._chain`},enumerate:ET,float:TT,"hashlib.sha1":{definition:"(string=b'', usedforsecurity=True)",docstring:"<no docstring>"},"hashlib.sha256":{definition:"(string=b'', usedforsecurity=True)",docstring:"<no docstring>"},hex:NT,"html.escape":{definition:"(s, quote=True)",docstring:`Replace special characters "&", "<" and ">" to HTML-safe sequences.
If the optional flag quote is true (the default), the quotation mark
characters, both double quote (") and single quote (') characters are also
translated.`},"html.unescape":{definition:"(s)",docstring:`Convert all named and numeric character references (e.g. &gt;, &#62;,
&x3e;) in the string s to the corresponding unicode characters.
This function uses the rules defined by the HTML 5 standard
for both valid and invalid character references, and the list of
HTML 5 named character references defined in html.entities.html5.`},int:AT,"io.BytesIO":{docstring:`Base class for buffered IO objects.

The main difference with RawIOBase is that the read() method
supports omitting the size argument, and does not have a default
implementation that defers to readinto().

In addition, read(), readinto() and write() may raise
BlockingIOError if the underlying raw stream is in non-blocking
mode and not ready; unlike their raw counterparts, they will never
return None.

A typical implementation should not inherit from a RawIOBase
implementation, but wrap one.`,init_definition:"(self, initial_bytes=<no value>)",isclass:!0},"io.StringIO":{docstring:"<no docstring>",init_definition:"(self, initvalue=<no value>, newline=<no value>)",isclass:!0},isinstance:OT,issubclass:qT,iter:UT,len:$T,list:IT,"list.append":{definition:"(self, item)",docstring:"L.append(object) -> None -- append object to end"},"list.clear":{definition:"(self)",docstring:"L.clear() -> None -- remove all items from L"},"list.copy":{definition:"(self)",docstring:"L.copy() -> list -- a shallow copy of L"},"list.count":{definition:"(self, value)",docstring:"L.count(value) -> integer -- return number of occurrences of value"},"list.extend":{definition:"(self, iterable)",docstring:"L.extend(iterable) -- extend list by appending elements from the iterable"},"list.index":{definition:"(self, value, start=0, stop=9223372036854775807)",docstring:`L.index(value, [start, [stop]]) -> integer -- return first index of value.
Raises ValueError if the value is not present.`},"list.insert":{definition:"(self, index, value)",docstring:"L.insert(index, object) -- insert object before index"},"list.pop":{definition:"(self, index=-1)",docstring:`L.pop([index]) -> item -- remove and return item at index (default last).
Raises IndexError if list is empty or index is out of range.`},"list.remove":{definition:"(self, value)",docstring:`L.remove(value) -> None -- remove first occurrence of value.
Raises ValueError if the value is not present.`},"list.reverse":{definition:"(self)",docstring:"L.reverse() -- reverse *IN PLACE*"},"list.sort":{definition:"(self, key=<no value>, reverse=<no value>)",docstring:"L.sort(key=None, reverse=False) -> None -- stable sort *IN PLACE*"},max:xT,"mimetypes.guess_type":{definition:"(url, strict=True)",docstring:`Guess the type of a file based on its URL.

Return value is a tuple (type, encoding) where type is None if the
type can't be guessed (no or unknown suffix) or a string of the
form type/subtype, usable for a MIME Content-type header; and
encoding is None for no encoding or the name of the program used
to encode (e.g. compress or gzip).  The mappings are table
driven.  Encoding suffixes are case sensitive; type suffixes are
first tried case sensitive, then case insensitive.

The suffixes .tgz, .taz and .tz (case sensitive!) are all mapped
to ".tar.gz".  (This is table-driven too, using the dictionary
suffix_map).

Optional \`strict' argument when false adds a bunch of commonly found, but
non-standard types.`},min:DT,"pathlib.PurePath":{docstring:`Base class for manipulating paths without I/O.

PurePath represents a filesystem path and offers operations which
don't imply any actual filesystem I/O.  Depending on your system,
instantiating a PurePath will return either a PurePosixPath or a
PureWindowsPath object.  You can also instantiate either of these classes
directly, regardless of your system.`,init_definition:"(*args)",isclass:!0},print:QT,"random.Random.betavariate":{definition:"(self, alpha, beta)",docstring:`Beta distribution.

Conditions on the parameters are alpha > 0 and beta > 0.
Returned values range between 0 and 1.`},"random.Random.choice":{definition:"(self, seq)",docstring:"Choose a random element from a non-empty sequence."},"random.Random.choices":{definition:"(self, population, weights=None, *, cum_weights=None, k=1)",docstring:`Return a k sized list of population elements chosen with replacement.

If the relative weights or cumulative weights are not specified,
the selections are made with equal probability.`},"random.Random.expovariate":{definition:"(self, lambd)",docstring:`Exponential distribution.

lambd is 1.0 divided by the desired mean.  It should be
nonzero.  (The parameter would be called "lambda", but that is
a reserved word in Python.)  Returned values range from 0 to
positive infinity if lambd is positive, and from negative
infinity to 0 if lambd is negative.`},"random.Random.gauss":{definition:"(self, mu, sigma)",docstring:`Gaussian distribution.

mu is the mean, and sigma is the standard deviation.  This is
slightly faster than the normalvariate() function.

Not thread-safe without a lock around calls.`},"random.Random.paretovariate":{definition:"(self, alpha)",docstring:"Pareto distribution.  alpha is the shape parameter."},"random.Random.sample":{definition:"(self, population, k, *, counts=None)",docstring:`Chooses k unique random elements from a population sequence or set.

Returns a new list containing elements from the population while
leaving the original population unchanged.  The resulting list is
in selection order so that all sub-slices will also be valid random
samples.  This allows raffle winners (the sample) to be partitioned
into grand prize and second place winners (the subslices).

Members of the population need not be hashable or unique.  If the
population contains repeats, then each occurrence is a possible
selection in the sample.

Repeated elements can be specified one at a time or with the optional
counts parameter.  For example:

    sample(['red', 'blue'], counts=[4, 2], k=5)

is equivalent to:

    sample(['red', 'red', 'red', 'red', 'blue', 'blue'], k=5)

To choose a sample from a range of integers, use range() for the
population argument.  This is especially fast and space efficient
for sampling from a large population:

    sample(range(10000000), 60)`},"random.Random.shuffle":{definition:"(self, x, random=None)",docstring:`Shuffle list x in place, and return None.

Optional argument random is a 0-argument function returning a
random float in [0.0, 1.0); if it is the default None, the
standard random.random will be used.`},"random.Random.triangular":{definition:"(self, low=0.0, high=1.0, mode=None)",docstring:`Triangular distribution.

Continuous distribution bounded by given lower and upper limits,
and having a given mode value in-between.

http://en.wikipedia.org/wiki/Triangular_distribution`},"random.Random.uniform":{definition:"(self, a, b)",docstring:"Get a random number in the range [a, b) or [a, b] depending on rounding."},range:MT,"re2.BackreferencesException":{docstring:"Search pattern contains backreferences.",init_definition:"(self, *args)",isclass:!0},"re2.CharClassProblemException":{docstring:"Search pattern contains unsupported character class.",init_definition:"(self, *args)",isclass:!0},"re2.compile":{docstring:"<no docstring>",call_def:"(*args, **keywords)"},"re2.contains":{docstring:`Scan through string looking for a match to the pattern, returning
True or False.`,call_def:"(*args, **keywords)"},"re2.count":{docstring:`Return number of non-overlapping matches in the string.

Empty matches are included in the count.`,call_def:"(*args, **keywords)"},"re2.escape":{docstring:"Escape all non-alphanumeric characters in pattern.",call_def:"(*args, **keywords)"},"re2.findall":{docstring:`Return a list of all non-overlapping matches in the string.

Each match is represented as a string or a tuple (when there are two ore
more groups). Empty matches are included in the result.`,call_def:"(*args, **keywords)"},"re2.finditer":{docstring:"Yield all non-overlapping matches in the string.\n\nFor each match, the iterator returns a ``Match`` object.\nEmpty matches are included in the result.",call_def:"(*args, **keywords)"},"re2.fullmatch":{docstring:"Try to apply the pattern to the entire string, returning\na ``Match`` object, or ``None`` if no match was found.",call_def:"(*args, **keywords)"},"re2.match":{docstring:"Try to apply the pattern at the start of the string, returning\na ``Match`` object, or ``None`` if no match was found.",call_def:"(*args, **keywords)"},"re2.search":{docstring:"Scan through string looking for a match to the pattern, returning\na ``Match`` object or none if no match was found.",call_def:"(*args, **keywords)"},"re2.split":{docstring:`Split the source string by the occurrences of the pattern,
returning a list containing the resulting substrings.`,call_def:"(*args, **keywords)"},"re2.sub":{docstring:"Return the string obtained by replacing the leftmost\nnon-overlapping occurrences of the pattern in string by the\nreplacement ``repl``. ``repl`` can be either a string or a callable;\nif a string, backslash escapes in it are processed. If it is\na callable, it's passed the ``Match`` object and must return\na replacement string to be used.",call_def:"(*args, **keywords)"},"re2.subn":{docstring:"Return a 2-tuple containing ``(new_string, number)``.\nnew_string is the string obtained by replacing the leftmost\nnon-overlapping occurrences of the pattern in the source\nstring by the replacement ``repl``. ``number`` is the number of\nsubstitutions that were made. ``repl`` can be either a string or a\ncallable; if a string, backslash escapes in it are processed.\nIf it is a callable, it's passed the ``Match`` object and must\nreturn a replacement string to be used.",call_def:"(*args, **keywords)"},round:BT,set:JT,"simplejson.dumps":{definition:`(
    obj,
    skipkeys=False,
    ensure_ascii=True,
    check_circular=True,
    allow_nan=True,
    cls=None,
    indent=None,
    separators=None,
    encoding='utf-8',
    default=None,
    use_decimal=True,
    namedtuple_as_object=True,
    tuple_as_array=True,
    bigint_as_string=False,
    sort_keys=False,
    item_sort_key=None,
    for_json=False,
    ignore_nan=False,
    int_as_string_bitcount=None,
    iterable_as_array=False,
    **kw,
)`,docstring:"Serialize ``obj`` to a JSON formatted ``str``.\n\nIf ``skipkeys`` is false then ``dict`` keys that are not basic types\n(``str``, ``int``, ``long``, ``float``, ``bool``, ``None``)\nwill be skipped instead of raising a ``TypeError``.\n\nIf *ensure_ascii* is false (default: ``True``), then the output may\ncontain non-ASCII characters, so long as they do not need to be escaped\nby JSON. When it is true, all non-ASCII characters are escaped.\n\nIf ``check_circular`` is false, then the circular reference check\nfor container types will be skipped and a circular reference will\nresult in an ``OverflowError`` (or worse).\n\nIf ``allow_nan`` is false, then it will be a ``ValueError`` to\nserialize out of range ``float`` values (``nan``, ``inf``, ``-inf``) in\nstrict compliance of the JSON specification, instead of using the\nJavaScript equivalents (``NaN``, ``Infinity``, ``-Infinity``).\n\nIf ``indent`` is a string, then JSON array elements and object members\nwill be pretty-printed with a newline followed by that string repeated\nfor each level of nesting. ``None`` (the default) selects the most compact\nrepresentation without any newlines. For backwards compatibility with\nversions of simplejson earlier than 2.1.0, an integer is also accepted\nand is converted to a string with that many spaces.\n\nIf specified, ``separators`` should be an\n``(item_separator, key_separator)`` tuple.  The default is ``(', ', ': ')``\nif *indent* is ``None`` and ``(',', ': ')`` otherwise.  To get the most\ncompact JSON representation, you should specify ``(',', ':')`` to eliminate\nwhitespace.\n\n``encoding`` is the character encoding for bytes instances, default is\nUTF-8.\n\n``default(obj)`` is a function that should return a serializable version\nof obj or raise TypeError. The default simply raises TypeError.\n\nIf *use_decimal* is true (default: ``True``) then decimal.Decimal\nwill be natively serialized to JSON with full precision.\n\nIf *namedtuple_as_object* is true (default: ``True``),\n:class:`tuple` subclasses with ``_asdict()`` methods will be encoded\nas JSON objects.\n\nIf *tuple_as_array* is true (default: ``True``),\n:class:`tuple` (and subclasses) will be encoded as JSON arrays.\n\nIf *iterable_as_array* is true (default: ``False``),\nany object not in the above table that implements ``__iter__()``\nwill be encoded as a JSON array.\n\nIf *bigint_as_string* is true (not the default), ints 2**53 and higher\nor lower than -2**53 will be encoded as strings. This is to avoid the\nrounding that happens in Javascript otherwise.\n\nIf *int_as_string_bitcount* is a positive number (n), then int of size\ngreater than or equal to 2**n or lower than or equal to -2**n will be\nencoded as strings.\n\nIf specified, *item_sort_key* is a callable used to sort the items in\neach dictionary. This is useful if you want to sort items other than\nin alphabetical order by key. This option takes precedence over\n*sort_keys*.\n\nIf *sort_keys* is true (default: ``False``), the output of dictionaries\nwill be sorted by item.\n\nIf *for_json* is true (default: ``False``), objects with a ``for_json()``\nmethod will use the return value of that method for encoding as JSON\ninstead of the object.\n\nIf *ignore_nan* is true (default: ``False``), then out of range\n:class:`float` values (``nan``, ``inf``, ``-inf``) will be serialized as\n``null`` in compliance with the ECMA-262 specification. If true, this will\noverride *allow_nan*.\n\nTo use a custom ``JSONEncoder`` subclass (e.g. one that overrides the\n``.default()`` method to serialize additional types), specify it with\nthe ``cls`` kwarg. NOTE: You should use *default* instead of subclassing\nwhenever possible."},"simplejson.errors.JSONDecodeError":{docstring:`Subclass of ValueError with the following additional properties:

msg: The unformatted error message
doc: The JSON document being parsed
pos: The start index of doc where parsing failed
end: The end index of doc where parsing failed (may be None)
lineno: The line corresponding to pos
colno: The column corresponding to pos
endlineno: The line corresponding to end (may be None)
endcolno: The column corresponding to end (may be None)`,init_definition:"(msg, doc, pos, end=None)",isclass:!0},"simplejson.loads":{definition:`(
    s,
    encoding=None,
    cls=None,
    object_hook=None,
    parse_float=None,
    parse_int=None,
    parse_constant=None,
    object_pairs_hook=None,
    use_decimal=False,
    **kw,
)`,docstring:"Deserialize ``s`` (a ``str`` or ``unicode`` instance containing a JSON\ndocument) to a Python object.\n\n*encoding* determines the encoding used to interpret any\n:class:`bytes` objects decoded by this instance (``'utf-8'`` by\ndefault). It has no effect when decoding :class:`unicode` objects.\n\n*object_hook*, if specified, will be called with the result of every\nJSON object decoded and its return value will be used in place of the\ngiven :class:`dict`.  This can be used to provide custom\ndeserializations (e.g. to support JSON-RPC class hinting).\n\n*object_pairs_hook* is an optional function that will be called with\nthe result of any object literal decode with an ordered list of pairs.\nThe return value of *object_pairs_hook* will be used instead of the\n:class:`dict`.  This feature can be used to implement custom decoders\nthat rely on the order that the key and value pairs are decoded (for\nexample, :func:`collections.OrderedDict` will remember the order of\ninsertion). If *object_hook* is also defined, the *object_pairs_hook*\ntakes priority.\n\n*parse_float*, if specified, will be called with the string of every\nJSON float to be decoded.  By default, this is equivalent to\n``float(num_str)``. This can be used to use another datatype or parser\nfor JSON floats (e.g. :class:`decimal.Decimal`).\n\n*parse_int*, if specified, will be called with the string of every\nJSON int to be decoded.  By default, this is equivalent to\n``int(num_str)``.  This can be used to use another datatype or parser\nfor JSON integers (e.g. :class:`float`).\n\n*parse_constant*, if specified, will be called with one of the\nfollowing strings: ``'-Infinity'``, ``'Infinity'``, ``'NaN'``.  This\ncan be used to raise an exception if invalid JSON numbers are\nencountered.\n\nIf *use_decimal* is true (default: ``False``) then it implies\nparse_float=decimal.Decimal for parity with ``dump``.\n\nTo use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\nkwarg. NOTE: You should use *object_hook* or *object_pairs_hook* instead\nof subclassing whenever possible."},sorted:GT,str:LT,"str.capitalize":{definition:"(self)",docstring:`S.capitalize() -> unicode

Return a capitalized version of S, i.e. make the first character
have upper case and the rest lower case.`},"str.casefold":{definition:"(self)",docstring:`S.casefold() -> str

Return a version of S suitable for caseless comparisons.`},"str.count":{definition:"(self, sub, start=<no value>, end=<no value>)",docstring:`S.count(sub[, start[, end]]) -> int

Return the number of non-overlapping occurrences of substring sub in
Unicode string S[start:end].  Optional arguments start and end are
interpreted as in slice notation.`},"str.encode":{definition:"(self, encoding=<no value>, errors=<no value>)",docstring:`S.encode(encoding=None, errors='strict') -> string or unicode

Encode S using the codec registered for encoding. encoding defaults
to the default encoding. errors may be given to set a different error
handling scheme. Default is 'strict' meaning that encoding errors raise
a UnicodeEncodeError. Other possible values are 'ignore', 'replace' and
'xmlcharrefreplace' as well as any other name registered with
codecs.register_error that can handle UnicodeEncodeErrors.`},"str.endswith":{definition:"(self, suffix, start=<no value>, end=<no value>)",docstring:`S.endswith(suffix[, start[, end]]) -> bool

Return True if S ends with the specified suffix, False otherwise.
With optional start, test S beginning at that position.
With optional end, stop comparing S at that position.
suffix can also be a tuple of strings to try.`},"str.find":{definition:"(self, sub, start=<no value>, end=<no value>)",docstring:`S.find(sub[, start[, end]]) -> int

Return the lowest index in S where substring sub is found,
such that sub is contained within S[start:end].  Optional
arguments start and end are interpreted as in slice notation.

Return -1 on failure.`},"str.index":{definition:"(self, sub, start=<no value>, end=<no value>)",docstring:`S.index(sub[, start[, end]]) -> int

Like S.find() but raise ValueError when the substring is not found.`},"str.isalnum":{definition:"(self)",docstring:`S.isalnum() -> bool

Return True if all characters in S are alphanumeric
and there is at least one character in S, False otherwise.`},"str.isalpha":{definition:"(self)",docstring:`S.isalpha() -> bool

Return True if all characters in S are alphabetic
and there is at least one character in S, False otherwise.`},"str.isascii":{definition:"(self)",docstring:`Return True if all characters in the string are ASCII, False otherwise.

ASCII characters have code points in the range U+0000-U+007F.
Empty string is ASCII too.`},"str.isdecimal":{definition:"(self)",docstring:`S.isdecimal() -> bool

Return True if there are only decimal characters in S,
False otherwise.`},"str.isdigit":{definition:"(self)",docstring:`S.isdigit() -> bool

Return True if all characters in S are digits
and there is at least one character in S, False otherwise.`},"str.isidentifier":{definition:"(self)",docstring:`S.isidentifier() -> bool

Return True if S is a valid identifier according to the language
definition.`},"str.islower":{definition:"(self)",docstring:`S.islower() -> bool

Return True if all cased characters in S are lowercase and there is
at least one cased character in S, False otherwise.`},"str.isnumeric":{definition:"(self)",docstring:`S.isnumeric() -> bool

Return True if there are only numeric characters in S,
False otherwise.`},"str.isprintable":{definition:"(self)",docstring:`S.isprintable() -> bool

Return True if all characters in S are considered printable in
repr() or S is empty, False otherwise.`},"str.isspace":{definition:"(self)",docstring:`S.isspace() -> bool

Return True if all characters in S are whitespace
and there is at least one character in S, False otherwise.`},"str.istitle":{definition:"(self)",docstring:`S.istitle() -> bool

Return True if S is a titlecased string and there is at least one
character in S, i.e. upper- and titlecase characters may only
follow uncased characters and lowercase characters only cased ones.
Return False otherwise.`},"str.isupper":{definition:"(self)",docstring:`S.isupper() -> bool

Return True if all cased characters in S are uppercase and there is
at least one cased character in S, False otherwise.`},"str.join":{definition:"(self, iterable)",docstring:`S.join(iterable) -> unicode

Return a string which is the concatenation of the strings in the
iterable.  The separator between elements is S.`},"str.lower":{definition:"(self)",docstring:`S.lower() -> unicode

Return a copy of the string S converted to lowercase.`},"str.lstrip":{definition:"(self, chars=<no value>)",docstring:`S.lstrip([chars]) -> unicode

Return a copy of the string S with leading whitespace removed.
If chars is given and not None, remove characters in chars instead.
If chars is a str, it will be converted to unicode before stripping`},"str.partition":{definition:"(self, sub)",docstring:`S.partition(sep) -> (head, sep, tail)

Search for the separator sep in S, and return the part before it,
the separator itself, and the part after it.  If the separator is not
found, return S and two empty strings.`},"str.removeprefix":{definition:"(self, prefix)",docstring:"<no docstring>"},"str.removesuffix":{definition:"(self, suffix)",docstring:"<no docstring>"},"str.rfind":{definition:"(self, sub, start=<no value>, end=<no value>)",docstring:`S.rfind(sub[, start[, end]]) -> int

Return the highest index in S where substring sub is found,
such that sub is contained within S[start:end].  Optional
arguments start and end are interpreted as in slice notation.

Return -1 on failure.`},"str.rindex":{definition:"(self, sub, start=<no value>, end=<no value>)",docstring:`S.rindex(sub[, start[, end]]) -> int

Like S.rfind() but raise ValueError when the substring is not found.`},"str.rpartition":{definition:"(self, sub)",docstring:`S.rpartition(sep) -> (head, sep, tail)

Search for the separator sep in S, starting at the end of S, and return
the part before it, the separator itself, and the part after it.  If
the separator is not found, return two empty strings and S.`},"str.rsplit":{definition:"(self, sep=<no value>, maxsplit=<no value>)",docstring:`S.rsplit(sep=None, maxsplit=-1) -> list of strings

Return a list of the words in S, using sep as the
delimiter string, starting at the end of the string and
working to the front.  If maxsplit is given, at most maxsplit
splits are done. If sep is not specified, any whitespace string
is a separator.`},"str.rstrip":{definition:"(self, chars=<no value>)",docstring:`S.rstrip([chars]) -> unicode

Return a copy of the string S with trailing whitespace removed.
If chars is given and not None, remove characters in chars instead.
If chars is a str, it will be converted to unicode before stripping`},"str.split":{definition:"(self, sep=<no value>, maxsplit=<no value>)",docstring:`S.split(sep=None, maxsplit=-1) -> list of strings

Return a list of the words in S, using sep as the
delimiter string.  If maxsplit is given, at most maxsplit
splits are done. If sep is not specified or is None, any
whitespace string is a separator and empty strings are
removed from the result.`},"str.splitlines":{definition:"(self, keepends=False)",docstring:`S.splitlines(keepends=False) -> list of strings

Return a list of the lines in S, breaking at line boundaries.
Line breaks are not included in the resulting list unless keepends
is given and true.`},"str.startswith":{definition:"(self, prefix, start=<no value>, end=<no value>)",docstring:`S.startswith(prefix[, start[, end]]) -> bool

Return True if S starts with the specified prefix, False otherwise.
With optional start, test S beginning at that position.
With optional end, stop comparing S at that position.
prefix can also be a tuple of strings to try.`},"str.strip":{definition:"(self, chars=<no value>)",docstring:`S.strip([chars]) -> unicode

Return a copy of the string S with leading and trailing
whitespace removed.
If chars is given and not None, remove characters in chars instead.
If chars is a str, it will be converted to unicode before stripping`},"str.swapcase":{definition:"(self)",docstring:`S.swapcase() -> unicode

Return a copy of S with uppercase characters converted to lowercase
and vice versa.`},"str.title":{definition:"(self)",docstring:`S.title() -> unicode

Return a titlecased version of S, i.e. words start with title case
characters, all remaining cased characters have lower case.`},"str.upper":{definition:"(self)",docstring:`S.upper() -> unicode

Return a copy of S converted to uppercase.`},"string.Template":{docstring:"A string class for supporting $-substitutions.",init_definition:"(template)",isclass:!0},"string.Template.safe_substitute":{definition:"(self, mapping={}, /, **kws)",docstring:"<no docstring>"},"string.Template.substitute":{definition:"(self, mapping={}, /, **kws)",docstring:"<no docstring>"},sum:VT,tuple:WT,"typing.Annotated":{docstring:`Add context specific metadata to a type.

Example: Annotated[int, runtime_check.Unsigned] indicates to the
hypothetical runtime_check module that this type is an unsigned int.
Every other consumer of this type can ignore this metadata and treat
this type as int.

The first argument to Annotated must be a valid type.

Details:

- It's an error to call \`Annotated\` with less than two arguments.
- Nested Annotated are flattened::

    Annotated[Annotated[T, Ann1, Ann2], Ann3] == Annotated[T, Ann1, Ann2, Ann3]

- Instantiating an annotated type is equivalent to instantiating the
underlying type::

    Annotated[C, Ann1](5) == C(5)

- Annotated can be used as a generic type alias::

    Optimized = Annotated[T, runtime.Optimize()]
    Optimized[int] == Annotated[int, runtime.Optimize()]

    OptimizedList = Annotated[List[T], runtime.Optimize()]
    OptimizedList[int] == Annotated[List[int], runtime.Optimize()]`,init_definition:"(*args, **kwargs)",isclass:!0},"typing.Any":{definition:"(*args, **kwds)",docstring:`Special type indicating an unconstrained type.

- Any is compatible with every type.
- Any assumed to have all methods.
- All values assumed to be instances of Any.

Note that all the above statements are true from the point of view of
static type checkers. At runtime, Any should not be used with instance
or class checks.`},"typing.Callable":{definition:"(*args, **kwargs)",docstring:`Callable type; Callable[[int], str] is a function of (int) -> str.

The subscription syntax must always be used with exactly two
values: the argument list and the return type.  The argument list
must be a list of types or ellipsis; the return type must be a single type.

There is no syntax to indicate optional or keyword arguments,
such function types are rarely used as callback types.`,class_docstring:`The central part of internal API.

This represents a generic version of type 'origin' with type arguments 'params'.
There are two kind of these aliases: user defined and special. The special ones
are wrappers around builtin collections and ABCs in collections.abc. These must
have 'name' always set. If 'inst' is False, then the alias can't be instantiated,
this is used by e.g. typing.List and typing.Dict.`},"typing.Literal":{definition:"(*args, **kwds)",docstring:`Special typing form to define literal types (a.k.a. value types).

This form can be used to indicate to type checkers that the corresponding
variable or function parameter has a value equivalent to the provided
literal (or one of several literals):

  def validate_simple(data: Any) -> Literal[True]:  # always returns True
      ...

  MODE = Literal['r', 'rb', 'w', 'wb']
  def open_helper(file: str, mode: MODE) -> str:
      ...

  open_helper('/some/path', 'r')  # Passes type check
  open_helper('/other/path', 'typo')  # Error in type checker

Literal[...] cannot be subclassed. At runtime, an arbitrary value
is allowed as type argument to Literal[...], but type checkers may
impose restrictions.`},"typing.Optional":{definition:"(*args, **kwds)",docstring:`Optional type.

Optional[X] is equivalent to Union[X, None].`},"typing.Union":{definition:"(*args, **kwds)",docstring:`Union type; Union[X, Y] means either X or Y.

To define a union, use e.g. Union[int, str].  Details:
- The arguments must be types and there must be at least one.
- None as an argument is a special case and is replaced by
  type(None).
- Unions of unions are flattened, e.g.::

    Union[Union[int, str], float] == Union[int, str, float]

- Unions of a single argument vanish, e.g.::

    Union[int] == int  # The constructor actually returns int

- Redundant arguments are skipped, e.g.::

    Union[int, str, int] == Union[int, str]

- When comparing unions, the argument order is ignored, e.g.::

    Union[int, str] == Union[str, int]

- You cannot subclass or instantiate a union.
- You can use Optional[X] as a shorthand for Union[X, None].`},"urllib.parse.parse_qs":{definition:`(
    qs,
    keep_blank_values=False,
    strict_parsing=False,
    encoding='utf-8',
    errors='replace',
    max_num_fields=None,
    separator='&',
)`,docstring:`Parse a query given as a string argument.

Arguments:

qs: percent-encoded query string to be parsed

keep_blank_values: flag indicating whether blank values in
    percent-encoded queries should be treated as blank strings.
    A true value indicates that blanks should be retained as
    blank strings.  The default false value indicates that
    blank values are to be ignored and treated as if they were
    not included.

strict_parsing: flag indicating what to do with parsing errors.
    If false (the default), errors are silently ignored.
    If true, errors raise a ValueError exception.

encoding and errors: specify how to decode percent-encoded sequences
    into Unicode characters, as accepted by the bytes.decode() method.

max_num_fields: int. If set, then throws a ValueError if there
    are more than n fields read by parse_qsl().

separator: str. The symbol to use for separating the query arguments.
    Defaults to &.

Returns a dictionary.`},"urllib.parse.parse_qsl":{definition:`(
    qs,
    keep_blank_values=False,
    strict_parsing=False,
    encoding='utf-8',
    errors='replace',
    max_num_fields=None,
    separator='&',
)`,docstring:`Parse a query given as a string argument.

Arguments:

qs: percent-encoded query string to be parsed

keep_blank_values: flag indicating whether blank values in
    percent-encoded queries should be treated as blank strings.
    A true value indicates that blanks should be retained as blank
    strings.  The default false value indicates that blank values
    are to be ignored and treated as if they were  not included.

strict_parsing: flag indicating what to do with parsing errors. If
    false (the default), errors are silently ignored. If true,
    errors raise a ValueError exception.

encoding and errors: specify how to decode percent-encoded sequences
    into Unicode characters, as accepted by the bytes.decode() method.

max_num_fields: int. If set, then throws a ValueError
    if there are more than n fields read by parse_qsl().

separator: str. The symbol to use for separating the query arguments.
    Defaults to &.

Returns a list, as G-d intended.`},"urllib.parse.quote":{definition:"(string, safe='/', encoding=None, errors=None)",docstring:`quote('abc def') -> 'abc%20def'

Each part of a URL, e.g. the path info, the query, etc., has a
different set of reserved characters that must be quoted. The
quote function offers a cautious (not minimal) way to quote a
string for most of these parts.

RFC 3986 Uniform Resource Identifier (URI): Generic Syntax lists
the following (un)reserved characters.

unreserved    = ALPHA / DIGIT / "-" / "." / "_" / "~"
reserved      = gen-delims / sub-delims
gen-delims    = ":" / "/" / "?" / "#" / "[" / "]" / "@"
sub-delims    = "!" / "$" / "&" / "'" / "(" / ")"
              / "*" / "+" / "," / ";" / "="

Each of the reserved characters is reserved in some component of a URL,
but not necessarily in all of them.

The quote function %-escapes all characters that are neither in the
unreserved chars ("always safe") nor the additional chars set via the
safe arg.

The default for the safe arg is '/'. The character is reserved, but in
typical usage the quote function is being called on a path where the
existing slash characters are to be preserved.

Python 3.7 updates from using RFC 2396 to RFC 3986 to quote URL strings.
Now, "~" is included in the set of unreserved characters.

string and safe may be either str or bytes objects. encoding and errors
must not be specified if string is a bytes object.

The optional encoding and errors parameters specify how to deal with
non-ASCII characters, as accepted by the str.encode method.
By default, encoding='utf-8' (characters are encoded with UTF-8), and
errors='strict' (unsupported characters raise a UnicodeEncodeError).`},"urllib.parse.quote_from_bytes":{definition:"(bs, safe='/')",docstring:`Like quote(), but accepts a bytes object rather than a str, and does
not perform string-to-bytes encoding.  It always returns an ASCII string.
quote_from_bytes(b'abc def?') -> 'abc%20def%3f'`},"urllib.parse.quote_plus":{definition:"(string, safe='', encoding=None, errors=None)",docstring:`Like quote(), but also replace ' ' with '+', as required for quoting
HTML form values. Plus signs in the original string are escaped unless
they are included in safe. It also does not have safe default to '/'.`},"urllib.parse.unquote":{definition:"(string, encoding='utf-8', errors='replace')",docstring:`Replace %xx escapes by their single-character equivalent. The optional
encoding and errors parameters specify how to decode percent-encoded
sequences into Unicode characters, as accepted by the bytes.decode()
method.
By default, percent-encoded sequences are decoded with UTF-8, and invalid
sequences are replaced by a placeholder character.

unquote('abc%20def') -> 'abc def'.`},"urllib.parse.unquote_plus":{definition:"(string, encoding='utf-8', errors='replace')",docstring:`Like unquote(), but also replace plus signs by spaces, as required for
unquoting HTML form values.

unquote_plus('%7e/abc+def') -> '~/abc def'`},"urllib.parse.unquote_to_bytes":{definition:"(string)",docstring:"unquote_to_bytes('abc%20def') -> b'abc def'."},"urllib.parse.urldefrag":{definition:"(url)",docstring:`Removes any existing fragment from URL.

Returns a tuple of the defragmented URL and the fragment.  If
the URL contained no fragments, the second element is the
empty string.`},"urllib.parse.urljoin":{definition:"(base, url, allow_fragments=True)",docstring:`Join a base URL and a possibly relative URL to form an absolute
interpretation of the latter.`},"urllib.parse.urlsplit":{definition:"(url, scheme='', allow_fragments=True)",docstring:`Parse a URL into 5 components:
<scheme>://<netloc>/<path>?<query>#<fragment>

The result is a named 5-tuple with fields corresponding to the
above. It is either a SplitResult or SplitResultBytes object,
depending on the type of the url parameter.

The username, password, hostname, and port sub-components of netloc
can also be accessed as attributes of the returned object.

The scheme argument provides the default value of the scheme
component when no scheme is found in url.

If allow_fragments is False, no attempt is made to separate the
fragment component from the previous component, which can be either
path or query.

Note that % escapes are not expanded.`},"urllib.parse.urlunsplit":{definition:"(components)",docstring:`Combine the elements of a tuple as returned by urlsplit() into a
complete URL as a string. The data argument can be any five-item iterable.
This may result in a slightly different, but equivalent URL, if the URL that
was parsed originally had unnecessary delimiters (for example, a ? with an
empty query; the RFC states that these are equivalent).`},"wsgiref.handlers.BaseHandler.start_response":{definition:"(self, status, headers, exc_info=None)",docstring:"'start_response()' callable as specified by PEP 3333"},"wsgiref.handlers.BaseHandler.write":{definition:"(self, data)",docstring:"'write()' callable as specified by PEP 3333"}};const HT={name:"Docs",data:function(){return{dyslang_docs:FT,search:""}},computed:{},watch:{},methods:{scrollToId(e){document.getElementById(e).scrollIntoView()}},mounted(){console.log("scrollto",location.hash),this.scrollToId(location.hash)}},lr=e=>(ve("data-v-d5f724ee"),e=e(),be(),e),zT={class:"container"},YT={class:"row"},XT={class:"col-4 align-top"},KT=lr(()=>f("h2",null,"Index",-1)),ZT=m(),jT={class:"input-group mb-3"},eN=m(),tN={class:"input-group-append"},nN=m(),iN={key:0},oN=["href"],sN=m(),rN={class:"col-8"},aN=lr(()=>f("h2",null,"Documentation",-1)),dN=m(),lN=["id"],uN={key:0},cN=["href"],pN=m(),fN=lr(()=>f("hr",null,null,-1));function mN(e,t,n,s,i,o){return y(),_("div",zT,[f("div",YT,[f("div",XT,[KT,ZT,f("div",jT,[qe(f("input",{type:"text","onUpdate:modelValue":t[0]||(t[0]=d=>e.search=d),class:"form-control",placeholder:"Search functions..."},null,512),[[He,e.search]]),eN,f("div",tN,[f("button",{type:"button",class:"btn btn-primary",onClick:t[1]||(t[1]=d=>e.search="")},`
              clear
            `)])]),nN,(y(!0),_(G,null,Z(e.dyslang_docs,(d,c)=>(y(),_("div",{key:c},[c.toLowerCase().includes(e.search.toLowerCase())?(y(),_("div",iN,[f("a",{href:"#"+c},E(c),9,oN)])):U("",!0)]))),128))]),sN,f("div",rN,[aN,dN,(y(!0),_(G,null,Z(e.dyslang_docs,(d,c)=>(y(),_("div",{id:c,key:c},[c.toLowerCase().includes(e.search.toLowerCase())?(y(),_("div",uN,[f("pre",null,[f("strong",null,[f("a",{href:"#"+c},E(c),9,cN),m(E(d.definition)+E(d.init_definition),1)]),m(`

`+E(d.docstring),1)]),pN,fN])):U("",!0)],8,lN))),128))])])])}var ih=x(HT,[["render",mN],["__scopeId","data-v-d5f724ee"]]),Ge={"cosmos.auth.v1beta1/QueryAccounts":{module_name:"cosmos.auth.v1beta1",name:"Accounts",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAccountsRequest",definitions:{QueryAccountsRequest:{properties:{pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Accounts Request",description:"QueryAccountsRequest is the request type for the Query/Accounts RPC method. Since: cosmos-sdk 0.43"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAccountsResponse",definitions:{QueryAccountsResponse:{properties:{accounts:{items:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Any",description:'`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use \'type.googleapis.com/full.type.name\' as the type URL and the unpack methods only use the fully qualified type name after the last \'/\' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       "@type": "type.googleapis.com/google.profile.Person",       "firstName": <string>,       "lastName": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       "@type": "type.googleapis.com/google.protobuf.Duration",       "value": "1.212s"     }'},type:"array",description:"accounts are the existing accounts"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Accounts Response",description:"QueryAccountsResponse is the response type for the Query/Accounts RPC method. Since: cosmos-sdk 0.43"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"cosmos.auth.v1beta1/QueryAccount":{module_name:"cosmos.auth.v1beta1",name:"Account",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAccountRequest",definitions:{QueryAccountRequest:{properties:{address:{type:"string",description:"address defines the address to query for."}},additionalProperties:!0,type:"object",title:"Query Account Request",description:"QueryAccountRequest is the request type for the Query/Account RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAccountResponse",definitions:{QueryAccountResponse:{properties:{account:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"account defines the account of the corresponding address."}},additionalProperties:!0,type:"object",title:"Query Account Response",description:"QueryAccountResponse is the response type for the Query/Account RPC method."}}},http_rules:[{Params:["address"],HasQuery:!1,HasBody:!1}]},"cosmos.auth.v1beta1/QueryAccountAddressByID":{module_name:"cosmos.auth.v1beta1",name:"AccountAddressByID",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAccountAddressByIDRequest",definitions:{QueryAccountAddressByIDRequest:{properties:{id:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Account Address By ID Request",description:"QueryAccountAddressByIDRequest is the request type for AccountAddressByID rpc method"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAccountAddressByIDResponse",definitions:{QueryAccountAddressByIDResponse:{properties:{account_address:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Account Address By ID Response",description:"QueryAccountAddressByIDResponse is the response type for AccountAddressByID rpc method"}}},http_rules:[{Params:["id"],HasQuery:!1,HasBody:!1}]},"cosmos.auth.v1beta1/QueryParams":{module_name:"cosmos.auth.v1beta1",name:"Params",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsRequest",definitions:{QueryParamsRequest:{additionalProperties:!0,type:"object",title:"Query Params Request",description:"QueryParamsRequest is the request type for the Query/Params RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsResponse",definitions:{QueryParamsResponse:{properties:{params:{$ref:"#/definitions/cosmos.auth.v1beta1.Params",additionalProperties:!0,description:"params defines the parameters of the module."}},additionalProperties:!0,type:"object",title:"Query Params Response",description:"QueryParamsResponse is the response type for the Query/Params RPC method."},"cosmos.auth.v1beta1.Params":{properties:{max_memo_characters:{type:"string"},tx_sig_limit:{type:"string"},tx_size_cost_per_byte:{type:"string"},sig_verify_cost_ed25519:{type:"string"},sig_verify_cost_secp256k1:{type:"string"}},additionalProperties:!0,type:"object",title:"Params",description:"Params defines the parameters for the auth module."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.auth.v1beta1/QueryModuleAccounts":{module_name:"cosmos.auth.v1beta1",name:"ModuleAccounts",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryModuleAccountsRequest",definitions:{QueryModuleAccountsRequest:{additionalProperties:!0,type:"object",title:"Query Module Accounts Request",description:"QueryModuleAccountsRequest is the request type for the Query/ModuleAccounts RPC method. Since: cosmos-sdk 0.46"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryModuleAccountsResponse",definitions:{QueryModuleAccountsResponse:{properties:{accounts:{items:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Any",description:'`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use \'type.googleapis.com/full.type.name\' as the type URL and the unpack methods only use the fully qualified type name after the last \'/\' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       "@type": "type.googleapis.com/google.profile.Person",       "firstName": <string>,       "lastName": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       "@type": "type.googleapis.com/google.protobuf.Duration",       "value": "1.212s"     }'},type:"array"}},additionalProperties:!0,type:"object",title:"Query Module Accounts Response",description:"QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method. Since: cosmos-sdk 0.46"}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.auth.v1beta1/QueryBech32Prefix":{module_name:"cosmos.auth.v1beta1",name:"Bech32Prefix",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/Bech32PrefixRequest",definitions:{Bech32PrefixRequest:{additionalProperties:!0,type:"object",title:"Bech 32 Prefix Request",description:"Bech32PrefixRequest is the request type for Bech32Prefix rpc method. Since: cosmos-sdk 0.46"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/Bech32PrefixResponse",definitions:{Bech32PrefixResponse:{properties:{bech32_prefix:{type:"string"}},additionalProperties:!0,type:"object",title:"Bech 32 Prefix Response",description:"Bech32PrefixResponse is the response type for Bech32Prefix rpc method. Since: cosmos-sdk 0.46"}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.auth.v1beta1/QueryAddressBytesToString":{module_name:"cosmos.auth.v1beta1",name:"AddressBytesToString",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/AddressBytesToStringRequest",definitions:{AddressBytesToStringRequest:{properties:{address_bytes:{type:"string",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Address Bytes To String Request",description:"AddressBytesToStringRequest is the request type for AddressString rpc method. Since: cosmos-sdk 0.46"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/AddressBytesToStringResponse",definitions:{AddressBytesToStringResponse:{properties:{address_string:{type:"string"}},additionalProperties:!0,type:"object",title:"Address Bytes To String Response",description:"AddressBytesToStringResponse is the response type for AddressString rpc method. Since: cosmos-sdk 0.46"}}},http_rules:[{Params:["address_bytes"],HasQuery:!1,HasBody:!1}]},"cosmos.auth.v1beta1/QueryAddressStringToBytes":{module_name:"cosmos.auth.v1beta1",name:"AddressStringToBytes",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/AddressStringToBytesRequest",definitions:{AddressStringToBytesRequest:{properties:{address_string:{type:"string"}},additionalProperties:!0,type:"object",title:"Address String To Bytes Request",description:"AddressStringToBytesRequest is the request type for AccountBytes rpc method. Since: cosmos-sdk 0.46"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/AddressStringToBytesResponse",definitions:{AddressStringToBytesResponse:{properties:{address_bytes:{type:"string",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Address String To Bytes Response",description:"AddressStringToBytesResponse is the response type for AddressBytes rpc method. Since: cosmos-sdk 0.46"}}},http_rules:[{Params:["address_string"],HasQuery:!1,HasBody:!1}]},"cosmos.authz.v1beta1/QueryGrants":{module_name:"cosmos.authz.v1beta1",name:"Grants",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGrantsRequest",definitions:{QueryGrantsRequest:{properties:{granter:{type:"string"},grantee:{type:"string"},msg_type_url:{type:"string",description:"Optional, msg_type_url, when set, will query only grants matching given msg type."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Grants Request",description:"QueryGrantsRequest is the request type for the Query/Grants RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGrantsResponse",definitions:{QueryGrantsResponse:{properties:{grants:{items:{$ref:"#/definitions/cosmos.authz.v1beta1.Grant"},type:"array",description:"authorizations is a list of grants granted for grantee by granter."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines an pagination for the response."}},additionalProperties:!0,type:"object",title:"Query Grants Response",description:"QueryGrantsResponse is the response type for the Query/Authorizations RPC method."},"cosmos.authz.v1beta1.Grant":{properties:{authorization:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object"},expiration:{type:"string",description:"time when the grant will expire and will be pruned. If null, then the grant doesn't have a time expiration (other conditions  in `authorization` may apply to invalidate the grant)",format:"date-time"}},additionalProperties:!0,type:"object",title:"Grant",description:"Grant gives permissions to execute the provide method with expiration time."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"cosmos.authz.v1beta1/QueryGranterGrants":{module_name:"cosmos.authz.v1beta1",name:"GranterGrants",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGranterGrantsRequest",definitions:{QueryGranterGrantsRequest:{properties:{granter:{type:"string"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Granter Grants Request",description:"QueryGranterGrantsRequest is the request type for the Query/GranterGrants RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGranterGrantsResponse",definitions:{QueryGranterGrantsResponse:{properties:{grants:{items:{$ref:"#/definitions/cosmos.authz.v1beta1.GrantAuthorization"},type:"array",description:"grants is a list of grants granted by the granter."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines an pagination for the response."}},additionalProperties:!0,type:"object",title:"Query Granter Grants Response",description:"QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method."},"cosmos.authz.v1beta1.GrantAuthorization":{properties:{granter:{type:"string"},grantee:{type:"string"},authorization:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object"},expiration:{type:"string",format:"date-time"}},additionalProperties:!0,type:"object",title:"Grant Authorization",description:"GrantAuthorization extends a grant with both the addresses of the grantee and granter. It is used in genesis.proto and query.proto"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"}}},http_rules:[{Params:["granter"],HasQuery:!0,HasBody:!1}]},"cosmos.authz.v1beta1/QueryGranteeGrants":{module_name:"cosmos.authz.v1beta1",name:"GranteeGrants",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGranteeGrantsRequest",definitions:{QueryGranteeGrantsRequest:{properties:{grantee:{type:"string"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Grantee Grants Request",description:"QueryGranteeGrantsRequest is the request type for the Query/IssuedGrants RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGranteeGrantsResponse",definitions:{QueryGranteeGrantsResponse:{properties:{grants:{items:{$ref:"#/definitions/cosmos.authz.v1beta1.GrantAuthorization"},type:"array",description:"grants is a list of grants granted to the grantee."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines an pagination for the response."}},additionalProperties:!0,type:"object",title:"Query Grantee Grants Response",description:"QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method."},"cosmos.authz.v1beta1.GrantAuthorization":{properties:{granter:{type:"string"},grantee:{type:"string"},authorization:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object"},expiration:{type:"string",format:"date-time"}},additionalProperties:!0,type:"object",title:"Grant Authorization",description:"GrantAuthorization extends a grant with both the addresses of the grantee and granter. It is used in genesis.proto and query.proto"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"}}},http_rules:[{Params:["grantee"],HasQuery:!0,HasBody:!1}]},"cosmos.authz.v1beta1/sendMsgGrant":{module_name:"cosmos.authz.v1beta1",name:"Grant",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgGrant",definitions:{MsgGrant:{properties:{granter:{type:"string"},grantee:{type:"string"},grant:{$ref:"#/definitions/cosmos.authz.v1beta1.Grant",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Msg Grant",description:"MsgGrant is a request type for Grant method. It declares authorization to the grantee on behalf of the granter with the provided expiration time."},"cosmos.authz.v1beta1.Grant":{properties:{authorization:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object"},expiration:{type:"string",description:"time when the grant will expire and will be pruned. If null, then the grant doesn't have a time expiration (other conditions  in `authorization` may apply to invalidate the grant)",format:"date-time"}},additionalProperties:!0,type:"object",title:"Grant",description:"Grant gives permissions to execute the provide method with expiration time."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgGrantResponse",definitions:{MsgGrantResponse:{additionalProperties:!0,type:"object",title:"Msg Grant Response",description:"MsgGrantResponse defines the Msg/MsgGrant response type."}}},http_rules:null},"cosmos.authz.v1beta1/sendMsgExec":{module_name:"cosmos.authz.v1beta1",name:"Exec",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgExec",definitions:{MsgExec:{properties:{grantee:{type:"string"},msgs:{items:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Any",description:'`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use \'type.googleapis.com/full.type.name\' as the type URL and the unpack methods only use the fully qualified type name after the last \'/\' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       "@type": "type.googleapis.com/google.profile.Person",       "firstName": <string>,       "lastName": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       "@type": "type.googleapis.com/google.protobuf.Duration",       "value": "1.212s"     }'},type:"array",description:"Authorization Msg requests to execute. Each msg must implement Authorization interface The x/authz will try to find a grant matching (msg.signers[0], grantee, MsgTypeURL(msg)) triple and validate it."}},additionalProperties:!0,type:"object",title:"Msg Exec",description:"MsgExec attempts to execute the provided messages using authorizations granted to the grantee. Each message should have only one signer corresponding to the granter of the authorization."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgExecResponse",definitions:{MsgExecResponse:{properties:{results:{items:{type:"string"},type:"array",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Msg Exec Response",description:"MsgExecResponse defines the Msg/MsgExecResponse response type."}}},http_rules:null},"cosmos.authz.v1beta1/sendMsgRevoke":{module_name:"cosmos.authz.v1beta1",name:"Revoke",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgRevoke",definitions:{MsgRevoke:{properties:{granter:{type:"string"},grantee:{type:"string"},msg_type_url:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Revoke",description:"MsgRevoke revokes any authorization with the provided sdk.Msg type on the granter's account with that has been granted to the grantee."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgRevokeResponse",definitions:{MsgRevokeResponse:{additionalProperties:!0,type:"object",title:"Msg Revoke Response",description:"MsgRevokeResponse defines the Msg/MsgRevokeResponse response type."}}},http_rules:null},"cosmos.bank.v1beta1/QueryBalance":{module_name:"cosmos.bank.v1beta1",name:"Balance",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryBalanceRequest",definitions:{QueryBalanceRequest:{properties:{address:{type:"string",description:"address is the address to query balances for."},denom:{type:"string",description:"denom is the coin denom to query balances for."}},additionalProperties:!0,type:"object",title:"Query Balance Request",description:"QueryBalanceRequest is the request type for the Query/Balance RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryBalanceResponse",definitions:{QueryBalanceResponse:{properties:{balance:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0,description:"balance is the balance of the coin."}},additionalProperties:!0,type:"object",title:"Query Balance Response",description:"QueryBalanceResponse is the response type for the Query/Balance RPC method."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},http_rules:[{Params:["address"],HasQuery:!0,HasBody:!1}]},"cosmos.bank.v1beta1/QueryAllBalances":{module_name:"cosmos.bank.v1beta1",name:"AllBalances",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllBalancesRequest",definitions:{QueryAllBalancesRequest:{properties:{address:{type:"string",description:"address is the address to query balances for."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query All Balances Request",description:"QueryBalanceRequest is the request type for the Query/AllBalances RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllBalancesResponse",definitions:{QueryAllBalancesResponse:{properties:{balances:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array",description:"balances is the balances of all the coins."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query All Balances Response",description:"QueryAllBalancesResponse is the response type for the Query/AllBalances RPC method."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},http_rules:[{Params:["address"],HasQuery:!0,HasBody:!1}]},"cosmos.bank.v1beta1/QuerySpendableBalances":{module_name:"cosmos.bank.v1beta1",name:"SpendableBalances",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QuerySpendableBalancesRequest",definitions:{QuerySpendableBalancesRequest:{properties:{address:{type:"string",description:"address is the address to query spendable balances for."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Spendable Balances Request",description:"QuerySpendableBalancesRequest defines the gRPC request structure for querying an account's spendable balances. Since: cosmos-sdk 0.46"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QuerySpendableBalancesResponse",definitions:{QuerySpendableBalancesResponse:{properties:{balances:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array",description:"balances is the spendable balances of all the coins."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Spendable Balances Response",description:"QuerySpendableBalancesResponse defines the gRPC response structure for querying an account's spendable balances. Since: cosmos-sdk 0.46"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},http_rules:[{Params:["address"],HasQuery:!0,HasBody:!1}]},"cosmos.bank.v1beta1/QueryTotalSupply":{module_name:"cosmos.bank.v1beta1",name:"TotalSupply",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryTotalSupplyRequest",definitions:{QueryTotalSupplyRequest:{properties:{pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Query Total Supply Request",description:"QueryTotalSupplyRequest is the request type for the Query/TotalSupply RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryTotalSupplyResponse",definitions:{QueryTotalSupplyResponse:{properties:{supply:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array",description:"supply is the supply of the coins"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Query Total Supply Response",description:"QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC method"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"cosmos.bank.v1beta1/QuerySupplyOf":{module_name:"cosmos.bank.v1beta1",name:"SupplyOf",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QuerySupplyOfRequest",definitions:{QuerySupplyOfRequest:{properties:{denom:{type:"string",description:"denom is the coin denom to query balances for."}},additionalProperties:!0,type:"object",title:"Query Supply Of Request",description:"QuerySupplyOfRequest is the request type for the Query/SupplyOf RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QuerySupplyOfResponse",definitions:{QuerySupplyOfResponse:{properties:{amount:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0,description:"amount is the supply of the coin."}},additionalProperties:!0,type:"object",title:"Query Supply Of Response",description:"QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"cosmos.bank.v1beta1/QueryParams":{module_name:"cosmos.bank.v1beta1",name:"Params",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsRequest",definitions:{QueryParamsRequest:{additionalProperties:!0,type:"object",title:"Query Params Request",description:"QueryParamsRequest defines the request type for querying x/bank parameters."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsResponse",definitions:{QueryParamsResponse:{properties:{params:{$ref:"#/definitions/cosmos.bank.v1beta1.Params",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Params Response",description:"QueryParamsResponse defines the response type for querying x/bank parameters."},"cosmos.bank.v1beta1.Params":{properties:{send_enabled:{items:{$ref:"#/definitions/cosmos.bank.v1beta1.SendEnabled"},type:"array"},default_send_enabled:{type:"boolean"}},additionalProperties:!0,type:"object",title:"Params",description:"Params defines the parameters for the bank module."},"cosmos.bank.v1beta1.SendEnabled":{properties:{denom:{type:"string"},enabled:{type:"boolean"}},additionalProperties:!0,type:"object",title:"Send Enabled",description:"SendEnabled maps coin denom to a send_enabled status (whether a denom is sendable)."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.bank.v1beta1/QueryDenomMetadata":{module_name:"cosmos.bank.v1beta1",name:"DenomMetadata",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDenomMetadataRequest",definitions:{QueryDenomMetadataRequest:{properties:{denom:{type:"string",description:"denom is the coin denom to query the metadata for."}},additionalProperties:!0,type:"object",title:"Query Denom Metadata Request",description:"QueryDenomMetadataRequest is the request type for the Query/DenomMetadata RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDenomMetadataResponse",definitions:{QueryDenomMetadataResponse:{properties:{metadata:{$ref:"#/definitions/cosmos.bank.v1beta1.Metadata",additionalProperties:!0,description:"metadata describes and provides all the client information for the requested token."}},additionalProperties:!0,type:"object",title:"Query Denom Metadata Response",description:"QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC method."},"cosmos.bank.v1beta1.DenomUnit":{properties:{denom:{type:"string",description:"denom represents the string name of the given denom unit (e.g uatom)."},exponent:{type:"integer",description:"exponent represents power of 10 exponent that one must raise the base_denom to in order to equal the given DenomUnit's denom 1 denom = 10^exponent base_denom (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with exponent = 6, thus: 1 atom = 10^6 uatom)."},aliases:{items:{type:"string"},type:"array",description:"aliases is a list of string aliases for the given denom"}},additionalProperties:!0,type:"object",title:"Denom Unit",description:"DenomUnit represents a struct that describes a given denomination unit of the basic token."},"cosmos.bank.v1beta1.Metadata":{properties:{description:{type:"string"},denom_units:{items:{$ref:"#/definitions/cosmos.bank.v1beta1.DenomUnit"},type:"array",description:"denom_units represents the list of DenomUnit's for a given coin"},base:{type:"string",description:"base represents the base denom (should be the DenomUnit with exponent = 0)."},display:{type:"string",description:"display indicates the suggested denom that should be displayed in clients."},name:{type:"string",description:"name defines the name of the token (eg: Cosmos Atom) Since: cosmos-sdk 0.43"},symbol:{type:"string",description:"symbol is the token symbol usually shown on exchanges (eg: ATOM). This can be the same as the display. Since: cosmos-sdk 0.43"},uri:{type:"string",description:"URI to a document (on or off-chain) that contains additional information. Optional. Since: cosmos-sdk 0.46"},uri_hash:{type:"string",description:"URIHash is a sha256 hash of a document pointed by URI. It's used to verify that the document didn't change. Optional. Since: cosmos-sdk 0.46"}},additionalProperties:!0,type:"object",title:"Metadata",description:"Metadata represents a struct that describes a basic token."}}},http_rules:[{Params:["denom"],HasQuery:!1,HasBody:!1}]},"cosmos.bank.v1beta1/QueryDenomsMetadata":{module_name:"cosmos.bank.v1beta1",name:"DenomsMetadata",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDenomsMetadataRequest",definitions:{QueryDenomsMetadataRequest:{properties:{pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Denoms Metadata Request",description:"QueryDenomsMetadataRequest is the request type for the Query/DenomsMetadata RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDenomsMetadataResponse",definitions:{QueryDenomsMetadataResponse:{properties:{metadatas:{items:{$ref:"#/definitions/cosmos.bank.v1beta1.Metadata"},type:"array",description:"metadata provides the client information for all the registered tokens."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Denoms Metadata Response",description:"QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC method."},"cosmos.bank.v1beta1.DenomUnit":{properties:{denom:{type:"string",description:"denom represents the string name of the given denom unit (e.g uatom)."},exponent:{type:"integer",description:"exponent represents power of 10 exponent that one must raise the base_denom to in order to equal the given DenomUnit's denom 1 denom = 10^exponent base_denom (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with exponent = 6, thus: 1 atom = 10^6 uatom)."},aliases:{items:{type:"string"},type:"array",description:"aliases is a list of string aliases for the given denom"}},additionalProperties:!0,type:"object",title:"Denom Unit",description:"DenomUnit represents a struct that describes a given denomination unit of the basic token."},"cosmos.bank.v1beta1.Metadata":{properties:{description:{type:"string"},denom_units:{items:{$ref:"#/definitions/cosmos.bank.v1beta1.DenomUnit"},type:"array",description:"denom_units represents the list of DenomUnit's for a given coin"},base:{type:"string",description:"base represents the base denom (should be the DenomUnit with exponent = 0)."},display:{type:"string",description:"display indicates the suggested denom that should be displayed in clients."},name:{type:"string",description:"name defines the name of the token (eg: Cosmos Atom) Since: cosmos-sdk 0.43"},symbol:{type:"string",description:"symbol is the token symbol usually shown on exchanges (eg: ATOM). This can be the same as the display. Since: cosmos-sdk 0.43"},uri:{type:"string",description:"URI to a document (on or off-chain) that contains additional information. Optional. Since: cosmos-sdk 0.46"},uri_hash:{type:"string",description:"URIHash is a sha256 hash of a document pointed by URI. It's used to verify that the document didn't change. Optional. Since: cosmos-sdk 0.46"}},additionalProperties:!0,type:"object",title:"Metadata",description:"Metadata represents a struct that describes a basic token."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"cosmos.bank.v1beta1/QueryDenomOwners":{module_name:"cosmos.bank.v1beta1",name:"DenomOwners",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDenomOwnersRequest",definitions:{QueryDenomOwnersRequest:{properties:{denom:{type:"string",description:"denom defines the coin denomination to query all account holders for."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Denom Owners Request",description:"QueryDenomOwnersRequest defines the request type for the DenomOwners RPC query, which queries for a paginated set of all account holders of a particular denomination."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDenomOwnersResponse",definitions:{QueryDenomOwnersResponse:{properties:{denom_owners:{items:{$ref:"#/definitions/cosmos.bank.v1beta1.DenomOwner"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Denom Owners Response",description:"QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query. Since: cosmos-sdk 0.46"},"cosmos.bank.v1beta1.DenomOwner":{properties:{address:{type:"string",description:"address defines the address that owns a particular denomination."},balance:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0,description:"balance is the balance of the denominated coin for an account."}},additionalProperties:!0,type:"object",title:"Denom Owner",description:"DenomOwner defines structure representing an account that owns or holds a particular denominated token. It contains the account address and account balance of the denominated token. Since: cosmos-sdk 0.46"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},http_rules:[{Params:["denom"],HasQuery:!0,HasBody:!1}]},"cosmos.bank.v1beta1/sendMsgSend":{module_name:"cosmos.bank.v1beta1",name:"Send",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgSend",definitions:{MsgSend:{properties:{from_address:{type:"string"},to_address:{type:"string"},amount:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array"}},additionalProperties:!0,type:"object",title:"Msg Send",description:"MsgSend represents a message to send coins from one account to another."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgSendResponse",definitions:{MsgSendResponse:{additionalProperties:!0,type:"object",title:"Msg Send Response",description:"MsgSendResponse defines the Msg/Send response type."}}},http_rules:null},"cosmos.bank.v1beta1/sendMsgMultiSend":{module_name:"cosmos.bank.v1beta1",name:"MultiSend",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgMultiSend",definitions:{MsgMultiSend:{properties:{inputs:{items:{$ref:"#/definitions/cosmos.bank.v1beta1.Input"},type:"array"},outputs:{items:{$ref:"#/definitions/cosmos.bank.v1beta1.Output"},type:"array"}},additionalProperties:!0,type:"object",title:"Msg Multi Send",description:"MsgMultiSend represents an arbitrary multi-in, multi-out send message."},"cosmos.bank.v1beta1.Input":{properties:{address:{type:"string"},coins:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array"}},additionalProperties:!0,type:"object",title:"Input",description:"Input models transaction input."},"cosmos.bank.v1beta1.Output":{properties:{address:{type:"string"},coins:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array"}},additionalProperties:!0,type:"object",title:"Output",description:"Output models transaction outputs."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgMultiSendResponse",definitions:{MsgMultiSendResponse:{additionalProperties:!0,type:"object",title:"Msg Multi Send Response",description:"MsgMultiSendResponse defines the Msg/MultiSend response type."}}},http_rules:null},"cosmos.distribution.v1beta1/QueryParams":{module_name:"cosmos.distribution.v1beta1",name:"Params",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsRequest",definitions:{QueryParamsRequest:{additionalProperties:!0,type:"object",title:"Query Params Request",description:"QueryParamsRequest is the request type for the Query/Params RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsResponse",definitions:{QueryParamsResponse:{properties:{params:{$ref:"#/definitions/cosmos.distribution.v1beta1.Params",additionalProperties:!0,description:"params defines the parameters of the module."}},additionalProperties:!0,type:"object",title:"Query Params Response",description:"QueryParamsResponse is the response type for the Query/Params RPC method."},"cosmos.distribution.v1beta1.Params":{properties:{community_tax:{type:"string"},base_proposer_reward:{type:"string"},bonus_proposer_reward:{type:"string"},withdraw_addr_enabled:{type:"boolean"}},additionalProperties:!0,type:"object",title:"Params",description:"Params defines the set of params for the distribution module."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.distribution.v1beta1/QueryValidatorOutstandingRewards":{module_name:"cosmos.distribution.v1beta1",name:"ValidatorOutstandingRewards",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorOutstandingRewardsRequest",definitions:{QueryValidatorOutstandingRewardsRequest:{properties:{validator_address:{type:"string",description:"validator_address defines the validator address to query for."}},additionalProperties:!0,type:"object",title:"Query Validator Outstanding Rewards Request",description:"QueryValidatorOutstandingRewardsRequest is the request type for the Query/ValidatorOutstandingRewards RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorOutstandingRewardsResponse",definitions:{QueryValidatorOutstandingRewardsResponse:{properties:{rewards:{$ref:"#/definitions/cosmos.distribution.v1beta1.ValidatorOutstandingRewards",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Validator Outstanding Rewards Response",description:"QueryValidatorOutstandingRewardsResponse is the response type for the Query/ValidatorOutstandingRewards RPC method."},"cosmos.base.v1beta1.DecCoin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Dec Coin",description:"DecCoin defines a token with a denomination and a decimal amount. NOTE: The amount field is an Dec which implements the custom method signatures required by gogoproto."},"cosmos.distribution.v1beta1.ValidatorOutstandingRewards":{properties:{rewards:{items:{$ref:"#/definitions/cosmos.base.v1beta1.DecCoin"},type:"array"}},additionalProperties:!0,type:"object",title:"Validator Outstanding Rewards",description:"ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards for a validator inexpensive to track, allows simple sanity checks."}}},http_rules:[{Params:["validator_address"],HasQuery:!1,HasBody:!1}]},"cosmos.distribution.v1beta1/QueryValidatorCommission":{module_name:"cosmos.distribution.v1beta1",name:"ValidatorCommission",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorCommissionRequest",definitions:{QueryValidatorCommissionRequest:{properties:{validator_address:{type:"string",description:"validator_address defines the validator address to query for."}},additionalProperties:!0,type:"object",title:"Query Validator Commission Request",description:"QueryValidatorCommissionRequest is the request type for the Query/ValidatorCommission RPC method"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorCommissionResponse",definitions:{QueryValidatorCommissionResponse:{properties:{commission:{$ref:"#/definitions/cosmos.distribution.v1beta1.ValidatorAccumulatedCommission",additionalProperties:!0,description:"commission defines the commision the validator received."}},additionalProperties:!0,type:"object",title:"Query Validator Commission Response",description:"QueryValidatorCommissionResponse is the response type for the Query/ValidatorCommission RPC method"},"cosmos.base.v1beta1.DecCoin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Dec Coin",description:"DecCoin defines a token with a denomination and a decimal amount. NOTE: The amount field is an Dec which implements the custom method signatures required by gogoproto."},"cosmos.distribution.v1beta1.ValidatorAccumulatedCommission":{properties:{commission:{items:{$ref:"#/definitions/cosmos.base.v1beta1.DecCoin"},type:"array"}},additionalProperties:!0,type:"object",title:"Validator Accumulated Commission",description:"ValidatorAccumulatedCommission represents accumulated commission for a validator kept as a running counter, can be withdrawn at any time."}}},http_rules:[{Params:["validator_address"],HasQuery:!1,HasBody:!1}]},"cosmos.distribution.v1beta1/QueryValidatorSlashes":{module_name:"cosmos.distribution.v1beta1",name:"ValidatorSlashes",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorSlashesRequest",definitions:{QueryValidatorSlashesRequest:{properties:{validator_address:{type:"string",description:"validator_address defines the validator address to query for."},starting_height:{type:"string",description:"starting_height defines the optional starting height to query the slashes."},ending_height:{type:"string",description:"starting_height defines the optional ending height to query the slashes."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Validator Slashes Request",description:"QueryValidatorSlashesRequest is the request type for the Query/ValidatorSlashes RPC method"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorSlashesResponse",definitions:{QueryValidatorSlashesResponse:{properties:{slashes:{items:{$ref:"#/definitions/cosmos.distribution.v1beta1.ValidatorSlashEvent"},type:"array",description:"slashes defines the slashes the validator received."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Validator Slashes Response",description:"QueryValidatorSlashesResponse is the response type for the Query/ValidatorSlashes RPC method."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.distribution.v1beta1.ValidatorSlashEvent":{properties:{validator_period:{type:"string"},fraction:{type:"string"}},additionalProperties:!0,type:"object",title:"Validator Slash Event",description:"ValidatorSlashEvent represents a validator slash event. Height is implicit within the store key. This is needed to calculate appropriate amount of staking tokens for delegations which are withdrawn after a slash has occurred."}}},http_rules:[{Params:["validator_address"],HasQuery:!0,HasBody:!1}]},"cosmos.distribution.v1beta1/QueryDelegationRewards":{module_name:"cosmos.distribution.v1beta1",name:"DelegationRewards",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegationRewardsRequest",definitions:{QueryDelegationRewardsRequest:{properties:{delegator_address:{type:"string",description:"delegator_address defines the delegator address to query for."},validator_address:{type:"string",description:"validator_address defines the validator address to query for."}},additionalProperties:!0,type:"object",title:"Query Delegation Rewards Request",description:"QueryDelegationRewardsRequest is the request type for the Query/DelegationRewards RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegationRewardsResponse",definitions:{QueryDelegationRewardsResponse:{properties:{rewards:{items:{$ref:"#/definitions/cosmos.base.v1beta1.DecCoin"},type:"array",description:"rewards defines the rewards accrued by a delegation."}},additionalProperties:!0,type:"object",title:"Query Delegation Rewards Response",description:"QueryDelegationRewardsResponse is the response type for the Query/DelegationRewards RPC method."},"cosmos.base.v1beta1.DecCoin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Dec Coin",description:"DecCoin defines a token with a denomination and a decimal amount. NOTE: The amount field is an Dec which implements the custom method signatures required by gogoproto."}}},http_rules:[{Params:["delegator_address","validator_address"],HasQuery:!1,HasBody:!1}]},"cosmos.distribution.v1beta1/QueryDelegationTotalRewards":{module_name:"cosmos.distribution.v1beta1",name:"DelegationTotalRewards",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegationTotalRewardsRequest",definitions:{QueryDelegationTotalRewardsRequest:{properties:{delegator_address:{type:"string",description:"delegator_address defines the delegator address to query for."}},additionalProperties:!0,type:"object",title:"Query Delegation Total Rewards Request",description:"QueryDelegationTotalRewardsRequest is the request type for the Query/DelegationTotalRewards RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegationTotalRewardsResponse",definitions:{QueryDelegationTotalRewardsResponse:{properties:{rewards:{items:{$ref:"#/definitions/cosmos.distribution.v1beta1.DelegationDelegatorReward"},type:"array",description:"rewards defines all the rewards accrued by a delegator."},total:{items:{$ref:"#/definitions/cosmos.base.v1beta1.DecCoin"},type:"array",description:"total defines the sum of all the rewards."}},additionalProperties:!0,type:"object",title:"Query Delegation Total Rewards Response",description:"QueryDelegationTotalRewardsResponse is the response type for the Query/DelegationTotalRewards RPC method."},"cosmos.base.v1beta1.DecCoin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Dec Coin",description:"DecCoin defines a token with a denomination and a decimal amount. NOTE: The amount field is an Dec which implements the custom method signatures required by gogoproto."},"cosmos.distribution.v1beta1.DelegationDelegatorReward":{properties:{validator_address:{type:"string"},reward:{items:{$ref:"#/definitions/cosmos.base.v1beta1.DecCoin"},type:"array"}},additionalProperties:!0,type:"object",title:"Delegation Delegator Reward",description:"DelegationDelegatorReward represents the properties of a delegator's delegation reward."}}},http_rules:[{Params:["delegator_address"],HasQuery:!1,HasBody:!1}]},"cosmos.distribution.v1beta1/QueryDelegatorValidators":{module_name:"cosmos.distribution.v1beta1",name:"DelegatorValidators",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegatorValidatorsRequest",definitions:{QueryDelegatorValidatorsRequest:{properties:{delegator_address:{type:"string",description:"delegator_address defines the delegator address to query for."}},additionalProperties:!0,type:"object",title:"Query Delegator Validators Request",description:"QueryDelegatorValidatorsRequest is the request type for the Query/DelegatorValidators RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegatorValidatorsResponse",definitions:{QueryDelegatorValidatorsResponse:{properties:{validators:{items:{type:"string"},type:"array",description:"validators defines the validators a delegator is delegating for."}},additionalProperties:!0,type:"object",title:"Query Delegator Validators Response",description:"QueryDelegatorValidatorsResponse is the response type for the Query/DelegatorValidators RPC method."}}},http_rules:[{Params:["delegator_address"],HasQuery:!1,HasBody:!1}]},"cosmos.distribution.v1beta1/QueryDelegatorWithdrawAddress":{module_name:"cosmos.distribution.v1beta1",name:"DelegatorWithdrawAddress",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegatorWithdrawAddressRequest",definitions:{QueryDelegatorWithdrawAddressRequest:{properties:{delegator_address:{type:"string",description:"delegator_address defines the delegator address to query for."}},additionalProperties:!0,type:"object",title:"Query Delegator Withdraw Address Request",description:"QueryDelegatorWithdrawAddressRequest is the request type for the Query/DelegatorWithdrawAddress RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegatorWithdrawAddressResponse",definitions:{QueryDelegatorWithdrawAddressResponse:{properties:{withdraw_address:{type:"string",description:"withdraw_address defines the delegator address to query for."}},additionalProperties:!0,type:"object",title:"Query Delegator Withdraw Address Response",description:"QueryDelegatorWithdrawAddressResponse is the response type for the Query/DelegatorWithdrawAddress RPC method."}}},http_rules:[{Params:["delegator_address"],HasQuery:!1,HasBody:!1}]},"cosmos.distribution.v1beta1/QueryCommunityPool":{module_name:"cosmos.distribution.v1beta1",name:"CommunityPool",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryCommunityPoolRequest",definitions:{QueryCommunityPoolRequest:{additionalProperties:!0,type:"object",title:"Query Community Pool Request",description:"QueryCommunityPoolRequest is the request type for the Query/CommunityPool RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryCommunityPoolResponse",definitions:{QueryCommunityPoolResponse:{properties:{pool:{items:{$ref:"#/definitions/cosmos.base.v1beta1.DecCoin"},type:"array",description:"pool defines community pool's coins."}},additionalProperties:!0,type:"object",title:"Query Community Pool Response",description:"QueryCommunityPoolResponse is the response type for the Query/CommunityPool RPC method."},"cosmos.base.v1beta1.DecCoin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Dec Coin",description:"DecCoin defines a token with a denomination and a decimal amount. NOTE: The amount field is an Dec which implements the custom method signatures required by gogoproto."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.distribution.v1beta1/sendMsgSetWithdrawAddress":{module_name:"cosmos.distribution.v1beta1",name:"SetWithdrawAddress",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgSetWithdrawAddress",definitions:{MsgSetWithdrawAddress:{properties:{delegator_address:{type:"string"},withdraw_address:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Set Withdraw Address",description:"MsgSetWithdrawAddress sets the withdraw address for a delegator (or validator self-delegation)."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgSetWithdrawAddressResponse",definitions:{MsgSetWithdrawAddressResponse:{additionalProperties:!0,type:"object",title:"Msg Set Withdraw Address Response",description:"MsgSetWithdrawAddressResponse defines the Msg/SetWithdrawAddress response type."}}},http_rules:null},"cosmos.distribution.v1beta1/sendMsgWithdrawDelegatorReward":{module_name:"cosmos.distribution.v1beta1",name:"WithdrawDelegatorReward",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgWithdrawDelegatorReward",definitions:{MsgWithdrawDelegatorReward:{properties:{delegator_address:{type:"string"},validator_address:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Withdraw Delegator Reward",description:"MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator from a single validator."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgWithdrawDelegatorRewardResponse",definitions:{MsgWithdrawDelegatorRewardResponse:{properties:{amount:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array",description:"Since: cosmos-sdk 0.46"}},additionalProperties:!0,type:"object",title:"Msg Withdraw Delegator Reward Response",description:"MsgWithdrawDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward response type."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},http_rules:null},"cosmos.distribution.v1beta1/sendMsgWithdrawValidatorCommission":{module_name:"cosmos.distribution.v1beta1",name:"WithdrawValidatorCommission",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgWithdrawValidatorCommission",definitions:{MsgWithdrawValidatorCommission:{properties:{validator_address:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Withdraw Validator Commission",description:"MsgWithdrawValidatorCommission withdraws the full commission to the validator address."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgWithdrawValidatorCommissionResponse",definitions:{MsgWithdrawValidatorCommissionResponse:{properties:{amount:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array",description:"Since: cosmos-sdk 0.46"}},additionalProperties:!0,type:"object",title:"Msg Withdraw Validator Commission Response",description:"MsgWithdrawValidatorCommissionResponse defines the Msg/WithdrawValidatorCommission response type."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},http_rules:null},"cosmos.distribution.v1beta1/sendMsgFundCommunityPool":{module_name:"cosmos.distribution.v1beta1",name:"FundCommunityPool",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgFundCommunityPool",definitions:{MsgFundCommunityPool:{properties:{amount:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array"},depositor:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Fund Community Pool",description:"MsgFundCommunityPool allows an account to directly fund the community pool."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgFundCommunityPoolResponse",definitions:{MsgFundCommunityPoolResponse:{additionalProperties:!0,type:"object",title:"Msg Fund Community Pool Response",description:"MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool response type."}}},http_rules:null},"cosmos.feegrant.v1beta1/QueryAllowance":{module_name:"cosmos.feegrant.v1beta1",name:"Allowance",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllowanceRequest",definitions:{QueryAllowanceRequest:{properties:{granter:{type:"string",description:"granter is the address of the user granting an allowance of their funds."},grantee:{type:"string",description:"grantee is the address of the user being granted an allowance of another user's funds."}},additionalProperties:!0,type:"object",title:"Query Allowance Request",description:"QueryAllowanceRequest is the request type for the Query/Allowance RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllowanceResponse",definitions:{QueryAllowanceResponse:{properties:{allowance:{$ref:"#/definitions/cosmos.feegrant.v1beta1.Grant",additionalProperties:!0,description:"allowance is a allowance granted for grantee by granter."}},additionalProperties:!0,type:"object",title:"Query Allowance Response",description:"QueryAllowanceResponse is the response type for the Query/Allowance RPC method."},"cosmos.feegrant.v1beta1.Grant":{properties:{granter:{type:"string",description:"granter is the address of the user granting an allowance of their funds."},grantee:{type:"string",description:"grantee is the address of the user being granted an allowance of another user's funds."},allowance:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"allowance can be any of basic, periodic, allowed fee allowance."}},additionalProperties:!0,type:"object",title:"Grant",description:"Grant is stored in the KVStore to record a grant with full context"}}},http_rules:[{Params:["granter","grantee"],HasQuery:!1,HasBody:!1}]},"cosmos.feegrant.v1beta1/QueryAllowances":{module_name:"cosmos.feegrant.v1beta1",name:"Allowances",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllowancesRequest",definitions:{QueryAllowancesRequest:{properties:{grantee:{type:"string"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Allowances Request",description:"QueryAllowancesRequest is the request type for the Query/Allowances RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllowancesResponse",definitions:{QueryAllowancesResponse:{properties:{allowances:{items:{$ref:"#/definitions/cosmos.feegrant.v1beta1.Grant"},type:"array",description:"allowances are allowance's granted for grantee by granter."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines an pagination for the response."}},additionalProperties:!0,type:"object",title:"Query Allowances Response",description:"QueryAllowancesResponse is the response type for the Query/Allowances RPC method."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.feegrant.v1beta1.Grant":{properties:{granter:{type:"string",description:"granter is the address of the user granting an allowance of their funds."},grantee:{type:"string",description:"grantee is the address of the user being granted an allowance of another user's funds."},allowance:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"allowance can be any of basic, periodic, allowed fee allowance."}},additionalProperties:!0,type:"object",title:"Grant",description:"Grant is stored in the KVStore to record a grant with full context"}}},http_rules:[{Params:["grantee"],HasQuery:!0,HasBody:!1}]},"cosmos.feegrant.v1beta1/QueryAllowancesByGranter":{module_name:"cosmos.feegrant.v1beta1",name:"AllowancesByGranter",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllowancesByGranterRequest",definitions:{QueryAllowancesByGranterRequest:{properties:{granter:{type:"string"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Allowances By Granter Request",description:"QueryAllowancesByGranterRequest is the request type for the Query/AllowancesByGranter RPC method. Since: cosmos-sdk 0.46"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllowancesByGranterResponse",definitions:{QueryAllowancesByGranterResponse:{properties:{allowances:{items:{$ref:"#/definitions/cosmos.feegrant.v1beta1.Grant"},type:"array",description:"allowances that have been issued by the granter."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines an pagination for the response."}},additionalProperties:!0,type:"object",title:"Query Allowances By Granter Response",description:"QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method. Since: cosmos-sdk 0.46"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.feegrant.v1beta1.Grant":{properties:{granter:{type:"string",description:"granter is the address of the user granting an allowance of their funds."},grantee:{type:"string",description:"grantee is the address of the user being granted an allowance of another user's funds."},allowance:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"allowance can be any of basic, periodic, allowed fee allowance."}},additionalProperties:!0,type:"object",title:"Grant",description:"Grant is stored in the KVStore to record a grant with full context"}}},http_rules:[{Params:["granter"],HasQuery:!0,HasBody:!1}]},"cosmos.feegrant.v1beta1/sendMsgGrantAllowance":{module_name:"cosmos.feegrant.v1beta1",name:"GrantAllowance",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgGrantAllowance",definitions:{MsgGrantAllowance:{properties:{granter:{type:"string",description:"granter is the address of the user granting an allowance of their funds."},grantee:{type:"string",description:"grantee is the address of the user being granted an allowance of another user's funds."},allowance:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"allowance can be any of basic, periodic, allowed fee allowance."}},additionalProperties:!0,type:"object",title:"Msg Grant Allowance",description:"MsgGrantAllowance adds permission for Grantee to spend up to Allowance of fees from the account of Granter."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgGrantAllowanceResponse",definitions:{MsgGrantAllowanceResponse:{additionalProperties:!0,type:"object",title:"Msg Grant Allowance Response",description:"MsgGrantAllowanceResponse defines the Msg/GrantAllowanceResponse response type."}}},http_rules:null},"cosmos.feegrant.v1beta1/sendMsgRevokeAllowance":{module_name:"cosmos.feegrant.v1beta1",name:"RevokeAllowance",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgRevokeAllowance",definitions:{MsgRevokeAllowance:{properties:{granter:{type:"string",description:"granter is the address of the user granting an allowance of their funds."},grantee:{type:"string",description:"grantee is the address of the user being granted an allowance of another user's funds."}},additionalProperties:!0,type:"object",title:"Msg Revoke Allowance",description:"MsgRevokeAllowance removes any existing Allowance from Granter to Grantee."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgRevokeAllowanceResponse",definitions:{MsgRevokeAllowanceResponse:{additionalProperties:!0,type:"object",title:"Msg Revoke Allowance Response",description:"MsgRevokeAllowanceResponse defines the Msg/RevokeAllowanceResponse response type."}}},http_rules:null},"cosmos.gov.v1/QueryProposal":{module_name:"cosmos.gov.v1",name:"Proposal",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryProposalRequest",definitions:{QueryProposalRequest:{properties:{proposal_id:{type:"string",description:"proposal_id defines the unique id of the proposal."}},additionalProperties:!0,type:"object",title:"Query Proposal Request",description:"QueryProposalRequest is the request type for the Query/Proposal RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryProposalResponse",definitions:{QueryProposalResponse:{properties:{proposal:{$ref:"#/definitions/cosmos.gov.v1.Proposal",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Proposal Response",description:"QueryProposalResponse is the response type for the Query/Proposal RPC method."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"cosmos.gov.v1.Proposal":{properties:{id:{type:"string"},messages:{items:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Any",description:'`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use \'type.googleapis.com/full.type.name\' as the type URL and the unpack methods only use the fully qualified type name after the last \'/\' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       "@type": "type.googleapis.com/google.profile.Person",       "firstName": <string>,       "lastName": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       "@type": "type.googleapis.com/google.protobuf.Duration",       "value": "1.212s"     }'},type:"array"},status:{enum:["PROPOSAL_STATUS_UNSPECIFIED",0,"PROPOSAL_STATUS_DEPOSIT_PERIOD",1,"PROPOSAL_STATUS_VOTING_PERIOD",2,"PROPOSAL_STATUS_PASSED",3,"PROPOSAL_STATUS_REJECTED",4,"PROPOSAL_STATUS_FAILED",5],oneOf:[{type:"string"},{type:"integer"}],title:"Proposal Status",description:"ProposalStatus enumerates the valid statuses of a proposal."},final_tally_result:{$ref:"#/definitions/cosmos.gov.v1.TallyResult",additionalProperties:!0,description:"final_tally_result is the final tally result of the proposal. When querying a proposal via gRPC, this field is not populated until the proposal's voting period has ended."},submit_time:{type:"string",format:"date-time"},deposit_end_time:{type:"string",format:"date-time"},total_deposit:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array"},voting_start_time:{type:"string",format:"date-time"},voting_end_time:{type:"string",format:"date-time"},metadata:{type:"string",description:"metadata is any arbitrary metadata attached to the proposal."}},additionalProperties:!0,type:"object",title:"Proposal",description:"Proposal defines the core field members of a governance proposal."},"cosmos.gov.v1.TallyResult":{properties:{yes_count:{type:"string"},abstain_count:{type:"string"},no_count:{type:"string"},no_with_veto_count:{type:"string"}},additionalProperties:!0,type:"object",title:"Tally Result",description:"TallyResult defines a standard tally for a governance proposal."}}},http_rules:[{Params:["proposal_id"],HasQuery:!1,HasBody:!1}]},"cosmos.gov.v1/QueryProposals":{module_name:"cosmos.gov.v1",name:"Proposals",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryProposalsRequest",definitions:{QueryProposalsRequest:{properties:{proposal_status:{enum:["PROPOSAL_STATUS_UNSPECIFIED",0,"PROPOSAL_STATUS_DEPOSIT_PERIOD",1,"PROPOSAL_STATUS_VOTING_PERIOD",2,"PROPOSAL_STATUS_PASSED",3,"PROPOSAL_STATUS_REJECTED",4,"PROPOSAL_STATUS_FAILED",5],oneOf:[{type:"string"},{type:"integer"}],title:"Proposal Status",description:"ProposalStatus enumerates the valid statuses of a proposal."},voter:{type:"string",description:"voter defines the voter address for the proposals."},depositor:{type:"string",description:"depositor defines the deposit addresses from the proposals."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Proposals Request",description:"QueryProposalsRequest is the request type for the Query/Proposals RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryProposalsResponse",definitions:{QueryProposalsResponse:{properties:{proposals:{items:{$ref:"#/definitions/cosmos.gov.v1.Proposal"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Proposals Response",description:"QueryProposalsResponse is the response type for the Query/Proposals RPC method."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"cosmos.gov.v1.Proposal":{properties:{id:{type:"string"},messages:{items:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Any",description:'`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use \'type.googleapis.com/full.type.name\' as the type URL and the unpack methods only use the fully qualified type name after the last \'/\' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       "@type": "type.googleapis.com/google.profile.Person",       "firstName": <string>,       "lastName": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       "@type": "type.googleapis.com/google.protobuf.Duration",       "value": "1.212s"     }'},type:"array"},status:{enum:["PROPOSAL_STATUS_UNSPECIFIED",0,"PROPOSAL_STATUS_DEPOSIT_PERIOD",1,"PROPOSAL_STATUS_VOTING_PERIOD",2,"PROPOSAL_STATUS_PASSED",3,"PROPOSAL_STATUS_REJECTED",4,"PROPOSAL_STATUS_FAILED",5],oneOf:[{type:"string"},{type:"integer"}],title:"Proposal Status",description:"ProposalStatus enumerates the valid statuses of a proposal."},final_tally_result:{$ref:"#/definitions/cosmos.gov.v1.TallyResult",additionalProperties:!0,description:"final_tally_result is the final tally result of the proposal. When querying a proposal via gRPC, this field is not populated until the proposal's voting period has ended."},submit_time:{type:"string",format:"date-time"},deposit_end_time:{type:"string",format:"date-time"},total_deposit:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array"},voting_start_time:{type:"string",format:"date-time"},voting_end_time:{type:"string",format:"date-time"},metadata:{type:"string",description:"metadata is any arbitrary metadata attached to the proposal."}},additionalProperties:!0,type:"object",title:"Proposal",description:"Proposal defines the core field members of a governance proposal."},"cosmos.gov.v1.TallyResult":{properties:{yes_count:{type:"string"},abstain_count:{type:"string"},no_count:{type:"string"},no_with_veto_count:{type:"string"}},additionalProperties:!0,type:"object",title:"Tally Result",description:"TallyResult defines a standard tally for a governance proposal."}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"cosmos.gov.v1/QueryVote":{module_name:"cosmos.gov.v1",name:"Vote",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryVoteRequest",definitions:{QueryVoteRequest:{properties:{proposal_id:{type:"string",description:"proposal_id defines the unique id of the proposal."},voter:{type:"string",description:"voter defines the voter address for the proposals."}},additionalProperties:!0,type:"object",title:"Query Vote Request",description:"QueryVoteRequest is the request type for the Query/Vote RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryVoteResponse",definitions:{QueryVoteResponse:{properties:{vote:{$ref:"#/definitions/cosmos.gov.v1.Vote",additionalProperties:!0,description:"vote defined the queried vote."}},additionalProperties:!0,type:"object",title:"Query Vote Response",description:"QueryVoteResponse is the response type for the Query/Vote RPC method."},"cosmos.gov.v1.Vote":{properties:{proposal_id:{type:"string"},voter:{type:"string"},options:{items:{$ref:"#/definitions/cosmos.gov.v1.WeightedVoteOption"},type:"array"},metadata:{type:"string",description:"metadata is any  arbitrary metadata to attached to the vote."}},additionalProperties:!0,type:"object",title:"Vote",description:"Vote defines a vote on a governance proposal. A Vote consists of a proposal ID, the voter, and the vote option."},"cosmos.gov.v1.WeightedVoteOption":{properties:{option:{enum:["VOTE_OPTION_UNSPECIFIED",0,"VOTE_OPTION_YES",1,"VOTE_OPTION_ABSTAIN",2,"VOTE_OPTION_NO",3,"VOTE_OPTION_NO_WITH_VETO",4],oneOf:[{type:"string"},{type:"integer"}],title:"Vote Option",description:"VoteOption enumerates the valid vote options for a given governance proposal."},weight:{type:"string"}},additionalProperties:!0,type:"object",title:"Weighted Vote Option",description:"WeightedVoteOption defines a unit of vote for vote split."}}},http_rules:[{Params:["proposal_id","voter"],HasQuery:!1,HasBody:!1}]},"cosmos.gov.v1/QueryVotes":{module_name:"cosmos.gov.v1",name:"Votes",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryVotesRequest",definitions:{QueryVotesRequest:{properties:{proposal_id:{type:"string",description:"proposal_id defines the unique id of the proposal."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Votes Request",description:"QueryVotesRequest is the request type for the Query/Votes RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryVotesResponse",definitions:{QueryVotesResponse:{properties:{votes:{items:{$ref:"#/definitions/cosmos.gov.v1.Vote"},type:"array",description:"votes defined the queried votes."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Votes Response",description:"QueryVotesResponse is the response type for the Query/Votes RPC method."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.gov.v1.Vote":{properties:{proposal_id:{type:"string"},voter:{type:"string"},options:{items:{$ref:"#/definitions/cosmos.gov.v1.WeightedVoteOption"},type:"array"},metadata:{type:"string",description:"metadata is any  arbitrary metadata to attached to the vote."}},additionalProperties:!0,type:"object",title:"Vote",description:"Vote defines a vote on a governance proposal. A Vote consists of a proposal ID, the voter, and the vote option."},"cosmos.gov.v1.WeightedVoteOption":{properties:{option:{enum:["VOTE_OPTION_UNSPECIFIED",0,"VOTE_OPTION_YES",1,"VOTE_OPTION_ABSTAIN",2,"VOTE_OPTION_NO",3,"VOTE_OPTION_NO_WITH_VETO",4],oneOf:[{type:"string"},{type:"integer"}],title:"Vote Option",description:"VoteOption enumerates the valid vote options for a given governance proposal."},weight:{type:"string"}},additionalProperties:!0,type:"object",title:"Weighted Vote Option",description:"WeightedVoteOption defines a unit of vote for vote split."}}},http_rules:[{Params:["proposal_id"],HasQuery:!0,HasBody:!1}]},"cosmos.gov.v1/QueryParams":{module_name:"cosmos.gov.v1",name:"Params",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsRequest",definitions:{QueryParamsRequest:{properties:{params_type:{type:"string",description:'params_type defines which parameters to query for, can be one of "voting", "tallying" or "deposit".'}},additionalProperties:!0,type:"object",title:"Query Params Request",description:"QueryParamsRequest is the request type for the Query/Params RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsResponse",definitions:{QueryParamsResponse:{properties:{voting_params:{$ref:"#/definitions/cosmos.gov.v1.VotingParams",additionalProperties:!0,description:"voting_params defines the parameters related to voting."},deposit_params:{$ref:"#/definitions/cosmos.gov.v1.DepositParams",additionalProperties:!0,description:"deposit_params defines the parameters related to deposit."},tally_params:{$ref:"#/definitions/cosmos.gov.v1.TallyParams",additionalProperties:!0,description:"tally_params defines the parameters related to tally."}},additionalProperties:!0,type:"object",title:"Query Params Response",description:"QueryParamsResponse is the response type for the Query/Params RPC method."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"cosmos.gov.v1.DepositParams":{properties:{min_deposit:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array",description:"Minimum deposit for a proposal to enter voting period."},max_deposit_period:{pattern:"^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",type:"string",description:"Maximum period for Atom holders to deposit on a proposal. Initial value: 2  months.",format:"regex"}},additionalProperties:!0,type:"object",title:"Deposit Params",description:"DepositParams defines the params for deposits on governance proposals."},"cosmos.gov.v1.TallyParams":{properties:{quorum:{type:"string",description:"Minimum percentage of total stake needed to vote for a result to be  considered valid."},threshold:{type:"string",description:"Minimum proportion of Yes votes for proposal to pass. Default value: 0.5."},veto_threshold:{type:"string",description:"Minimum value of Veto votes to Total votes ratio for proposal to be  vetoed. Default value: 1/3."}},additionalProperties:!0,type:"object",title:"Tally Params",description:"TallyParams defines the params for tallying votes on governance proposals."},"cosmos.gov.v1.VotingParams":{properties:{voting_period:{pattern:"^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",type:"string",description:"Length of the voting period.",format:"regex"}},additionalProperties:!0,type:"object",title:"Voting Params",description:"VotingParams defines the params for voting on governance proposals."}}},http_rules:[{Params:["params_type"],HasQuery:!1,HasBody:!1}]},"cosmos.gov.v1/QueryDeposit":{module_name:"cosmos.gov.v1",name:"Deposit",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDepositRequest",definitions:{QueryDepositRequest:{properties:{proposal_id:{type:"string",description:"proposal_id defines the unique id of the proposal."},depositor:{type:"string",description:"depositor defines the deposit addresses from the proposals."}},additionalProperties:!0,type:"object",title:"Query Deposit Request",description:"QueryDepositRequest is the request type for the Query/Deposit RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDepositResponse",definitions:{QueryDepositResponse:{properties:{deposit:{$ref:"#/definitions/cosmos.gov.v1.Deposit",additionalProperties:!0,description:"deposit defines the requested deposit."}},additionalProperties:!0,type:"object",title:"Query Deposit Response",description:"QueryDepositResponse is the response type for the Query/Deposit RPC method."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"cosmos.gov.v1.Deposit":{properties:{proposal_id:{type:"string"},depositor:{type:"string"},amount:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array"}},additionalProperties:!0,type:"object",title:"Deposit",description:"Deposit defines an amount deposited by an account address to an active proposal."}}},http_rules:[{Params:["proposal_id","depositor"],HasQuery:!1,HasBody:!1}]},"cosmos.gov.v1/QueryDeposits":{module_name:"cosmos.gov.v1",name:"Deposits",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDepositsRequest",definitions:{QueryDepositsRequest:{properties:{proposal_id:{type:"string",description:"proposal_id defines the unique id of the proposal."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Deposits Request",description:"QueryDepositsRequest is the request type for the Query/Deposits RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDepositsResponse",definitions:{QueryDepositsResponse:{properties:{deposits:{items:{$ref:"#/definitions/cosmos.gov.v1.Deposit"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Deposits Response",description:"QueryDepositsResponse is the response type for the Query/Deposits RPC method."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"cosmos.gov.v1.Deposit":{properties:{proposal_id:{type:"string"},depositor:{type:"string"},amount:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array"}},additionalProperties:!0,type:"object",title:"Deposit",description:"Deposit defines an amount deposited by an account address to an active proposal."}}},http_rules:[{Params:["proposal_id"],HasQuery:!0,HasBody:!1}]},"cosmos.gov.v1/QueryTallyResult":{module_name:"cosmos.gov.v1",name:"TallyResult",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryTallyResultRequest",definitions:{QueryTallyResultRequest:{properties:{proposal_id:{type:"string",description:"proposal_id defines the unique id of the proposal."}},additionalProperties:!0,type:"object",title:"Query Tally Result Request",description:"QueryTallyResultRequest is the request type for the Query/Tally RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryTallyResultResponse",definitions:{QueryTallyResultResponse:{properties:{tally:{$ref:"#/definitions/cosmos.gov.v1.TallyResult",additionalProperties:!0,description:"tally defines the requested tally."}},additionalProperties:!0,type:"object",title:"Query Tally Result Response",description:"QueryTallyResultResponse is the response type for the Query/Tally RPC method."},"cosmos.gov.v1.TallyResult":{properties:{yes_count:{type:"string"},abstain_count:{type:"string"},no_count:{type:"string"},no_with_veto_count:{type:"string"}},additionalProperties:!0,type:"object",title:"Tally Result",description:"TallyResult defines a standard tally for a governance proposal."}}},http_rules:[{Params:["proposal_id"],HasQuery:!1,HasBody:!1}]},"cosmos.gov.v1/sendMsgSubmitProposal":{module_name:"cosmos.gov.v1",name:"SubmitProposal",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgSubmitProposal",definitions:{MsgSubmitProposal:{properties:{messages:{items:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Any",description:'`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use \'type.googleapis.com/full.type.name\' as the type URL and the unpack methods only use the fully qualified type name after the last \'/\' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       "@type": "type.googleapis.com/google.profile.Person",       "firstName": <string>,       "lastName": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       "@type": "type.googleapis.com/google.protobuf.Duration",       "value": "1.212s"     }'},type:"array"},initial_deposit:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array"},proposer:{type:"string"},metadata:{type:"string",description:"metadata is any arbitrary metadata attached to the proposal."}},additionalProperties:!0,type:"object",title:"Msg Submit Proposal",description:"MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary proposal Content."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgSubmitProposalResponse",definitions:{MsgSubmitProposalResponse:{properties:{proposal_id:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Submit Proposal Response",description:"MsgSubmitProposalResponse defines the Msg/SubmitProposal response type."}}},http_rules:null},"cosmos.gov.v1/sendMsgExecLegacyContent":{module_name:"cosmos.gov.v1",name:"ExecLegacyContent",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgExecLegacyContent",definitions:{MsgExecLegacyContent:{properties:{content:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"content is the proposal's content."},authority:{type:"string",description:"authority must be the gov module address."}},additionalProperties:!0,type:"object",title:"Msg Exec Legacy Content",description:"MsgExecLegacyContent is used to wrap the legacy content field into a message. This ensures backwards compatibility with v1beta1.MsgSubmitProposal."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgExecLegacyContentResponse",definitions:{MsgExecLegacyContentResponse:{additionalProperties:!0,type:"object",title:"Msg Exec Legacy Content Response",description:"MsgExecLegacyContentResponse defines the Msg/ExecLegacyContent response type."}}},http_rules:null},"cosmos.gov.v1/sendMsgVote":{module_name:"cosmos.gov.v1",name:"Vote",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgVote",definitions:{MsgVote:{properties:{proposal_id:{type:"string"},voter:{type:"string"},option:{enum:["VOTE_OPTION_UNSPECIFIED",0,"VOTE_OPTION_YES",1,"VOTE_OPTION_ABSTAIN",2,"VOTE_OPTION_NO",3,"VOTE_OPTION_NO_WITH_VETO",4],oneOf:[{type:"string"},{type:"integer"}],title:"Vote Option",description:"VoteOption enumerates the valid vote options for a given governance proposal."},metadata:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Vote",description:"MsgVote defines a message to cast a vote."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgVoteResponse",definitions:{MsgVoteResponse:{additionalProperties:!0,type:"object",title:"Msg Vote Response",description:"MsgVoteResponse defines the Msg/Vote response type."}}},http_rules:null},"cosmos.gov.v1/sendMsgVoteWeighted":{module_name:"cosmos.gov.v1",name:"VoteWeighted",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgVoteWeighted",definitions:{MsgVoteWeighted:{properties:{proposal_id:{type:"string"},voter:{type:"string"},options:{items:{$ref:"#/definitions/cosmos.gov.v1.WeightedVoteOption"},type:"array"},metadata:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Vote Weighted",description:"MsgVoteWeighted defines a message to cast a vote."},"cosmos.gov.v1.WeightedVoteOption":{properties:{option:{enum:["VOTE_OPTION_UNSPECIFIED",0,"VOTE_OPTION_YES",1,"VOTE_OPTION_ABSTAIN",2,"VOTE_OPTION_NO",3,"VOTE_OPTION_NO_WITH_VETO",4],oneOf:[{type:"string"},{type:"integer"}],title:"Vote Option",description:"VoteOption enumerates the valid vote options for a given governance proposal."},weight:{type:"string"}},additionalProperties:!0,type:"object",title:"Weighted Vote Option",description:"WeightedVoteOption defines a unit of vote for vote split."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgVoteWeightedResponse",definitions:{MsgVoteWeightedResponse:{additionalProperties:!0,type:"object",title:"Msg Vote Weighted Response",description:"MsgVoteWeightedResponse defines the Msg/VoteWeighted response type."}}},http_rules:null},"cosmos.gov.v1/sendMsgDeposit":{module_name:"cosmos.gov.v1",name:"Deposit",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgDeposit",definitions:{MsgDeposit:{properties:{proposal_id:{type:"string"},depositor:{type:"string"},amount:{items:{$ref:"#/definitions/cosmos.base.v1beta1.Coin"},type:"array"}},additionalProperties:!0,type:"object",title:"Msg Deposit",description:"MsgDeposit defines a message to submit a deposit to an existing proposal."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgDepositResponse",definitions:{MsgDepositResponse:{additionalProperties:!0,type:"object",title:"Msg Deposit Response",description:"MsgDepositResponse defines the Msg/Deposit response type."}}},http_rules:null},"cosmos.group.v1/QueryGroupInfo":{module_name:"cosmos.group.v1",name:"GroupInfo",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupInfoRequest",definitions:{QueryGroupInfoRequest:{properties:{group_id:{type:"string",description:"group_id is the unique ID of the group."}},additionalProperties:!0,type:"object",title:"Query Group Info Request",description:"QueryGroupInfoRequest is the Query/GroupInfo request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupInfoResponse",definitions:{QueryGroupInfoResponse:{properties:{info:{$ref:"#/definitions/cosmos.group.v1.GroupInfo",additionalProperties:!0,description:"info is the GroupInfo for the group."}},additionalProperties:!0,type:"object",title:"Query Group Info Response",description:"QueryGroupInfoResponse is the Query/GroupInfo response type."},"cosmos.group.v1.GroupInfo":{properties:{id:{type:"string",description:"id is the unique ID of the group."},admin:{type:"string",description:"admin is the account address of the group's admin."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the group."},version:{type:"string",description:"version is used to track changes to a group's membership structure that would break existing proposals. Whenever any members weight is changed, or any member is added or removed this version is incremented and will cause proposals based on older versions of this group to fail"},total_weight:{type:"string",description:"total_weight is the sum of the group members' weights."},created_at:{type:"string",description:"created_at is a timestamp specifying when a group was created.",format:"date-time"}},additionalProperties:!0,type:"object",title:"State",description:"State  GroupInfo represents the high-level on-chain information for a group."}}},http_rules:[{Params:["group_id"],HasQuery:!1,HasBody:!1}]},"cosmos.group.v1/QueryGroupPolicyInfo":{module_name:"cosmos.group.v1",name:"GroupPolicyInfo",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupPolicyInfoRequest",definitions:{QueryGroupPolicyInfoRequest:{properties:{address:{type:"string",description:"address is the account address of the group policy."}},additionalProperties:!0,type:"object",title:"Query Group Policy Info Request",description:"QueryGroupPolicyInfoRequest is the Query/GroupPolicyInfo request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupPolicyInfoResponse",definitions:{QueryGroupPolicyInfoResponse:{properties:{info:{$ref:"#/definitions/cosmos.group.v1.GroupPolicyInfo",additionalProperties:!0,description:"info is the GroupPolicyInfo for the group policy."}},additionalProperties:!0,type:"object",title:"Query Group Policy Info Response",description:"QueryGroupPolicyInfoResponse is the Query/GroupPolicyInfo response type."},"cosmos.group.v1.GroupPolicyInfo":{properties:{address:{type:"string",description:"address is the account address of group policy."},group_id:{type:"string",description:"group_id is the unique ID of the group."},admin:{type:"string",description:"admin is the account address of the group admin."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the group policy."},version:{type:"string",description:"version is used to track changes to a group's GroupPolicyInfo structure that would create a different result on a running proposal."},decision_policy:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"decision_policy specifies the group policy's decision policy."},created_at:{type:"string",description:"created_at is a timestamp specifying when a group policy was created.",format:"date-time"}},additionalProperties:!0,type:"object",title:"Group Policy Info",description:"GroupPolicyInfo represents the high-level on-chain information for a group policy."}}},http_rules:[{Params:["address"],HasQuery:!1,HasBody:!1}]},"cosmos.group.v1/QueryGroupMembers":{module_name:"cosmos.group.v1",name:"GroupMembers",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupMembersRequest",definitions:{QueryGroupMembersRequest:{properties:{group_id:{type:"string",description:"group_id is the unique ID of the group."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Group Members Request",description:"QueryGroupMembersRequest is the Query/GroupMembers request type."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupMembersResponse",definitions:{QueryGroupMembersResponse:{properties:{members:{items:{$ref:"#/definitions/cosmos.group.v1.GroupMember"},type:"array",description:"members are the members of the group with given group_id."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Group Members Response",description:"QueryGroupMembersResponse is the Query/GroupMembersResponse response type."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.group.v1.GroupMember":{properties:{group_id:{type:"string",description:"group_id is the unique ID of the group."},member:{$ref:"#/definitions/cosmos.group.v1.Member",additionalProperties:!0,description:"member is the member data."}},additionalProperties:!0,type:"object",title:"Group Member",description:"GroupMember represents the relationship between a group and a member."},"cosmos.group.v1.Member":{properties:{address:{type:"string",description:"address is the member's account address."},weight:{type:"string",description:"weight is the member's voting weight that should be greater than 0."},metadata:{type:"string",description:"metadata is any arbitrary metadata attached to the member."},added_at:{type:"string",description:"added_at is a timestamp specifying when a member was added.",format:"date-time"}},additionalProperties:!0,type:"object",title:"Member",description:"Member represents a group member with an account address, non-zero weight, metadata and added_at timestamp."}}},http_rules:[{Params:["group_id"],HasQuery:!0,HasBody:!1}]},"cosmos.group.v1/QueryGroupsByAdmin":{module_name:"cosmos.group.v1",name:"GroupsByAdmin",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupsByAdminRequest",definitions:{QueryGroupsByAdminRequest:{properties:{admin:{type:"string",description:"admin is the account address of a group's admin."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Groups By Admin Request",description:"QueryGroupsByAdminRequest is the Query/GroupsByAdmin request type."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupsByAdminResponse",definitions:{QueryGroupsByAdminResponse:{properties:{groups:{items:{$ref:"#/definitions/cosmos.group.v1.GroupInfo"},type:"array",description:"groups are the groups info with the provided admin."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Groups By Admin Response",description:"QueryGroupsByAdminResponse is the Query/GroupsByAdminResponse response type."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.group.v1.GroupInfo":{properties:{id:{type:"string",description:"id is the unique ID of the group."},admin:{type:"string",description:"admin is the account address of the group's admin."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the group."},version:{type:"string",description:"version is used to track changes to a group's membership structure that would break existing proposals. Whenever any members weight is changed, or any member is added or removed this version is incremented and will cause proposals based on older versions of this group to fail"},total_weight:{type:"string",description:"total_weight is the sum of the group members' weights."},created_at:{type:"string",description:"created_at is a timestamp specifying when a group was created.",format:"date-time"}},additionalProperties:!0,type:"object",title:"State",description:"State  GroupInfo represents the high-level on-chain information for a group."}}},http_rules:[{Params:["admin"],HasQuery:!0,HasBody:!1}]},"cosmos.group.v1/QueryGroupPoliciesByGroup":{module_name:"cosmos.group.v1",name:"GroupPoliciesByGroup",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupPoliciesByGroupRequest",definitions:{QueryGroupPoliciesByGroupRequest:{properties:{group_id:{type:"string",description:"group_id is the unique ID of the group policy's group."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Group Policies By Group Request",description:"QueryGroupPoliciesByGroupRequest is the Query/GroupPoliciesByGroup request type."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupPoliciesByGroupResponse",definitions:{QueryGroupPoliciesByGroupResponse:{properties:{group_policies:{items:{$ref:"#/definitions/cosmos.group.v1.GroupPolicyInfo"},type:"array",description:"group_policies are the group policies info associated with the provided group."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Group Policies By Group Response",description:"QueryGroupPoliciesByGroupResponse is the Query/GroupPoliciesByGroup response type."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.group.v1.GroupPolicyInfo":{properties:{address:{type:"string",description:"address is the account address of group policy."},group_id:{type:"string",description:"group_id is the unique ID of the group."},admin:{type:"string",description:"admin is the account address of the group admin."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the group policy."},version:{type:"string",description:"version is used to track changes to a group's GroupPolicyInfo structure that would create a different result on a running proposal."},decision_policy:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"decision_policy specifies the group policy's decision policy."},created_at:{type:"string",description:"created_at is a timestamp specifying when a group policy was created.",format:"date-time"}},additionalProperties:!0,type:"object",title:"Group Policy Info",description:"GroupPolicyInfo represents the high-level on-chain information for a group policy."}}},http_rules:[{Params:["group_id"],HasQuery:!0,HasBody:!1}]},"cosmos.group.v1/QueryGroupPoliciesByAdmin":{module_name:"cosmos.group.v1",name:"GroupPoliciesByAdmin",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupPoliciesByAdminRequest",definitions:{QueryGroupPoliciesByAdminRequest:{properties:{admin:{type:"string",description:"admin is the admin address of the group policy."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Group Policies By Admin Request",description:"QueryGroupPoliciesByAdminRequest is the Query/GroupPoliciesByAdmin request type."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupPoliciesByAdminResponse",definitions:{QueryGroupPoliciesByAdminResponse:{properties:{group_policies:{items:{$ref:"#/definitions/cosmos.group.v1.GroupPolicyInfo"},type:"array",description:"group_policies are the group policies info with provided admin."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Group Policies By Admin Response",description:"QueryGroupPoliciesByAdminResponse is the Query/GroupPoliciesByAdmin response type."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.group.v1.GroupPolicyInfo":{properties:{address:{type:"string",description:"address is the account address of group policy."},group_id:{type:"string",description:"group_id is the unique ID of the group."},admin:{type:"string",description:"admin is the account address of the group admin."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the group policy."},version:{type:"string",description:"version is used to track changes to a group's GroupPolicyInfo structure that would create a different result on a running proposal."},decision_policy:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"decision_policy specifies the group policy's decision policy."},created_at:{type:"string",description:"created_at is a timestamp specifying when a group policy was created.",format:"date-time"}},additionalProperties:!0,type:"object",title:"Group Policy Info",description:"GroupPolicyInfo represents the high-level on-chain information for a group policy."}}},http_rules:[{Params:["admin"],HasQuery:!0,HasBody:!1}]},"cosmos.group.v1/QueryProposal":{module_name:"cosmos.group.v1",name:"Proposal",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryProposalRequest",definitions:{QueryProposalRequest:{properties:{proposal_id:{type:"string",description:"proposal_id is the unique ID of a proposal."}},additionalProperties:!0,type:"object",title:"Query Proposal Request",description:"QueryProposalRequest is the Query/Proposal request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryProposalResponse",definitions:{QueryProposalResponse:{properties:{proposal:{$ref:"#/definitions/cosmos.group.v1.Proposal",additionalProperties:!0,description:"proposal is the proposal info."}},additionalProperties:!0,type:"object",title:"Query Proposal Response",description:"QueryProposalResponse is the Query/Proposal response type."},"cosmos.group.v1.Proposal":{properties:{id:{type:"string",description:"id is the unique id of the proposal."},group_policy_address:{type:"string",description:"group_policy_address is the account address of group policy."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the proposal."},proposers:{items:{type:"string"},type:"array",description:"proposers are the account addresses of the proposers."},submit_time:{type:"string",description:"submit_time is a timestamp specifying when a proposal was submitted.",format:"date-time"},group_version:{type:"string",description:"group_version tracks the version of the group at proposal submission. This field is here for informational purposes only."},group_policy_version:{type:"string",description:"group_policy_version tracks the version of the group policy at proposal submission. When a decision policy is changed, existing proposals from previous policy versions will become invalid with the `ABORTED` status. This field is here for informational purposes only."},status:{enum:["PROPOSAL_STATUS_UNSPECIFIED",0,"PROPOSAL_STATUS_SUBMITTED",1,"PROPOSAL_STATUS_ACCEPTED",2,"PROPOSAL_STATUS_REJECTED",3,"PROPOSAL_STATUS_ABORTED",4,"PROPOSAL_STATUS_WITHDRAWN",5],oneOf:[{type:"string"},{type:"integer"}],title:"Proposal Status",description:"ProposalStatus defines proposal statuses."},final_tally_result:{$ref:"#/definitions/cosmos.group.v1.TallyResult",additionalProperties:!0,description:"final_tally_result contains the sums of all weighted votes for this proposal for each vote option. It is empty at submission, and only populated after tallying, at voting period end or at proposal execution, whichever happens first."},voting_period_end:{type:"string",description:"voting_period_end is the timestamp before which voting must be done. Unless a successfull MsgExec is called before (to execute a proposal whose tally is successful before the voting period ends), tallying will be done at this point, and the `final_tally_result`and `status` fields will be accordingly updated.",format:"date-time"},executor_result:{enum:["PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED",0,"PROPOSAL_EXECUTOR_RESULT_NOT_RUN",1,"PROPOSAL_EXECUTOR_RESULT_SUCCESS",2,"PROPOSAL_EXECUTOR_RESULT_FAILURE",3],oneOf:[{type:"string"},{type:"integer"}],title:"Proposal Executor Result",description:"ProposalExecutorResult defines types of proposal executor results."},messages:{items:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Any",description:'`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use \'type.googleapis.com/full.type.name\' as the type URL and the unpack methods only use the fully qualified type name after the last \'/\' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       "@type": "type.googleapis.com/google.profile.Person",       "firstName": <string>,       "lastName": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       "@type": "type.googleapis.com/google.protobuf.Duration",       "value": "1.212s"     }'},type:"array",description:"messages is a list of `sdk.Msg`s that will be executed if the proposal passes."}},additionalProperties:!0,type:"object",title:"Proposal",description:"Proposal defines a group proposal. Any member of a group can submit a proposal for a group policy to decide upon. A proposal consists of a set of `sdk.Msg`s that will be executed if the proposal passes as well as some optional metadata associated with the proposal."},"cosmos.group.v1.TallyResult":{properties:{yes_count:{type:"string",description:"yes_count is the weighted sum of yes votes."},abstain_count:{type:"string",description:"abstain_count is the weighted sum of abstainers."},no_count:{type:"string",description:"no_count is the weighted sum of no votes."},no_with_veto_count:{type:"string",description:"no_with_veto_count is the weighted sum of veto."}},additionalProperties:!0,type:"object",title:"Tally Result",description:"TallyResult represents the sum of weighted votes for each vote option."}}},http_rules:[{Params:["proposal_id"],HasQuery:!1,HasBody:!1}]},"cosmos.group.v1/QueryProposalsByGroupPolicy":{module_name:"cosmos.group.v1",name:"ProposalsByGroupPolicy",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryProposalsByGroupPolicyRequest",definitions:{QueryProposalsByGroupPolicyRequest:{properties:{address:{type:"string",description:"address is the account address of the group policy related to proposals."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Proposals By Group Policy Request",description:"QueryProposalsByGroupPolicyRequest is the Query/ProposalByGroupPolicy request type."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryProposalsByGroupPolicyResponse",definitions:{QueryProposalsByGroupPolicyResponse:{properties:{proposals:{items:{$ref:"#/definitions/cosmos.group.v1.Proposal"},type:"array",description:"proposals are the proposals with given group policy."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Proposals By Group Policy Response",description:"QueryProposalsByGroupPolicyResponse is the Query/ProposalByGroupPolicy response type."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.group.v1.Proposal":{properties:{id:{type:"string",description:"id is the unique id of the proposal."},group_policy_address:{type:"string",description:"group_policy_address is the account address of group policy."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the proposal."},proposers:{items:{type:"string"},type:"array",description:"proposers are the account addresses of the proposers."},submit_time:{type:"string",description:"submit_time is a timestamp specifying when a proposal was submitted.",format:"date-time"},group_version:{type:"string",description:"group_version tracks the version of the group at proposal submission. This field is here for informational purposes only."},group_policy_version:{type:"string",description:"group_policy_version tracks the version of the group policy at proposal submission. When a decision policy is changed, existing proposals from previous policy versions will become invalid with the `ABORTED` status. This field is here for informational purposes only."},status:{enum:["PROPOSAL_STATUS_UNSPECIFIED",0,"PROPOSAL_STATUS_SUBMITTED",1,"PROPOSAL_STATUS_ACCEPTED",2,"PROPOSAL_STATUS_REJECTED",3,"PROPOSAL_STATUS_ABORTED",4,"PROPOSAL_STATUS_WITHDRAWN",5],oneOf:[{type:"string"},{type:"integer"}],title:"Proposal Status",description:"ProposalStatus defines proposal statuses."},final_tally_result:{$ref:"#/definitions/cosmos.group.v1.TallyResult",additionalProperties:!0,description:"final_tally_result contains the sums of all weighted votes for this proposal for each vote option. It is empty at submission, and only populated after tallying, at voting period end or at proposal execution, whichever happens first."},voting_period_end:{type:"string",description:"voting_period_end is the timestamp before which voting must be done. Unless a successfull MsgExec is called before (to execute a proposal whose tally is successful before the voting period ends), tallying will be done at this point, and the `final_tally_result`and `status` fields will be accordingly updated.",format:"date-time"},executor_result:{enum:["PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED",0,"PROPOSAL_EXECUTOR_RESULT_NOT_RUN",1,"PROPOSAL_EXECUTOR_RESULT_SUCCESS",2,"PROPOSAL_EXECUTOR_RESULT_FAILURE",3],oneOf:[{type:"string"},{type:"integer"}],title:"Proposal Executor Result",description:"ProposalExecutorResult defines types of proposal executor results."},messages:{items:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Any",description:'`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use \'type.googleapis.com/full.type.name\' as the type URL and the unpack methods only use the fully qualified type name after the last \'/\' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       "@type": "type.googleapis.com/google.profile.Person",       "firstName": <string>,       "lastName": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       "@type": "type.googleapis.com/google.protobuf.Duration",       "value": "1.212s"     }'},type:"array",description:"messages is a list of `sdk.Msg`s that will be executed if the proposal passes."}},additionalProperties:!0,type:"object",title:"Proposal",description:"Proposal defines a group proposal. Any member of a group can submit a proposal for a group policy to decide upon. A proposal consists of a set of `sdk.Msg`s that will be executed if the proposal passes as well as some optional metadata associated with the proposal."},"cosmos.group.v1.TallyResult":{properties:{yes_count:{type:"string",description:"yes_count is the weighted sum of yes votes."},abstain_count:{type:"string",description:"abstain_count is the weighted sum of abstainers."},no_count:{type:"string",description:"no_count is the weighted sum of no votes."},no_with_veto_count:{type:"string",description:"no_with_veto_count is the weighted sum of veto."}},additionalProperties:!0,type:"object",title:"Tally Result",description:"TallyResult represents the sum of weighted votes for each vote option."}}},http_rules:[{Params:["address"],HasQuery:!0,HasBody:!1}]},"cosmos.group.v1/QueryVoteByProposalVoter":{module_name:"cosmos.group.v1",name:"VoteByProposalVoter",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryVoteByProposalVoterRequest",definitions:{QueryVoteByProposalVoterRequest:{properties:{proposal_id:{type:"string",description:"proposal_id is the unique ID of a proposal."},voter:{type:"string",description:"voter is a proposal voter account address."}},additionalProperties:!0,type:"object",title:"Query Vote By Proposal Voter Request",description:"QueryVoteByProposalVoterRequest is the Query/VoteByProposalVoter request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryVoteByProposalVoterResponse",definitions:{QueryVoteByProposalVoterResponse:{properties:{vote:{$ref:"#/definitions/cosmos.group.v1.Vote",additionalProperties:!0,description:"vote is the vote with given proposal_id and voter."}},additionalProperties:!0,type:"object",title:"Query Vote By Proposal Voter Response",description:"QueryVoteByProposalVoterResponse is the Query/VoteByProposalVoter response type."},"cosmos.group.v1.Vote":{properties:{proposal_id:{type:"string",description:"proposal is the unique ID of the proposal."},voter:{type:"string",description:"voter is the account address of the voter."},option:{enum:["VOTE_OPTION_UNSPECIFIED",0,"VOTE_OPTION_YES",1,"VOTE_OPTION_ABSTAIN",2,"VOTE_OPTION_NO",3,"VOTE_OPTION_NO_WITH_VETO",4],oneOf:[{type:"string"},{type:"integer"}],title:"Vote Option",description:"VoteOption enumerates the valid vote options for a given proposal."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the vote."},submit_time:{type:"string",description:"submit_time is the timestamp when the vote was submitted.",format:"date-time"}},additionalProperties:!0,type:"object",title:"Vote",description:"Vote represents a vote for a proposal."}}},http_rules:[{Params:["proposal_id","voter"],HasQuery:!1,HasBody:!1}]},"cosmos.group.v1/QueryVotesByProposal":{module_name:"cosmos.group.v1",name:"VotesByProposal",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryVotesByProposalRequest",definitions:{QueryVotesByProposalRequest:{properties:{proposal_id:{type:"string",description:"proposal_id is the unique ID of a proposal."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Votes By Proposal Request",description:"QueryVotesByProposalRequest is the Query/VotesByProposal request type."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryVotesByProposalResponse",definitions:{QueryVotesByProposalResponse:{properties:{votes:{items:{$ref:"#/definitions/cosmos.group.v1.Vote"},type:"array",description:"votes are the list of votes for given proposal_id."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Votes By Proposal Response",description:"QueryVotesByProposalResponse is the Query/VotesByProposal response type."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.group.v1.Vote":{properties:{proposal_id:{type:"string",description:"proposal is the unique ID of the proposal."},voter:{type:"string",description:"voter is the account address of the voter."},option:{enum:["VOTE_OPTION_UNSPECIFIED",0,"VOTE_OPTION_YES",1,"VOTE_OPTION_ABSTAIN",2,"VOTE_OPTION_NO",3,"VOTE_OPTION_NO_WITH_VETO",4],oneOf:[{type:"string"},{type:"integer"}],title:"Vote Option",description:"VoteOption enumerates the valid vote options for a given proposal."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the vote."},submit_time:{type:"string",description:"submit_time is the timestamp when the vote was submitted.",format:"date-time"}},additionalProperties:!0,type:"object",title:"Vote",description:"Vote represents a vote for a proposal."}}},http_rules:[{Params:["proposal_id"],HasQuery:!0,HasBody:!1}]},"cosmos.group.v1/QueryVotesByVoter":{module_name:"cosmos.group.v1",name:"VotesByVoter",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryVotesByVoterRequest",definitions:{QueryVotesByVoterRequest:{properties:{voter:{type:"string",description:"voter is a proposal voter account address."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Votes By Voter Request",description:"QueryVotesByVoterRequest is the Query/VotesByVoter request type."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryVotesByVoterResponse",definitions:{QueryVotesByVoterResponse:{properties:{votes:{items:{$ref:"#/definitions/cosmos.group.v1.Vote"},type:"array",description:"votes are the list of votes by given voter."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Votes By Voter Response",description:"QueryVotesByVoterResponse is the Query/VotesByVoter response type."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.group.v1.Vote":{properties:{proposal_id:{type:"string",description:"proposal is the unique ID of the proposal."},voter:{type:"string",description:"voter is the account address of the voter."},option:{enum:["VOTE_OPTION_UNSPECIFIED",0,"VOTE_OPTION_YES",1,"VOTE_OPTION_ABSTAIN",2,"VOTE_OPTION_NO",3,"VOTE_OPTION_NO_WITH_VETO",4],oneOf:[{type:"string"},{type:"integer"}],title:"Vote Option",description:"VoteOption enumerates the valid vote options for a given proposal."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the vote."},submit_time:{type:"string",description:"submit_time is the timestamp when the vote was submitted.",format:"date-time"}},additionalProperties:!0,type:"object",title:"Vote",description:"Vote represents a vote for a proposal."}}},http_rules:[{Params:["voter"],HasQuery:!0,HasBody:!1}]},"cosmos.group.v1/QueryGroupsByMember":{module_name:"cosmos.group.v1",name:"GroupsByMember",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupsByMemberRequest",definitions:{QueryGroupsByMemberRequest:{properties:{address:{type:"string",description:"address is the group member address."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Groups By Member Request",description:"QueryGroupsByMemberRequest is the Query/GroupsByMember request type."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGroupsByMemberResponse",definitions:{QueryGroupsByMemberResponse:{properties:{groups:{items:{$ref:"#/definitions/cosmos.group.v1.GroupInfo"},type:"array",description:"groups are the groups info with the provided group member."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Groups By Member Response",description:"QueryGroupsByMemberResponse is the Query/GroupsByMember response type."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.group.v1.GroupInfo":{properties:{id:{type:"string",description:"id is the unique ID of the group."},admin:{type:"string",description:"admin is the account address of the group's admin."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the group."},version:{type:"string",description:"version is used to track changes to a group's membership structure that would break existing proposals. Whenever any members weight is changed, or any member is added or removed this version is incremented and will cause proposals based on older versions of this group to fail"},total_weight:{type:"string",description:"total_weight is the sum of the group members' weights."},created_at:{type:"string",description:"created_at is a timestamp specifying when a group was created.",format:"date-time"}},additionalProperties:!0,type:"object",title:"State",description:"State  GroupInfo represents the high-level on-chain information for a group."}}},http_rules:[{Params:["address"],HasQuery:!0,HasBody:!1}]},"cosmos.group.v1/QueryTallyResult":{module_name:"cosmos.group.v1",name:"TallyResult",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryTallyResultRequest",definitions:{QueryTallyResultRequest:{properties:{proposal_id:{type:"string",description:"proposal_id is the unique id of a proposal."}},additionalProperties:!0,type:"object",title:"Query Tally Result Request",description:"QueryTallyResultRequest is the Query/TallyResult request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryTallyResultResponse",definitions:{QueryTallyResultResponse:{properties:{tally:{$ref:"#/definitions/cosmos.group.v1.TallyResult",additionalProperties:!0,description:"tally defines the requested tally."}},additionalProperties:!0,type:"object",title:"Query Tally Result Response",description:"QueryTallyResultResponse is the Query/TallyResult response type."},"cosmos.group.v1.TallyResult":{properties:{yes_count:{type:"string",description:"yes_count is the weighted sum of yes votes."},abstain_count:{type:"string",description:"abstain_count is the weighted sum of abstainers."},no_count:{type:"string",description:"no_count is the weighted sum of no votes."},no_with_veto_count:{type:"string",description:"no_with_veto_count is the weighted sum of veto."}},additionalProperties:!0,type:"object",title:"Tally Result",description:"TallyResult represents the sum of weighted votes for each vote option."}}},http_rules:[{Params:["proposal_id"],HasQuery:!1,HasBody:!1}]},"cosmos.group.v1/sendMsgCreateGroup":{module_name:"cosmos.group.v1",name:"CreateGroup",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateGroup",definitions:{MsgCreateGroup:{properties:{admin:{type:"string",description:"admin is the account address of the group admin."},members:{items:{$ref:"#/definitions/cosmos.group.v1.MemberRequest"},type:"array",description:"members defines the group members."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the group."}},additionalProperties:!0,type:"object",title:"Groups",description:"Groups  MsgCreateGroup is the Msg/CreateGroup request type."},"cosmos.group.v1.MemberRequest":{properties:{address:{type:"string",description:"address is the member's account address."},weight:{type:"string",description:"weight is the member's voting weight that should be greater than 0."},metadata:{type:"string",description:"metadata is any arbitrary metadata attached to the member."}},additionalProperties:!0,type:"object",title:"Member Request",description:"MemberRequest represents a group member to be used in Msg server requests. Contrary to `Member`, it doesn't have any `added_at` field since this field cannot be set as part of requests."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateGroupResponse",definitions:{MsgCreateGroupResponse:{properties:{group_id:{type:"string",description:"group_id is the unique ID of the newly created group."}},additionalProperties:!0,type:"object",title:"Msg Create Group Response",description:"MsgCreateGroupResponse is the Msg/CreateGroup response type."}}},http_rules:null},"cosmos.group.v1/sendMsgUpdateGroupMembers":{module_name:"cosmos.group.v1",name:"UpdateGroupMembers",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateGroupMembers",definitions:{MsgUpdateGroupMembers:{properties:{admin:{type:"string",description:"admin is the account address of the group admin."},group_id:{type:"string",description:"group_id is the unique ID of the group."},member_updates:{items:{$ref:"#/definitions/cosmos.group.v1.MemberRequest"},type:"array",description:"member_updates is the list of members to update, set weight to 0 to remove a member."}},additionalProperties:!0,type:"object",title:"Msg Update Group Members",description:"MsgUpdateGroupMembers is the Msg/UpdateGroupMembers request type."},"cosmos.group.v1.MemberRequest":{properties:{address:{type:"string",description:"address is the member's account address."},weight:{type:"string",description:"weight is the member's voting weight that should be greater than 0."},metadata:{type:"string",description:"metadata is any arbitrary metadata attached to the member."}},additionalProperties:!0,type:"object",title:"Member Request",description:"MemberRequest represents a group member to be used in Msg server requests. Contrary to `Member`, it doesn't have any `added_at` field since this field cannot be set as part of requests."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateGroupMembersResponse",definitions:{MsgUpdateGroupMembersResponse:{additionalProperties:!0,type:"object",title:"Msg Update Group Members Response",description:"MsgUpdateGroupMembersResponse is the Msg/UpdateGroupMembers response type."}}},http_rules:null},"cosmos.group.v1/sendMsgUpdateGroupAdmin":{module_name:"cosmos.group.v1",name:"UpdateGroupAdmin",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateGroupAdmin",definitions:{MsgUpdateGroupAdmin:{properties:{admin:{type:"string",description:"admin is the current account address of the group admin."},group_id:{type:"string",description:"group_id is the unique ID of the group."},new_admin:{type:"string",description:"new_admin is the group new admin account address."}},additionalProperties:!0,type:"object",title:"Msg Update Group Admin",description:"MsgUpdateGroupAdmin is the Msg/UpdateGroupAdmin request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateGroupAdminResponse",definitions:{MsgUpdateGroupAdminResponse:{additionalProperties:!0,type:"object",title:"Msg Update Group Admin Response",description:"MsgUpdateGroupAdminResponse is the Msg/UpdateGroupAdmin response type."}}},http_rules:null},"cosmos.group.v1/sendMsgUpdateGroupMetadata":{module_name:"cosmos.group.v1",name:"UpdateGroupMetadata",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateGroupMetadata",definitions:{MsgUpdateGroupMetadata:{properties:{admin:{type:"string",description:"admin is the account address of the group admin."},group_id:{type:"string",description:"group_id is the unique ID of the group."},metadata:{type:"string",description:"metadata is the updated group's metadata."}},additionalProperties:!0,type:"object",title:"Msg Update Group Metadata",description:"MsgUpdateGroupMetadata is the Msg/UpdateGroupMetadata request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateGroupMetadataResponse",definitions:{MsgUpdateGroupMetadataResponse:{additionalProperties:!0,type:"object",title:"Msg Update Group Metadata Response",description:"MsgUpdateGroupMetadataResponse is the Msg/UpdateGroupMetadata response type."}}},http_rules:null},"cosmos.group.v1/sendMsgCreateGroupPolicy":{module_name:"cosmos.group.v1",name:"CreateGroupPolicy",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateGroupPolicy",definitions:{MsgCreateGroupPolicy:{properties:{admin:{type:"string",description:"admin is the account address of the group admin."},group_id:{type:"string",description:"group_id is the unique ID of the group."},metadata:{type:"string",description:"metadata is any arbitrary metadata attached to the group policy."},decision_policy:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"decision_policy specifies the group policy's decision policy."}},additionalProperties:!0,type:"object",title:"Group Policies",description:"Group Policies  MsgCreateGroupPolicy is the Msg/CreateGroupPolicy request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateGroupPolicyResponse",definitions:{MsgCreateGroupPolicyResponse:{properties:{address:{type:"string",description:"address is the account address of the newly created group policy."}},additionalProperties:!0,type:"object",title:"Msg Create Group Policy Response",description:"MsgCreateGroupPolicyResponse is the Msg/CreateGroupPolicy response type."}}},http_rules:null},"cosmos.group.v1/sendMsgCreateGroupWithPolicy":{module_name:"cosmos.group.v1",name:"CreateGroupWithPolicy",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateGroupWithPolicy",definitions:{MsgCreateGroupWithPolicy:{properties:{admin:{type:"string",description:"admin is the account address of the group and group policy admin."},members:{items:{$ref:"#/definitions/cosmos.group.v1.MemberRequest"},type:"array",description:"members defines the group members."},group_metadata:{type:"string",description:"group_metadata is any arbitrary metadata attached to the group."},group_policy_metadata:{type:"string",description:"group_policy_metadata is any arbitrary metadata attached to the group policy."},group_policy_as_admin:{type:"boolean",description:"group_policy_as_admin is a boolean field, if set to true, the group policy account address will be used as group and group policy admin."},decision_policy:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"decision_policy specifies the group policy's decision policy."}},additionalProperties:!0,type:"object",title:"Msg Create Group With Policy",description:"MsgCreateGroupWithPolicy is the Msg/CreateGroupWithPolicy request type."},"cosmos.group.v1.MemberRequest":{properties:{address:{type:"string",description:"address is the member's account address."},weight:{type:"string",description:"weight is the member's voting weight that should be greater than 0."},metadata:{type:"string",description:"metadata is any arbitrary metadata attached to the member."}},additionalProperties:!0,type:"object",title:"Member Request",description:"MemberRequest represents a group member to be used in Msg server requests. Contrary to `Member`, it doesn't have any `added_at` field since this field cannot be set as part of requests."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateGroupWithPolicyResponse",definitions:{MsgCreateGroupWithPolicyResponse:{properties:{group_id:{type:"string",description:"group_id is the unique ID of the newly created group with policy."},group_policy_address:{type:"string",description:"group_policy_address is the account address of the newly created group policy."}},additionalProperties:!0,type:"object",title:"Msg Create Group With Policy Response",description:"MsgCreateGroupWithPolicyResponse is the Msg/CreateGroupWithPolicy response type."}}},http_rules:null},"cosmos.group.v1/sendMsgUpdateGroupPolicyAdmin":{module_name:"cosmos.group.v1",name:"UpdateGroupPolicyAdmin",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateGroupPolicyAdmin",definitions:{MsgUpdateGroupPolicyAdmin:{properties:{admin:{type:"string",description:"admin is the account address of the group admin."},group_policy_address:{type:"string",description:"group_policy_address is the account address of the group policy."},new_admin:{type:"string",description:"new_admin is the new group policy admin."}},additionalProperties:!0,type:"object",title:"Msg Update Group Policy Admin",description:"MsgUpdateGroupPolicyAdmin is the Msg/UpdateGroupPolicyAdmin request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateGroupPolicyAdminResponse",definitions:{MsgUpdateGroupPolicyAdminResponse:{additionalProperties:!0,type:"object",title:"Msg Update Group Policy Admin Response",description:"MsgUpdateGroupPolicyAdminResponse is the Msg/UpdateGroupPolicyAdmin response type."}}},http_rules:null},"cosmos.group.v1/sendMsgUpdateGroupPolicyDecisionPolicy":{module_name:"cosmos.group.v1",name:"UpdateGroupPolicyDecisionPolicy",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateGroupPolicyDecisionPolicy",definitions:{MsgUpdateGroupPolicyDecisionPolicy:{properties:{admin:{type:"string",description:"admin is the account address of the group admin."},group_policy_address:{type:"string",description:"group_policy_address is the account address of group policy."},decision_policy:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"decision_policy is the updated group policy's decision policy."}},additionalProperties:!0,type:"object",title:"Msg Update Group Policy Decision Policy",description:"MsgUpdateGroupPolicyDecisionPolicy is the Msg/UpdateGroupPolicyDecisionPolicy request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateGroupPolicyDecisionPolicyResponse",definitions:{MsgUpdateGroupPolicyDecisionPolicyResponse:{additionalProperties:!0,type:"object",title:"Msg Update Group Policy Decision Policy Response",description:"MsgUpdateGroupPolicyDecisionPolicyResponse is the Msg/UpdateGroupPolicyDecisionPolicy response type."}}},http_rules:null},"cosmos.group.v1/sendMsgUpdateGroupPolicyMetadata":{module_name:"cosmos.group.v1",name:"UpdateGroupPolicyMetadata",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateGroupPolicyMetadata",definitions:{MsgUpdateGroupPolicyMetadata:{properties:{admin:{type:"string",description:"admin is the account address of the group admin."},group_policy_address:{type:"string",description:"group_policy_address is the account address of group policy."},metadata:{type:"string",description:"metadata is the updated group policy metadata."}},additionalProperties:!0,type:"object",title:"Msg Update Group Policy Metadata",description:"MsgUpdateGroupPolicyMetadata is the Msg/UpdateGroupPolicyMetadata request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateGroupPolicyMetadataResponse",definitions:{MsgUpdateGroupPolicyMetadataResponse:{additionalProperties:!0,type:"object",title:"Msg Update Group Policy Metadata Response",description:"MsgUpdateGroupPolicyMetadataResponse is the Msg/UpdateGroupPolicyMetadata response type."}}},http_rules:null},"cosmos.group.v1/sendMsgSubmitProposal":{module_name:"cosmos.group.v1",name:"SubmitProposal",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgSubmitProposal",definitions:{MsgSubmitProposal:{properties:{group_policy_address:{type:"string",description:"group_policy_address is the account address of group policy."},proposers:{items:{type:"string"},type:"array",description:"proposers are the account addresses of the proposers. Proposers signatures will be counted as yes votes."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the proposal."},messages:{items:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Any",description:'`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message. Protobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type. Example 1: Pack and unpack a message in C++.     Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     } Example 2: Pack and unpack a message in Java.     Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }  Example 3: Pack and unpack a message in Python.     foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...  Example 4: Pack and unpack a message in Go      foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      } The pack methods provided by protobuf library will by default use \'type.googleapis.com/full.type.name\' as the type URL and the unpack methods only use the fully qualified type name after the last \'/\' in the type URL, for example "foo.bar.com/x/y.z" will yield type name "y.z". JSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:     package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }     {       "@type": "type.googleapis.com/google.profile.Person",       "firstName": <string>,       "lastName": <string>     } If the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):     {       "@type": "type.googleapis.com/google.protobuf.Duration",       "value": "1.212s"     }'},type:"array",description:"messages is a list of `sdk.Msg`s that will be executed if the proposal passes."},exec:{enum:["EXEC_UNSPECIFIED",0,"EXEC_TRY",1],oneOf:[{type:"string"},{type:"integer"}],title:"Proposals and Voting",description:"Proposals and Voting  Exec defines modes of execution of a proposal on creation or on new vote."}},additionalProperties:!0,type:"object",title:"Msg Submit Proposal",description:"MsgSubmitProposal is the Msg/SubmitProposal request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgSubmitProposalResponse",definitions:{MsgSubmitProposalResponse:{properties:{proposal_id:{type:"string",description:"proposal is the unique ID of the proposal."}},additionalProperties:!0,type:"object",title:"Msg Submit Proposal Response",description:"MsgSubmitProposalResponse is the Msg/SubmitProposal response type."}}},http_rules:null},"cosmos.group.v1/sendMsgWithdrawProposal":{module_name:"cosmos.group.v1",name:"WithdrawProposal",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgWithdrawProposal",definitions:{MsgWithdrawProposal:{properties:{proposal_id:{type:"string",description:"proposal is the unique ID of the proposal."},address:{type:"string",description:"address is the admin of the group policy or one of the proposer of the proposal."}},additionalProperties:!0,type:"object",title:"Msg Withdraw Proposal",description:"MsgWithdrawProposal is the Msg/WithdrawProposal request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgWithdrawProposalResponse",definitions:{MsgWithdrawProposalResponse:{additionalProperties:!0,type:"object",title:"Msg Withdraw Proposal Response",description:"MsgWithdrawProposalResponse is the Msg/WithdrawProposal response type."}}},http_rules:null},"cosmos.group.v1/sendMsgVote":{module_name:"cosmos.group.v1",name:"Vote",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgVote",definitions:{MsgVote:{properties:{proposal_id:{type:"string",description:"proposal is the unique ID of the proposal."},voter:{type:"string",description:"voter is the voter account address."},option:{enum:["VOTE_OPTION_UNSPECIFIED",0,"VOTE_OPTION_YES",1,"VOTE_OPTION_ABSTAIN",2,"VOTE_OPTION_NO",3,"VOTE_OPTION_NO_WITH_VETO",4],oneOf:[{type:"string"},{type:"integer"}],title:"Vote Option",description:"VoteOption enumerates the valid vote options for a given proposal."},metadata:{type:"string",description:"metadata is any arbitrary metadata to attached to the vote."},exec:{enum:["EXEC_UNSPECIFIED",0,"EXEC_TRY",1],oneOf:[{type:"string"},{type:"integer"}],title:"Proposals and Voting",description:"Proposals and Voting  Exec defines modes of execution of a proposal on creation or on new vote."}},additionalProperties:!0,type:"object",title:"Msg Vote",description:"MsgVote is the Msg/Vote request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgVoteResponse",definitions:{MsgVoteResponse:{additionalProperties:!0,type:"object",title:"Msg Vote Response",description:"MsgVoteResponse is the Msg/Vote response type."}}},http_rules:null},"cosmos.group.v1/sendMsgExec":{module_name:"cosmos.group.v1",name:"Exec",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgExec",definitions:{MsgExec:{properties:{proposal_id:{type:"string",description:"proposal is the unique ID of the proposal."},executor:{type:"string",description:"executor is the account address used to execute the proposal."}},additionalProperties:!0,type:"object",title:"Msg Exec",description:"MsgExec is the Msg/Exec request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgExecResponse",definitions:{MsgExecResponse:{properties:{result:{enum:["PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED",0,"PROPOSAL_EXECUTOR_RESULT_NOT_RUN",1,"PROPOSAL_EXECUTOR_RESULT_SUCCESS",2,"PROPOSAL_EXECUTOR_RESULT_FAILURE",3],oneOf:[{type:"string"},{type:"integer"}],title:"Proposal Executor Result",description:"ProposalExecutorResult defines types of proposal executor results."}},additionalProperties:!0,type:"object",title:"Msg Exec Response",description:"MsgExecResponse is the Msg/Exec request type."}}},http_rules:null},"cosmos.group.v1/sendMsgLeaveGroup":{module_name:"cosmos.group.v1",name:"LeaveGroup",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgLeaveGroup",definitions:{MsgLeaveGroup:{properties:{address:{type:"string",description:"address is the account address of the group member."},group_id:{type:"string",description:"group_id is the unique ID of the group."}},additionalProperties:!0,type:"object",title:"Msg Leave Group",description:"MsgLeaveGroup is the Msg/LeaveGroup request type."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgLeaveGroupResponse",definitions:{MsgLeaveGroupResponse:{additionalProperties:!0,type:"object",title:"Msg Leave Group Response",description:"MsgLeaveGroupResponse is the Msg/LeaveGroup response type."}}},http_rules:null},"cosmos.mint.v1beta1/QueryParams":{module_name:"cosmos.mint.v1beta1",name:"Params",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsRequest",definitions:{QueryParamsRequest:{additionalProperties:!0,type:"object",title:"Query Params Request",description:"QueryParamsRequest is the request type for the Query/Params RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsResponse",definitions:{QueryParamsResponse:{properties:{params:{$ref:"#/definitions/cosmos.mint.v1beta1.Params",additionalProperties:!0,description:"params defines the parameters of the module."}},additionalProperties:!0,type:"object",title:"Query Params Response",description:"QueryParamsResponse is the response type for the Query/Params RPC method."},"cosmos.mint.v1beta1.Params":{properties:{mint_denom:{type:"string",description:"type of coin to mint"},inflation_rate_change:{type:"string",description:"maximum annual change in inflation rate"},inflation_max:{type:"string",description:"maximum inflation rate"},inflation_min:{type:"string",description:"minimum inflation rate"},goal_bonded:{type:"string",description:"goal of percent bonded atoms"},blocks_per_year:{type:"string",description:"expected blocks per year"}},additionalProperties:!0,type:"object",title:"Params",description:"Params holds parameters for the mint module."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.mint.v1beta1/QueryInflation":{module_name:"cosmos.mint.v1beta1",name:"Inflation",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryInflationRequest",definitions:{QueryInflationRequest:{additionalProperties:!0,type:"object",title:"Query Inflation Request",description:"QueryInflationRequest is the request type for the Query/Inflation RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryInflationResponse",definitions:{QueryInflationResponse:{properties:{inflation:{type:"string",description:"inflation is the current minting inflation value.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Query Inflation Response",description:"QueryInflationResponse is the response type for the Query/Inflation RPC method."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.mint.v1beta1/QueryAnnualProvisions":{module_name:"cosmos.mint.v1beta1",name:"AnnualProvisions",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAnnualProvisionsRequest",definitions:{QueryAnnualProvisionsRequest:{additionalProperties:!0,type:"object",title:"Query Annual Provisions Request",description:"QueryAnnualProvisionsRequest is the request type for the Query/AnnualProvisions RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAnnualProvisionsResponse",definitions:{QueryAnnualProvisionsResponse:{properties:{annual_provisions:{type:"string",description:"annual_provisions is the current minting annual provisions value.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Query Annual Provisions Response",description:"QueryAnnualProvisionsResponse is the response type for the Query/AnnualProvisions RPC method."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.slashing.v1beta1/QueryParams":{module_name:"cosmos.slashing.v1beta1",name:"Params",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsRequest",definitions:{QueryParamsRequest:{additionalProperties:!0,type:"object",title:"Query Params Request",description:"QueryParamsRequest is the request type for the Query/Params RPC method"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsResponse",definitions:{QueryParamsResponse:{properties:{params:{$ref:"#/definitions/cosmos.slashing.v1beta1.Params",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Params Response",description:"QueryParamsResponse is the response type for the Query/Params RPC method"},"cosmos.slashing.v1beta1.Params":{properties:{signed_blocks_window:{type:"string"},min_signed_per_window:{type:"string",format:"binary",binaryEncoding:"base64"},downtime_jail_duration:{pattern:"^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",type:"string",format:"regex"},slash_fraction_double_sign:{type:"string",format:"binary",binaryEncoding:"base64"},slash_fraction_downtime:{type:"string",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Params",description:"Params represents the parameters used for by the slashing module."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.slashing.v1beta1/QuerySigningInfo":{module_name:"cosmos.slashing.v1beta1",name:"SigningInfo",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QuerySigningInfoRequest",definitions:{QuerySigningInfoRequest:{properties:{cons_address:{type:"string",description:"cons_address is the address to query signing info of"}},additionalProperties:!0,type:"object",title:"Query Signing Info Request",description:"QuerySigningInfoRequest is the request type for the Query/SigningInfo RPC method"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QuerySigningInfoResponse",definitions:{QuerySigningInfoResponse:{properties:{val_signing_info:{$ref:"#/definitions/cosmos.slashing.v1beta1.ValidatorSigningInfo",additionalProperties:!0,description:"val_signing_info is the signing info of requested val cons address"}},additionalProperties:!0,type:"object",title:"Query Signing Info Response",description:"QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC method"},"cosmos.slashing.v1beta1.ValidatorSigningInfo":{properties:{address:{type:"string"},start_height:{type:"string",description:"Height at which validator was first a candidate OR was unjailed"},index_offset:{type:"string",description:"Index which is incremented each time the validator was a bonded in a block and may have signed a precommit or not. This in conjunction with the `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`."},jailed_until:{type:"string",description:"Timestamp until which the validator is jailed due to liveness downtime.",format:"date-time"},tombstoned:{type:"boolean",description:"Whether or not a validator has been tombstoned (killed out of validator set). It is set once the validator commits an equivocation or for any other configured misbehiavor."},missed_blocks_counter:{type:"string",description:"A counter kept to avoid unnecessary array reads. Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`."}},additionalProperties:!0,type:"object",title:"Validator Signing Info",description:"ValidatorSigningInfo defines a validator's signing info for monitoring their liveness activity."}}},http_rules:[{Params:["cons_address"],HasQuery:!1,HasBody:!1}]},"cosmos.slashing.v1beta1/QuerySigningInfos":{module_name:"cosmos.slashing.v1beta1",name:"SigningInfos",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QuerySigningInfosRequest",definitions:{QuerySigningInfosRequest:{properties:{pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Signing Infos Request",description:"QuerySigningInfosRequest is the request type for the Query/SigningInfos RPC method"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QuerySigningInfosResponse",definitions:{QuerySigningInfosResponse:{properties:{info:{items:{$ref:"#/definitions/cosmos.slashing.v1beta1.ValidatorSigningInfo"},type:"array",description:"info is the signing info of all validators"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Signing Infos Response",description:"QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC method"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.slashing.v1beta1.ValidatorSigningInfo":{properties:{address:{type:"string"},start_height:{type:"string",description:"Height at which validator was first a candidate OR was unjailed"},index_offset:{type:"string",description:"Index which is incremented each time the validator was a bonded in a block and may have signed a precommit or not. This in conjunction with the `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`."},jailed_until:{type:"string",description:"Timestamp until which the validator is jailed due to liveness downtime.",format:"date-time"},tombstoned:{type:"boolean",description:"Whether or not a validator has been tombstoned (killed out of validator set). It is set once the validator commits an equivocation or for any other configured misbehiavor."},missed_blocks_counter:{type:"string",description:"A counter kept to avoid unnecessary array reads. Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`."}},additionalProperties:!0,type:"object",title:"Validator Signing Info",description:"ValidatorSigningInfo defines a validator's signing info for monitoring their liveness activity."}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"cosmos.slashing.v1beta1/sendMsgUnjail":{module_name:"cosmos.slashing.v1beta1",name:"Unjail",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUnjail",definitions:{MsgUnjail:{properties:{validator_addr:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Unjail",description:"MsgUnjail defines the Msg/Unjail request type"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUnjailResponse",definitions:{MsgUnjailResponse:{additionalProperties:!0,type:"object",title:"Msg Unjail Response",description:"MsgUnjailResponse defines the Msg/Unjail response type"}}},http_rules:null},"cosmos.staking.v1beta1/QueryValidators":{module_name:"cosmos.staking.v1beta1",name:"Validators",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorsRequest",definitions:{QueryValidatorsRequest:{properties:{status:{type:"string",description:"status enables to query for validators matching a given status."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Validators Request",description:"QueryValidatorsRequest is request type for Query/Validators RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorsResponse",definitions:{QueryValidatorsResponse:{properties:{validators:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.Validator"},type:"array",description:"validators contains all the queried validators."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Validators Response",description:"QueryValidatorsResponse is response type for the Query/Validators RPC method"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.staking.v1beta1.Commission":{properties:{commission_rates:{$ref:"#/definitions/cosmos.staking.v1beta1.CommissionRates",additionalProperties:!0,description:"commission_rates defines the initial commission rates to be used for creating a validator."},update_time:{type:"string",description:"update_time is the last time the commission rate was changed.",format:"date-time"}},additionalProperties:!0,type:"object",title:"Commission",description:"Commission defines commission parameters for a given validator."},"cosmos.staking.v1beta1.CommissionRates":{properties:{rate:{type:"string",description:"rate is the commission rate charged to delegators, as a fraction."},max_rate:{type:"string",description:"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},max_change_rate:{type:"string",description:"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},additionalProperties:!0,type:"object",title:"Commission Rates",description:"CommissionRates defines the initial commission rates to be used for creating a validator."},"cosmos.staking.v1beta1.Description":{properties:{moniker:{type:"string",description:"moniker defines a human-readable name for the validator."},identity:{type:"string",description:"identity defines an optional identity signature (ex. UPort or Keybase)."},website:{type:"string",description:"website defines an optional website link."},security_contact:{type:"string",description:"security_contact defines an optional email for security contact."},details:{type:"string",description:"details define other optional details."}},additionalProperties:!0,type:"object",title:"Description",description:"Description defines a validator description."},"cosmos.staking.v1beta1.Validator":{properties:{operator_address:{type:"string",description:"operator_address defines the address of the validator's operator; bech encoded in JSON."},consensus_pubkey:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"consensus_pubkey is the consensus public key of the validator, as a Protobuf Any."},jailed:{type:"boolean",description:"jailed defined whether the validator has been jailed from bonded status or not."},status:{enum:["BOND_STATUS_UNSPECIFIED",0,"BOND_STATUS_UNBONDED",1,"BOND_STATUS_UNBONDING",2,"BOND_STATUS_BONDED",3],oneOf:[{type:"string"},{type:"integer"}],title:"Bond Status",description:"BondStatus is the status of a validator."},tokens:{type:"string",description:"tokens define the delegated tokens (incl. self-delegation)."},delegator_shares:{type:"string",description:"delegator_shares defines total shares issued to a validator's delegators."},description:{$ref:"#/definitions/cosmos.staking.v1beta1.Description",additionalProperties:!0,description:"description defines the description terms for the validator."},unbonding_height:{type:"string",description:"unbonding_height defines, if unbonding, the height at which this validator has begun unbonding."},unbonding_time:{type:"string",description:"unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.",format:"date-time"},commission:{$ref:"#/definitions/cosmos.staking.v1beta1.Commission",additionalProperties:!0,description:"commission defines the commission parameters."},min_self_delegation:{type:"string",description:"min_self_delegation is the validator's self declared minimum self delegation. Since: cosmos-sdk 0.46"}},additionalProperties:!0,type:"object",title:"Validator",description:"Validator defines a validator, together with the total amount of the Validator's bond shares and their exchange rate to coins. Slashing results in a decrease in the exchange rate, allowing correct calculation of future undelegations without iterating over delegators. When coins are delegated to this validator, the validator is credited with a delegation whose number of bond shares is based on the amount of coins delegated divided by the current exchange rate. Voting power can be calculated as total bonded shares multiplied by exchange rate."}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"cosmos.staking.v1beta1/QueryValidator":{module_name:"cosmos.staking.v1beta1",name:"Validator",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorRequest",definitions:{QueryValidatorRequest:{properties:{validator_addr:{type:"string",description:"validator_addr defines the validator address to query for."}},additionalProperties:!0,type:"object",title:"Query Validator Request",description:"QueryValidatorRequest is response type for the Query/Validator RPC method"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorResponse",definitions:{QueryValidatorResponse:{properties:{validator:{$ref:"#/definitions/cosmos.staking.v1beta1.Validator",additionalProperties:!0,description:"validator defines the validator info."}},additionalProperties:!0,type:"object",title:"Query Validator Response",description:"QueryValidatorResponse is response type for the Query/Validator RPC method"},"cosmos.staking.v1beta1.Commission":{properties:{commission_rates:{$ref:"#/definitions/cosmos.staking.v1beta1.CommissionRates",additionalProperties:!0,description:"commission_rates defines the initial commission rates to be used for creating a validator."},update_time:{type:"string",description:"update_time is the last time the commission rate was changed.",format:"date-time"}},additionalProperties:!0,type:"object",title:"Commission",description:"Commission defines commission parameters for a given validator."},"cosmos.staking.v1beta1.CommissionRates":{properties:{rate:{type:"string",description:"rate is the commission rate charged to delegators, as a fraction."},max_rate:{type:"string",description:"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},max_change_rate:{type:"string",description:"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},additionalProperties:!0,type:"object",title:"Commission Rates",description:"CommissionRates defines the initial commission rates to be used for creating a validator."},"cosmos.staking.v1beta1.Description":{properties:{moniker:{type:"string",description:"moniker defines a human-readable name for the validator."},identity:{type:"string",description:"identity defines an optional identity signature (ex. UPort or Keybase)."},website:{type:"string",description:"website defines an optional website link."},security_contact:{type:"string",description:"security_contact defines an optional email for security contact."},details:{type:"string",description:"details define other optional details."}},additionalProperties:!0,type:"object",title:"Description",description:"Description defines a validator description."},"cosmos.staking.v1beta1.Validator":{properties:{operator_address:{type:"string",description:"operator_address defines the address of the validator's operator; bech encoded in JSON."},consensus_pubkey:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"consensus_pubkey is the consensus public key of the validator, as a Protobuf Any."},jailed:{type:"boolean",description:"jailed defined whether the validator has been jailed from bonded status or not."},status:{enum:["BOND_STATUS_UNSPECIFIED",0,"BOND_STATUS_UNBONDED",1,"BOND_STATUS_UNBONDING",2,"BOND_STATUS_BONDED",3],oneOf:[{type:"string"},{type:"integer"}],title:"Bond Status",description:"BondStatus is the status of a validator."},tokens:{type:"string",description:"tokens define the delegated tokens (incl. self-delegation)."},delegator_shares:{type:"string",description:"delegator_shares defines total shares issued to a validator's delegators."},description:{$ref:"#/definitions/cosmos.staking.v1beta1.Description",additionalProperties:!0,description:"description defines the description terms for the validator."},unbonding_height:{type:"string",description:"unbonding_height defines, if unbonding, the height at which this validator has begun unbonding."},unbonding_time:{type:"string",description:"unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.",format:"date-time"},commission:{$ref:"#/definitions/cosmos.staking.v1beta1.Commission",additionalProperties:!0,description:"commission defines the commission parameters."},min_self_delegation:{type:"string",description:"min_self_delegation is the validator's self declared minimum self delegation. Since: cosmos-sdk 0.46"}},additionalProperties:!0,type:"object",title:"Validator",description:"Validator defines a validator, together with the total amount of the Validator's bond shares and their exchange rate to coins. Slashing results in a decrease in the exchange rate, allowing correct calculation of future undelegations without iterating over delegators. When coins are delegated to this validator, the validator is credited with a delegation whose number of bond shares is based on the amount of coins delegated divided by the current exchange rate. Voting power can be calculated as total bonded shares multiplied by exchange rate."}}},http_rules:[{Params:["validator_addr"],HasQuery:!1,HasBody:!1}]},"cosmos.staking.v1beta1/QueryValidatorDelegations":{module_name:"cosmos.staking.v1beta1",name:"ValidatorDelegations",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorDelegationsRequest",definitions:{QueryValidatorDelegationsRequest:{properties:{validator_addr:{type:"string",description:"validator_addr defines the validator address to query for."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Validator Delegations Request",description:"QueryValidatorDelegationsRequest is request type for the Query/ValidatorDelegations RPC method"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorDelegationsResponse",definitions:{QueryValidatorDelegationsResponse:{properties:{delegation_responses:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.DelegationResponse"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Validator Delegations Response",description:"QueryValidatorDelegationsResponse is response type for the Query/ValidatorDelegations RPC method"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"cosmos.staking.v1beta1.Delegation":{properties:{delegator_address:{type:"string",description:"delegator_address is the bech32-encoded address of the delegator."},validator_address:{type:"string",description:"validator_address is the bech32-encoded address of the validator."},shares:{type:"string",description:"shares define the delegation shares received."}},additionalProperties:!0,type:"object",title:"Delegation",description:"Delegation represents the bond with tokens held by an account. It is owned by one delegator, and is associated with the voting power of one validator."},"cosmos.staking.v1beta1.DelegationResponse":{properties:{delegation:{$ref:"#/definitions/cosmos.staking.v1beta1.Delegation",additionalProperties:!0},balance:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Delegation Response",description:"DelegationResponse is equivalent to Delegation except that it contains a balance in addition to shares which is more suitable for client responses."}}},http_rules:[{Params:["validator_addr"],HasQuery:!0,HasBody:!1}]},"cosmos.staking.v1beta1/QueryValidatorUnbondingDelegations":{module_name:"cosmos.staking.v1beta1",name:"ValidatorUnbondingDelegations",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorUnbondingDelegationsRequest",definitions:{QueryValidatorUnbondingDelegationsRequest:{properties:{validator_addr:{type:"string",description:"validator_addr defines the validator address to query for."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Validator Unbonding Delegations Request",description:"QueryValidatorUnbondingDelegationsRequest is required type for the Query/ValidatorUnbondingDelegations RPC method"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryValidatorUnbondingDelegationsResponse",definitions:{QueryValidatorUnbondingDelegationsResponse:{properties:{unbonding_responses:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.UnbondingDelegation"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Validator Unbonding Delegations Response",description:"QueryValidatorUnbondingDelegationsResponse is response type for the Query/ValidatorUnbondingDelegations RPC method."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.staking.v1beta1.UnbondingDelegation":{properties:{delegator_address:{type:"string",description:"delegator_address is the bech32-encoded address of the delegator."},validator_address:{type:"string",description:"validator_address is the bech32-encoded address of the validator."},entries:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.UnbondingDelegationEntry"},type:"array",description:"entries are the unbonding delegation entries.  unbonding delegation entries"}},additionalProperties:!0,type:"object",title:"Unbonding Delegation",description:"UnbondingDelegation stores all of a single delegator's unbonding bonds for a single validator in an time-ordered list."},"cosmos.staking.v1beta1.UnbondingDelegationEntry":{properties:{creation_height:{type:"string",description:"creation_height is the height which the unbonding took place."},completion_time:{type:"string",description:"completion_time is the unix time for unbonding completion.",format:"date-time"},initial_balance:{type:"string",description:"initial_balance defines the tokens initially scheduled to receive at completion."},balance:{type:"string",description:"balance defines the tokens to receive at completion."}},additionalProperties:!0,type:"object",title:"Unbonding Delegation Entry",description:"UnbondingDelegationEntry defines an unbonding object with relevant metadata."}}},http_rules:[{Params:["validator_addr"],HasQuery:!0,HasBody:!1}]},"cosmos.staking.v1beta1/QueryDelegation":{module_name:"cosmos.staking.v1beta1",name:"Delegation",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegationRequest",definitions:{QueryDelegationRequest:{properties:{delegator_addr:{type:"string",description:"delegator_addr defines the delegator address to query for."},validator_addr:{type:"string",description:"validator_addr defines the validator address to query for."}},additionalProperties:!0,type:"object",title:"Query Delegation Request",description:"QueryDelegationRequest is request type for the Query/Delegation RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegationResponse",definitions:{QueryDelegationResponse:{properties:{delegation_response:{$ref:"#/definitions/cosmos.staking.v1beta1.DelegationResponse",additionalProperties:!0,description:"delegation_responses defines the delegation info of a delegation."}},additionalProperties:!0,type:"object",title:"Query Delegation Response",description:"QueryDelegationResponse is response type for the Query/Delegation RPC method."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"cosmos.staking.v1beta1.Delegation":{properties:{delegator_address:{type:"string",description:"delegator_address is the bech32-encoded address of the delegator."},validator_address:{type:"string",description:"validator_address is the bech32-encoded address of the validator."},shares:{type:"string",description:"shares define the delegation shares received."}},additionalProperties:!0,type:"object",title:"Delegation",description:"Delegation represents the bond with tokens held by an account. It is owned by one delegator, and is associated with the voting power of one validator."},"cosmos.staking.v1beta1.DelegationResponse":{properties:{delegation:{$ref:"#/definitions/cosmos.staking.v1beta1.Delegation",additionalProperties:!0},balance:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Delegation Response",description:"DelegationResponse is equivalent to Delegation except that it contains a balance in addition to shares which is more suitable for client responses."}}},http_rules:[{Params:["validator_addr","delegator_addr"],HasQuery:!1,HasBody:!1}]},"cosmos.staking.v1beta1/QueryUnbondingDelegation":{module_name:"cosmos.staking.v1beta1",name:"UnbondingDelegation",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryUnbondingDelegationRequest",definitions:{QueryUnbondingDelegationRequest:{properties:{delegator_addr:{type:"string",description:"delegator_addr defines the delegator address to query for."},validator_addr:{type:"string",description:"validator_addr defines the validator address to query for."}},additionalProperties:!0,type:"object",title:"Query Unbonding Delegation Request",description:"QueryUnbondingDelegationRequest is request type for the Query/UnbondingDelegation RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryUnbondingDelegationResponse",definitions:{QueryUnbondingDelegationResponse:{properties:{unbond:{$ref:"#/definitions/cosmos.staking.v1beta1.UnbondingDelegation",additionalProperties:!0,description:"unbond defines the unbonding information of a delegation."}},additionalProperties:!0,type:"object",title:"Query Unbonding Delegation Response",description:"QueryDelegationResponse is response type for the Query/UnbondingDelegation RPC method."},"cosmos.staking.v1beta1.UnbondingDelegation":{properties:{delegator_address:{type:"string",description:"delegator_address is the bech32-encoded address of the delegator."},validator_address:{type:"string",description:"validator_address is the bech32-encoded address of the validator."},entries:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.UnbondingDelegationEntry"},type:"array",description:"entries are the unbonding delegation entries.  unbonding delegation entries"}},additionalProperties:!0,type:"object",title:"Unbonding Delegation",description:"UnbondingDelegation stores all of a single delegator's unbonding bonds for a single validator in an time-ordered list."},"cosmos.staking.v1beta1.UnbondingDelegationEntry":{properties:{creation_height:{type:"string",description:"creation_height is the height which the unbonding took place."},completion_time:{type:"string",description:"completion_time is the unix time for unbonding completion.",format:"date-time"},initial_balance:{type:"string",description:"initial_balance defines the tokens initially scheduled to receive at completion."},balance:{type:"string",description:"balance defines the tokens to receive at completion."}},additionalProperties:!0,type:"object",title:"Unbonding Delegation Entry",description:"UnbondingDelegationEntry defines an unbonding object with relevant metadata."}}},http_rules:[{Params:["validator_addr","delegator_addr"],HasQuery:!1,HasBody:!1}]},"cosmos.staking.v1beta1/QueryDelegatorDelegations":{module_name:"cosmos.staking.v1beta1",name:"DelegatorDelegations",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegatorDelegationsRequest",definitions:{QueryDelegatorDelegationsRequest:{properties:{delegator_addr:{type:"string",description:"delegator_addr defines the delegator address to query for."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Delegator Delegations Request",description:"QueryDelegatorDelegationsRequest is request type for the Query/DelegatorDelegations RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegatorDelegationsResponse",definitions:{QueryDelegatorDelegationsResponse:{properties:{delegation_responses:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.DelegationResponse"},type:"array",description:"delegation_responses defines all the delegations' info of a delegator."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Delegator Delegations Response",description:"QueryDelegatorDelegationsResponse is response type for the Query/DelegatorDelegations RPC method."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"cosmos.staking.v1beta1.Delegation":{properties:{delegator_address:{type:"string",description:"delegator_address is the bech32-encoded address of the delegator."},validator_address:{type:"string",description:"validator_address is the bech32-encoded address of the validator."},shares:{type:"string",description:"shares define the delegation shares received."}},additionalProperties:!0,type:"object",title:"Delegation",description:"Delegation represents the bond with tokens held by an account. It is owned by one delegator, and is associated with the voting power of one validator."},"cosmos.staking.v1beta1.DelegationResponse":{properties:{delegation:{$ref:"#/definitions/cosmos.staking.v1beta1.Delegation",additionalProperties:!0},balance:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Delegation Response",description:"DelegationResponse is equivalent to Delegation except that it contains a balance in addition to shares which is more suitable for client responses."}}},http_rules:[{Params:["delegator_addr"],HasQuery:!0,HasBody:!1}]},"cosmos.staking.v1beta1/QueryDelegatorUnbondingDelegations":{module_name:"cosmos.staking.v1beta1",name:"DelegatorUnbondingDelegations",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegatorUnbondingDelegationsRequest",definitions:{QueryDelegatorUnbondingDelegationsRequest:{properties:{delegator_addr:{type:"string",description:"delegator_addr defines the delegator address to query for."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Delegator Unbonding Delegations Request",description:"QueryDelegatorUnbondingDelegationsRequest is request type for the Query/DelegatorUnbondingDelegations RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegatorUnbondingDelegationsResponse",definitions:{QueryDelegatorUnbondingDelegationsResponse:{properties:{unbonding_responses:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.UnbondingDelegation"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Delegator Unbonding Delegations Response",description:"QueryUnbondingDelegatorDelegationsResponse is response type for the Query/UnbondingDelegatorDelegations RPC method."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.staking.v1beta1.UnbondingDelegation":{properties:{delegator_address:{type:"string",description:"delegator_address is the bech32-encoded address of the delegator."},validator_address:{type:"string",description:"validator_address is the bech32-encoded address of the validator."},entries:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.UnbondingDelegationEntry"},type:"array",description:"entries are the unbonding delegation entries.  unbonding delegation entries"}},additionalProperties:!0,type:"object",title:"Unbonding Delegation",description:"UnbondingDelegation stores all of a single delegator's unbonding bonds for a single validator in an time-ordered list."},"cosmos.staking.v1beta1.UnbondingDelegationEntry":{properties:{creation_height:{type:"string",description:"creation_height is the height which the unbonding took place."},completion_time:{type:"string",description:"completion_time is the unix time for unbonding completion.",format:"date-time"},initial_balance:{type:"string",description:"initial_balance defines the tokens initially scheduled to receive at completion."},balance:{type:"string",description:"balance defines the tokens to receive at completion."}},additionalProperties:!0,type:"object",title:"Unbonding Delegation Entry",description:"UnbondingDelegationEntry defines an unbonding object with relevant metadata."}}},http_rules:[{Params:["delegator_addr"],HasQuery:!0,HasBody:!1}]},"cosmos.staking.v1beta1/QueryRedelegations":{module_name:"cosmos.staking.v1beta1",name:"Redelegations",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryRedelegationsRequest",definitions:{QueryRedelegationsRequest:{properties:{delegator_addr:{type:"string",description:"delegator_addr defines the delegator address to query for."},src_validator_addr:{type:"string",description:"src_validator_addr defines the validator address to redelegate from."},dst_validator_addr:{type:"string",description:"dst_validator_addr defines the validator address to redelegate to."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Redelegations Request",description:"QueryRedelegationsRequest is request type for the Query/Redelegations RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryRedelegationsResponse",definitions:{QueryRedelegationsResponse:{properties:{redelegation_responses:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.RedelegationResponse"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Redelegations Response",description:"QueryRedelegationsResponse is response type for the Query/Redelegations RPC method."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.staking.v1beta1.Redelegation":{properties:{delegator_address:{type:"string",description:"delegator_address is the bech32-encoded address of the delegator."},validator_src_address:{type:"string",description:"validator_src_address is the validator redelegation source operator address."},validator_dst_address:{type:"string",description:"validator_dst_address is the validator redelegation destination operator address."},entries:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.RedelegationEntry"},type:"array",description:"entries are the redelegation entries.  redelegation entries"}},additionalProperties:!0,type:"object",title:"Redelegation",description:"Redelegation contains the list of a particular delegator's redelegating bonds from a particular source validator to a particular destination validator."},"cosmos.staking.v1beta1.RedelegationEntry":{properties:{creation_height:{type:"string",description:"creation_height  defines the height which the redelegation took place."},completion_time:{type:"string",description:"completion_time defines the unix time for redelegation completion.",format:"date-time"},initial_balance:{type:"string",description:"initial_balance defines the initial balance when redelegation started."},shares_dst:{type:"string",description:"shares_dst is the amount of destination-validator shares created by redelegation."}},additionalProperties:!0,type:"object",title:"Redelegation Entry",description:"RedelegationEntry defines a redelegation object with relevant metadata."},"cosmos.staking.v1beta1.RedelegationEntryResponse":{properties:{redelegation_entry:{$ref:"#/definitions/cosmos.staking.v1beta1.RedelegationEntry",additionalProperties:!0},balance:{type:"string"}},additionalProperties:!0,type:"object",title:"Redelegation Entry Response",description:"RedelegationEntryResponse is equivalent to a RedelegationEntry except that it contains a balance in addition to shares which is more suitable for client responses."},"cosmos.staking.v1beta1.RedelegationResponse":{properties:{redelegation:{$ref:"#/definitions/cosmos.staking.v1beta1.Redelegation",additionalProperties:!0},entries:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.RedelegationEntryResponse"},type:"array"}},additionalProperties:!0,type:"object",title:"Redelegation Response",description:"RedelegationResponse is equivalent to a Redelegation except that its entries contain a balance in addition to shares which is more suitable for client responses."}}},http_rules:[{Params:["delegator_addr"],HasQuery:!0,HasBody:!1}]},"cosmos.staking.v1beta1/QueryDelegatorValidators":{module_name:"cosmos.staking.v1beta1",name:"DelegatorValidators",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegatorValidatorsRequest",definitions:{QueryDelegatorValidatorsRequest:{properties:{delegator_addr:{type:"string",description:"delegator_addr defines the delegator address to query for."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Delegator Validators Request",description:"QueryDelegatorValidatorsRequest is request type for the Query/DelegatorValidators RPC method."},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegatorValidatorsResponse",definitions:{QueryDelegatorValidatorsResponse:{properties:{validators:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.Validator"},type:"array",description:"validators defines the validators' info of a delegator."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Delegator Validators Response",description:"QueryDelegatorValidatorsResponse is response type for the Query/DelegatorValidators RPC method."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.staking.v1beta1.Commission":{properties:{commission_rates:{$ref:"#/definitions/cosmos.staking.v1beta1.CommissionRates",additionalProperties:!0,description:"commission_rates defines the initial commission rates to be used for creating a validator."},update_time:{type:"string",description:"update_time is the last time the commission rate was changed.",format:"date-time"}},additionalProperties:!0,type:"object",title:"Commission",description:"Commission defines commission parameters for a given validator."},"cosmos.staking.v1beta1.CommissionRates":{properties:{rate:{type:"string",description:"rate is the commission rate charged to delegators, as a fraction."},max_rate:{type:"string",description:"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},max_change_rate:{type:"string",description:"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},additionalProperties:!0,type:"object",title:"Commission Rates",description:"CommissionRates defines the initial commission rates to be used for creating a validator."},"cosmos.staking.v1beta1.Description":{properties:{moniker:{type:"string",description:"moniker defines a human-readable name for the validator."},identity:{type:"string",description:"identity defines an optional identity signature (ex. UPort or Keybase)."},website:{type:"string",description:"website defines an optional website link."},security_contact:{type:"string",description:"security_contact defines an optional email for security contact."},details:{type:"string",description:"details define other optional details."}},additionalProperties:!0,type:"object",title:"Description",description:"Description defines a validator description."},"cosmos.staking.v1beta1.Validator":{properties:{operator_address:{type:"string",description:"operator_address defines the address of the validator's operator; bech encoded in JSON."},consensus_pubkey:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"consensus_pubkey is the consensus public key of the validator, as a Protobuf Any."},jailed:{type:"boolean",description:"jailed defined whether the validator has been jailed from bonded status or not."},status:{enum:["BOND_STATUS_UNSPECIFIED",0,"BOND_STATUS_UNBONDED",1,"BOND_STATUS_UNBONDING",2,"BOND_STATUS_BONDED",3],oneOf:[{type:"string"},{type:"integer"}],title:"Bond Status",description:"BondStatus is the status of a validator."},tokens:{type:"string",description:"tokens define the delegated tokens (incl. self-delegation)."},delegator_shares:{type:"string",description:"delegator_shares defines total shares issued to a validator's delegators."},description:{$ref:"#/definitions/cosmos.staking.v1beta1.Description",additionalProperties:!0,description:"description defines the description terms for the validator."},unbonding_height:{type:"string",description:"unbonding_height defines, if unbonding, the height at which this validator has begun unbonding."},unbonding_time:{type:"string",description:"unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.",format:"date-time"},commission:{$ref:"#/definitions/cosmos.staking.v1beta1.Commission",additionalProperties:!0,description:"commission defines the commission parameters."},min_self_delegation:{type:"string",description:"min_self_delegation is the validator's self declared minimum self delegation. Since: cosmos-sdk 0.46"}},additionalProperties:!0,type:"object",title:"Validator",description:"Validator defines a validator, together with the total amount of the Validator's bond shares and their exchange rate to coins. Slashing results in a decrease in the exchange rate, allowing correct calculation of future undelegations without iterating over delegators. When coins are delegated to this validator, the validator is credited with a delegation whose number of bond shares is based on the amount of coins delegated divided by the current exchange rate. Voting power can be calculated as total bonded shares multiplied by exchange rate."}}},http_rules:[{Params:["delegator_addr"],HasQuery:!0,HasBody:!1}]},"cosmos.staking.v1beta1/QueryDelegatorValidator":{module_name:"cosmos.staking.v1beta1",name:"DelegatorValidator",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegatorValidatorRequest",definitions:{QueryDelegatorValidatorRequest:{properties:{delegator_addr:{type:"string",description:"delegator_addr defines the delegator address to query for."},validator_addr:{type:"string",description:"validator_addr defines the validator address to query for."}},additionalProperties:!0,type:"object",title:"Query Delegator Validator Request",description:"QueryDelegatorValidatorRequest is request type for the Query/DelegatorValidator RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDelegatorValidatorResponse",definitions:{QueryDelegatorValidatorResponse:{properties:{validator:{$ref:"#/definitions/cosmos.staking.v1beta1.Validator",additionalProperties:!0,description:"validator defines the validator info."}},additionalProperties:!0,type:"object",title:"Query Delegator Validator Response",description:"QueryDelegatorValidatorResponse response type for the Query/DelegatorValidator RPC method."},"cosmos.staking.v1beta1.Commission":{properties:{commission_rates:{$ref:"#/definitions/cosmos.staking.v1beta1.CommissionRates",additionalProperties:!0,description:"commission_rates defines the initial commission rates to be used for creating a validator."},update_time:{type:"string",description:"update_time is the last time the commission rate was changed.",format:"date-time"}},additionalProperties:!0,type:"object",title:"Commission",description:"Commission defines commission parameters for a given validator."},"cosmos.staking.v1beta1.CommissionRates":{properties:{rate:{type:"string",description:"rate is the commission rate charged to delegators, as a fraction."},max_rate:{type:"string",description:"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},max_change_rate:{type:"string",description:"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},additionalProperties:!0,type:"object",title:"Commission Rates",description:"CommissionRates defines the initial commission rates to be used for creating a validator."},"cosmos.staking.v1beta1.Description":{properties:{moniker:{type:"string",description:"moniker defines a human-readable name for the validator."},identity:{type:"string",description:"identity defines an optional identity signature (ex. UPort or Keybase)."},website:{type:"string",description:"website defines an optional website link."},security_contact:{type:"string",description:"security_contact defines an optional email for security contact."},details:{type:"string",description:"details define other optional details."}},additionalProperties:!0,type:"object",title:"Description",description:"Description defines a validator description."},"cosmos.staking.v1beta1.Validator":{properties:{operator_address:{type:"string",description:"operator_address defines the address of the validator's operator; bech encoded in JSON."},consensus_pubkey:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"consensus_pubkey is the consensus public key of the validator, as a Protobuf Any."},jailed:{type:"boolean",description:"jailed defined whether the validator has been jailed from bonded status or not."},status:{enum:["BOND_STATUS_UNSPECIFIED",0,"BOND_STATUS_UNBONDED",1,"BOND_STATUS_UNBONDING",2,"BOND_STATUS_BONDED",3],oneOf:[{type:"string"},{type:"integer"}],title:"Bond Status",description:"BondStatus is the status of a validator."},tokens:{type:"string",description:"tokens define the delegated tokens (incl. self-delegation)."},delegator_shares:{type:"string",description:"delegator_shares defines total shares issued to a validator's delegators."},description:{$ref:"#/definitions/cosmos.staking.v1beta1.Description",additionalProperties:!0,description:"description defines the description terms for the validator."},unbonding_height:{type:"string",description:"unbonding_height defines, if unbonding, the height at which this validator has begun unbonding."},unbonding_time:{type:"string",description:"unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.",format:"date-time"},commission:{$ref:"#/definitions/cosmos.staking.v1beta1.Commission",additionalProperties:!0,description:"commission defines the commission parameters."},min_self_delegation:{type:"string",description:"min_self_delegation is the validator's self declared minimum self delegation. Since: cosmos-sdk 0.46"}},additionalProperties:!0,type:"object",title:"Validator",description:"Validator defines a validator, together with the total amount of the Validator's bond shares and their exchange rate to coins. Slashing results in a decrease in the exchange rate, allowing correct calculation of future undelegations without iterating over delegators. When coins are delegated to this validator, the validator is credited with a delegation whose number of bond shares is based on the amount of coins delegated divided by the current exchange rate. Voting power can be calculated as total bonded shares multiplied by exchange rate."}}},http_rules:[{Params:["delegator_addr","validator_addr"],HasQuery:!1,HasBody:!1}]},"cosmos.staking.v1beta1/QueryHistoricalInfo":{module_name:"cosmos.staking.v1beta1",name:"HistoricalInfo",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryHistoricalInfoRequest",definitions:{QueryHistoricalInfoRequest:{properties:{height:{type:"string",description:"height defines at which height to query the historical info."}},additionalProperties:!0,type:"object",title:"Query Historical Info Request",description:"QueryHistoricalInfoRequest is request type for the Query/HistoricalInfo RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryHistoricalInfoResponse",definitions:{QueryHistoricalInfoResponse:{properties:{hist:{$ref:"#/definitions/cosmos.staking.v1beta1.HistoricalInfo",additionalProperties:!0,description:"hist defines the historical info at the given height."}},additionalProperties:!0,type:"object",title:"Query Historical Info Response",description:"QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC method."},"cosmos.staking.v1beta1.Commission":{properties:{commission_rates:{$ref:"#/definitions/cosmos.staking.v1beta1.CommissionRates",additionalProperties:!0,description:"commission_rates defines the initial commission rates to be used for creating a validator."},update_time:{type:"string",description:"update_time is the last time the commission rate was changed.",format:"date-time"}},additionalProperties:!0,type:"object",title:"Commission",description:"Commission defines commission parameters for a given validator."},"cosmos.staking.v1beta1.CommissionRates":{properties:{rate:{type:"string",description:"rate is the commission rate charged to delegators, as a fraction."},max_rate:{type:"string",description:"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},max_change_rate:{type:"string",description:"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},additionalProperties:!0,type:"object",title:"Commission Rates",description:"CommissionRates defines the initial commission rates to be used for creating a validator."},"cosmos.staking.v1beta1.Description":{properties:{moniker:{type:"string",description:"moniker defines a human-readable name for the validator."},identity:{type:"string",description:"identity defines an optional identity signature (ex. UPort or Keybase)."},website:{type:"string",description:"website defines an optional website link."},security_contact:{type:"string",description:"security_contact defines an optional email for security contact."},details:{type:"string",description:"details define other optional details."}},additionalProperties:!0,type:"object",title:"Description",description:"Description defines a validator description."},"cosmos.staking.v1beta1.HistoricalInfo":{properties:{header:{$ref:"#/definitions/tendermint.types.Header",additionalProperties:!0},valset:{items:{$ref:"#/definitions/cosmos.staking.v1beta1.Validator"},type:"array"}},additionalProperties:!0,type:"object",title:"Historical Info",description:"HistoricalInfo contains header and validator information for a given block. It is stored as part of staking module's state, which persists the `n` most recent HistoricalInfo (`n` is set by the staking module's `historical_entries` parameter)."},"cosmos.staking.v1beta1.Validator":{properties:{operator_address:{type:"string",description:"operator_address defines the address of the validator's operator; bech encoded in JSON."},consensus_pubkey:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"consensus_pubkey is the consensus public key of the validator, as a Protobuf Any."},jailed:{type:"boolean",description:"jailed defined whether the validator has been jailed from bonded status or not."},status:{enum:["BOND_STATUS_UNSPECIFIED",0,"BOND_STATUS_UNBONDED",1,"BOND_STATUS_UNBONDING",2,"BOND_STATUS_BONDED",3],oneOf:[{type:"string"},{type:"integer"}],title:"Bond Status",description:"BondStatus is the status of a validator."},tokens:{type:"string",description:"tokens define the delegated tokens (incl. self-delegation)."},delegator_shares:{type:"string",description:"delegator_shares defines total shares issued to a validator's delegators."},description:{$ref:"#/definitions/cosmos.staking.v1beta1.Description",additionalProperties:!0,description:"description defines the description terms for the validator."},unbonding_height:{type:"string",description:"unbonding_height defines, if unbonding, the height at which this validator has begun unbonding."},unbonding_time:{type:"string",description:"unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.",format:"date-time"},commission:{$ref:"#/definitions/cosmos.staking.v1beta1.Commission",additionalProperties:!0,description:"commission defines the commission parameters."},min_self_delegation:{type:"string",description:"min_self_delegation is the validator's self declared minimum self delegation. Since: cosmos-sdk 0.46"}},additionalProperties:!0,type:"object",title:"Validator",description:"Validator defines a validator, together with the total amount of the Validator's bond shares and their exchange rate to coins. Slashing results in a decrease in the exchange rate, allowing correct calculation of future undelegations without iterating over delegators. When coins are delegated to this validator, the validator is credited with a delegation whose number of bond shares is based on the amount of coins delegated divided by the current exchange rate. Voting power can be calculated as total bonded shares multiplied by exchange rate."},"tendermint.types.BlockID":{properties:{hash:{type:"string",format:"binary",binaryEncoding:"base64"},part_set_header:{$ref:"#/definitions/tendermint.types.PartSetHeader",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Block ID",description:"BlockID"},"tendermint.types.Header":{properties:{version:{$ref:"#/definitions/tendermint.version.Consensus",additionalProperties:!0,description:"basic block info"},chain_id:{type:"string"},height:{type:"string"},time:{type:"string",format:"date-time"},last_block_id:{$ref:"#/definitions/tendermint.types.BlockID",additionalProperties:!0,description:"prev block info"},last_commit_hash:{type:"string",description:"hashes of block data  commit from validators from the last block",format:"binary",binaryEncoding:"base64"},data_hash:{type:"string",description:"transactions",format:"binary",binaryEncoding:"base64"},validators_hash:{type:"string",description:"hashes from the app output from the prev block  validators for the current block",format:"binary",binaryEncoding:"base64"},next_validators_hash:{type:"string",description:"validators for the next block",format:"binary",binaryEncoding:"base64"},consensus_hash:{type:"string",description:"consensus params for current block",format:"binary",binaryEncoding:"base64"},app_hash:{type:"string",description:"state after txs from the previous block",format:"binary",binaryEncoding:"base64"},last_results_hash:{type:"string",description:"root hash of all results from the txs from the previous block",format:"binary",binaryEncoding:"base64"},evidence_hash:{type:"string",description:"consensus info  evidence included in the block",format:"binary",binaryEncoding:"base64"},proposer_address:{type:"string",description:"original proposer of the block",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"--------------------------------",description:"--------------------------------  Header defines the structure of a Tendermint block header."},"tendermint.types.PartSetHeader":{properties:{total:{type:"integer"},hash:{type:"string",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Part Set Header",description:"PartsetHeader"},"tendermint.version.Consensus":{properties:{block:{type:"string"},app:{type:"string"}},additionalProperties:!0,type:"object",title:"Consensus",description:"Consensus captures the consensus rules for processing a block in the blockchain, including all blockchain data structures and the rules of the application's state transition machine."}}},http_rules:[{Params:["height"],HasQuery:!1,HasBody:!1}]},"cosmos.staking.v1beta1/QueryPool":{module_name:"cosmos.staking.v1beta1",name:"Pool",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryPoolRequest",definitions:{QueryPoolRequest:{additionalProperties:!0,type:"object",title:"Query Pool Request",description:"QueryPoolRequest is request type for the Query/Pool RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryPoolResponse",definitions:{QueryPoolResponse:{properties:{pool:{$ref:"#/definitions/cosmos.staking.v1beta1.Pool",additionalProperties:!0,description:"pool defines the pool info."}},additionalProperties:!0,type:"object",title:"Query Pool Response",description:"QueryPoolResponse is response type for the Query/Pool RPC method."},"cosmos.staking.v1beta1.Pool":{properties:{not_bonded_tokens:{type:"string"},bonded_tokens:{type:"string"}},additionalProperties:!0,type:"object",title:"Pool",description:"Pool is used for tracking bonded and not-bonded token supply of the bond denomination."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.staking.v1beta1/QueryParams":{module_name:"cosmos.staking.v1beta1",name:"Params",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsRequest",definitions:{QueryParamsRequest:{additionalProperties:!0,type:"object",title:"Query Params Request",description:"QueryParamsRequest is request type for the Query/Params RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsResponse",definitions:{QueryParamsResponse:{properties:{params:{$ref:"#/definitions/cosmos.staking.v1beta1.Params",additionalProperties:!0,description:"params holds all the parameters of this module."}},additionalProperties:!0,type:"object",title:"Query Params Response",description:"QueryParamsResponse is response type for the Query/Params RPC method."},"cosmos.staking.v1beta1.Params":{properties:{unbonding_time:{pattern:"^([0-9]+\\.?[0-9]*|\\.[0-9]+)s$",type:"string",description:"unbonding_time is the time duration of unbonding.",format:"regex"},max_validators:{type:"integer",description:"max_validators is the maximum number of validators."},max_entries:{type:"integer",description:"max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio)."},historical_entries:{type:"integer",description:"historical_entries is the number of historical entries to persist."},bond_denom:{type:"string",description:"bond_denom defines the bondable coin denomination."},min_commission_rate:{type:"string",description:"min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators"}},additionalProperties:!0,type:"object",title:"Params",description:"Params defines the parameters for the staking module."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.staking.v1beta1/sendMsgCreateValidator":{module_name:"cosmos.staking.v1beta1",name:"CreateValidator",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateValidator",definitions:{MsgCreateValidator:{properties:{description:{$ref:"#/definitions/cosmos.staking.v1beta1.Description",additionalProperties:!0},commission:{$ref:"#/definitions/cosmos.staking.v1beta1.CommissionRates",additionalProperties:!0},min_self_delegation:{type:"string"},delegator_address:{type:"string"},validator_address:{type:"string"},pubkey:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object"},value:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Msg Create Validator",description:"MsgCreateValidator defines a SDK message for creating a new validator."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"cosmos.staking.v1beta1.CommissionRates":{properties:{rate:{type:"string",description:"rate is the commission rate charged to delegators, as a fraction."},max_rate:{type:"string",description:"max_rate defines the maximum commission rate which validator can ever charge, as a fraction."},max_change_rate:{type:"string",description:"max_change_rate defines the maximum daily increase of the validator commission, as a fraction."}},additionalProperties:!0,type:"object",title:"Commission Rates",description:"CommissionRates defines the initial commission rates to be used for creating a validator."},"cosmos.staking.v1beta1.Description":{properties:{moniker:{type:"string",description:"moniker defines a human-readable name for the validator."},identity:{type:"string",description:"identity defines an optional identity signature (ex. UPort or Keybase)."},website:{type:"string",description:"website defines an optional website link."},security_contact:{type:"string",description:"security_contact defines an optional email for security contact."},details:{type:"string",description:"details define other optional details."}},additionalProperties:!0,type:"object",title:"Description",description:"Description defines a validator description."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateValidatorResponse",definitions:{MsgCreateValidatorResponse:{additionalProperties:!0,type:"object",title:"Msg Create Validator Response",description:"MsgCreateValidatorResponse defines the Msg/CreateValidator response type."}}},http_rules:null},"cosmos.staking.v1beta1/sendMsgEditValidator":{module_name:"cosmos.staking.v1beta1",name:"EditValidator",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgEditValidator",definitions:{MsgEditValidator:{properties:{description:{$ref:"#/definitions/cosmos.staking.v1beta1.Description",additionalProperties:!0},validator_address:{type:"string"},commission_rate:{type:"string",description:"We pass a reference to the new commission rate and min self delegation as it's not mandatory to update. If not updated, the deserialized rate will be zero with no way to distinguish if an update was intended. REF: #2373"},min_self_delegation:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Edit Validator",description:"MsgEditValidator defines a SDK message for editing an existing validator."},"cosmos.staking.v1beta1.Description":{properties:{moniker:{type:"string",description:"moniker defines a human-readable name for the validator."},identity:{type:"string",description:"identity defines an optional identity signature (ex. UPort or Keybase)."},website:{type:"string",description:"website defines an optional website link."},security_contact:{type:"string",description:"security_contact defines an optional email for security contact."},details:{type:"string",description:"details define other optional details."}},additionalProperties:!0,type:"object",title:"Description",description:"Description defines a validator description."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgEditValidatorResponse",definitions:{MsgEditValidatorResponse:{additionalProperties:!0,type:"object",title:"Msg Edit Validator Response",description:"MsgEditValidatorResponse defines the Msg/EditValidator response type."}}},http_rules:null},"cosmos.staking.v1beta1/sendMsgDelegate":{module_name:"cosmos.staking.v1beta1",name:"Delegate",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgDelegate",definitions:{MsgDelegate:{properties:{delegator_address:{type:"string"},validator_address:{type:"string"},amount:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Msg Delegate",description:"MsgDelegate defines a SDK message for performing a delegation of coins from a delegator to a validator."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgDelegateResponse",definitions:{MsgDelegateResponse:{additionalProperties:!0,type:"object",title:"Msg Delegate Response",description:"MsgDelegateResponse defines the Msg/Delegate response type."}}},http_rules:null},"cosmos.staking.v1beta1/sendMsgBeginRedelegate":{module_name:"cosmos.staking.v1beta1",name:"BeginRedelegate",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgBeginRedelegate",definitions:{MsgBeginRedelegate:{properties:{delegator_address:{type:"string"},validator_src_address:{type:"string"},validator_dst_address:{type:"string"},amount:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Msg Begin Redelegate",description:"MsgBeginRedelegate defines a SDK message for performing a redelegation of coins from a delegator and source validator to a destination validator."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgBeginRedelegateResponse",definitions:{MsgBeginRedelegateResponse:{properties:{completion_time:{type:"string",format:"date-time"}},additionalProperties:!0,type:"object",title:"Msg Begin Redelegate Response",description:"MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type."}}},http_rules:null},"cosmos.staking.v1beta1/sendMsgUndelegate":{module_name:"cosmos.staking.v1beta1",name:"Undelegate",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUndelegate",definitions:{MsgUndelegate:{properties:{delegator_address:{type:"string"},validator_address:{type:"string"},amount:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Msg Undelegate",description:"MsgUndelegate defines a SDK message for performing an undelegation from a delegate and a validator."},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUndelegateResponse",definitions:{MsgUndelegateResponse:{properties:{completion_time:{type:"string",format:"date-time"}},additionalProperties:!0,type:"object",title:"Msg Undelegate Response",description:"MsgUndelegateResponse defines the Msg/Undelegate response type."}}},http_rules:null},"cosmos.staking.v1beta1/sendMsgCancelUnbondingDelegation":{module_name:"cosmos.staking.v1beta1",name:"CancelUnbondingDelegation",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCancelUnbondingDelegation",definitions:{MsgCancelUnbondingDelegation:{properties:{delegator_address:{type:"string"},validator_address:{type:"string"},amount:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0,description:"amount is always less than or equal to unbonding delegation entry balance"},creation_height:{type:"string",description:"creation_height is the height which the unbonding took place."}},additionalProperties:!0,type:"object",title:"Msg Cancel Unbonding Delegation",description:"MsgCancelUnbondingDelegation defines the SDK message for performing a cancel unbonding delegation for delegator Since: cosmos-sdk 0.46"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCancelUnbondingDelegationResponse",definitions:{MsgCancelUnbondingDelegationResponse:{additionalProperties:!0,type:"object",title:"Msg Cancel Unbonding Delegation Response",description:"MsgCancelUnbondingDelegationResponse Since: cosmos-sdk 0.46"}}},http_rules:null},"cosmos.upgrade.v1beta1/QueryCurrentPlan":{module_name:"cosmos.upgrade.v1beta1",name:"CurrentPlan",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryCurrentPlanRequest",definitions:{QueryCurrentPlanRequest:{additionalProperties:!0,type:"object",title:"Query Current Plan Request",description:"QueryCurrentPlanRequest is the request type for the Query/CurrentPlan RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryCurrentPlanResponse",definitions:{QueryCurrentPlanResponse:{properties:{plan:{$ref:"#/definitions/cosmos.upgrade.v1beta1.Plan",additionalProperties:!0,description:"plan is the current upgrade plan."}},additionalProperties:!0,type:"object",title:"Query Current Plan Response",description:"QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC method."},"cosmos.upgrade.v1beta1.Plan":{properties:{name:{type:"string",description:'Sets the name for the upgrade. This name will be used by the upgraded version of the software to apply any special "on-upgrade" commands during the first BeginBlock method after the upgrade is applied. It is also used to detect whether a software version can handle a given upgrade. If no upgrade handler with this name has been set in the software, it will be assumed that the software is out-of-date when the upgrade Time or Height is reached and the software will exit.'},time:{type:"string",description:"Deprecated: Time based upgrades have been deprecated. Time based upgrade logic has been removed from the SDK. If this field is not empty, an error will be thrown.",format:"date-time"},height:{type:"string",description:"The height at which the upgrade must be performed. Only used if Time is not set."},info:{type:"string",description:"Any application specific upgrade info to be included on-chain such as a git commit that validators could automatically upgrade to"},upgraded_client_state:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been moved to the IBC module in the sub module 02-client. If this field is not empty, an error will be thrown."}},additionalProperties:!0,type:"object",title:"Plan",description:"Plan specifies information about a planned upgrade and when it should occur."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.upgrade.v1beta1/QueryAppliedPlan":{module_name:"cosmos.upgrade.v1beta1",name:"AppliedPlan",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAppliedPlanRequest",definitions:{QueryAppliedPlanRequest:{properties:{name:{type:"string",description:"name is the name of the applied plan to query for."}},additionalProperties:!0,type:"object",title:"Query Applied Plan Request",description:"QueryCurrentPlanRequest is the request type for the Query/AppliedPlan RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAppliedPlanResponse",definitions:{QueryAppliedPlanResponse:{properties:{height:{type:"string",description:"height is the block height at which the plan was applied."}},additionalProperties:!0,type:"object",title:"Query Applied Plan Response",description:"QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC method."}}},http_rules:[{Params:["name"],HasQuery:!1,HasBody:!1}]},"cosmos.upgrade.v1beta1/QueryUpgradedConsensusState":{module_name:"cosmos.upgrade.v1beta1",name:"UpgradedConsensusState",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryUpgradedConsensusStateRequest",definitions:{QueryUpgradedConsensusStateRequest:{properties:{last_height:{type:"string",description:"last height of the current chain must be sent in request as this is the height under which next consensus state is stored"}},additionalProperties:!0,type:"object",title:"Query Upgraded Consensus State Request",description:"QueryUpgradedConsensusStateRequest is the request type for the Query/UpgradedConsensusState RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryUpgradedConsensusStateResponse",definitions:{QueryUpgradedConsensusStateResponse:{properties:{upgraded_consensus_state:{type:"string",description:"Since: cosmos-sdk 0.43",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",title:"Query Upgraded Consensus State Response",description:"QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState RPC method."}}},http_rules:[{Params:["last_height"],HasQuery:!1,HasBody:!1}]},"cosmos.upgrade.v1beta1/QueryModuleVersions":{module_name:"cosmos.upgrade.v1beta1",name:"ModuleVersions",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryModuleVersionsRequest",definitions:{QueryModuleVersionsRequest:{properties:{module_name:{type:"string",description:"module_name is a field to query a specific module consensus version from state. Leaving this empty will fetch the full list of module versions from state"}},additionalProperties:!0,type:"object",title:"Query Module Versions Request",description:"QueryModuleVersionsRequest is the request type for the Query/ModuleVersions RPC method. Since: cosmos-sdk 0.43"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryModuleVersionsResponse",definitions:{QueryModuleVersionsResponse:{properties:{module_versions:{items:{$ref:"#/definitions/cosmos.upgrade.v1beta1.ModuleVersion"},type:"array",description:"module_versions is a list of module names with their consensus versions."}},additionalProperties:!0,type:"object",title:"Query Module Versions Response",description:"QueryModuleVersionsResponse is the response type for the Query/ModuleVersions RPC method. Since: cosmos-sdk 0.43"},"cosmos.upgrade.v1beta1.ModuleVersion":{properties:{name:{type:"string",description:"name of the app module"},version:{type:"string",description:"consensus version of the app module"}},additionalProperties:!0,type:"object",title:"Module Version",description:"ModuleVersion specifies a module and its consensus version. Since: cosmos-sdk 0.43"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"cosmos.upgrade.v1beta1/QueryAuthority":{module_name:"cosmos.upgrade.v1beta1",name:"Authority",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAuthorityRequest",definitions:{QueryAuthorityRequest:{additionalProperties:!0,type:"object",title:"Query Authority Request",description:"QueryAuthorityRequest is the request type for Query/Authority Since: cosmos-sdk 0.46"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAuthorityResponse",definitions:{QueryAuthorityResponse:{properties:{address:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Authority Response",description:"QueryAuthorityResponse is the response type for Query/Authority Since: cosmos-sdk 0.46"}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"cosmos.upgrade.v1beta1/sendMsgSoftwareUpgrade":{module_name:"cosmos.upgrade.v1beta1",name:"SoftwareUpgrade",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgSoftwareUpgrade",definitions:{MsgSoftwareUpgrade:{properties:{authority:{type:"string",description:"authority is the address of the governance account."},plan:{$ref:"#/definitions/cosmos.upgrade.v1beta1.Plan",additionalProperties:!0,description:"plan is the upgrade plan."}},additionalProperties:!0,type:"object",title:"Msg Software Upgrade",description:"MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type. Since: cosmos-sdk 0.46"},"cosmos.upgrade.v1beta1.Plan":{properties:{name:{type:"string",description:'Sets the name for the upgrade. This name will be used by the upgraded version of the software to apply any special "on-upgrade" commands during the first BeginBlock method after the upgrade is applied. It is also used to detect whether a software version can handle a given upgrade. If no upgrade handler with this name has been set in the software, it will be assumed that the software is out-of-date when the upgrade Time or Height is reached and the software will exit.'},time:{type:"string",description:"Deprecated: Time based upgrades have been deprecated. Time based upgrade logic has been removed from the SDK. If this field is not empty, an error will be thrown.",format:"date-time"},height:{type:"string",description:"The height at which the upgrade must be performed. Only used if Time is not set."},info:{type:"string",description:"Any application specific upgrade info to be included on-chain such as a git commit that validators could automatically upgrade to"},upgraded_client_state:{properties:{type_url:{type:"string",description:'A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one "/" character. The last segment of the URL\'s path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading "." is not accepted). In practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows: * If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.) Note: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com. Schemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics.'},value:{type:"string",description:"Must be a valid serialized protocol buffer of the above specified type.",format:"binary",binaryEncoding:"base64"}},additionalProperties:!0,type:"object",description:"Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been moved to the IBC module in the sub module 02-client. If this field is not empty, an error will be thrown."}},additionalProperties:!0,type:"object",title:"Plan",description:"Plan specifies information about a planned upgrade and when it should occur."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgSoftwareUpgradeResponse",definitions:{MsgSoftwareUpgradeResponse:{additionalProperties:!0,type:"object",title:"Msg Software Upgrade Response",description:"MsgSoftwareUpgradeResponse is the Msg/SoftwareUpgrade response type. Since: cosmos-sdk 0.46"}}},http_rules:null},"cosmos.upgrade.v1beta1/sendMsgCancelUpgrade":{module_name:"cosmos.upgrade.v1beta1",name:"CancelUpgrade",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCancelUpgrade",definitions:{MsgCancelUpgrade:{properties:{authority:{type:"string",description:"authority is the address of the governance account."}},additionalProperties:!0,type:"object",title:"Msg Cancel Upgrade",description:"MsgCancelUpgrade is the Msg/CancelUpgrade request type. Since: cosmos-sdk 0.46"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCancelUpgradeResponse",definitions:{MsgCancelUpgradeResponse:{additionalProperties:!0,type:"object",title:"Msg Cancel Upgrade Response",description:"MsgCancelUpgradeResponse is the Msg/CancelUpgrade response type. Since: cosmos-sdk 0.46"}}},http_rules:null},"ibc.applications.transfer.v1/QueryDenomTrace":{module_name:"ibc.applications.transfer.v1",name:"DenomTrace",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDenomTraceRequest",definitions:{QueryDenomTraceRequest:{properties:{hash:{type:"string",description:"hash (in hex format) or denom (full denom with ibc prefix) of the denomination trace information."}},additionalProperties:!0,type:"object",title:"Query Denom Trace Request",description:"QueryDenomTraceRequest is the request type for the Query/DenomTrace RPC method"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDenomTraceResponse",definitions:{QueryDenomTraceResponse:{properties:{denom_trace:{$ref:"#/definitions/ibc.applications.transfer.v1.DenomTrace",additionalProperties:!0,description:"denom_trace returns the requested denomination trace information."}},additionalProperties:!0,type:"object",title:"Query Denom Trace Response",description:"QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC method."},"ibc.applications.transfer.v1.DenomTrace":{properties:{path:{type:"string",description:"path defines the chain of port/channel identifiers used for tracing the source of the fungible token."},base_denom:{type:"string",description:"base denomination of the relayed fungible token."}},additionalProperties:!0,type:"object",title:"Denom Trace",description:"DenomTrace contains the base denomination for ICS20 fungible tokens and the source tracing information path."}}},http_rules:[{Params:["hash"],HasQuery:!1,HasBody:!1}]},"ibc.applications.transfer.v1/QueryDenomTraces":{module_name:"ibc.applications.transfer.v1",name:"DenomTraces",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDenomTracesRequest",definitions:{QueryDenomTracesRequest:{properties:{pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0,description:"pagination defines an optional pagination for the request."}},additionalProperties:!0,type:"object",title:"Query Denom Traces Request",description:"QueryConnectionsRequest is the request type for the Query/DenomTraces RPC method"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDenomTracesResponse",definitions:{QueryDenomTracesResponse:{properties:{denom_traces:{items:{$ref:"#/definitions/ibc.applications.transfer.v1.DenomTrace"},type:"array",description:"denom_traces returns all denominations trace information."},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0,description:"pagination defines the pagination in the response."}},additionalProperties:!0,type:"object",title:"Query Denom Traces Response",description:"QueryConnectionsResponse is the response type for the Query/DenomTraces RPC method."},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"ibc.applications.transfer.v1.DenomTrace":{properties:{path:{type:"string",description:"path defines the chain of port/channel identifiers used for tracing the source of the fungible token."},base_denom:{type:"string",description:"base denomination of the relayed fungible token."}},additionalProperties:!0,type:"object",title:"Denom Trace",description:"DenomTrace contains the base denomination for ICS20 fungible tokens and the source tracing information path."}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"ibc.applications.transfer.v1/QueryParams":{module_name:"ibc.applications.transfer.v1",name:"Params",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsRequest",definitions:{QueryParamsRequest:{additionalProperties:!0,type:"object",title:"Query Params Request",description:"QueryParamsRequest is the request type for the Query/Params RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsResponse",definitions:{QueryParamsResponse:{properties:{params:{$ref:"#/definitions/ibc.applications.transfer.v1.Params",additionalProperties:!0,description:"params defines the parameters of the module."}},additionalProperties:!0,type:"object",title:"Query Params Response",description:"QueryParamsResponse is the response type for the Query/Params RPC method."},"ibc.applications.transfer.v1.Params":{properties:{send_enabled:{type:"boolean",description:"send_enabled enables or disables all cross-chain token transfers from this chain."},receive_enabled:{type:"boolean",description:"receive_enabled enables or disables all cross-chain token transfers to this chain."}},additionalProperties:!0,type:"object",title:"Params",description:"Params defines the set of IBC transfer parameters. NOTE: To prevent a single token from being transferred, set the TransfersEnabled parameter to true and then set the bank module's SendEnabled parameter for the denomination to false."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"ibc.applications.transfer.v1/QueryDenomHash":{module_name:"ibc.applications.transfer.v1",name:"DenomHash",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDenomHashRequest",definitions:{QueryDenomHashRequest:{properties:{trace:{type:"string",description:"The denomination trace ([port_id]/[channel_id])+/[denom]"}},additionalProperties:!0,type:"object",title:"Query Denom Hash Request",description:"QueryDenomHashRequest is the request type for the Query/DenomHash RPC method"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryDenomHashResponse",definitions:{QueryDenomHashResponse:{properties:{hash:{type:"string",description:"hash (in hex format) of the denomination trace information."}},additionalProperties:!0,type:"object",title:"Query Denom Hash Response",description:"QueryDenomHashResponse is the response type for the Query/DenomHash RPC method."}}},http_rules:[{Params:["trace"],HasQuery:!1,HasBody:!1}]},"ibc.applications.transfer.v1/QueryEscrowAddress":{module_name:"ibc.applications.transfer.v1",name:"EscrowAddress",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryEscrowAddressRequest",definitions:{QueryEscrowAddressRequest:{properties:{port_id:{type:"string",description:"unique port identifier"},channel_id:{type:"string",description:"unique channel identifier"}},additionalProperties:!0,type:"object",title:"Query Escrow Address Request",description:"QueryEscrowAddressRequest is the request type for the EscrowAddress RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryEscrowAddressResponse",definitions:{QueryEscrowAddressResponse:{properties:{escrow_address:{type:"string",description:"the escrow account address"}},additionalProperties:!0,type:"object",title:"Query Escrow Address Response",description:"QueryEscrowAddressResponse is the response type of the EscrowAddress RPC method."}}},http_rules:[{Params:["channel_id","port_id"],HasQuery:!1,HasBody:!1}]},"ibc.applications.transfer.v1/sendMsgTransfer":{module_name:"ibc.applications.transfer.v1",name:"Transfer",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgTransfer",definitions:{MsgTransfer:{properties:{source_port:{type:"string",description:"the port on which the packet will be sent"},source_channel:{type:"string",description:"the channel by which the packet will be sent"},token:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0,description:"the tokens to be transferred"},sender:{type:"string",description:"the sender address"},receiver:{type:"string",description:"the recipient address on the destination chain"},timeout_height:{$ref:"#/definitions/ibc.core.client.v1.Height",additionalProperties:!0,description:"Timeout height relative to the current block height. The timeout is disabled when set to 0."},timeout_timestamp:{type:"string",description:"Timeout timestamp in absolute nanoseconds since unix epoch. The timeout is disabled when set to 0."}},additionalProperties:!0,type:"object",title:"Msg Transfer",description:"MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between ICS20 enabled chains. See ICS Spec here: https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"ibc.core.client.v1.Height":{properties:{revision_number:{type:"string",description:"the revision that the client is currently on"},revision_height:{type:"string",description:"the height within the given revision"}},additionalProperties:!0,type:"object",title:"Height",description:"Height is a monotonically increasing data type that can be compared against another Height for the purposes of updating and freezing clients Normally the RevisionHeight is incremented at each height while keeping RevisionNumber the same. However some consensus algorithms may choose to reset the height in certain conditions e.g. hard forks, state-machine breaking changes In these cases, the RevisionNumber is incremented so that height continues to be monitonically increasing even as the RevisionHeight gets reset"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgTransferResponse",definitions:{MsgTransferResponse:{additionalProperties:!0,type:"object",title:"Msg Transfer Response",description:"MsgTransferResponse defines the Msg/Transfer response type."}}},http_rules:null},"dyson/QueryScheduledRun":{module_name:"dyson",name:"ScheduledRun",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetScheduledRunRequest",definitions:{QueryGetScheduledRunRequest:{properties:{index:{type:"string",description:"inxex is the script address"}},additionalProperties:!0,type:"object",title:"Query Get Scheduled Run Request"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetScheduledRunResponse",definitions:{QueryGetScheduledRunResponse:{properties:{scheduled_run:{$ref:"#/definitions/dyson.ScheduledRun",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Get Scheduled Run Response"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"cosmos.base.v1beta1.DecCoin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Dec Coin",description:"DecCoin defines a token with a denomination and a decimal amount. NOTE: The amount field is an Dec which implements the custom method signatures required by gogoproto."},"dyson.MsgRun":{properties:{creator:{type:"string",description:"The account sending the transaction"},address:{type:"string",description:"dys address of the scrit to call"},extra_lines:{type:"string",description:"optional extra source code to append to the end of the script before running"},function_name:{type:"string",description:"optional function to call"},args:{type:"string",description:"optional args to call the function with"},kwargs:{type:"string",description:"optional kwargs to run"},coins:{type:"string",description:'optional comma seperated list of coins to send the script (for example "123dys,456token")'}},additionalProperties:!0,type:"object",title:"Msg Run",description:"MsgRun runs a script at a specific address"},"dyson.MsgRunResponse":{properties:{response:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Run Response"},"dyson.ScheduledRun":{properties:{index:{type:"string"},creator:{type:"string"},height:{type:"string"},gas:{type:"string"},msg:{$ref:"#/definitions/dyson.MsgRun",additionalProperties:!0},resp:{$ref:"#/definitions/dyson.MsgRunResponse",additionalProperties:!0},error:{type:"string"},gasprice:{$ref:"#/definitions/cosmos.base.v1beta1.DecCoin",additionalProperties:!0},fee:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Scheduled Run"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/QueryScheduledRunAll":{module_name:"dyson",name:"ScheduledRunAll",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllScheduledRunRequest",definitions:{QueryAllScheduledRunRequest:{properties:{index:{type:"string"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query All Scheduled Run Request"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllScheduledRunResponse",definitions:{QueryAllScheduledRunResponse:{properties:{scheduled_run:{items:{$ref:"#/definitions/dyson.ScheduledRun"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query All Scheduled Run Response"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"cosmos.base.v1beta1.DecCoin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Dec Coin",description:"DecCoin defines a token with a denomination and a decimal amount. NOTE: The amount field is an Dec which implements the custom method signatures required by gogoproto."},"dyson.MsgRun":{properties:{creator:{type:"string",description:"The account sending the transaction"},address:{type:"string",description:"dys address of the scrit to call"},extra_lines:{type:"string",description:"optional extra source code to append to the end of the script before running"},function_name:{type:"string",description:"optional function to call"},args:{type:"string",description:"optional args to call the function with"},kwargs:{type:"string",description:"optional kwargs to run"},coins:{type:"string",description:'optional comma seperated list of coins to send the script (for example "123dys,456token")'}},additionalProperties:!0,type:"object",title:"Msg Run",description:"MsgRun runs a script at a specific address"},"dyson.MsgRunResponse":{properties:{response:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Run Response"},"dyson.ScheduledRun":{properties:{index:{type:"string"},creator:{type:"string"},height:{type:"string"},gas:{type:"string"},msg:{$ref:"#/definitions/dyson.MsgRun",additionalProperties:!0},resp:{$ref:"#/definitions/dyson.MsgRunResponse",additionalProperties:!0},error:{type:"string"},gasprice:{$ref:"#/definitions/cosmos.base.v1beta1.DecCoin",additionalProperties:!0},fee:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Scheduled Run"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/QueryStorage":{module_name:"dyson",name:"Storage",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetStorageRequest",definitions:{QueryGetStorageRequest:{properties:{index:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Get Storage Request"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetStorageResponse",definitions:{QueryGetStorageResponse:{properties:{storage:{$ref:"#/definitions/dyson.Storage",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Get Storage Response"},"dyson.Storage":{properties:{creator:{type:"string"},index:{type:"string"},data:{type:"string"}},additionalProperties:!0,type:"object",title:"Storage"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/QueryStorageAll":{module_name:"dyson",name:"StorageAll",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllStorageRequest",definitions:{QueryAllStorageRequest:{properties:{pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query All Storage Request"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllStorageResponse",definitions:{QueryAllStorageResponse:{properties:{storage:{items:{$ref:"#/definitions/dyson.Storage"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query All Storage Response"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"dyson.Storage":{properties:{creator:{type:"string"},index:{type:"string"},data:{type:"string"}},additionalProperties:!0,type:"object",title:"Storage"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/QueryScript":{module_name:"dyson",name:"Script",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetScriptRequest",definitions:{QueryGetScriptRequest:{properties:{index:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Get Script Request"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetScriptResponse",definitions:{QueryGetScriptResponse:{properties:{script:{$ref:"#/definitions/dyson.Script",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Get Script Response"},"dyson.Script":{properties:{creator:{type:"string"},index:{type:"string"},code:{type:"string"}},additionalProperties:!0,type:"object",title:"Script"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/QuerySchema":{module_name:"dyson",name:"Schema",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetSchemaRequest",definitions:{QueryGetSchemaRequest:{properties:{index:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Get Schema Request"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetSchemaResponse",definitions:{QueryGetSchemaResponse:{properties:{schema:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Get Schema Response"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/QueryWsgi":{module_name:"dyson",name:"Wsgi",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryWsgiRequest",definitions:{QueryWsgiRequest:{properties:{index:{type:"string"},httprequest:{type:"string"},gaslimit:{type:"string",description:"Gas to allow the WSGI request"}},additionalProperties:!0,type:"object",title:"Query Wsgi Request"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryWsgiResponse",definitions:{QueryWsgiResponse:{properties:{httpresponse:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Wsgi Response"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/QueryQueryScript":{module_name:"dyson",name:"QueryScript",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgRun",definitions:{MsgRun:{properties:{creator:{type:"string",description:"The account sending the transaction"},address:{type:"string",description:"dys address of the scrit to call"},extra_lines:{type:"string",description:"optional extra source code to append to the end of the script before running",format:"textarea"},function_name:{type:"string",description:"optional function to call"},args:{type:"string",description:"optional args to call the function with"},kwargs:{type:"string",description:"optional kwargs to run"},coins:{type:"string",description:'optional comma seperated list of coins to send the script (for example "123dys,456token")'}},additionalProperties:!0,type:"object",title:"Msg Run",description:"MsgRun runs a script at a specific address"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgRunResponse",definitions:{MsgRunResponse:{properties:{response:{type:"string",format:"textarea"}},additionalProperties:!0,type:"object",title:"Msg Run Response"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/QueryScriptAll":{module_name:"dyson",name:"ScriptAll",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllScriptRequest",definitions:{QueryAllScriptRequest:{properties:{pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query All Script Request"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllScriptResponse",definitions:{QueryAllScriptResponse:{properties:{Script:{items:{$ref:"#/definitions/dyson.Script"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query All Script Response"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"dyson.Script":{properties:{creator:{type:"string"},index:{type:"string"},code:{type:"string"}},additionalProperties:!0,type:"object",title:"Script"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/QueryPrefixStorage":{module_name:"dyson",name:"PrefixStorage",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryPrefixStorageRequest",definitions:{QueryPrefixStorageRequest:{properties:{prefix:{type:"string"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Prefix Storage Request"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryPrefixStorageResponse",definitions:{QueryPrefixStorageResponse:{properties:{storage:{items:{$ref:"#/definitions/dyson.Storage"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Prefix Storage Response"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"dyson.Storage":{properties:{creator:{type:"string"},index:{type:"string"},data:{type:"string"}},additionalProperties:!0,type:"object",title:"Storage"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/QueryScheduledGasPriceAndFeeAtBlock":{module_name:"dyson",name:"ScheduledGasPriceAndFeeAtBlock",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryScheduledGasPriceAndFeeAtBlockRequest",definitions:{QueryScheduledGasPriceAndFeeAtBlockRequest:{properties:{blockheight:{type:"string"},gaswanted:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Scheduled Gas Price And Fee At Block Request"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryScheduledGasPriceAndFeeAtBlockResponse",definitions:{QueryScheduledGasPriceAndFeeAtBlockResponse:{properties:{gasprice:{$ref:"#/definitions/cosmos.base.v1beta1.DecCoin",additionalProperties:!0},gasfee:{$ref:"#/definitions/cosmos.base.v1beta1.Coin",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Scheduled Gas Price And Fee At Block Response"},"cosmos.base.v1beta1.Coin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Coin",description:"Coin defines a token with a denomination and an amount. NOTE: The amount field is an Int which implements the custom method signatures required by gogoproto."},"cosmos.base.v1beta1.DecCoin":{properties:{denom:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Dec Coin",description:"DecCoin defines a token with a denomination and a decimal amount. NOTE: The amount field is an Dec which implements the custom method signatures required by gogoproto."}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/QueryCron":{module_name:"dyson",name:"Cron",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetCronRequest",definitions:{QueryGetCronRequest:{properties:{blockHeight:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Get Cron Request"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetCronResponse",definitions:{QueryGetCronResponse:{properties:{cron:{$ref:"#/definitions/dyson.Cron",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Get Cron Response"},"dyson.Cron":{properties:{blockHeight:{type:"string"},indexes:{items:{type:"string"},type:"array"}},additionalProperties:!0,type:"object",title:"Cron"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/QueryCronAll":{module_name:"dyson",name:"CronAll",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllCronRequest",definitions:{QueryAllCronRequest:{properties:{pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query All Cron Request"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllCronResponse",definitions:{QueryAllCronResponse:{properties:{cron:{items:{$ref:"#/definitions/dyson.Cron"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query All Cron Response"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"dyson.Cron":{properties:{blockHeight:{type:"string"},indexes:{items:{type:"string"},type:"array"}},additionalProperties:!0,type:"object",title:"Cron"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"dyson/sendMsgCreateScheduledRun":{module_name:"dyson",name:"CreateScheduledRun",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateScheduledRun",definitions:{MsgCreateScheduledRun:{properties:{creator:{type:"string"},height:{type:"string"},gas:{type:"string"},msg:{$ref:"#/definitions/dyson.MsgRun",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Msg Create Scheduled Run"},"dyson.MsgRun":{properties:{creator:{type:"string",description:"The account sending the transaction"},address:{type:"string",description:"dys address of the scrit to call"},extra_lines:{type:"string",description:"optional extra source code to append to the end of the script before running"},function_name:{type:"string",description:"optional function to call"},args:{type:"string",description:"optional args to call the function with"},kwargs:{type:"string",description:"optional kwargs to run"},coins:{type:"string",description:'optional comma seperated list of coins to send the script (for example "123dys,456token")'}},additionalProperties:!0,type:"object",title:"Msg Run",description:"MsgRun runs a script at a specific address"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateScheduledRunResponse",definitions:{MsgCreateScheduledRunResponse:{additionalProperties:!0,type:"object",title:"Msg Create Scheduled Run Response"}}},http_rules:null},"dyson/sendMsgCreateStorage":{module_name:"dyson",name:"CreateStorage",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateStorage",definitions:{MsgCreateStorage:{properties:{creator:{type:"string",description:"The address signing this transaction"},index:{type:"string",description:'Name of the Storage, must be prefixed with the creators address (for example: "dys..1a3/some_name")'},data:{type:"string",description:"data to stor at this index",format:"textarea"},force:{type:"boolean",description:"If true, force will always store the data at this address regardless of already existing storage"}},additionalProperties:!0,type:"object",title:"Msg Create Storage",description:"Create a new storage of arbitrary text"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateStorageResponse",definitions:{MsgCreateStorageResponse:{additionalProperties:!0,type:"object",title:"Msg Create Storage Response"}}},http_rules:null},"dyson/sendMsgUpdateStorage":{module_name:"dyson",name:"UpdateStorage",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateStorage",definitions:{MsgUpdateStorage:{properties:{creator:{type:"string"},index:{type:"string"},data:{type:"string",format:"textarea"},force:{type:"boolean"}},additionalProperties:!0,type:"object",title:"Msg Update Storage"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateStorageResponse",definitions:{MsgUpdateStorageResponse:{additionalProperties:!0,type:"object",title:"Msg Update Storage Response"}}},http_rules:null},"dyson/sendMsgDeleteStorage":{module_name:"dyson",name:"DeleteStorage",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgDeleteStorage",definitions:{MsgDeleteStorage:{properties:{creator:{type:"string"},index:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Delete Storage"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgDeleteStorageResponse",definitions:{MsgDeleteStorageResponse:{additionalProperties:!0,type:"object",title:"Msg Delete Storage Response"}}},http_rules:null},"dyson/sendMsgCreateScript":{module_name:"dyson",name:"CreateScript",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateScript",definitions:{MsgCreateScript:{properties:{creator:{type:"string"},code:{type:"string",format:"textarea"}},additionalProperties:!0,type:"object",title:"Msg Create Script"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgCreateScriptResponse",definitions:{MsgCreateScriptResponse:{properties:{address:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Create Script Response"}}},http_rules:null},"dyson/sendMsgUpdateScript":{module_name:"dyson",name:"UpdateScript",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateScript",definitions:{MsgUpdateScript:{properties:{creator:{type:"string"},code:{type:"string",format:"textarea"}},additionalProperties:!0,type:"object",title:"Msg Update Script"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateScriptResponse",definitions:{MsgUpdateScriptResponse:{properties:{address:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Update Script Response"}}},http_rules:null},"dyson/sendMsgDeleteScript":{module_name:"dyson",name:"DeleteScript",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgDeleteScript",definitions:{MsgDeleteScript:{properties:{creator:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Delete Script"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgDeleteScriptResponse",definitions:{MsgDeleteScriptResponse:{additionalProperties:!0,type:"object",title:"Msg Delete Script Response"}}},http_rules:null},"dyson/sendMsgRun":{module_name:"dyson",name:"Run",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgRun",definitions:{MsgRun:{properties:{creator:{type:"string",description:"The account sending the transaction"},address:{type:"string",description:"dys address of the scrit to call"},extra_lines:{type:"string",description:"optional extra source code to append to the end of the script before running",format:"textarea"},function_name:{type:"string",description:"optional function to call"},args:{type:"string",description:"optional args to call the function with"},kwargs:{type:"string",description:"optional kwargs to run"},coins:{type:"string",description:'optional comma seperated list of coins to send the script (for example "123dys,456token")'}},additionalProperties:!0,type:"object",title:"Msg Run",description:"MsgRun runs a script at a specific address"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgRunResponse",definitions:{MsgRunResponse:{properties:{response:{type:"string",format:"textarea"}},additionalProperties:!0,type:"object",title:"Msg Run Response"}}},http_rules:null},"names/QueryParams":{module_name:"names",name:"Params",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsRequest",definitions:{QueryParamsRequest:{additionalProperties:!0,type:"object",title:"Query Params Request",description:"QueryParamsRequest is request type for the Query/Params RPC method."}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryParamsResponse",definitions:{QueryParamsResponse:{properties:{params:{$ref:"#/definitions/names.Params",additionalProperties:!0,description:"params holds all the parameters of this module."}},additionalProperties:!0,type:"object",title:"Query Params Response",description:"QueryParamsResponse is response type for the Query/Params RPC method."},"names.Params":{additionalProperties:!0,type:"object",title:"Params",description:"Params defines the parameters for the module."}}},http_rules:[{Params:null,HasQuery:!1,HasBody:!1}]},"names/QueryName":{module_name:"names",name:"Name",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetNameRequest",definitions:{QueryGetNameRequest:{properties:{name:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Get Name Request"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetNameResponse",definitions:{QueryGetNameResponse:{properties:{name:{$ref:"#/definitions/names.Name",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Get Name Response"},"names.Name":{properties:{name:{type:"string"},destination:{type:"string"},price:{type:"string"},authorized:{type:"string"},owner:{type:"string"},expiration_height:{type:"string"},registration_height:{type:"string"}},additionalProperties:!0,type:"object",title:"Name"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"names/QueryNameAll":{module_name:"names",name:"NameAll",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllNameRequest",definitions:{QueryAllNameRequest:{properties:{pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query All Name Request"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllNameResponse",definitions:{QueryAllNameResponse:{properties:{name:{items:{$ref:"#/definitions/names.Name"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query All Name Response"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"names.Name":{properties:{name:{type:"string"},destination:{type:"string"},price:{type:"string"},authorized:{type:"string"},owner:{type:"string"},expiration_height:{type:"string"},registration_height:{type:"string"}},additionalProperties:!0,type:"object",title:"Name"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"names/QueryResolve":{module_name:"names",name:"Resolve",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryResolveRequest",definitions:{QueryResolveRequest:{properties:{name:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Resolve Request"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryResolveResponse",definitions:{QueryResolveResponse:{properties:{address:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Resolve Response"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"names/QueryGenerateCommit":{module_name:"names",name:"GenerateCommit",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGenerateCommitRequest",definitions:{QueryGenerateCommitRequest:{properties:{owner:{type:"string"},name:{type:"string"},salt:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Generate Commit Request"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGenerateCommitResponse",definitions:{QueryGenerateCommitResponse:{properties:{commit:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Generate Commit Response"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"names/QueryExpirations":{module_name:"names",name:"Expirations",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetExpirationsRequest",definitions:{QueryGetExpirationsRequest:{properties:{blockHeight:{type:"string"}},additionalProperties:!0,type:"object",title:"Query Get Expirations Request"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryGetExpirationsResponse",definitions:{QueryGetExpirationsResponse:{properties:{expirations:{$ref:"#/definitions/names.Expirations",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query Get Expirations Response"},"names.Expirations":{properties:{blockHeight:{type:"string"},names:{items:{type:"string"},type:"array"}},additionalProperties:!0,type:"object",title:"Expirations"}}},http_rules:[{Params:["blockHeight"],HasQuery:!1,HasBody:!1}]},"names/QueryExpirationsAll":{module_name:"names",name:"ExpirationsAll",service_name:"Query",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllExpirationsRequest",definitions:{QueryAllExpirationsRequest:{properties:{pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageRequest",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query All Expirations Request"},"cosmos.base.query.v1beta1.PageRequest":{properties:{key:{type:"string",description:"key is a value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",format:"binary",binaryEncoding:"base64"},offset:{type:"string",description:"offset is a numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set."},limit:{type:"string",description:"limit is the total number of results to be returned in the result page. If left empty it will default to a value to be set by each app."},count_total:{type:"boolean",description:"count_total is set to true  to indicate that the result set should include a count of the total number of items available for pagination in UIs. count_total is only respected when offset is used. It is ignored when key is set."},reverse:{type:"boolean",description:"reverse is set to true if results are to be returned in the descending order. Since: cosmos-sdk 0.43"}},additionalProperties:!0,type:"object",title:"Page Request",description:"PageRequest is to be embedded in gRPC request messages for efficient pagination. Ex:  message SomeRequest {          Foo some_parameter = 1;          PageRequest pagination = 2;  }"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/QueryAllExpirationsResponse",definitions:{QueryAllExpirationsResponse:{properties:{expirations:{items:{$ref:"#/definitions/names.Expirations"},type:"array"},pagination:{$ref:"#/definitions/cosmos.base.query.v1beta1.PageResponse",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Query All Expirations Response"},"cosmos.base.query.v1beta1.PageResponse":{properties:{next_key:{type:"string",description:"next_key is the key to be passed to PageRequest.key to query the next page most efficiently. It will be empty if there are no more results.",format:"binary",binaryEncoding:"base64"},total:{type:"string",description:"total is total number of results available if PageRequest.count_total was set, its value is undefined otherwise"}},additionalProperties:!0,type:"object",title:"Page Response",description:"PageResponse is to be embedded in gRPC response messages where the corresponding request message has used PageRequest.  message SomeResponse {          repeated Bar results = 1;          PageResponse page = 2;  }"},"names.Expirations":{properties:{blockHeight:{type:"string"},names:{items:{type:"string"},type:"array"}},additionalProperties:!0,type:"object",title:"Expirations"}}},http_rules:[{Params:null,HasQuery:!0,HasBody:!1}]},"names/sendMsgRegister":{module_name:"names",name:"Register",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgRegister",definitions:{MsgRegister:{properties:{commit:{type:"string",description:"The Shake256(owner+name+salt) hexdigest"},owner:{type:"string",description:"Address of the owner"},price:{type:"string",description:"The price that this name is valued at and can be purchased for example 100dys. The monthly fee is 1% of this price."}},additionalProperties:!0,type:"object",title:"Msg Register"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgRegisterResponse",definitions:{MsgRegisterResponse:{properties:{fee:{type:"string",description:"fee paid which is 1% of the price"},expiration_height:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Register Response"}}},http_rules:null},"names/sendMsgUpdateName":{module_name:"names",name:"UpdateName",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateName",definitions:{MsgUpdateName:{properties:{name:{type:"string"},owner:{type:"string"},destination:{type:"string"},authorized:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Update Name"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgUpdateNameResponse",definitions:{MsgUpdateNameResponse:{additionalProperties:!0,type:"object",title:"Msg Update Name Response"}}},http_rules:null},"names/sendMsgDeleteName":{module_name:"names",name:"DeleteName",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgDeleteName",definitions:{MsgDeleteName:{properties:{name:{type:"string"},owner:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Delete Name"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgDeleteNameResponse",definitions:{MsgDeleteNameResponse:{additionalProperties:!0,type:"object",title:"Msg Delete Name Response"}}},http_rules:null},"names/sendMsgReveal":{module_name:"names",name:"Reveal",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgReveal",definitions:{MsgReveal:{properties:{name:{type:"string"},owner:{type:"string"},salt:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Reveal"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgRevealResponse",definitions:{MsgRevealResponse:{properties:{name:{$ref:"#/definitions/names.Name",additionalProperties:!0}},additionalProperties:!0,type:"object",title:"Msg Reveal Response"},"names.Name":{properties:{name:{type:"string"},destination:{type:"string"},price:{type:"string"},authorized:{type:"string"},owner:{type:"string"},expiration_height:{type:"string"},registration_height:{type:"string"}},additionalProperties:!0,type:"object",title:"Name"}}},http_rules:null},"names/sendMsgSetPriceAndExtend":{module_name:"names",name:"SetPriceAndExtend",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgSetPriceAndExtend",definitions:{MsgSetPriceAndExtend:{properties:{name:{type:"string"},owner:{type:"string"},price:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Set Price And Extend"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgSetPriceAndExtendResponse",definitions:{MsgSetPriceAndExtendResponse:{additionalProperties:!0,type:"object",title:"Msg Set Price And Extend Response"}}},http_rules:null},"names/sendMsgOfferTo":{module_name:"names",name:"OfferTo",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgOfferTo",definitions:{MsgOfferTo:{properties:{name:{type:"string"},owner:{type:"string"},newOwner:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Offer To"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgOfferToResponse",definitions:{MsgOfferToResponse:{additionalProperties:!0,type:"object",title:"Msg Offer To Response"}}},http_rules:null},"names/sendMsgAccept":{module_name:"names",name:"Accept",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgAccept",definitions:{MsgAccept:{properties:{name:{type:"string"},newOwner:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Accept"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgAcceptResponse",definitions:{MsgAcceptResponse:{additionalProperties:!0,type:"object",title:"Msg Accept Response"}}},http_rules:null},"names/sendMsgBuy":{module_name:"names",name:"Buy",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgBuy",definitions:{MsgBuy:{properties:{buyer:{type:"string"},name:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Buy"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgBuyResponse",definitions:{MsgBuyResponse:{additionalProperties:!0,type:"object",title:"Msg Buy Response"}}},http_rules:null},"names/sendMsgMintCoins":{module_name:"names",name:"MintCoins",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgMintCoins",definitions:{MsgMintCoins:{properties:{owner:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Mint Coins"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgMintCoinsResponse",definitions:{MsgMintCoinsResponse:{additionalProperties:!0,type:"object",title:"Msg Mint Coins Response"}}},http_rules:null},"names/sendMsgBurnCoins":{module_name:"names",name:"BurnCoins",service_name:"Msg",request_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgBurnCoins",definitions:{MsgBurnCoins:{properties:{owner:{type:"string"},amount:{type:"string"}},additionalProperties:!0,type:"object",title:"Msg Burn Coins"}}},resp_schema:{$schema:"http://json-schema.org/draft-04/schema#",$ref:"#/definitions/MsgBurnCoinsResponse",definitions:{MsgBurnCoinsResponse:{additionalProperties:!0,type:"object",title:"Msg Burn Coins Response"}}},http_rules:null}};console.log("command_schema",Ge);const hN=e=>t=>t.reduce((n,s)=>(e.reduce((i,o,d)=>(d!==e.length-1?i[s[o]]=i[s[o]]||{}:i[s[o]]=(i[s[o]]||[]).concat(s),i[s[o]]),n),n),{});for(var oh in Ge)Ge[oh].full_command=oh;window.command_schema=Ge;const sh=(e,t="")=>Object.keys(e).reduce((n,s)=>{const i=t.length?t+".":"";return typeof e[s]=="object"?Object.assign(n,sh(e[s],i+s)):n[i+s]=e[s],n},{}),qs=e=>e===!0?"True":e===!1?"False":e===void 0||e===null?"None":Array.isArray(e)?"["+Object.keys(e).map(t=>qs(e[t])).join(", ")+"]":typeof e=="object"?"{"+Object.keys(e).map(t=>`"${t}": ${qs(e[t])}`).join(", ")+"}":JSON.stringify(e);window.pythonify=qs;function gN(e){const t={};for(const n in e){const s=n.split(".");let i=t;for(;s.length>1;){const o=s.shift();i=i[o]=i[o]||{}}i[s[0]]=e[n]}return t}const yN={data:function(){return{tx:[],query:[],command_kwargs:"",inflight:!1,data:"{}",editorData:{},error:"",response:"",command:"",fee:"2000",showFee:!1,search:"",link:""}},watch:{"$route.query":{handler:function(e,t){console.log("watch command:",e,t),this.command=e.command,this.setupEditor(),this.setupResponseEditor(),this.response=null},deep:!0,immediate:!0},old_data:function(e,t){console.log("watch data:",e,t);try{if(JSON.stringify(JSON.parse(e))!==JSON.stringify(JSON.parse(t))){const s=JSON.stringify(JSON.parse(e),null,2),i=JSON.parse(e),o=k(r({},this.$route.query),{data:JSON.stringify(i)});this.data=s,this.$router.replace({query:o});var n=r(r(r({},i.value),i.query),i.params);n=gN(n),this.editor&&this.editor.setValue(n)}this.error=null}catch(s){this.error=s}},fee:function(e,t){console.log("watch fee",e,t),t!==null&&this.editorChanged()},response:function(e,t){}},computed:{groupedCommands:function(){return hN(["module_name","service_name"])(Object.values(this.filted_command_schema))},filted_command_schema:function(){return Object.keys(window.command_schema).filter(e=>e.toLowerCase().includes(this.search.toLowerCase())).reduce((e,t)=>(e[t]=window.command_schema[t],e),{})},address:function(){return this.$store.getters["common/wallet/address"]},buttontxt:function(){return this.tx.includes(this.command)?this.address?"Sign Transaction":"Unlock Wallet to Sign Transaction":this.query.includes(this.command)?"Run Query":"Select Command"},disabled:function(){return!!(this.inflight||!this.command||!this.address&&this.tx.includes(this.command))}},methods:{updateQuery:function(){var e=new URLSearchParams(window.location.search);e.set("data",JSON.stringify(this.editor.getValue()));var t=window.location.pathname+"?"+e.toString();history.pushState(null,"",t)},updateEditorFromQuery(){var e=this.$route.query;console.log("watch query:",e),this.editor&&this.editor.setValue(JSON.parse(e.data||"{}"))},updateLink:function(){var e=new URLSearchParams(window.location.search);e.set("data",JSON.stringify(this.editor.getValue())),this.link=window.location.pathname+"?"+e.toString(),console.log("link",this.link)},editorChanged(){if(console.log("editorChanged",this.data),this.updateLink(),this.error="",this.command&&Ge[this.command]){if(Ge[this.command].service_name==="Query"){this.showFee=!1;var e=JSON.parse(JSON.stringify(this.editor.getValue())),t={};const i=Ge[this.command].http_rules;if(i){const o=i[0];for(let d in o.Params){const c=o.Params[d];t[o.Params[d]]=e[c],delete e[c]}e=sh(e)}this.data=JSON.stringify({query:e,params:t},null,2)}else if(Ge[this.command].service_name==="Msg"){this.showFee=!0;var n=JSON.parse(JSON.stringify(this.editor.getValue()));const i=[{amount:this.fee,denom:"dys"}];this.data=JSON.stringify({value:n,fee:i},null,2)}var s=JSON.parse(JSON.stringify(this.editor.getValue()));this.command_kwargs=Object.keys(s).map(function(i,o){return", "+i+"="+qs(s[i])}).join("")}},setupEditor(){var t;console.log("setupEditor",self.data,this.command);const e=document.getElementById("editor");!e||(this.editor&&this.editor.destroy(),Ge[this.command]&&(this.editor=new nr.exports.JSONEditor(e,{form_name_root:"editor",schema:((t=Ge[this.command])==null?void 0:t.request_schema)||{},disable_collapse:!0,disable_properties:!1,disable_edit_json:!1,show_opt_in:!0,input_width:"100%",theme:"bootstrap4"}),this.editor.on("change",this.editorChanged),this.editor.on("ready",()=>{this.updateEditorFromQuery()}),window.editor=this.editor,this.inflight=!1))},submit:async function(e){this.updateQuery(),e.preventDefault(),console.log("data",this.data),this.error=null,this.response=null,this.inflight=!0,this.$store.dispatch(this.command,JSON.parse(this.data)).then(t=>{this.response=t}).catch(t=>{this.error=t}).finally(t=>this.inflight=!1)},setupResponseEditor:function(){const e=document.getElementById("responseEditor");!e||(this.responseEditor&&this.responseEditor.destroy(),Ge[this.command]&&(this.responseEditor=new nr.exports.JSONEditor(e,{form_name_root:"responseEditor",schema:Ge[this.command].resp_schema,disable_collapse:!0,disable_properties:!0,disable_edit_json:!0,show_opt_in:!1,theme:"bootstrap4"}),this.responseEditor.on("ready",()=>{this.responseEditor.disable()}),window.responseEditor=this.responseEditor))}},created:async function(){console.log("created"),window.$store=this.$store},components:{},mounted:function(){console.log("mounted"),this.tx=Object.keys(this.$store._actions).filter(n=>n.match("sendMsg")),this.query=Object.keys(this.$store._actions).filter(n=>n.match("Query")),this.command=this.$route.query.command;const e=JSON.parse(this.$route.query.data||"{}"),t=JSON.stringify(e,null,2);if(e.fee!==void 0)for(const n of e.fee)console.log("fee",n),n.denom==="dys"&&(this.fee=n.amount);this.data=t,this.setupEditor(),this.setupResponseEditor()}},_N={class:"container"},vN={class:"row"},bN={class:"col"},wN=m(),SN={class:"row"},kN={class:"col-sm-12 col-md-4 align-top"},PN=f("h3",null,"Commands",-1),CN=m(),RN={class:"input-group mb-3"},EN=m(),TN={class:"input-group-append"},NN=m(),AN=m(),ON={key:0,class:"list-group-item list-group-item-action list-group-item-dark"},qN=m(),UN=m(),$N={key:1,class:"list-group-item list-group-item-action list-group-item-dark"},IN=m(),xN=m(),DN={class:"col-md-8"},QN=f("div",{id:"editor"},null,-1),MN=m(),BN={class:"form-group"},JN=m(),GN={key:0,class:"btn btn-primary btn-lg",type:"button",disabled:""},LN=f("span",{class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},null,-1),VN=m(`
              Loading...
            `),WN=[LN,VN],FN=["disabled"],HN=m(),zN=["href"],YN=m(),XN={key:0,class:"alert alert-warning"},KN=m(),ZN={class:""};function jN(e,t,n,s,i,o){const d=q("router-link"),c=q("VAceEditor");return y(),_("div",_N,[f("div",vN,[f("div",bN,[f("pre",null,`from dys import _chain


def example():
    return _chain("`+E(e.command||"example/command")+'"'+E(e.command_kwargs)+`)

`,1)])]),wN,f("div",SN,[f("div",kN,[PN,CN,f("div",RN,[qe(f("input",{type:"text","onUpdate:modelValue":t[0]||(t[0]=a=>e.search=a),class:"form-control",placeholder:"Search commands.."},null,512),[[He,e.search]]),EN,f("div",TN,[f("button",{type:"button",class:"btn btn-primary",onClick:t[1]||(t[1]=a=>e.search="")},`
              clear
            `)])]),NN,(y(!0),_(G,null,Z(o.groupedCommands,(a,p)=>(y(),_("div",{key:p,class:"list-group mt-5"},[f("h4",null,E(p),1),AN,a.Msg?(y(),_("strong",ON,"Tx")):U("",!0),qN,(y(!0),_(G,null,Z(a.Msg,u=>(y(),F(d,{to:{query:{command:u.full_command}},key:u.name,class:"list-group-item list-group-item-action"},{default:I(()=>[m(E(u.name),1)]),_:2},1032,["to"]))),128)),UN,a.Query?(y(),_("strong",$N,"Query")):U("",!0),IN,(y(!0),_(G,null,Z(a.Query,u=>(y(),F(d,{to:{query:{command:u.full_command}},key:u.name,class:"list-group-item list-group-item-action"},{default:I(()=>[m(E(u.name),1)]),_:2},1032,["to"]))),128))]))),128))]),xN,f("div",DN,[QN,MN,f("form",{onSubmit:t[3]||(t[3]=(...a)=>o.submit&&o.submit(...a)),class:""},[f("div",BN,[A(c,{value:e.data,"onUpdate:value":t[2]||(t[2]=a=>e.data=a),lang:"json",theme:"chrome","min-lines":"10","max-lines":"200"},null,8,["value"]),JN,e.inflight?(y(),_("button",GN,WN)):(y(),_("button",{key:1,name:"action",disabled:o.disabled,type:"submit",value:"run",class:"btn btn-primary btn-lg"},E(o.buttontxt),9,FN)),HN,f("a",{class:"btn btn-link",href:e.link},"Link",8,zN)])],32),YN,e.error?(y(),_("div",XN,E(e.error),1)):U("",!0),KN,f("pre",ZN,[f("code",null,E(e.response),1)])])])])}var rh=x(yN,[["render",jN]]);const eA={name:"FunctionDetail",props:{schema:Object,name:String,scriptAddress:String},data:function(){return{runResponse:null,queryResponse:null,queryResponseErr:null,inflight:!1,coins:"",isHidden:!0,isModal:!1,link:"",inflight:!1,gas:123e3}},computed:{address:function(){return this.$store.getters["common/wallet/address"]}},methods:{updateEditorFromQuery(){var e=this.$route.query;console.log("watch query:",e),this.editor&&this.editor.setValue(JSON.parse(e[this.name]||"{}"))},updateQuery:function(){var e=new URLSearchParams(window.location.search);e.set(this.name,JSON.stringify(this.editor.getValue()));var t=window.location.pathname+"?"+e.toString();history.pushState(null,"",t)},updateLink:function(){var e=new URLSearchParams;e.set(this.name,JSON.stringify(this.editor.getValue())),this.link=window.location.pathname+"?"+e.toString()},submit:async function(e){this.updateQuery(),e.preventDefault(),console.log(e.submitter.value),this.runResponse=null,this.queryResponse=null,this.queryResponseErr=null;const t={creator:this.address,address:this.scriptAddress,function_name:this.name,kwargs:JSON.stringify(this.editor.getValue()),coins:this.coins};if(console.log(t),e.submitter.value=="run"){var n={};try{this.editor.disable(),this.inflight=!0;var s={},i={value:t,fee:[{amount:String(Math.ceil(this.gas*.001)),denom:"dys"}],gas:String(Math.ceil(this.gas))};console.log("opts",i);try{n=await this.$store.dispatch("dyson/sendMsgRun",i),console.log("txResult",n),this.gas=n.gasUsed*1.2,s=JSON.parse(JSON.parse(n.rawLog)[0].events.filter(o=>o.type=="run")[0].attributes.slice(-1)[0].value)}catch(o){console.info("objError",o),o instanceof SyntaxError?s=JSON.parse(n.rawLog.match(/Output:\n(.*): Exception in Script$/s)[1]):s.exception=o.message}s.gasUsed=n.gasUsed,s.gasWanted=n.gasWanted,console.log("runResponse",s),this.runResponse=s,this.runResponse.tx=n.transactionHash}catch(o){console.log("uncaught error",o)}finally{this.editor.enable(),this.inflight=!1}}else if(e.submitter.value=="query")try{this.editor.disable(),this.inflight=!0;const o=await this.$store.dispatch("dyson/QueryQueryScript",{params:{},query:t,options:{subscribe:!1}});console.log("queryResponse",o);try{this.queryResponse=JSON.parse(o.response)}catch(d){d instanceof SyntaxError&&(this.queryResponseErr=o.response)}}catch(o){this.queryResponseErr=o,console.error(o)}finally{this.editor.enable(),this.inflight=!1}},setupEditor(){this.editor&&this.editor.destroy();const e=document.getElementById(this.name);this.editor=new nr.exports.JSONEditor(e,{form_name_root:this.name,schema:this.schema,disable_collapse:!0,show_opt_in:!0,theme:"bootstrap4"}),window[this.name+"editor"]=this.editor,window.router=this.$router,window.route=this.$route,this.editor.on("ready",()=>{this.updateEditorFromQuery()}),this.editor.on("change",()=>{this.updateLink()}),this.inflight=!1,"#"+this.name===window.location.hash&&e.scrollIntoView()}},watch:{schema:function(e){JSON.stringify(e)!==JSON.stringify(this.editor.schema)&&this.setupEditor()},"$route.query":{deep:!0,immediate:!0,handler:function(){this.updateEditorFromQuery()}}},mounted:function(){this.$nextTick(function(){this.setupEditor()})}},ah=e=>(ve("data-v-47ed2bec"),e=e(),be(),e),tA={class:"card-body"},nA=["action"],iA=m(),oA=["id"],sA=m(),rA={class:"form-group"},aA=ah(()=>f("label",{for:"coinsInput"},"Coins",-1)),dA=m(),lA=m(),uA=ah(()=>f("small",{id:"coinsHelp",class:"form-text text-muted"},`Coins to pay to the function, For example "123dys, 456token" The
            script will recieve this entire amount.`,-1)),cA=m(),pA={class:"btn-group",role:"group","aria-label":""},fA=["disabled"],mA=m(),hA=["disabled"],gA=m(),yA=["href"],_A=m(),vA={key:0},bA={class:"list-group list-group-flush"},wA={class:"list-group-item"},SA=m(),kA={class:"list-group-item"},PA=m(),CA={class:"list-group-item"},RA=m(),EA={class:"list-group-item"},TA=m(),NA={class:"list-group-item"},AA=m(),OA={class:"list-group-item"},qA=m(`
            Result:
            `),UA=m(),$A={class:"list-group-item"},IA=m(`
            Exception:
            `),xA=m(),DA={class:"list-group-item"},QA=m(`
            Stdout:
            `),MA=m(),BA={key:1,class:"alert alert-danger"},JA=m(),GA={key:2},LA={class:"list-group list-group-flush"},VA={class:"list-group-item"},WA=m(),FA={class:"list-group-item"},HA=m(),zA={class:"list-group-item"},YA=m(),XA={class:"list-group-item"},KA=m(),ZA={class:"list-group-item"},jA=m(`
            Result:
            `),eO=m(),tO={class:"list-group-item"},nO=m(`
            Exception:
            `),iO=m(),oO={class:"list-group-item"},sO=m(`
            Stdout:
            `);function rO(e,t,n,s,i,o){var d,c;return y(),_("div",{class:ie(["card mb-5",{"border-danger":((d=e.queryResponse)==null?void 0:d.exception)||((c=e.runResponse)==null?void 0:c.exception)}])},[f("div",tA,[f("form",{onSubmit:t[2]||(t[2]=(...a)=>o.submit&&o.submit(...a)),class:"",action:`#${n.name}`},[e.isModal?(y(),_("div",{key:0,class:"close",onClick:t[0]||(t[0]=a=>this.isModal=!1)},`
          \xD7
        `)):U("",!0),iA,f("div",{id:n.name},null,8,oA),sA,f("div",rA,[aA,dA,qe(f("input",{id:"coinsInput",class:"form-control","aria-describedby":"coinsHelp","onUpdate:modelValue":t[1]||(t[1]=a=>e.coins=a)},null,512),[[He,e.coins]]),lA,uA]),cA,f("div",pA,[f("button",{name:"action",disabled:this.inflight,type:"submit",value:"query",class:"btn btn-secondary"},`
            Query `+E(n.name),9,fA),mA,f("button",{name:"action",disabled:!o.address||this.inflight,type:"submit",value:"run",class:"btn btn-primary"},`
            Run `+E(n.name)+" "+E(!o.address&&"[connect wallet]"||""),9,hA),gA,f("a",{class:"btn btn-link",href:e.link},"Link",8,yA)])],40,nA),_A,e.runResponse?(y(),_("div",vA,[f("ul",bA,[f("li",wA,"TX hash: "+E(e.runResponse.tx),1),SA,f("li",kA,`
            Cumulative Size: `+E(e.runResponse.cumsize),1),PA,f("li",CA,`
            Nodes Evaluated: `+E(e.runResponse.nodes_called),1),RA,f("li",EA,`
            Gas consumed: `+E(e.runResponse.gasUsed),1),TA,f("li",NA,`
            Gas Limit: `+E(e.runResponse.gasWanted),1),AA,f("li",OA,[qA,f("pre",null,E(e.runResponse.result),1)]),UA,f("li",$A,[IA,qe(f("pre",null,E(e.runResponse.exception),513),[[bm,e.runResponse.exception]])]),xA,f("li",DA,[QA,f("pre",null,E(e.runResponse.stdout),1)])])])):U("",!0),MA,e.queryResponseErr?(y(),_("pre",BA,E(e.queryResponseErr),1)):U("",!0),JA,e.queryResponse?(y(),_("div",GA,[f("ul",LA,[f("li",VA,`
            Cumulative Size: `+E(e.queryResponse.cumsize),1),WA,f("li",FA,`
            Nodes Evaluated: `+E(e.queryResponse.nodes_called),1),HA,f("li",zA,`
            Estimated Gas Consumed: `+E(e.queryResponse.script_gas_consumed),1),YA,f("li",XA,`
            Gas Limit: `+E(e.queryResponse.gas_limit),1),KA,f("li",ZA,[jA,f("pre",null,E(e.queryResponse.result),1)]),eO,f("li",tO,[nO,qe(f("pre",null,E(e.queryResponse.exception),513),[[bm,e.queryResponse.exception]])]),iO,f("li",oO,[sO,f("pre",null,E(e.queryResponse.stdout),1)])])])):U("",!0)])],2)}var aO=x(eA,[["render",rO],["__scopeId","data-v-47ed2bec"]]);const dO={name:"ScriptDetail",data:function(){return{scriptAddress:null,inFlight:!1,txResult:null,editedCode:null,error:null,gas:2e5}},components:{FunctionDetail:aO,VAceEditor:cv},methods:{async save(e){this.inFlight=!0,this.txResult=null,this.error=null;const t={creator:this.address,code:this.code};try{if(this.txResult=await this.$store.dispatch("dyson/sendMsgUpdateScript",{value:t,fee:[{amount:String(Math.ceil(this.gas*.001)),denom:"dys"}],gas:String(Math.ceil(this.gas))}),this.inFlight=!1,console.log("txResult",this.txResult),this.txResult.rawLog.endsWith("out of gas")){console.log("trying again"),this.gas*=3,this.save(e);return}JSON.parse(this.txResult.rawLog),this.gas=this.txResult.gasUsed*1.2,this.update()}catch(n){n instanceof SyntaxError||(this.error=n),console.error(n)}finally{this.inFlight=!1}},async update(){this.scriptAddress=this.$route.params.script_address,this.$store.dispatch("dyson/QueryScript",{query:{index:this.$route.params.script_address},options:{subscribe:!1,all:!1}}).then(()=>{this.editedCode=null}),this.$store.dispatch("dyson/QuerySchema",{query:{index:this.$route.params.script_address},options:{subscribe:!1,all:!1}}).then(console.log)}},computed:{txSuccess:function(){return this.txResult.rawLog.includes("UpdateScript")},address:function(){return this.$store.getters["common/wallet/address"]},disabled:function(){return this.inFlight||this.address!=this.$route.params.script_address},unsavedChanges:function(){var e;return((e=this.script)==null?void 0:e.code)!=this.code},code:{get(){return this.editedCode===null?this.script?this.script.code:"":this.editedCode},set(e){this.editedCode=e}},schemas:function(){const e=this.$store.getters["dyson/getSchema"]({params:{},query:{index:this.$route.params.script_address}});return(e.schema?JSON.parse(e.schema):[]).filter(n=>this.scriptAddress==this.address||n.function!="app"&&!(n.function||"").startsWith("_"))},script:function(){const e=this.$store.getters["dyson/getScript"]({params:{},query:{index:this.$route.params.script_address}});return e?e.script:{}}},created:async function(){this.update()}},lO={class:"row"},uO={id:"schemas",class:"col-sm-12 col-md-4"},cO={key:0},pO=m(),fO=m(),mO={key:1,class:"card mb-5"},hO={class:"card-body"},gO=m(),yO=m(),_O={id:"code",class:"col"},vO={class:"mb-3"},bO=m(),wO=["disabled"],SO=m(`
          save
          `),kO={key:0,class:"spinner-border spinner-border-sm",role:"status","aria-hidden":"true"},PO=m(),CO={key:0,class:"m-5",role:"alert"},RO=m(),EO={key:0,class:"alert alert-warning"},TO=m();function NO(e,t,n,s,i,o){const d=q("FunctionDetail"),c=q("VAceEditor");return y(),_("div",lO,[f("div",uO,[o.schemas&&o.schemas.error?(y(),_("div",cO,"Error: "+E(o.schemas.error),1)):U("",!0),pO,(y(!0),_(G,null,Z(o.schemas,a=>(y(),_("div",{key:a.function},[a.schema?(y(),F(d,{key:0,schema:a.schema,name:a.function,scriptAddress:this.$route.params.script_address},null,8,["schema","name","scriptAddress"])):U("",!0),fO,a.error?(y(),_("div",mO,[f("div",hO,[f("h3",null,E(a.function),1),gO,f("pre",null,"Error: "+E(a.error),1)])])):U("",!0)]))),128))]),yO,f("div",_O,[f("div",vO,[A(c,{value:o.code,"onUpdate:value":t[0]||(t[0]=a=>o.code=a),lang:"python",theme:"chrome","min-lines":"30","max-lines":"500",readonly:o.disabled},null,8,["value","readonly"]),bO,f("button",{onClick:t[1]||(t[1]=(...a)=>o.save&&o.save(...a)),disabled:o.disabled,class:"sp-button"},[SO,e.inFlight?(y(),_("span",kO)):U("",!0)],8,wO),PO,o.unsavedChanges?(y(),_("span",CO,"unsaved changes")):U("",!0)]),RO,e.error?(y(),_("div",EO,E(e.error),1)):U("",!0),TO,e.txResult?(y(),_("div",{key:1,class:ie(["alert",{"alert-primary":o.txSuccess,"alert-warning":!o.txSuccess}])},[f("pre",null,"TX hash: "+E(e.txResult.transactionHash)+`
Height: `+E(e.txResult.height)+`
Gas Used: `+E(e.txResult.gasUsed)+`
Gas Wanted: `+E(e.txResult.gasWanted)+`
Raw Log: `+E(e.txResult.rawLog),1)],2)):U("",!0)])])}var AO=x(dO,[["render",NO],["__scopeId","data-v-57ed2d9e"]]);const OO=pv(),qO=[{path:"/",name:"index",component:nh},{path:"/portfolio",name:"portfolio",component:nh},{path:"/documentation",name:"documentation",component:ih},{path:"/scripts/:script_address",name:"script-detail",component:AO},{path:"/docs",name:"docs",component:ih},{path:"/txbuilder",name:"tx-builder",component:rh},{path:"/commands",name:"commands",component:rh}],dh=fv({history:OO,routes:qO});function UO({txHash:e="",messages:t=[],memo:n="",signer_infos:s=[],fee:i={},gas_used:o=null,gas_wanted:d=null,height:c=null,code:a=0,log:p=null}){return{txHash:e,body:{messages:t,memo:n},auth_info:{signer_infos:s,fee:i},meta:{gas_used:o,gas_wanted:d,height:c,code:a,log:p}}}async function $O(e,t,n){const s=mv.sha256(Ro.fromBase64(n));try{const i=await Mt.get(t+"/tx?hash=0x"+Ro.toHex(s)),o=await Mt.get(e+"/cosmos/tx/v1beta1/txs/"+Ro.toHex(s));return{rpcRes:i,apiRes:o,txHash:Ro.toHex(s).toUpperCase()}}catch{throw"Error fetching TX data"}}async function lh(e,t,n){let s,i=0;for(;!s&&i<5;)try{s=await $O(e,t,n)}catch{i++,await new Promise(v=>{setTimeout(v,2e3)})}const{data:o}=s.rpcRes,{height:d,tx_result:c}=o.result,{code:a,log:p,gas_used:u,gas_wanted:g}=c,{body:b,auth_info:N}=s.apiRes.data.tx,{messages:C,memo:P}=b;return UO({txHash:s.txHash,messages:C,memo:P,signer_infos:N.signer_infos,fee:N.fee,gas_used:u,gas_wanted:g,height:d,code:a,log:p})}var IO={namespaced:!0,state(){return{blocks:[],size:20}},getters:{getBlocks:e=>t=>[...e.blocks].sort((n,s)=>s.height-n.height).slice(0,t),getBlockByHeight:e=>t=>e.blocks.find(n=>n.height==t)||{}},mutations:{ADD_BLOCK(e,t){e.blocks.push(t),e.blocks.length>e.size&&e.blocks.shift()},RESET_STATE(e){e.blocks=[]},SET_SIZE(e,t){e.size=t}},actions:{init({dispatch:e,rootGetters:t}){t["common/env/client"]&&t["common/env/client"].on("newblock",n=>{e("addBlock",n)})},async getShiftedBlock({rootGetters:e},t){try{const n=await Mt.get(e["common/env/apiTendermint"]+"/block?height="+t),s=n.data.result.block.data.txs.map(async d=>await lh(e["common/env/apiCosmos"],e["common/env/apiTendermint"],d)),i=await Promise.all(s);return{height:n.data.result.block.header.height,timestamp:n.data.result.block.header.time,hash:n.data.result.block_id.hash,details:n.data.result.block,txDecoded:i}}catch{throw new Error("Blocks:AddBlock Could not retrieve block. RPC node unavailable")}},async addBlock({commit:e,rootGetters:t},n){try{const s=await Mt.get(t["common/env/apiTendermint"]+"/block?height="+n.data.value.block.header.height),i=n.data.value.block.data.txs.map(async c=>await lh(t["common/env/apiCosmos"],t["common/env/apiTendermint"],c)),o=await Promise.all(i),d={height:n.data.value.block.header.height,timestamp:n.data.value.block.header.time,hash:s.data.result.block_id.hash,details:n.data.value.block,txDecoded:o};e("ADD_BLOCK",d)}catch{throw new Error("Blocks:AddBlock Could not add block. RPC node unavailable")}},resetState({commit:e}){e("RESET_STATE")}}};function xO(e){e.hasModule(["common"])||e.registerModule(["common"],{namespaced:!0}),e.registerModule(["common","blocks"],IO),e.subscribe(t=>{t.type=="common/env/INITIALIZE_WS_COMPLETE"&&e.dispatch("common/blocks/init",null,{root:!0})})}class DO extends hv.exports.EventEmitter{constructor({apiAddr:t,rpcAddr:n,wsAddr:s,refresh:i,offline:o}){super();this.apiAddr=t,this.rpcAddr=n,this.wsAddr=s,this.offline=o,this.refresh=i;const d=this.connectivityTest.bind(this);this.timer=setInterval(d,this.refresh),this.connectivityTest(),this.wsAddr&&this.connectWS()}async useSigner(t){this.signingClient=await J.SigningStargateClient.connectWithSigner(this.rpcAddr,t),this.signer=t}switchAPI(t){this.apiAddr=t}switchWS(t){this.emit("ws-status",!1),this.wsAddr=t,this.socket.close(),this.connectWS()}connectWS(){this.socket=new gv(this.wsAddr),this.socket.onopen=this.onOpenWS.bind(this),this.socket.onmessage=this.onMessageWS.bind(this),this.socket.onerror=this.onErrorWS.bind(this),this.socket.onclose=this.onCloseWS.bind(this)}async switchRPC(t){if(this.rpcAddr=t,this.signingClient){const n=r({},this.signingClient.registry);this.signingClient=await J.SigningStargateClient.connectWithSigner(this.rpcAddr,this.signer,{registry:n})}}async connectivityTest(){if(this.offline&&this.emit("newblock",{dummy:!0}),this.apiAddr)try{const t=await Mt.get(this.apiAddr+"/cosmos/base/tendermint/v1beta1/node_info");this.emit("chain-id",t.data.default_node_info.network),t.data.application_version.name?this.emit("chain-name",t.data.application_version.name):this.emit("chain-name",t.data.default_node_info.network),this.emit("api-status",!0)}catch(t){t.response?this.emit("api-status",!0):(this.emit("api-status",!1),console.error(new Error("Client-js:API API Node unavailable")))}if(this.rpcAddr)try{await Mt.get(this.rpcAddr),this.emit("rpc-status",!0)}catch(t){t.response?this.emit("rpc-status",!0):(console.error(new Error("Client-js:API RPC Node unavailable")),this.emit("rpc-status",!1))}}onErrorWS(){console.error(new Error("Client-js:WS Could not connect to websocket."))}onCloseWS(){this.emit("ws-status",!1)}onOpenWS(){this.emit("ws-status",!0),this.socket.send(JSON.stringify({jsonrpc:"2.0",method:"subscribe",id:"1",params:["tm.event = 'NewBlock'"]}))}onMessageWS(t){const n=JSON.parse(t.data).result;n.data&&n.data.type==="tendermint/event/NewBlock"&&this.emit("newblock",JSON.parse(t.data).result)}async query(t,n=""){try{return(await Mt.get(this.apiAddr+t+n)).data}catch{console.error(new Error("Client-js:API Could not access API: "+t))}}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}async request({body:t,path:n,query:s,method:i}){const o=this.apiAddr+n+this.addQueryParams(s);try{return await Mt({url:o,method:i,data:t,headers:{Accept:"application/json","Content-Type":"application/json;charset=UTF-8"}})}catch{console.error(new Error("Client-js:API Could not access API: "+o))}}}const uh={VITE_ADDRESS_PREFIX:"REPLACE_VITE_ADDRESS_PREFIX",VITE_CHAIN_ID:"REPLACE_VITE_CHAIN_ID",VITE_CHAIN_NAME:"REPLACE_VITE_CHAIN_NAME",VITE_API_COSMOS:"REPLACE_VITE_API_COSMOS",VITE_API_TENDERMINT:"REPLACE_VITE_API_TENDERMINT",VITE_WS_TENDERMINT:"REPLACE_VITE_WS_TENDERMINT",VITE_SENTRY_DSN:"REPLACE_VITE_SENTRY_DSN",BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0}&&"REPLACE_VITE_API_COSMOS"&&"REPLACE_VITE_API_COSMOS".replace("0.0.0.0","localhost")||{}.VUE_APP_API_COSMOS||"http://localhost:1317",ur={VITE_ADDRESS_PREFIX:"REPLACE_VITE_ADDRESS_PREFIX",VITE_CHAIN_ID:"REPLACE_VITE_CHAIN_ID",VITE_CHAIN_NAME:"REPLACE_VITE_CHAIN_NAME",VITE_API_COSMOS:"REPLACE_VITE_API_COSMOS",VITE_API_TENDERMINT:"REPLACE_VITE_API_TENDERMINT",VITE_WS_TENDERMINT:"REPLACE_VITE_WS_TENDERMINT",VITE_SENTRY_DSN:"REPLACE_VITE_SENTRY_DSN",BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0}&&"REPLACE_VITE_API_TENDERMINT"&&"REPLACE_VITE_API_TENDERMINT".replace("0.0.0.0","localhost")||{}.VUE_APP_API_TENDERMINT||"http://localhost:26657",ch={VITE_ADDRESS_PREFIX:"REPLACE_VITE_ADDRESS_PREFIX",VITE_CHAIN_ID:"REPLACE_VITE_CHAIN_ID",VITE_CHAIN_NAME:"REPLACE_VITE_CHAIN_NAME",VITE_API_COSMOS:"REPLACE_VITE_API_COSMOS",VITE_API_TENDERMINT:"REPLACE_VITE_API_TENDERMINT",VITE_WS_TENDERMINT:"REPLACE_VITE_WS_TENDERMINT",VITE_SENTRY_DSN:"REPLACE_VITE_SENTRY_DSN",BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0}&&"REPLACE_VITE_WS_TENDERMINT"&&"REPLACE_VITE_WS_TENDERMINT".replace("0.0.0.0","localhost")||{}.VUE_APP_WS_TENDERMINT||"ws://localhost:26657/websocket",ph="REPLACE_VITE_ADDRESS_PREFIX";var QO={namespaced:!0,state(){return{chainId:"",addrPrefix:ph,sdkVersion:"Stargate",apiNode:uh,rpcNode:ur,wsNode:ch,client:null,chainName:"",apiConnected:!1,rpcConnected:!1,wsConnected:!1,getTXApi:"",initialized:!1}},getters:{client:e=>e.client,signingClient:e=>e.client.signingClient,chainId:e=>e.chainId,chainName:e=>e.chainName,addrPrefix:e=>e.addrPrefix,apiTendermint:e=>e.rpcNode,apiCosmos:e=>e.apiNode,apiWS:e=>e.wsNode,sdkVersion:e=>e.sdkVersion,apiConnected:e=>e.apiConnected,rpcConnected:e=>e.rpcConnected,wsConnected:e=>e.wsConnected,getEnv:e=>({chainID:e.chainId,chainName:e.chainName,apiURL:e.apiNode,rpcURL:e.rpcNode,wsURL:e.wsNode,prefix:e.addrPrefix,status:{apiConnected:e.apiConnected,rpcConnected:e.rpcConnected,wsConnected:e.wsConnected}})},mutations:{SET_CONFIG(e,t){e.apiNode=t.apiNode,(t.rpcNode||t.offline)&&(e.rpcNode=t.rpcNode),(t.wsNode||t.offline)&&(e.wsNode=t.wsNode),(t.chainId||t.offline)&&(e.chainId=t.chainId),(t.addrPrefix||t.offline)&&(e.addrPrefix=t.addrPrefix),(t.sdkVersion||t.offline)&&(e.sdkVersion=t.sdkVersion),(t.getTXApi||t.offline)&&(e.getTXApi=t.getTXApi)},CONNECT(e,{client:t}){e.client=t},INITIALIZE_WS_COMPLETE(e){e.initialized=!0},SET_CHAIN_ID(e,t){e.chainId=t},SET_CHAIN_NAME(e,t){e.chainName=t},SET_WS_STATUS(e,t){e.wsConnected=t},SET_API_STATUS(e,t){e.apiConnected=t},SET_RPC_STATUS(e,t){e.rpcConnected=t},SET_TX_API(e,t){e.getTXApi=t}},actions:{async init({dispatch:e},t={starportUrl:"http://localhost:12345",apiNode:uh,rpcNode:ur,wsNode:ch,chainId:"",addrPrefix:ph,chainName:"",sdkVersion:"Stargate",getTXApi:ur+"/tx?hash=0x",offline:!1,refresh:5e3}){try{await e("config",t),console.log("Vuex module: common.env initialized!")}catch{throw new Error("Env:Config Could not configure environment")}},setTxAPI({commit:e},t){e("SET_TX_API",t)},async setConnectivity({commit:e},t){switch(t.connection){case"ws":e("SET_WS_STATUS",t.status);break;case"api":e("SET_API_STATUS",t.status);break;case"rpc":e("SET_RPC_STATUS",t.status);break}},async signIn({state:e},t){try{await e.client.useSigner(t)}catch{throw new Error("Env:Client:Wallet Could not create signing client with signer: "+t)}},async config({commit:e,state:t,dispatch:n},s={apiNode:"http://localhost:1317",rpcNode:"http://localhost:26657",wsNode:"ws://localhost:26657/websocket",chainName:"",chainId:"",addrPrefix:"",sdkVersion:"Stargate",offline:!1,refresh:5e3,getTXApi:"http://localhost:26657/tx?hash=0x"}){try{let i;if(!t.client)i=new DO({apiAddr:s.apiNode,rpcAddr:s.rpcNode,wsAddr:s.wsNode,offline:s.offline,refresh:s.refresh}),i.setMaxListeners(0),i.on("chain-id",o=>{o&&e("SET_CHAIN_ID",o)}),i.on("chain-name",o=>{o&&e("SET_CHAIN_NAME",o)}),i.on("ws-status",o=>n("setConnectivity",{connection:"ws",status:o})),i.on("api-status",o=>n("setConnectivity",{connection:"api",status:o})),i.on("rpc-status",o=>n("setConnectivity",{connection:"rpc",status:o})),e("SET_CONFIG",s),await n("cosmos.staking.v1beta1/QueryParams",{options:{subscribe:!1,all:!1},params:{},query:null},{root:!0}),await n("cosmos.bank.v1beta1/QueryTotalSupply",{options:{subscribe:!1,all:!1},params:{},query:null},{root:!0}),e("CONNECT",{client:i}),e("INITIALIZE_WS_COMPLETE");else{i=t.client;let o=!1,d=!1,c=!1;if(s.wsNode!=t.wsNode&&(o=!0),s.rpcNode!=t.rpcNode&&(d=!0),s.apiNode!=t.apiNode&&(c=!0),e("SET_CONFIG",s),o&&s.wsNode)try{await i.switchWS(s.wsNode)}catch{throw new Error("Env:Client:Websocket Could not switch to websocket node:"+s.wsNode)}if(c&&s.apiNode&&i.switchAPI(s.apiNode),d&&s.rpcNode)try{await i.switchRPC(s.rpcNode)}catch{throw new Error("Env:Client:TendermintRPC Could not switch to Tendermint RPC node:"+s.rpcNode)}}}catch(i){console.error(i)}}}};function MO(e){e.hasModule(["common"])||e.registerModule(["common"],{namespaced:!0}),e.registerModule(["common","env"],QO)}var BO={namespaced:!0,state(){return{wallets:JSON.parse(window.localStorage.getItem("wallets"))||[],activeWallet:null,activeClient:null,selectedAddress:"",authorized:!1,gasPrice:"0.0000025token"}},getters:{client:e=>e.activeClient,gasPrice:e=>e.gasPrice,wallet:e=>e.activeWallet,address:e=>e.selectedAddress,getPath:e=>{var t,n;return((t=e.activeWallet)==null?void 0:t.HDpath)+((n=e.activeWallet)==null?void 0:n.accounts.find(s=>s.address==e.selectedAddress).pathIncrement)},nameAvailable:e=>t=>e.wallets.findIndex(n=>n.name==t)==-1,lastWallet:e=>e.activeWallet?e.activeWallet.name:window.localStorage.getItem("lastWallet"),loggedIn:e=>e.activeClient!==null,signer:e=>e.activeClient?e.activeClient.signer:null},mutations:{SET_ACTIVE_WALLET(e,t){e.activeWallet=t,window.localStorage.setItem("lastWallet",t.name)},SET_ACTIVE_CLIENT(e,t){e.activeClient=t,e.authorized=!0},ADD_WALLET(e,t){e.activeWallet=t,window.localStorage.setItem("lastWallet",t.name),e.activeWallet.name&&e.activeWallet.password&&e.wallets.push({name:e.activeWallet.name,wallet:wm.AES.encrypt(JSON.stringify(e.activeWallet),e.activeWallet.password).toString()}),e.activeWallet.name=="Keplr Integration"&&!e.activeWallet.password&&e.wallets.push({name:e.activeWallet.name,wallet:JSON.stringify(e.activeWallet)})},PATH_INCREMENT(e){e.activeWallet.pathIncrement=e.activeWallet.pathIncrement+1},ADD_ACCOUNT(e,t){e.activeWallet.accounts.push(t),e.activeWallet.name&&e.activeWallet.password&&(e.wallets[e.wallets.findIndex(n=>n.name===e.activeWallet.name)].wallet=wm.AES.encrypt(JSON.stringify(e.activeWallet),e.activeWallet.password).toString())},SET_SELECTED_ADDRESS(e,t){e.selectedAddress=t},SET_BACKUP_STATE(e,t){e.backupState=t},ADD_MESSAGE_TYPE(e,{typeUrl:t,type:n}){e.activeClient.registry.register(t,n)},SIGN_OUT(e){e.selectedAddress="",e.activeClient=null,e.activeWallet=null,e.authorized=!1}},actions:{signOut({commit:e}){e("SIGN_OUT")},async connectWithKeplr({commit:e,dispatch:t,rootGetters:n},s){await t("common/env/signIn",s,{root:!0});const i={name:"Keplr Integration",mnemonic:null,HDpath:null,password:null,prefix:n["common/env/addrPrefix"],pathIncrement:null,accounts:[]},[o]=await s.getAccounts();i.accounts.push({address:o.address,pathIncrement:null}),e("ADD_WALLET",i);try{await t("common/env/signIn",s,{root:!0});let d=n["common/env/signingClient"];e("SET_ACTIVE_CLIENT",d),e("SET_SELECTED_ADDRESS",o.address)}catch(d){console.log(d)}t("storeWallets")},storeWallets({commit:e,state:t}){window.localStorage.setItem("wallets",JSON.stringify(t.wallets)),e("SET_BACKUP_STATE",!1)}}};function JO(e){e.hasModule(["common"])||e.registerModule(["common"],{namespaced:!0}),e.registerModule(["common","wallet"],BO)}globalThis.Buffer=vm.Buffer;var sn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(sn||(sn={}));class GO{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[sn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[sn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[sn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||sn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==sn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class LO extends GO{constructor(){super(...arguments);this.queryAccounts=(t,n={})=>this.request(r({path:"/cosmos/auth/v1beta1/accounts",method:"GET",query:t,format:"json"},n)),this.queryAccount=(t,n={})=>this.request(r({path:`/cosmos/auth/v1beta1/accounts/${t}`,method:"GET",format:"json"},n)),this.queryAccountAddressById=(t,n={})=>this.request(r({path:`/cosmos/auth/v1beta1/address_by_id/${t}`,method:"GET",format:"json"},n)),this.queryBech32Prefix=(t={})=>this.request(r({path:"/cosmos/auth/v1beta1/bech32",method:"GET",format:"json"},t)),this.queryAddressBytesToString=(t,n={})=>this.request(r({path:`/cosmos/auth/v1beta1/bech32/${t}`,method:"GET",format:"json"},n)),this.queryAddressStringToBytes=(t,n={})=>this.request(r({path:`/cosmos/auth/v1beta1/bech32/${t}`,method:"GET",format:"json"},n)),this.queryModuleAccounts=(t={})=>this.request(r({path:"/cosmos/auth/v1beta1/module_accounts",method:"GET",format:"json"},t)),this.queryParams=(t={})=>this.request(r({path:"/cosmos/auth/v1beta1/params",method:"GET",format:"json"},t))}}const VO=[],WO=new Y.Registry(VO),FO=async({addr:e}={addr:"http://localhost:1317"})=>new LO({baseUrl:e}),cr={type_url:""},$o={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},cr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},cr);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=zO(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=XO(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},cr);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var jn=(()=>{if(typeof jn!="undefined")return jn;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const HO=jn.atob||(e=>jn.Buffer.from(e,"base64").toString("binary"));function zO(e){const t=HO(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const YO=jn.btoa||(e=>jn.Buffer.from(e,"binary").toString("base64"));function XO(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return YO(t.join(""))}const pr={address:"",account_number:0,sequence:0},ei={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),e.pub_key!==void 0&&$o.encode(e.pub_key,t.uint32(18).fork()).ldelim(),e.account_number!==0&&t.uint32(24).uint64(e.account_number),e.sequence!==0&&t.uint32(32).uint64(e.sequence),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},pr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.pub_key=$o.decode(n,n.uint32());break;case 3:i.account_number=rn(n.uint64());break;case 4:i.sequence=rn(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},pr);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.pub_key!==void 0&&e.pub_key!==null?t.pub_key=$o.fromJSON(e.pub_key):t.pub_key=void 0,e.account_number!==void 0&&e.account_number!==null?t.account_number=Number(e.account_number):t.account_number=0,e.sequence!==void 0&&e.sequence!==null?t.sequence=Number(e.sequence):t.sequence=0,t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.pub_key!==void 0&&(t.pub_key=e.pub_key?$o.toJSON(e.pub_key):void 0),e.account_number!==void 0&&(t.account_number=e.account_number),e.sequence!==void 0&&(t.sequence=e.sequence),t},fromPartial(e){const t=r({},pr);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.pub_key!==void 0&&e.pub_key!==null?t.pub_key=$o.fromPartial(e.pub_key):t.pub_key=void 0,e.account_number!==void 0&&e.account_number!==null?t.account_number=e.account_number:t.account_number=0,e.sequence!==void 0&&e.sequence!==null?t.sequence=e.sequence:t.sequence=0,t}},fr={name:"",permissions:""},KO={encode(e,t=l.Writer.create()){e.base_account!==void 0&&ei.encode(e.base_account,t.uint32(10).fork()).ldelim(),e.name!==""&&t.uint32(18).string(e.name);for(const n of e.permissions)t.uint32(26).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},fr);for(i.permissions=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.base_account=ei.decode(n,n.uint32());break;case 2:i.name=n.string();break;case 3:i.permissions.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},fr);if(t.permissions=[],e.base_account!==void 0&&e.base_account!==null?t.base_account=ei.fromJSON(e.base_account):t.base_account=void 0,e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.permissions!==void 0&&e.permissions!==null)for(const n of e.permissions)t.permissions.push(String(n));return t},toJSON(e){const t={};return e.base_account!==void 0&&(t.base_account=e.base_account?ei.toJSON(e.base_account):void 0),e.name!==void 0&&(t.name=e.name),e.permissions?t.permissions=e.permissions.map(n=>n):t.permissions=[],t},fromPartial(e){const t=r({},fr);if(t.permissions=[],e.base_account!==void 0&&e.base_account!==null?t.base_account=ei.fromPartial(e.base_account):t.base_account=void 0,e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.permissions!==void 0&&e.permissions!==null)for(const n of e.permissions)t.permissions.push(n);return t}},mr={max_memo_characters:0,tx_sig_limit:0,tx_size_cost_per_byte:0,sig_verify_cost_ed25519:0,sig_verify_cost_secp256k1:0},ZO={encode(e,t=l.Writer.create()){return e.max_memo_characters!==0&&t.uint32(8).uint64(e.max_memo_characters),e.tx_sig_limit!==0&&t.uint32(16).uint64(e.tx_sig_limit),e.tx_size_cost_per_byte!==0&&t.uint32(24).uint64(e.tx_size_cost_per_byte),e.sig_verify_cost_ed25519!==0&&t.uint32(32).uint64(e.sig_verify_cost_ed25519),e.sig_verify_cost_secp256k1!==0&&t.uint32(40).uint64(e.sig_verify_cost_secp256k1),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},mr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.max_memo_characters=rn(n.uint64());break;case 2:i.tx_sig_limit=rn(n.uint64());break;case 3:i.tx_size_cost_per_byte=rn(n.uint64());break;case 4:i.sig_verify_cost_ed25519=rn(n.uint64());break;case 5:i.sig_verify_cost_secp256k1=rn(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},mr);return e.max_memo_characters!==void 0&&e.max_memo_characters!==null?t.max_memo_characters=Number(e.max_memo_characters):t.max_memo_characters=0,e.tx_sig_limit!==void 0&&e.tx_sig_limit!==null?t.tx_sig_limit=Number(e.tx_sig_limit):t.tx_sig_limit=0,e.tx_size_cost_per_byte!==void 0&&e.tx_size_cost_per_byte!==null?t.tx_size_cost_per_byte=Number(e.tx_size_cost_per_byte):t.tx_size_cost_per_byte=0,e.sig_verify_cost_ed25519!==void 0&&e.sig_verify_cost_ed25519!==null?t.sig_verify_cost_ed25519=Number(e.sig_verify_cost_ed25519):t.sig_verify_cost_ed25519=0,e.sig_verify_cost_secp256k1!==void 0&&e.sig_verify_cost_secp256k1!==null?t.sig_verify_cost_secp256k1=Number(e.sig_verify_cost_secp256k1):t.sig_verify_cost_secp256k1=0,t},toJSON(e){const t={};return e.max_memo_characters!==void 0&&(t.max_memo_characters=e.max_memo_characters),e.tx_sig_limit!==void 0&&(t.tx_sig_limit=e.tx_sig_limit),e.tx_size_cost_per_byte!==void 0&&(t.tx_size_cost_per_byte=e.tx_size_cost_per_byte),e.sig_verify_cost_ed25519!==void 0&&(t.sig_verify_cost_ed25519=e.sig_verify_cost_ed25519),e.sig_verify_cost_secp256k1!==void 0&&(t.sig_verify_cost_secp256k1=e.sig_verify_cost_secp256k1),t},fromPartial(e){const t=r({},mr);return e.max_memo_characters!==void 0&&e.max_memo_characters!==null?t.max_memo_characters=e.max_memo_characters:t.max_memo_characters=0,e.tx_sig_limit!==void 0&&e.tx_sig_limit!==null?t.tx_sig_limit=e.tx_sig_limit:t.tx_sig_limit=0,e.tx_size_cost_per_byte!==void 0&&e.tx_size_cost_per_byte!==null?t.tx_size_cost_per_byte=e.tx_size_cost_per_byte:t.tx_size_cost_per_byte=0,e.sig_verify_cost_ed25519!==void 0&&e.sig_verify_cost_ed25519!==null?t.sig_verify_cost_ed25519=e.sig_verify_cost_ed25519:t.sig_verify_cost_ed25519=0,e.sig_verify_cost_secp256k1!==void 0&&e.sig_verify_cost_secp256k1!==null?t.sig_verify_cost_secp256k1=e.sig_verify_cost_secp256k1:t.sig_verify_cost_secp256k1=0,t}};var hr=(()=>{if(typeof hr!="undefined")return hr;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function rn(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new hr.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());async function Jt(e){return await FO({addr:e["common/env/apiCosmos"]})}function jO(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function gr(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const fh=()=>({Accounts:{},Account:{},AccountAddressByID:{},Params:{},ModuleAccounts:{},Bech32Prefix:{},AddressBytesToString:{},AddressStringToBytes:{},_Structure:{BaseAccount:gr(ei.fromPartial({})),ModuleAccount:gr(KO.fromPartial({})),Params:gr(ZO.fromPartial({}))},_Registry:WO,_Subscriptions:new Set}),eq=fh();var tq={namespaced:!0,state:eq,mutations:{RESET_STATE(e){Object.assign(e,fh())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getAccounts:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Accounts[JSON.stringify(t)])!=null?n:{}},getAccount:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Account[JSON.stringify(t)])!=null?n:{}},getAccountAddressByID:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.AccountAddressByID[JSON.stringify(t)])!=null?n:{}},getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getModuleAccounts:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ModuleAccounts[JSON.stringify(t)])!=null?n:{}},getBech32Prefix:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Bech32Prefix[JSON.stringify(t)])!=null?n:{}},getAddressBytesToString:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.AddressBytesToString[JSON.stringify(t)])!=null?n:{}},getAddressStringToBytes:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.AddressStringToBytes[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.auth.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryAccounts({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Jt(t);let u=(await p.queryAccounts(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryAccounts(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=jO(u,g)}return e("QUERY",{query:"Accounts",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAccounts",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAccounts({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAccounts API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryAccount({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Jt(t)).queryAccount(a.address)).data;return e("QUERY",{query:"Account",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAccount",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAccount({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAccount API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryAccountAddressByID({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Jt(t)).queryAccountAddressById(a.id)).data;return e("QUERY",{query:"AccountAddressByID",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAccountAddressByID",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAccountAddressByID({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAccountAddressByID API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Jt(t)).queryParams()).data;return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryModuleAccounts({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Jt(t)).queryModuleAccounts()).data;return e("QUERY",{query:"ModuleAccounts",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryModuleAccounts",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getModuleAccounts({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryModuleAccounts API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryBech32Prefix({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Jt(t)).queryBech32Prefix()).data;return e("QUERY",{query:"Bech32Prefix",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryBech32Prefix",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getBech32Prefix({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryBech32Prefix API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryAddressBytesToString({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Jt(t)).queryAddressBytesToString(a.address_bytes)).data;return e("QUERY",{query:"AddressBytesToString",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAddressBytesToString",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAddressBytesToString({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAddressBytesToString API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryAddressStringToBytes({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Jt(t)).queryAddressStringToBytes(a.address_string)).data;return e("QUERY",{query:"AddressStringToBytes",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAddressStringToBytes",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAddressStringToBytes({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAddressStringToBytes API Node Unavailable. Could not perform query: "+a.error.message)}}}},an;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(an||(an={}));class nq{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[an.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[an.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[an.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||an.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==an.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class iq extends nq{constructor(){super(...arguments);this.queryGrants=(t,n={})=>this.request(r({path:"/cosmos/authz/v1beta1/grants",method:"GET",query:t,format:"json"},n)),this.queryGranteeGrants=(t,n,s={})=>this.request(r({path:`/cosmos/authz/v1beta1/grants/grantee/${t}`,method:"GET",query:n,format:"json"},s)),this.queryGranterGrants=(t,n,s={})=>this.request(r({path:`/cosmos/authz/v1beta1/grants/granter/${t}`,method:"GET",query:n,format:"json"},s))}}const yr={seconds:0,nanos:0},Io={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},yr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=oq(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},yr);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},yr);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var _r=(()=>{if(typeof _r!="undefined")return _r;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function oq(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new _r.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const vr={type_url:""},Re={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},vr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},vr);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=rq(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=dq(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},vr);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var ti=(()=>{if(typeof ti!="undefined")return ti;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const sq=ti.atob||(e=>ti.Buffer.from(e,"base64").toString("binary"));function rq(e){const t=sq(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const aq=ti.btoa||(e=>ti.Buffer.from(e,"binary").toString("base64"));function dq(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return aq(t.join(""))}const br={msg:""},lq={encode(e,t=l.Writer.create()){return e.msg!==""&&t.uint32(10).string(e.msg),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},br);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.msg=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},br);return e.msg!==void 0&&e.msg!==null?t.msg=String(e.msg):t.msg="",t},toJSON(e){const t={};return e.msg!==void 0&&(t.msg=e.msg),t},fromPartial(e){const t=r({},br);return e.msg!==void 0&&e.msg!==null?t.msg=e.msg:t.msg="",t}},wr={},ni={encode(e,t=l.Writer.create()){return e.authorization!==void 0&&Re.encode(e.authorization,t.uint32(10).fork()).ldelim(),e.expiration!==void 0&&Io.encode(mh(e.expiration),t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},wr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.authorization=Re.decode(n,n.uint32());break;case 2:i.expiration=Pr(Io.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},wr);return e.authorization!==void 0&&e.authorization!==null?t.authorization=Re.fromJSON(e.authorization):t.authorization=void 0,e.expiration!==void 0&&e.expiration!==null?t.expiration=hh(e.expiration):t.expiration=void 0,t},toJSON(e){const t={};return e.authorization!==void 0&&(t.authorization=e.authorization?Re.toJSON(e.authorization):void 0),e.expiration!==void 0&&(t.expiration=e.expiration!==void 0?e.expiration.toISOString():null),t},fromPartial(e){const t=r({},wr);return e.authorization!==void 0&&e.authorization!==null?t.authorization=Re.fromPartial(e.authorization):t.authorization=void 0,e.expiration!==void 0&&e.expiration!==null?t.expiration=e.expiration:t.expiration=void 0,t}},Sr={granter:"",grantee:""},uq={encode(e,t=l.Writer.create()){return e.granter!==""&&t.uint32(10).string(e.granter),e.grantee!==""&&t.uint32(18).string(e.grantee),e.authorization!==void 0&&Re.encode(e.authorization,t.uint32(26).fork()).ldelim(),e.expiration!==void 0&&Io.encode(mh(e.expiration),t.uint32(34).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Sr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.granter=n.string();break;case 2:i.grantee=n.string();break;case 3:i.authorization=Re.decode(n,n.uint32());break;case 4:i.expiration=Pr(Io.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Sr);return e.granter!==void 0&&e.granter!==null?t.granter=String(e.granter):t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=String(e.grantee):t.grantee="",e.authorization!==void 0&&e.authorization!==null?t.authorization=Re.fromJSON(e.authorization):t.authorization=void 0,e.expiration!==void 0&&e.expiration!==null?t.expiration=hh(e.expiration):t.expiration=void 0,t},toJSON(e){const t={};return e.granter!==void 0&&(t.granter=e.granter),e.grantee!==void 0&&(t.grantee=e.grantee),e.authorization!==void 0&&(t.authorization=e.authorization?Re.toJSON(e.authorization):void 0),e.expiration!==void 0&&(t.expiration=e.expiration!==void 0?e.expiration.toISOString():null),t},fromPartial(e){const t=r({},Sr);return e.granter!==void 0&&e.granter!==null?t.granter=e.granter:t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=e.grantee:t.grantee="",e.authorization!==void 0&&e.authorization!==null?t.authorization=Re.fromPartial(e.authorization):t.authorization=void 0,e.expiration!==void 0&&e.expiration!==null?t.expiration=e.expiration:t.expiration=void 0,t}},kr={msg_type_urls:""},cq={encode(e,t=l.Writer.create()){for(const n of e.msg_type_urls)t.uint32(10).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},kr);for(i.msg_type_urls=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.msg_type_urls.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},kr);if(t.msg_type_urls=[],e.msg_type_urls!==void 0&&e.msg_type_urls!==null)for(const n of e.msg_type_urls)t.msg_type_urls.push(String(n));return t},toJSON(e){const t={};return e.msg_type_urls?t.msg_type_urls=e.msg_type_urls.map(n=>n):t.msg_type_urls=[],t},fromPartial(e){const t=r({},kr);if(t.msg_type_urls=[],e.msg_type_urls!==void 0&&e.msg_type_urls!==null)for(const n of e.msg_type_urls)t.msg_type_urls.push(n);return t}};function mh(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function Pr(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function hh(e){return e instanceof Date?e:typeof e=="string"?new Date(e):Pr(Io.fromJSON(e))}const Cr={granter:"",grantee:""},gh={encode(e,t=l.Writer.create()){return e.granter!==""&&t.uint32(10).string(e.granter),e.grantee!==""&&t.uint32(18).string(e.grantee),e.grant!==void 0&&ni.encode(e.grant,t.uint32(26).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Cr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.granter=n.string();break;case 2:i.grantee=n.string();break;case 3:i.grant=ni.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Cr);return e.granter!==void 0&&e.granter!==null?t.granter=String(e.granter):t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=String(e.grantee):t.grantee="",e.grant!==void 0&&e.grant!==null?t.grant=ni.fromJSON(e.grant):t.grant=void 0,t},toJSON(e){const t={};return e.granter!==void 0&&(t.granter=e.granter),e.grantee!==void 0&&(t.grantee=e.grantee),e.grant!==void 0&&(t.grant=e.grant?ni.toJSON(e.grant):void 0),t},fromPartial(e){const t=r({},Cr);return e.granter!==void 0&&e.granter!==null?t.granter=e.granter:t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=e.grantee:t.grantee="",e.grant!==void 0&&e.grant!==null?t.grant=ni.fromPartial(e.grant):t.grant=void 0,t}},Rr={grantee:""},yh={encode(e,t=l.Writer.create()){e.grantee!==""&&t.uint32(10).string(e.grantee);for(const n of e.msgs)Re.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Rr);for(i.msgs=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.grantee=n.string();break;case 2:i.msgs.push(Re.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Rr);if(t.msgs=[],e.grantee!==void 0&&e.grantee!==null?t.grantee=String(e.grantee):t.grantee="",e.msgs!==void 0&&e.msgs!==null)for(const n of e.msgs)t.msgs.push(Re.fromJSON(n));return t},toJSON(e){const t={};return e.grantee!==void 0&&(t.grantee=e.grantee),e.msgs?t.msgs=e.msgs.map(n=>n?Re.toJSON(n):void 0):t.msgs=[],t},fromPartial(e){const t=r({},Rr);if(t.msgs=[],e.grantee!==void 0&&e.grantee!==null?t.grantee=e.grantee:t.grantee="",e.msgs!==void 0&&e.msgs!==null)for(const n of e.msgs)t.msgs.push(Re.fromPartial(n));return t}},Er={granter:"",grantee:"",msg_type_url:""},_h={encode(e,t=l.Writer.create()){return e.granter!==""&&t.uint32(10).string(e.granter),e.grantee!==""&&t.uint32(18).string(e.grantee),e.msg_type_url!==""&&t.uint32(26).string(e.msg_type_url),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Er);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.granter=n.string();break;case 2:i.grantee=n.string();break;case 3:i.msg_type_url=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Er);return e.granter!==void 0&&e.granter!==null?t.granter=String(e.granter):t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=String(e.grantee):t.grantee="",e.msg_type_url!==void 0&&e.msg_type_url!==null?t.msg_type_url=String(e.msg_type_url):t.msg_type_url="",t},toJSON(e){const t={};return e.granter!==void 0&&(t.granter=e.granter),e.grantee!==void 0&&(t.grantee=e.grantee),e.msg_type_url!==void 0&&(t.msg_type_url=e.msg_type_url),t},fromPartial(e){const t=r({},Er);return e.granter!==void 0&&e.granter!==null?t.granter=e.granter:t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=e.grantee:t.grantee="",e.msg_type_url!==void 0&&e.msg_type_url!==null?t.msg_type_url=e.msg_type_url:t.msg_type_url="",t}};var ii=(()=>{if(typeof ii!="undefined")return ii;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();ii.atob;ii.btoa;const pq=[["/cosmos.authz.v1beta1.MsgRevoke",_h],["/cosmos.authz.v1beta1.MsgExec",yh],["/cosmos.authz.v1beta1.MsgGrant",gh]],dn=new Error("wallet is required"),Tr=new Y.Registry(pq),fq={amount:[],gas:"200000"},mq=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw dn;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:Tr}):n=await J.SigningStargateClient.offline(e,{registry:Tr});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:fq,memo:""})=>n.signAndBroadcast(s,i,o,d),msgRevoke:i=>({typeUrl:"/cosmos.authz.v1beta1.MsgRevoke",value:_h.fromPartial(i)}),msgExec:i=>({typeUrl:"/cosmos.authz.v1beta1.MsgExec",value:yh.fromPartial(i)}),msgGrant:i=>({typeUrl:"/cosmos.authz.v1beta1.MsgGrant",value:gh.fromPartial(i)})}},hq=async({addr:e}={addr:"http://localhost:1317"})=>new iq({baseUrl:e}),Nr={msg_type_url:"",granter:"",grantee:""},gq={encode(e,t=l.Writer.create()){return e.msg_type_url!==""&&t.uint32(18).string(e.msg_type_url),e.granter!==""&&t.uint32(26).string(e.granter),e.grantee!==""&&t.uint32(34).string(e.grantee),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Nr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 2:i.msg_type_url=n.string();break;case 3:i.granter=n.string();break;case 4:i.grantee=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Nr);return e.msg_type_url!==void 0&&e.msg_type_url!==null?t.msg_type_url=String(e.msg_type_url):t.msg_type_url="",e.granter!==void 0&&e.granter!==null?t.granter=String(e.granter):t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=String(e.grantee):t.grantee="",t},toJSON(e){const t={};return e.msg_type_url!==void 0&&(t.msg_type_url=e.msg_type_url),e.granter!==void 0&&(t.granter=e.granter),e.grantee!==void 0&&(t.grantee=e.grantee),t},fromPartial(e){const t=r({},Nr);return e.msg_type_url!==void 0&&e.msg_type_url!==null?t.msg_type_url=e.msg_type_url:t.msg_type_url="",e.granter!==void 0&&e.granter!==null?t.granter=e.granter:t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=e.grantee:t.grantee="",t}},Ar={msg_type_url:"",granter:"",grantee:""},yq={encode(e,t=l.Writer.create()){return e.msg_type_url!==""&&t.uint32(18).string(e.msg_type_url),e.granter!==""&&t.uint32(26).string(e.granter),e.grantee!==""&&t.uint32(34).string(e.grantee),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ar);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 2:i.msg_type_url=n.string();break;case 3:i.granter=n.string();break;case 4:i.grantee=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ar);return e.msg_type_url!==void 0&&e.msg_type_url!==null?t.msg_type_url=String(e.msg_type_url):t.msg_type_url="",e.granter!==void 0&&e.granter!==null?t.granter=String(e.granter):t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=String(e.grantee):t.grantee="",t},toJSON(e){const t={};return e.msg_type_url!==void 0&&(t.msg_type_url=e.msg_type_url),e.granter!==void 0&&(t.granter=e.granter),e.grantee!==void 0&&(t.grantee=e.grantee),t},fromPartial(e){const t=r({},Ar);return e.msg_type_url!==void 0&&e.msg_type_url!==null?t.msg_type_url=e.msg_type_url:t.msg_type_url="",e.granter!==void 0&&e.granter!==null?t.granter=e.granter:t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=e.grantee:t.grantee="",t}};async function oi(e){return await mq(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function Or(e){return await hq({addr:e["common/env/apiCosmos"]})}function qr(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function si(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const vh=()=>({Grants:{},GranterGrants:{},GranteeGrants:{},_Structure:{GenericAuthorization:si(lq.fromPartial({})),Grant:si(ni.fromPartial({})),GrantAuthorization:si(uq.fromPartial({})),GrantQueueItem:si(cq.fromPartial({})),EventGrant:si(gq.fromPartial({})),EventRevoke:si(yq.fromPartial({}))},_Registry:Tr,_Subscriptions:new Set}),_q=vh();var vq={namespaced:!0,state:_q,mutations:{RESET_STATE(e){Object.assign(e,vh())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getGrants:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Grants[JSON.stringify(t)])!=null?n:{}},getGranterGrants:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GranterGrants[JSON.stringify(t)])!=null?n:{}},getGranteeGrants:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GranteeGrants[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.authz.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryGrants({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Or(t);let u=(await p.queryGrants(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryGrants(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=qr(u,g)}return e("QUERY",{query:"Grants",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryGrants",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGrants({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryGrants API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryGranterGrants({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Or(t);let u=(await p.queryGranterGrants(a.granter,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryGranterGrants(a.granter,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=qr(u,g)}return e("QUERY",{query:"GranterGrants",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryGranterGrants",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGranterGrants({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryGranterGrants API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryGranteeGrants({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Or(t);let u=(await p.queryGranteeGrants(a.grantee,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryGranteeGrants(a.grantee,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=qr(u,g)}return e("QUERY",{query:"GranteeGrants",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryGranteeGrants",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGranteeGrants({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryGranteeGrants API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgRevoke({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await oi(e),d=await o.msgRevoke(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==dn?new Error("TxClient:MsgRevoke:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgRevoke:Send Could not broadcast Tx: "+o.message)}},async sendMsgExec({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await oi(e),d=await o.msgExec(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==dn?new Error("TxClient:MsgExec:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgExec:Send Could not broadcast Tx: "+o.message)}},async sendMsgGrant({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await oi(e),d=await o.msgGrant(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==dn?new Error("TxClient:MsgGrant:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgGrant:Send Could not broadcast Tx: "+o.message)}},async MsgRevoke({rootGetters:e},{value:t}){try{return await(await oi(e)).msgRevoke(t)}catch(n){throw n==dn?new Error("TxClient:MsgRevoke:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgRevoke:Create Could not create message: "+n.message)}},async MsgExec({rootGetters:e},{value:t}){try{return await(await oi(e)).msgExec(t)}catch(n){throw n==dn?new Error("TxClient:MsgExec:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgExec:Create Could not create message: "+n.message)}},async MsgGrant({rootGetters:e},{value:t}){try{return await(await oi(e)).msgGrant(t)}catch(n){throw n==dn?new Error("TxClient:MsgGrant:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgGrant:Create Could not create message: "+n.message)}}}},ln;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(ln||(ln={}));class bq{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[ln.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[ln.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[ln.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||ln.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==ln.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class wq extends bq{constructor(){super(...arguments);this.queryAllBalances=(t,n,s={})=>this.request(r({path:`/cosmos/bank/v1beta1/balances/${t}`,method:"GET",query:n,format:"json"},s)),this.queryBalance=(t,n,s={})=>this.request(r({path:`/cosmos/bank/v1beta1/balances/${t}/by_denom`,method:"GET",query:n,format:"json"},s)),this.queryDenomOwners=(t,n,s={})=>this.request(r({path:`/cosmos/bank/v1beta1/denom_owners/${t}`,method:"GET",query:n,format:"json"},s)),this.queryDenomsMetadata=(t,n={})=>this.request(r({path:"/cosmos/bank/v1beta1/denoms_metadata",method:"GET",query:t,format:"json"},n)),this.queryDenomMetadata=(t,n={})=>this.request(r({path:`/cosmos/bank/v1beta1/denoms_metadata/${t}`,method:"GET",format:"json"},n)),this.queryParams=(t={})=>this.request(r({path:"/cosmos/bank/v1beta1/params",method:"GET",format:"json"},t)),this.querySpendableBalances=(t,n,s={})=>this.request(r({path:`/cosmos/bank/v1beta1/spendable_balances/${t}`,method:"GET",query:n,format:"json"},s)),this.queryTotalSupply=(t,n={})=>this.request(r({path:"/cosmos/bank/v1beta1/supply",method:"GET",query:t,format:"json"},n)),this.querySupplyOf=(t,n={})=>this.request(r({path:"/cosmos/bank/v1beta1/supply/by_denom",method:"GET",query:t,format:"json"},n))}}const Ur={denom:"",amount:""},Q={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ur);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ur);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},Ur);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}},$r={default_send_enabled:!1},Sq={encode(e,t=l.Writer.create()){for(const n of e.send_enabled)ri.encode(n,t.uint32(10).fork()).ldelim();return e.default_send_enabled===!0&&t.uint32(16).bool(e.default_send_enabled),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},$r);for(i.send_enabled=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.send_enabled.push(ri.decode(n,n.uint32()));break;case 2:i.default_send_enabled=n.bool();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},$r);if(t.send_enabled=[],e.send_enabled!==void 0&&e.send_enabled!==null)for(const n of e.send_enabled)t.send_enabled.push(ri.fromJSON(n));return e.default_send_enabled!==void 0&&e.default_send_enabled!==null?t.default_send_enabled=Boolean(e.default_send_enabled):t.default_send_enabled=!1,t},toJSON(e){const t={};return e.send_enabled?t.send_enabled=e.send_enabled.map(n=>n?ri.toJSON(n):void 0):t.send_enabled=[],e.default_send_enabled!==void 0&&(t.default_send_enabled=e.default_send_enabled),t},fromPartial(e){const t=r({},$r);if(t.send_enabled=[],e.send_enabled!==void 0&&e.send_enabled!==null)for(const n of e.send_enabled)t.send_enabled.push(ri.fromPartial(n));return e.default_send_enabled!==void 0&&e.default_send_enabled!==null?t.default_send_enabled=e.default_send_enabled:t.default_send_enabled=!1,t}},Ir={denom:"",enabled:!1},ri={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.enabled===!0&&t.uint32(16).bool(e.enabled),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ir);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.enabled=n.bool();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ir);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.enabled!==void 0&&e.enabled!==null?t.enabled=Boolean(e.enabled):t.enabled=!1,t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.enabled!==void 0&&(t.enabled=e.enabled),t},fromPartial(e){const t=r({},Ir);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.enabled!==void 0&&e.enabled!==null?t.enabled=e.enabled:t.enabled=!1,t}},xr={address:""},ai={encode(e,t=l.Writer.create()){e.address!==""&&t.uint32(10).string(e.address);for(const n of e.coins)Q.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},xr);for(i.coins=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.coins.push(Q.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},xr);if(t.coins=[],e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.coins!==void 0&&e.coins!==null)for(const n of e.coins)t.coins.push(Q.fromJSON(n));return t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.coins?t.coins=e.coins.map(n=>n?Q.toJSON(n):void 0):t.coins=[],t},fromPartial(e){const t=r({},xr);if(t.coins=[],e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.coins!==void 0&&e.coins!==null)for(const n of e.coins)t.coins.push(Q.fromPartial(n));return t}},Dr={address:""},di={encode(e,t=l.Writer.create()){e.address!==""&&t.uint32(10).string(e.address);for(const n of e.coins)Q.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Dr);for(i.coins=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.coins.push(Q.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Dr);if(t.coins=[],e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.coins!==void 0&&e.coins!==null)for(const n of e.coins)t.coins.push(Q.fromJSON(n));return t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.coins?t.coins=e.coins.map(n=>n?Q.toJSON(n):void 0):t.coins=[],t},fromPartial(e){const t=r({},Dr);if(t.coins=[],e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.coins!==void 0&&e.coins!==null)for(const n of e.coins)t.coins.push(Q.fromPartial(n));return t}},Qr={},kq={encode(e,t=l.Writer.create()){for(const n of e.total)Q.encode(n,t.uint32(10).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Qr);for(i.total=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.total.push(Q.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Qr);if(t.total=[],e.total!==void 0&&e.total!==null)for(const n of e.total)t.total.push(Q.fromJSON(n));return t},toJSON(e){const t={};return e.total?t.total=e.total.map(n=>n?Q.toJSON(n):void 0):t.total=[],t},fromPartial(e){const t=r({},Qr);if(t.total=[],e.total!==void 0&&e.total!==null)for(const n of e.total)t.total.push(Q.fromPartial(n));return t}},Mr={denom:"",exponent:0,aliases:""},li={encode(e,t=l.Writer.create()){e.denom!==""&&t.uint32(10).string(e.denom),e.exponent!==0&&t.uint32(16).uint32(e.exponent);for(const n of e.aliases)t.uint32(26).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Mr);for(i.aliases=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.exponent=n.uint32();break;case 3:i.aliases.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Mr);if(t.aliases=[],e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.exponent!==void 0&&e.exponent!==null?t.exponent=Number(e.exponent):t.exponent=0,e.aliases!==void 0&&e.aliases!==null)for(const n of e.aliases)t.aliases.push(String(n));return t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.exponent!==void 0&&(t.exponent=e.exponent),e.aliases?t.aliases=e.aliases.map(n=>n):t.aliases=[],t},fromPartial(e){const t=r({},Mr);if(t.aliases=[],e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.exponent!==void 0&&e.exponent!==null?t.exponent=e.exponent:t.exponent=0,e.aliases!==void 0&&e.aliases!==null)for(const n of e.aliases)t.aliases.push(n);return t}},Br={description:"",base:"",display:"",name:"",symbol:"",uri:"",uri_hash:""},Pq={encode(e,t=l.Writer.create()){e.description!==""&&t.uint32(10).string(e.description);for(const n of e.denom_units)li.encode(n,t.uint32(18).fork()).ldelim();return e.base!==""&&t.uint32(26).string(e.base),e.display!==""&&t.uint32(34).string(e.display),e.name!==""&&t.uint32(42).string(e.name),e.symbol!==""&&t.uint32(50).string(e.symbol),e.uri!==""&&t.uint32(58).string(e.uri),e.uri_hash!==""&&t.uint32(66).string(e.uri_hash),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Br);for(i.denom_units=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.description=n.string();break;case 2:i.denom_units.push(li.decode(n,n.uint32()));break;case 3:i.base=n.string();break;case 4:i.display=n.string();break;case 5:i.name=n.string();break;case 6:i.symbol=n.string();break;case 7:i.uri=n.string();break;case 8:i.uri_hash=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Br);if(t.denom_units=[],e.description!==void 0&&e.description!==null?t.description=String(e.description):t.description="",e.denom_units!==void 0&&e.denom_units!==null)for(const n of e.denom_units)t.denom_units.push(li.fromJSON(n));return e.base!==void 0&&e.base!==null?t.base=String(e.base):t.base="",e.display!==void 0&&e.display!==null?t.display=String(e.display):t.display="",e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.symbol!==void 0&&e.symbol!==null?t.symbol=String(e.symbol):t.symbol="",e.uri!==void 0&&e.uri!==null?t.uri=String(e.uri):t.uri="",e.uri_hash!==void 0&&e.uri_hash!==null?t.uri_hash=String(e.uri_hash):t.uri_hash="",t},toJSON(e){const t={};return e.description!==void 0&&(t.description=e.description),e.denom_units?t.denom_units=e.denom_units.map(n=>n?li.toJSON(n):void 0):t.denom_units=[],e.base!==void 0&&(t.base=e.base),e.display!==void 0&&(t.display=e.display),e.name!==void 0&&(t.name=e.name),e.symbol!==void 0&&(t.symbol=e.symbol),e.uri!==void 0&&(t.uri=e.uri),e.uri_hash!==void 0&&(t.uri_hash=e.uri_hash),t},fromPartial(e){const t=r({},Br);if(t.denom_units=[],e.description!==void 0&&e.description!==null?t.description=e.description:t.description="",e.denom_units!==void 0&&e.denom_units!==null)for(const n of e.denom_units)t.denom_units.push(li.fromPartial(n));return e.base!==void 0&&e.base!==null?t.base=e.base:t.base="",e.display!==void 0&&e.display!==null?t.display=e.display:t.display="",e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.symbol!==void 0&&e.symbol!==null?t.symbol=e.symbol:t.symbol="",e.uri!==void 0&&e.uri!==null?t.uri=e.uri:t.uri="",e.uri_hash!==void 0&&e.uri_hash!==null?t.uri_hash=e.uri_hash:t.uri_hash="",t}},Jr={from_address:"",to_address:""},bh={encode(e,t=l.Writer.create()){e.from_address!==""&&t.uint32(10).string(e.from_address),e.to_address!==""&&t.uint32(18).string(e.to_address);for(const n of e.amount)Q.encode(n,t.uint32(26).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Jr);for(i.amount=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.from_address=n.string();break;case 2:i.to_address=n.string();break;case 3:i.amount.push(Q.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Jr);if(t.amount=[],e.from_address!==void 0&&e.from_address!==null?t.from_address=String(e.from_address):t.from_address="",e.to_address!==void 0&&e.to_address!==null?t.to_address=String(e.to_address):t.to_address="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(Q.fromJSON(n));return t},toJSON(e){const t={};return e.from_address!==void 0&&(t.from_address=e.from_address),e.to_address!==void 0&&(t.to_address=e.to_address),e.amount?t.amount=e.amount.map(n=>n?Q.toJSON(n):void 0):t.amount=[],t},fromPartial(e){const t=r({},Jr);if(t.amount=[],e.from_address!==void 0&&e.from_address!==null?t.from_address=e.from_address:t.from_address="",e.to_address!==void 0&&e.to_address!==null?t.to_address=e.to_address:t.to_address="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(Q.fromPartial(n));return t}},Gr={},wh={encode(e,t=l.Writer.create()){for(const n of e.inputs)ai.encode(n,t.uint32(10).fork()).ldelim();for(const n of e.outputs)di.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Gr);for(i.inputs=[],i.outputs=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.inputs.push(ai.decode(n,n.uint32()));break;case 2:i.outputs.push(di.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Gr);if(t.inputs=[],t.outputs=[],e.inputs!==void 0&&e.inputs!==null)for(const n of e.inputs)t.inputs.push(ai.fromJSON(n));if(e.outputs!==void 0&&e.outputs!==null)for(const n of e.outputs)t.outputs.push(di.fromJSON(n));return t},toJSON(e){const t={};return e.inputs?t.inputs=e.inputs.map(n=>n?ai.toJSON(n):void 0):t.inputs=[],e.outputs?t.outputs=e.outputs.map(n=>n?di.toJSON(n):void 0):t.outputs=[],t},fromPartial(e){const t=r({},Gr);if(t.inputs=[],t.outputs=[],e.inputs!==void 0&&e.inputs!==null)for(const n of e.inputs)t.inputs.push(ai.fromPartial(n));if(e.outputs!==void 0&&e.outputs!==null)for(const n of e.outputs)t.outputs.push(di.fromPartial(n));return t}},Cq=[["/cosmos.bank.v1beta1.MsgSend",bh],["/cosmos.bank.v1beta1.MsgMultiSend",wh]],xo=new Error("wallet is required"),Lr=new Y.Registry(Cq),Rq={amount:[],gas:"200000"},Eq=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw xo;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:Lr}):n=await J.SigningStargateClient.offline(e,{registry:Lr});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:Rq,memo:""})=>n.signAndBroadcast(s,i,o,d),msgSend:i=>({typeUrl:"/cosmos.bank.v1beta1.MsgSend",value:bh.fromPartial(i)}),msgMultiSend:i=>({typeUrl:"/cosmos.bank.v1beta1.MsgMultiSend",value:wh.fromPartial(i)})}},Tq=async({addr:e}={addr:"http://localhost:1317"})=>new wq({baseUrl:e}),Vr={},Nq={encode(e,t=l.Writer.create()){for(const n of e.spend_limit)Q.encode(n,t.uint32(10).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Vr);for(i.spend_limit=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.spend_limit.push(Q.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Vr);if(t.spend_limit=[],e.spend_limit!==void 0&&e.spend_limit!==null)for(const n of e.spend_limit)t.spend_limit.push(Q.fromJSON(n));return t},toJSON(e){const t={};return e.spend_limit?t.spend_limit=e.spend_limit.map(n=>n?Q.toJSON(n):void 0):t.spend_limit=[],t},fromPartial(e){const t=r({},Vr);if(t.spend_limit=[],e.spend_limit!==void 0&&e.spend_limit!==null)for(const n of e.spend_limit)t.spend_limit.push(Q.fromPartial(n));return t}},Wr={address:""},Aq={encode(e,t=l.Writer.create()){e.address!==""&&t.uint32(10).string(e.address);for(const n of e.coins)Q.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Wr);for(i.coins=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.coins.push(Q.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Wr);if(t.coins=[],e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.coins!==void 0&&e.coins!==null)for(const n of e.coins)t.coins.push(Q.fromJSON(n));return t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.coins?t.coins=e.coins.map(n=>n?Q.toJSON(n):void 0):t.coins=[],t},fromPartial(e){const t=r({},Wr);if(t.coins=[],e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.coins!==void 0&&e.coins!==null)for(const n of e.coins)t.coins.push(Q.fromPartial(n));return t}};var ui=(()=>{if(typeof ui!="undefined")return ui;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();ui.atob;ui.btoa;l.util.Long!==S&&(l.util.Long=S,l.configure());const Fr={address:""},Oq={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),e.balance!==void 0&&Q.encode(e.balance,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Fr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.balance=Q.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Fr);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.balance!==void 0&&e.balance!==null?t.balance=Q.fromJSON(e.balance):t.balance=void 0,t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.balance!==void 0&&(t.balance=e.balance?Q.toJSON(e.balance):void 0),t},fromPartial(e){const t=r({},Fr);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.balance!==void 0&&e.balance!==null?t.balance=Q.fromPartial(e.balance):t.balance=void 0,t}};async function Us(e){return await Eq(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function Et(e){return await Tq({addr:e["common/env/apiCosmos"]})}function un(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function ft(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const Sh=()=>({Balance:{},AllBalances:{},SpendableBalances:{},TotalSupply:{},SupplyOf:{},Params:{},DenomMetadata:{},DenomsMetadata:{},DenomOwners:{},_Structure:{SendAuthorization:ft(Nq.fromPartial({})),Params:ft(Sq.fromPartial({})),SendEnabled:ft(ri.fromPartial({})),Input:ft(ai.fromPartial({})),Output:ft(di.fromPartial({})),Supply:ft(kq.fromPartial({})),DenomUnit:ft(li.fromPartial({})),Metadata:ft(Pq.fromPartial({})),Balance:ft(Aq.fromPartial({})),DenomOwner:ft(Oq.fromPartial({}))},_Registry:Lr,_Subscriptions:new Set}),qq=Sh();var Uq={namespaced:!0,state:qq,mutations:{RESET_STATE(e){Object.assign(e,Sh())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getBalance:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Balance[JSON.stringify(t)])!=null?n:{}},getAllBalances:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.AllBalances[JSON.stringify(t)])!=null?n:{}},getSpendableBalances:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.SpendableBalances[JSON.stringify(t)])!=null?n:{}},getTotalSupply:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.TotalSupply[JSON.stringify(t)])!=null?n:{}},getSupplyOf:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.SupplyOf[JSON.stringify(t)])!=null?n:{}},getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getDenomMetadata:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DenomMetadata[JSON.stringify(t)])!=null?n:{}},getDenomsMetadata:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DenomsMetadata[JSON.stringify(t)])!=null?n:{}},getDenomOwners:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DenomOwners[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.bank.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryBalance({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Et(t);let u=(await p.queryBalance(a.address,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryBalance(a.address,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=un(u,g)}return e("QUERY",{query:"Balance",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryBalance",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getBalance({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryBalance API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryAllBalances({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Et(t);let u=(await p.queryAllBalances(a.address,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryAllBalances(a.address,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=un(u,g)}return e("QUERY",{query:"AllBalances",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAllBalances",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAllBalances({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAllBalances API Node Unavailable. Could not perform query: "+a.error.message)}},async QuerySpendableBalances({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Et(t);let u=(await p.querySpendableBalances(a.address,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.querySpendableBalances(a.address,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=un(u,g)}return e("QUERY",{query:"SpendableBalances",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QuerySpendableBalances",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getSpendableBalances({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QuerySpendableBalances API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryTotalSupply({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Et(t);let u=(await p.queryTotalSupply(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryTotalSupply(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=un(u,g)}return e("QUERY",{query:"TotalSupply",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryTotalSupply",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getTotalSupply({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryTotalSupply API Node Unavailable. Could not perform query: "+a.error.message)}},async QuerySupplyOf({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Et(t);let u=(await p.querySupplyOf(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.querySupplyOf(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=un(u,g)}return e("QUERY",{query:"SupplyOf",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QuerySupplyOf",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getSupplyOf({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QuerySupplyOf API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Et(t)).queryParams()).data;return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDenomMetadata({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Et(t)).queryDenomMetadata(a.denom)).data;return e("QUERY",{query:"DenomMetadata",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDenomMetadata",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDenomMetadata({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDenomMetadata API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDenomsMetadata({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Et(t);let u=(await p.queryDenomsMetadata(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryDenomsMetadata(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=un(u,g)}return e("QUERY",{query:"DenomsMetadata",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDenomsMetadata",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDenomsMetadata({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDenomsMetadata API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDenomOwners({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Et(t);let u=(await p.queryDenomOwners(a.denom,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryDenomOwners(a.denom,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=un(u,g)}return e("QUERY",{query:"DenomOwners",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDenomOwners",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDenomOwners({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDenomOwners API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgSend({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Us(e),d=await o.msgSend(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==xo?new Error("TxClient:MsgSend:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSend:Send Could not broadcast Tx: "+o.message)}},async sendMsgMultiSend({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Us(e),d=await o.msgMultiSend(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==xo?new Error("TxClient:MsgMultiSend:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgMultiSend:Send Could not broadcast Tx: "+o.message)}},async MsgSend({rootGetters:e},{value:t}){try{return await(await Us(e)).msgSend(t)}catch(n){throw n==xo?new Error("TxClient:MsgSend:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSend:Create Could not create message: "+n.message)}},async MsgMultiSend({rootGetters:e},{value:t}){try{return await(await Us(e)).msgMultiSend(t)}catch(n){throw n==xo?new Error("TxClient:MsgMultiSend:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgMultiSend:Create Could not create message: "+n.message)}}}},kh;(function(e){e.BLOCK_ID_FLAG_UNKNOWN="BLOCK_ID_FLAG_UNKNOWN",e.BLOCK_ID_FLAG_ABSENT="BLOCK_ID_FLAG_ABSENT",e.BLOCK_ID_FLAG_COMMIT="BLOCK_ID_FLAG_COMMIT",e.BLOCK_ID_FLAG_NIL="BLOCK_ID_FLAG_NIL"})(kh||(kh={}));var Ph;(function(e){e.SIGNED_MSG_TYPE_UNKNOWN="SIGNED_MSG_TYPE_UNKNOWN",e.SIGNED_MSG_TYPE_PREVOTE="SIGNED_MSG_TYPE_PREVOTE",e.SIGNED_MSG_TYPE_PRECOMMIT="SIGNED_MSG_TYPE_PRECOMMIT",e.SIGNED_MSG_TYPE_PROPOSAL="SIGNED_MSG_TYPE_PROPOSAL"})(Ph||(Ph={}));var cn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(cn||(cn={}));class $q{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[cn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[cn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[cn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||cn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==cn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class Iq extends $q{constructor(){super(...arguments);this.serviceAbciQuery=(t,n={})=>this.request(r({path:"/cosmos/base/tendermint/v1beta1/abci_query",method:"GET",query:t,format:"json"},n)),this.serviceGetLatestBlock=(t={})=>this.request(r({path:"/cosmos/base/tendermint/v1beta1/blocks/latest",method:"GET",format:"json"},t)),this.serviceGetBlockByHeight=(t,n={})=>this.request(r({path:`/cosmos/base/tendermint/v1beta1/blocks/${t}`,method:"GET",format:"json"},n)),this.serviceGetNodeInfo=(t={})=>this.request(r({path:"/cosmos/base/tendermint/v1beta1/node_info",method:"GET",format:"json"},t)),this.serviceGetSyncing=(t={})=>this.request(r({path:"/cosmos/base/tendermint/v1beta1/syncing",method:"GET",format:"json"},t)),this.serviceGetLatestValidatorSet=(t,n={})=>this.request(r({path:"/cosmos/base/tendermint/v1beta1/validatorsets/latest",method:"GET",query:t,format:"json"},n)),this.serviceGetValidatorSetByHeight=(t,n,s={})=>this.request(r({path:`/cosmos/base/tendermint/v1beta1/validatorsets/${t}`,method:"GET",query:n,format:"json"},s))}}const xq=[],Dq=new Y.Registry(xq),Qq=async({addr:e}={addr:"http://localhost:1317"})=>new Iq({baseUrl:e});var ci=(()=>{if(typeof ci!="undefined")return ci;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();ci.atob;ci.btoa;l.util.Long!==S&&(l.util.Long=S,l.configure());const Hr={type_url:""},Do={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Hr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Hr);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=Bq(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=Gq(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},Hr);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var pi=(()=>{if(typeof pi!="undefined")return pi;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const Mq=pi.atob||(e=>pi.Buffer.from(e,"base64").toString("binary"));function Bq(e){const t=Mq(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const Jq=pi.btoa||(e=>pi.Buffer.from(e,"binary").toString("base64"));function Gq(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return Jq(t.join(""))}const zr={seconds:0,nanos:0},Ee={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},zr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=Lq(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},zr);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},zr);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var Yr=(()=>{if(typeof Yr!="undefined")return Yr;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Lq(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Yr.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());var fi=(()=>{if(typeof fi!="undefined")return fi;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();fi.atob;fi.btoa;l.util.Long!==S&&(l.util.Long=S,l.configure());const Xr={block:0,app:0},mt={encode(e,t=l.Writer.create()){return e.block!==0&&t.uint32(8).uint64(e.block),e.app!==0&&t.uint32(16).uint64(e.app),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Xr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.block=Ch(n.uint64());break;case 2:i.app=Ch(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Xr);return e.block!==void 0&&e.block!==null?t.block=Number(e.block):t.block=0,e.app!==void 0&&e.app!==null?t.app=Number(e.app):t.app=0,t},toJSON(e){const t={};return e.block!==void 0&&(t.block=e.block),e.app!==void 0&&(t.app=e.app),t},fromPartial(e){const t=r({},Xr);return e.block!==void 0&&e.block!==null?t.block=e.block:t.block=0,e.app!==void 0&&e.app!==null?t.app=e.app:t.app=0,t}};var Kr=(()=>{if(typeof Kr!="undefined")return Kr;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Ch(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Kr.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Zr={},Qo={encode(e,t=l.Writer.create()){return e.ed25519!==void 0&&t.uint32(10).bytes(e.ed25519),e.secp256k1!==void 0&&t.uint32(18).bytes(e.secp256k1),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Zr);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.ed25519=n.bytes();break;case 2:i.secp256k1=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Zr);return e.ed25519!==void 0&&e.ed25519!==null&&(t.ed25519=Rh(e.ed25519)),e.secp256k1!==void 0&&e.secp256k1!==null&&(t.secp256k1=Rh(e.secp256k1)),t},toJSON(e){const t={};return e.ed25519!==void 0&&(t.ed25519=e.ed25519!==void 0?Eh(e.ed25519):void 0),e.secp256k1!==void 0&&(t.secp256k1=e.secp256k1!==void 0?Eh(e.secp256k1):void 0),t},fromPartial(e){const t=r({},Zr);return e.ed25519!==void 0&&e.ed25519!==null?t.ed25519=e.ed25519:t.ed25519=void 0,e.secp256k1!==void 0&&e.secp256k1!==null?t.secp256k1=e.secp256k1:t.secp256k1=void 0,t}};var mi=(()=>{if(typeof mi!="undefined")return mi;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const Vq=mi.atob||(e=>mi.Buffer.from(e,"base64").toString("binary"));function Rh(e){const t=Vq(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const Wq=mi.btoa||(e=>mi.Buffer.from(e,"binary").toString("base64"));function Eh(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return Wq(t.join(""))}const jr={total_voting_power:0},Mo={encode(e,t=l.Writer.create()){for(const n of e.validators)Te.encode(n,t.uint32(10).fork()).ldelim();return e.proposer!==void 0&&Te.encode(e.proposer,t.uint32(18).fork()).ldelim(),e.total_voting_power!==0&&t.uint32(24).int64(e.total_voting_power),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},jr);for(i.validators=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.validators.push(Te.decode(n,n.uint32()));break;case 2:i.proposer=Te.decode(n,n.uint32());break;case 3:i.total_voting_power=ta(n.int64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},jr);if(t.validators=[],e.validators!==void 0&&e.validators!==null)for(const n of e.validators)t.validators.push(Te.fromJSON(n));return e.proposer!==void 0&&e.proposer!==null?t.proposer=Te.fromJSON(e.proposer):t.proposer=void 0,e.total_voting_power!==void 0&&e.total_voting_power!==null?t.total_voting_power=Number(e.total_voting_power):t.total_voting_power=0,t},toJSON(e){const t={};return e.validators?t.validators=e.validators.map(n=>n?Te.toJSON(n):void 0):t.validators=[],e.proposer!==void 0&&(t.proposer=e.proposer?Te.toJSON(e.proposer):void 0),e.total_voting_power!==void 0&&(t.total_voting_power=e.total_voting_power),t},fromPartial(e){const t=r({},jr);if(t.validators=[],e.validators!==void 0&&e.validators!==null)for(const n of e.validators)t.validators.push(Te.fromPartial(n));return e.proposer!==void 0&&e.proposer!==null?t.proposer=Te.fromPartial(e.proposer):t.proposer=void 0,e.total_voting_power!==void 0&&e.total_voting_power!==null?t.total_voting_power=e.total_voting_power:t.total_voting_power=0,t}},ea={voting_power:0,proposer_priority:0},Te={encode(e,t=l.Writer.create()){return e.address.length!==0&&t.uint32(10).bytes(e.address),e.pub_key!==void 0&&Qo.encode(e.pub_key,t.uint32(18).fork()).ldelim(),e.voting_power!==0&&t.uint32(24).int64(e.voting_power),e.proposer_priority!==0&&t.uint32(32).int64(e.proposer_priority),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ea);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.bytes();break;case 2:i.pub_key=Qo.decode(n,n.uint32());break;case 3:i.voting_power=ta(n.int64());break;case 4:i.proposer_priority=ta(n.int64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ea);return e.address!==void 0&&e.address!==null&&(t.address=Hq(e.address)),e.pub_key!==void 0&&e.pub_key!==null?t.pub_key=Qo.fromJSON(e.pub_key):t.pub_key=void 0,e.voting_power!==void 0&&e.voting_power!==null?t.voting_power=Number(e.voting_power):t.voting_power=0,e.proposer_priority!==void 0&&e.proposer_priority!==null?t.proposer_priority=Number(e.proposer_priority):t.proposer_priority=0,t},toJSON(e){const t={};return e.address!==void 0&&(t.address=Yq(e.address!==void 0?e.address:new Uint8Array)),e.pub_key!==void 0&&(t.pub_key=e.pub_key?Qo.toJSON(e.pub_key):void 0),e.voting_power!==void 0&&(t.voting_power=e.voting_power),e.proposer_priority!==void 0&&(t.proposer_priority=e.proposer_priority),t},fromPartial(e){const t=r({},ea);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address=new Uint8Array,e.pub_key!==void 0&&e.pub_key!==null?t.pub_key=Qo.fromPartial(e.pub_key):t.pub_key=void 0,e.voting_power!==void 0&&e.voting_power!==null?t.voting_power=e.voting_power:t.voting_power=0,e.proposer_priority!==void 0&&e.proposer_priority!==null?t.proposer_priority=e.proposer_priority:t.proposer_priority=0,t}};var pn=(()=>{if(typeof pn!="undefined")return pn;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const Fq=pn.atob||(e=>pn.Buffer.from(e,"base64").toString("binary"));function Hq(e){const t=Fq(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const zq=pn.btoa||(e=>pn.Buffer.from(e,"binary").toString("base64"));function Yq(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return zq(t.join(""))}function ta(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new pn.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());var Th;(function(e){e[e.BLOCK_ID_FLAG_UNKNOWN=0]="BLOCK_ID_FLAG_UNKNOWN",e[e.BLOCK_ID_FLAG_ABSENT=1]="BLOCK_ID_FLAG_ABSENT",e[e.BLOCK_ID_FLAG_COMMIT=2]="BLOCK_ID_FLAG_COMMIT",e[e.BLOCK_ID_FLAG_NIL=3]="BLOCK_ID_FLAG_NIL",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(Th||(Th={}));function Xq(e){switch(e){case 0:case"BLOCK_ID_FLAG_UNKNOWN":return 0;case 1:case"BLOCK_ID_FLAG_ABSENT":return 1;case 2:case"BLOCK_ID_FLAG_COMMIT":return 2;case 3:case"BLOCK_ID_FLAG_NIL":return 3;case-1:case"UNRECOGNIZED":default:return-1}}function Kq(e){switch(e){case 0:return"BLOCK_ID_FLAG_UNKNOWN";case 1:return"BLOCK_ID_FLAG_ABSENT";case 2:return"BLOCK_ID_FLAG_COMMIT";case 3:return"BLOCK_ID_FLAG_NIL";default:return"UNKNOWN"}}var Nh;(function(e){e[e.SIGNED_MSG_TYPE_UNKNOWN=0]="SIGNED_MSG_TYPE_UNKNOWN",e[e.SIGNED_MSG_TYPE_PREVOTE=1]="SIGNED_MSG_TYPE_PREVOTE",e[e.SIGNED_MSG_TYPE_PRECOMMIT=2]="SIGNED_MSG_TYPE_PRECOMMIT",e[e.SIGNED_MSG_TYPE_PROPOSAL=32]="SIGNED_MSG_TYPE_PROPOSAL",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(Nh||(Nh={}));function Zq(e){switch(e){case 0:case"SIGNED_MSG_TYPE_UNKNOWN":return 0;case 1:case"SIGNED_MSG_TYPE_PREVOTE":return 1;case 2:case"SIGNED_MSG_TYPE_PRECOMMIT":return 2;case 32:case"SIGNED_MSG_TYPE_PROPOSAL":return 32;case-1:case"UNRECOGNIZED":default:return-1}}function jq(e){switch(e){case 0:return"SIGNED_MSG_TYPE_UNKNOWN";case 1:return"SIGNED_MSG_TYPE_PREVOTE";case 2:return"SIGNED_MSG_TYPE_PRECOMMIT";case 32:return"SIGNED_MSG_TYPE_PROPOSAL";default:return"UNKNOWN"}}const na={total:0},Bo={encode(e,t=l.Writer.create()){return e.total!==0&&t.uint32(8).uint32(e.total),e.hash.length!==0&&t.uint32(18).bytes(e.hash),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},na);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.total=n.uint32();break;case 2:i.hash=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},na);return e.total!==void 0&&e.total!==null?t.total=Number(e.total):t.total=0,e.hash!==void 0&&e.hash!==null&&(t.hash=we(e.hash)),t},toJSON(e){const t={};return e.total!==void 0&&(t.total=e.total),e.hash!==void 0&&(t.hash=Se(e.hash!==void 0?e.hash:new Uint8Array)),t},fromPartial(e){const t=r({},na);return e.total!==void 0&&e.total!==null?t.total=e.total:t.total=0,e.hash!==void 0&&e.hash!==null?t.hash=e.hash:t.hash=new Uint8Array,t}},ia={},de={encode(e,t=l.Writer.create()){return e.hash.length!==0&&t.uint32(10).bytes(e.hash),e.part_set_header!==void 0&&Bo.encode(e.part_set_header,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ia);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.hash=n.bytes();break;case 2:i.part_set_header=Bo.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ia);return e.hash!==void 0&&e.hash!==null&&(t.hash=we(e.hash)),e.part_set_header!==void 0&&e.part_set_header!==null?t.part_set_header=Bo.fromJSON(e.part_set_header):t.part_set_header=void 0,t},toJSON(e){const t={};return e.hash!==void 0&&(t.hash=Se(e.hash!==void 0?e.hash:new Uint8Array)),e.part_set_header!==void 0&&(t.part_set_header=e.part_set_header?Bo.toJSON(e.part_set_header):void 0),t},fromPartial(e){const t=r({},ia);return e.hash!==void 0&&e.hash!==null?t.hash=e.hash:t.hash=new Uint8Array,e.part_set_header!==void 0&&e.part_set_header!==null?t.part_set_header=Bo.fromPartial(e.part_set_header):t.part_set_header=void 0,t}},oa={chain_id:"",height:0},Jo={encode(e,t=l.Writer.create()){return e.version!==void 0&&mt.encode(e.version,t.uint32(10).fork()).ldelim(),e.chain_id!==""&&t.uint32(18).string(e.chain_id),e.height!==0&&t.uint32(24).int64(e.height),e.time!==void 0&&Ee.encode(ca(e.time),t.uint32(34).fork()).ldelim(),e.last_block_id!==void 0&&de.encode(e.last_block_id,t.uint32(42).fork()).ldelim(),e.last_commit_hash.length!==0&&t.uint32(50).bytes(e.last_commit_hash),e.data_hash.length!==0&&t.uint32(58).bytes(e.data_hash),e.validators_hash.length!==0&&t.uint32(66).bytes(e.validators_hash),e.next_validators_hash.length!==0&&t.uint32(74).bytes(e.next_validators_hash),e.consensus_hash.length!==0&&t.uint32(82).bytes(e.consensus_hash),e.app_hash.length!==0&&t.uint32(90).bytes(e.app_hash),e.last_results_hash.length!==0&&t.uint32(98).bytes(e.last_results_hash),e.evidence_hash.length!==0&&t.uint32(106).bytes(e.evidence_hash),e.proposer_address.length!==0&&t.uint32(114).bytes(e.proposer_address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},oa);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.version=mt.decode(n,n.uint32());break;case 2:i.chain_id=n.string();break;case 3:i.height=fa(n.int64());break;case 4:i.time=$s(Ee.decode(n,n.uint32()));break;case 5:i.last_block_id=de.decode(n,n.uint32());break;case 6:i.last_commit_hash=n.bytes();break;case 7:i.data_hash=n.bytes();break;case 8:i.validators_hash=n.bytes();break;case 9:i.next_validators_hash=n.bytes();break;case 10:i.consensus_hash=n.bytes();break;case 11:i.app_hash=n.bytes();break;case 12:i.last_results_hash=n.bytes();break;case 13:i.evidence_hash=n.bytes();break;case 14:i.proposer_address=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},oa);return e.version!==void 0&&e.version!==null?t.version=mt.fromJSON(e.version):t.version=void 0,e.chain_id!==void 0&&e.chain_id!==null?t.chain_id=String(e.chain_id):t.chain_id="",e.height!==void 0&&e.height!==null?t.height=Number(e.height):t.height=0,e.time!==void 0&&e.time!==null?t.time=pa(e.time):t.time=void 0,e.last_block_id!==void 0&&e.last_block_id!==null?t.last_block_id=de.fromJSON(e.last_block_id):t.last_block_id=void 0,e.last_commit_hash!==void 0&&e.last_commit_hash!==null&&(t.last_commit_hash=we(e.last_commit_hash)),e.data_hash!==void 0&&e.data_hash!==null&&(t.data_hash=we(e.data_hash)),e.validators_hash!==void 0&&e.validators_hash!==null&&(t.validators_hash=we(e.validators_hash)),e.next_validators_hash!==void 0&&e.next_validators_hash!==null&&(t.next_validators_hash=we(e.next_validators_hash)),e.consensus_hash!==void 0&&e.consensus_hash!==null&&(t.consensus_hash=we(e.consensus_hash)),e.app_hash!==void 0&&e.app_hash!==null&&(t.app_hash=we(e.app_hash)),e.last_results_hash!==void 0&&e.last_results_hash!==null&&(t.last_results_hash=we(e.last_results_hash)),e.evidence_hash!==void 0&&e.evidence_hash!==null&&(t.evidence_hash=we(e.evidence_hash)),e.proposer_address!==void 0&&e.proposer_address!==null&&(t.proposer_address=we(e.proposer_address)),t},toJSON(e){const t={};return e.version!==void 0&&(t.version=e.version?mt.toJSON(e.version):void 0),e.chain_id!==void 0&&(t.chain_id=e.chain_id),e.height!==void 0&&(t.height=e.height),e.time!==void 0&&(t.time=e.time!==void 0?e.time.toISOString():null),e.last_block_id!==void 0&&(t.last_block_id=e.last_block_id?de.toJSON(e.last_block_id):void 0),e.last_commit_hash!==void 0&&(t.last_commit_hash=Se(e.last_commit_hash!==void 0?e.last_commit_hash:new Uint8Array)),e.data_hash!==void 0&&(t.data_hash=Se(e.data_hash!==void 0?e.data_hash:new Uint8Array)),e.validators_hash!==void 0&&(t.validators_hash=Se(e.validators_hash!==void 0?e.validators_hash:new Uint8Array)),e.next_validators_hash!==void 0&&(t.next_validators_hash=Se(e.next_validators_hash!==void 0?e.next_validators_hash:new Uint8Array)),e.consensus_hash!==void 0&&(t.consensus_hash=Se(e.consensus_hash!==void 0?e.consensus_hash:new Uint8Array)),e.app_hash!==void 0&&(t.app_hash=Se(e.app_hash!==void 0?e.app_hash:new Uint8Array)),e.last_results_hash!==void 0&&(t.last_results_hash=Se(e.last_results_hash!==void 0?e.last_results_hash:new Uint8Array)),e.evidence_hash!==void 0&&(t.evidence_hash=Se(e.evidence_hash!==void 0?e.evidence_hash:new Uint8Array)),e.proposer_address!==void 0&&(t.proposer_address=Se(e.proposer_address!==void 0?e.proposer_address:new Uint8Array)),t},fromPartial(e){const t=r({},oa);return e.version!==void 0&&e.version!==null?t.version=mt.fromPartial(e.version):t.version=void 0,e.chain_id!==void 0&&e.chain_id!==null?t.chain_id=e.chain_id:t.chain_id="",e.height!==void 0&&e.height!==null?t.height=e.height:t.height=0,e.time!==void 0&&e.time!==null?t.time=e.time:t.time=void 0,e.last_block_id!==void 0&&e.last_block_id!==null?t.last_block_id=de.fromPartial(e.last_block_id):t.last_block_id=void 0,e.last_commit_hash!==void 0&&e.last_commit_hash!==null?t.last_commit_hash=e.last_commit_hash:t.last_commit_hash=new Uint8Array,e.data_hash!==void 0&&e.data_hash!==null?t.data_hash=e.data_hash:t.data_hash=new Uint8Array,e.validators_hash!==void 0&&e.validators_hash!==null?t.validators_hash=e.validators_hash:t.validators_hash=new Uint8Array,e.next_validators_hash!==void 0&&e.next_validators_hash!==null?t.next_validators_hash=e.next_validators_hash:t.next_validators_hash=new Uint8Array,e.consensus_hash!==void 0&&e.consensus_hash!==null?t.consensus_hash=e.consensus_hash:t.consensus_hash=new Uint8Array,e.app_hash!==void 0&&e.app_hash!==null?t.app_hash=e.app_hash:t.app_hash=new Uint8Array,e.last_results_hash!==void 0&&e.last_results_hash!==null?t.last_results_hash=e.last_results_hash:t.last_results_hash=new Uint8Array,e.evidence_hash!==void 0&&e.evidence_hash!==null?t.evidence_hash=e.evidence_hash:t.evidence_hash=new Uint8Array,e.proposer_address!==void 0&&e.proposer_address!==null?t.proposer_address=e.proposer_address:t.proposer_address=new Uint8Array,t}},sa={},Go={encode(e,t=l.Writer.create()){for(const n of e.txs)t.uint32(10).bytes(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},sa);for(i.txs=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.txs.push(n.bytes());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},sa);if(t.txs=[],e.txs!==void 0&&e.txs!==null)for(const n of e.txs)t.txs.push(we(n));return t},toJSON(e){const t={};return e.txs?t.txs=e.txs.map(n=>Se(n!==void 0?n:new Uint8Array)):t.txs=[],t},fromPartial(e){const t=r({},sa);if(t.txs=[],e.txs!==void 0&&e.txs!==null)for(const n of e.txs)t.txs.push(n);return t}},ra={type:0,height:0,round:0,validator_index:0},ht={encode(e,t=l.Writer.create()){return e.type!==0&&t.uint32(8).int32(e.type),e.height!==0&&t.uint32(16).int64(e.height),e.round!==0&&t.uint32(24).int32(e.round),e.block_id!==void 0&&de.encode(e.block_id,t.uint32(34).fork()).ldelim(),e.timestamp!==void 0&&Ee.encode(ca(e.timestamp),t.uint32(42).fork()).ldelim(),e.validator_address.length!==0&&t.uint32(50).bytes(e.validator_address),e.validator_index!==0&&t.uint32(56).int32(e.validator_index),e.signature.length!==0&&t.uint32(66).bytes(e.signature),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ra);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type=n.int32();break;case 2:i.height=fa(n.int64());break;case 3:i.round=n.int32();break;case 4:i.block_id=de.decode(n,n.uint32());break;case 5:i.timestamp=$s(Ee.decode(n,n.uint32()));break;case 6:i.validator_address=n.bytes();break;case 7:i.validator_index=n.int32();break;case 8:i.signature=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ra);return e.type!==void 0&&e.type!==null?t.type=Zq(e.type):t.type=0,e.height!==void 0&&e.height!==null?t.height=Number(e.height):t.height=0,e.round!==void 0&&e.round!==null?t.round=Number(e.round):t.round=0,e.block_id!==void 0&&e.block_id!==null?t.block_id=de.fromJSON(e.block_id):t.block_id=void 0,e.timestamp!==void 0&&e.timestamp!==null?t.timestamp=pa(e.timestamp):t.timestamp=void 0,e.validator_address!==void 0&&e.validator_address!==null&&(t.validator_address=we(e.validator_address)),e.validator_index!==void 0&&e.validator_index!==null?t.validator_index=Number(e.validator_index):t.validator_index=0,e.signature!==void 0&&e.signature!==null&&(t.signature=we(e.signature)),t},toJSON(e){const t={};return e.type!==void 0&&(t.type=jq(e.type)),e.height!==void 0&&(t.height=e.height),e.round!==void 0&&(t.round=e.round),e.block_id!==void 0&&(t.block_id=e.block_id?de.toJSON(e.block_id):void 0),e.timestamp!==void 0&&(t.timestamp=e.timestamp!==void 0?e.timestamp.toISOString():null),e.validator_address!==void 0&&(t.validator_address=Se(e.validator_address!==void 0?e.validator_address:new Uint8Array)),e.validator_index!==void 0&&(t.validator_index=e.validator_index),e.signature!==void 0&&(t.signature=Se(e.signature!==void 0?e.signature:new Uint8Array)),t},fromPartial(e){const t=r({},ra);return e.type!==void 0&&e.type!==null?t.type=e.type:t.type=0,e.height!==void 0&&e.height!==null?t.height=e.height:t.height=0,e.round!==void 0&&e.round!==null?t.round=e.round:t.round=0,e.block_id!==void 0&&e.block_id!==null?t.block_id=de.fromPartial(e.block_id):t.block_id=void 0,e.timestamp!==void 0&&e.timestamp!==null?t.timestamp=e.timestamp:t.timestamp=void 0,e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address=new Uint8Array,e.validator_index!==void 0&&e.validator_index!==null?t.validator_index=e.validator_index:t.validator_index=0,e.signature!==void 0&&e.signature!==null?t.signature=e.signature:t.signature=new Uint8Array,t}},aa={height:0,round:0},gt={encode(e,t=l.Writer.create()){e.height!==0&&t.uint32(8).int64(e.height),e.round!==0&&t.uint32(16).int32(e.round),e.block_id!==void 0&&de.encode(e.block_id,t.uint32(26).fork()).ldelim();for(const n of e.signatures)Lo.encode(n,t.uint32(34).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},aa);for(i.signatures=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.height=fa(n.int64());break;case 2:i.round=n.int32();break;case 3:i.block_id=de.decode(n,n.uint32());break;case 4:i.signatures.push(Lo.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},aa);if(t.signatures=[],e.height!==void 0&&e.height!==null?t.height=Number(e.height):t.height=0,e.round!==void 0&&e.round!==null?t.round=Number(e.round):t.round=0,e.block_id!==void 0&&e.block_id!==null?t.block_id=de.fromJSON(e.block_id):t.block_id=void 0,e.signatures!==void 0&&e.signatures!==null)for(const n of e.signatures)t.signatures.push(Lo.fromJSON(n));return t},toJSON(e){const t={};return e.height!==void 0&&(t.height=e.height),e.round!==void 0&&(t.round=e.round),e.block_id!==void 0&&(t.block_id=e.block_id?de.toJSON(e.block_id):void 0),e.signatures?t.signatures=e.signatures.map(n=>n?Lo.toJSON(n):void 0):t.signatures=[],t},fromPartial(e){const t=r({},aa);if(t.signatures=[],e.height!==void 0&&e.height!==null?t.height=e.height:t.height=0,e.round!==void 0&&e.round!==null?t.round=e.round:t.round=0,e.block_id!==void 0&&e.block_id!==null?t.block_id=de.fromPartial(e.block_id):t.block_id=void 0,e.signatures!==void 0&&e.signatures!==null)for(const n of e.signatures)t.signatures.push(Lo.fromPartial(n));return t}},da={block_id_flag:0},Lo={encode(e,t=l.Writer.create()){return e.block_id_flag!==0&&t.uint32(8).int32(e.block_id_flag),e.validator_address.length!==0&&t.uint32(18).bytes(e.validator_address),e.timestamp!==void 0&&Ee.encode(ca(e.timestamp),t.uint32(26).fork()).ldelim(),e.signature.length!==0&&t.uint32(34).bytes(e.signature),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},da);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.block_id_flag=n.int32();break;case 2:i.validator_address=n.bytes();break;case 3:i.timestamp=$s(Ee.decode(n,n.uint32()));break;case 4:i.signature=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},da);return e.block_id_flag!==void 0&&e.block_id_flag!==null?t.block_id_flag=Xq(e.block_id_flag):t.block_id_flag=0,e.validator_address!==void 0&&e.validator_address!==null&&(t.validator_address=we(e.validator_address)),e.timestamp!==void 0&&e.timestamp!==null?t.timestamp=pa(e.timestamp):t.timestamp=void 0,e.signature!==void 0&&e.signature!==null&&(t.signature=we(e.signature)),t},toJSON(e){const t={};return e.block_id_flag!==void 0&&(t.block_id_flag=Kq(e.block_id_flag)),e.validator_address!==void 0&&(t.validator_address=Se(e.validator_address!==void 0?e.validator_address:new Uint8Array)),e.timestamp!==void 0&&(t.timestamp=e.timestamp!==void 0?e.timestamp.toISOString():null),e.signature!==void 0&&(t.signature=Se(e.signature!==void 0?e.signature:new Uint8Array)),t},fromPartial(e){const t=r({},da);return e.block_id_flag!==void 0&&e.block_id_flag!==null?t.block_id_flag=e.block_id_flag:t.block_id_flag=0,e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address=new Uint8Array,e.timestamp!==void 0&&e.timestamp!==null?t.timestamp=e.timestamp:t.timestamp=void 0,e.signature!==void 0&&e.signature!==null?t.signature=e.signature:t.signature=new Uint8Array,t}},la={},Vo={encode(e,t=l.Writer.create()){return e.header!==void 0&&Jo.encode(e.header,t.uint32(10).fork()).ldelim(),e.commit!==void 0&&gt.encode(e.commit,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},la);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.header=Jo.decode(n,n.uint32());break;case 2:i.commit=gt.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},la);return e.header!==void 0&&e.header!==null?t.header=Jo.fromJSON(e.header):t.header=void 0,e.commit!==void 0&&e.commit!==null?t.commit=gt.fromJSON(e.commit):t.commit=void 0,t},toJSON(e){const t={};return e.header!==void 0&&(t.header=e.header?Jo.toJSON(e.header):void 0),e.commit!==void 0&&(t.commit=e.commit?gt.toJSON(e.commit):void 0),t},fromPartial(e){const t=r({},la);return e.header!==void 0&&e.header!==null?t.header=Jo.fromPartial(e.header):t.header=void 0,e.commit!==void 0&&e.commit!==null?t.commit=gt.fromPartial(e.commit):t.commit=void 0,t}},ua={},Wo={encode(e,t=l.Writer.create()){return e.signed_header!==void 0&&Vo.encode(e.signed_header,t.uint32(10).fork()).ldelim(),e.validator_set!==void 0&&Mo.encode(e.validator_set,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ua);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.signed_header=Vo.decode(n,n.uint32());break;case 2:i.validator_set=Mo.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ua);return e.signed_header!==void 0&&e.signed_header!==null?t.signed_header=Vo.fromJSON(e.signed_header):t.signed_header=void 0,e.validator_set!==void 0&&e.validator_set!==null?t.validator_set=Mo.fromJSON(e.validator_set):t.validator_set=void 0,t},toJSON(e){const t={};return e.signed_header!==void 0&&(t.signed_header=e.signed_header?Vo.toJSON(e.signed_header):void 0),e.validator_set!==void 0&&(t.validator_set=e.validator_set?Mo.toJSON(e.validator_set):void 0),t},fromPartial(e){const t=r({},ua);return e.signed_header!==void 0&&e.signed_header!==null?t.signed_header=Vo.fromPartial(e.signed_header):t.signed_header=void 0,e.validator_set!==void 0&&e.validator_set!==null?t.validator_set=Mo.fromPartial(e.validator_set):t.validator_set=void 0,t}};var fn=(()=>{if(typeof fn!="undefined")return fn;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const eU=fn.atob||(e=>fn.Buffer.from(e,"base64").toString("binary"));function we(e){const t=eU(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const tU=fn.btoa||(e=>fn.Buffer.from(e,"binary").toString("base64"));function Se(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return tU(t.join(""))}function ca(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function $s(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function pa(e){return e instanceof Date?e:typeof e=="string"?new Date(e):$s(Ee.fromJSON(e))}function fa(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new fn.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const ma={},Fo={encode(e,t=l.Writer.create()){return e.duplicate_vote_evidence!==void 0&&Ho.encode(e.duplicate_vote_evidence,t.uint32(10).fork()).ldelim(),e.light_client_attack_evidence!==void 0&&zo.encode(e.light_client_attack_evidence,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ma);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.duplicate_vote_evidence=Ho.decode(n,n.uint32());break;case 2:i.light_client_attack_evidence=zo.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ma);return e.duplicate_vote_evidence!==void 0&&e.duplicate_vote_evidence!==null?t.duplicate_vote_evidence=Ho.fromJSON(e.duplicate_vote_evidence):t.duplicate_vote_evidence=void 0,e.light_client_attack_evidence!==void 0&&e.light_client_attack_evidence!==null?t.light_client_attack_evidence=zo.fromJSON(e.light_client_attack_evidence):t.light_client_attack_evidence=void 0,t},toJSON(e){const t={};return e.duplicate_vote_evidence!==void 0&&(t.duplicate_vote_evidence=e.duplicate_vote_evidence?Ho.toJSON(e.duplicate_vote_evidence):void 0),e.light_client_attack_evidence!==void 0&&(t.light_client_attack_evidence=e.light_client_attack_evidence?zo.toJSON(e.light_client_attack_evidence):void 0),t},fromPartial(e){const t=r({},ma);return e.duplicate_vote_evidence!==void 0&&e.duplicate_vote_evidence!==null?t.duplicate_vote_evidence=Ho.fromPartial(e.duplicate_vote_evidence):t.duplicate_vote_evidence=void 0,e.light_client_attack_evidence!==void 0&&e.light_client_attack_evidence!==null?t.light_client_attack_evidence=zo.fromPartial(e.light_client_attack_evidence):t.light_client_attack_evidence=void 0,t}},ha={total_voting_power:0,validator_power:0},Ho={encode(e,t=l.Writer.create()){return e.vote_a!==void 0&&ht.encode(e.vote_a,t.uint32(10).fork()).ldelim(),e.vote_b!==void 0&&ht.encode(e.vote_b,t.uint32(18).fork()).ldelim(),e.total_voting_power!==0&&t.uint32(24).int64(e.total_voting_power),e.validator_power!==0&&t.uint32(32).int64(e.validator_power),e.timestamp!==void 0&&Ee.encode(Ah(e.timestamp),t.uint32(42).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ha);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.vote_a=ht.decode(n,n.uint32());break;case 2:i.vote_b=ht.decode(n,n.uint32());break;case 3:i.total_voting_power=Is(n.int64());break;case 4:i.validator_power=Is(n.int64());break;case 5:i.timestamp=va(Ee.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ha);return e.vote_a!==void 0&&e.vote_a!==null?t.vote_a=ht.fromJSON(e.vote_a):t.vote_a=void 0,e.vote_b!==void 0&&e.vote_b!==null?t.vote_b=ht.fromJSON(e.vote_b):t.vote_b=void 0,e.total_voting_power!==void 0&&e.total_voting_power!==null?t.total_voting_power=Number(e.total_voting_power):t.total_voting_power=0,e.validator_power!==void 0&&e.validator_power!==null?t.validator_power=Number(e.validator_power):t.validator_power=0,e.timestamp!==void 0&&e.timestamp!==null?t.timestamp=Oh(e.timestamp):t.timestamp=void 0,t},toJSON(e){const t={};return e.vote_a!==void 0&&(t.vote_a=e.vote_a?ht.toJSON(e.vote_a):void 0),e.vote_b!==void 0&&(t.vote_b=e.vote_b?ht.toJSON(e.vote_b):void 0),e.total_voting_power!==void 0&&(t.total_voting_power=e.total_voting_power),e.validator_power!==void 0&&(t.validator_power=e.validator_power),e.timestamp!==void 0&&(t.timestamp=e.timestamp!==void 0?e.timestamp.toISOString():null),t},fromPartial(e){const t=r({},ha);return e.vote_a!==void 0&&e.vote_a!==null?t.vote_a=ht.fromPartial(e.vote_a):t.vote_a=void 0,e.vote_b!==void 0&&e.vote_b!==null?t.vote_b=ht.fromPartial(e.vote_b):t.vote_b=void 0,e.total_voting_power!==void 0&&e.total_voting_power!==null?t.total_voting_power=e.total_voting_power:t.total_voting_power=0,e.validator_power!==void 0&&e.validator_power!==null?t.validator_power=e.validator_power:t.validator_power=0,e.timestamp!==void 0&&e.timestamp!==null?t.timestamp=e.timestamp:t.timestamp=void 0,t}},ga={common_height:0,total_voting_power:0},zo={encode(e,t=l.Writer.create()){e.conflicting_block!==void 0&&Wo.encode(e.conflicting_block,t.uint32(10).fork()).ldelim(),e.common_height!==0&&t.uint32(16).int64(e.common_height);for(const n of e.byzantine_validators)Te.encode(n,t.uint32(26).fork()).ldelim();return e.total_voting_power!==0&&t.uint32(32).int64(e.total_voting_power),e.timestamp!==void 0&&Ee.encode(Ah(e.timestamp),t.uint32(42).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ga);for(i.byzantine_validators=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.conflicting_block=Wo.decode(n,n.uint32());break;case 2:i.common_height=Is(n.int64());break;case 3:i.byzantine_validators.push(Te.decode(n,n.uint32()));break;case 4:i.total_voting_power=Is(n.int64());break;case 5:i.timestamp=va(Ee.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ga);if(t.byzantine_validators=[],e.conflicting_block!==void 0&&e.conflicting_block!==null?t.conflicting_block=Wo.fromJSON(e.conflicting_block):t.conflicting_block=void 0,e.common_height!==void 0&&e.common_height!==null?t.common_height=Number(e.common_height):t.common_height=0,e.byzantine_validators!==void 0&&e.byzantine_validators!==null)for(const n of e.byzantine_validators)t.byzantine_validators.push(Te.fromJSON(n));return e.total_voting_power!==void 0&&e.total_voting_power!==null?t.total_voting_power=Number(e.total_voting_power):t.total_voting_power=0,e.timestamp!==void 0&&e.timestamp!==null?t.timestamp=Oh(e.timestamp):t.timestamp=void 0,t},toJSON(e){const t={};return e.conflicting_block!==void 0&&(t.conflicting_block=e.conflicting_block?Wo.toJSON(e.conflicting_block):void 0),e.common_height!==void 0&&(t.common_height=e.common_height),e.byzantine_validators?t.byzantine_validators=e.byzantine_validators.map(n=>n?Te.toJSON(n):void 0):t.byzantine_validators=[],e.total_voting_power!==void 0&&(t.total_voting_power=e.total_voting_power),e.timestamp!==void 0&&(t.timestamp=e.timestamp!==void 0?e.timestamp.toISOString():null),t},fromPartial(e){const t=r({},ga);if(t.byzantine_validators=[],e.conflicting_block!==void 0&&e.conflicting_block!==null?t.conflicting_block=Wo.fromPartial(e.conflicting_block):t.conflicting_block=void 0,e.common_height!==void 0&&e.common_height!==null?t.common_height=e.common_height:t.common_height=0,e.byzantine_validators!==void 0&&e.byzantine_validators!==null)for(const n of e.byzantine_validators)t.byzantine_validators.push(Te.fromPartial(n));return e.total_voting_power!==void 0&&e.total_voting_power!==null?t.total_voting_power=e.total_voting_power:t.total_voting_power=0,e.timestamp!==void 0&&e.timestamp!==null?t.timestamp=e.timestamp:t.timestamp=void 0,t}},ya={},Yo={encode(e,t=l.Writer.create()){for(const n of e.evidence)Fo.encode(n,t.uint32(10).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ya);for(i.evidence=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.evidence.push(Fo.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ya);if(t.evidence=[],e.evidence!==void 0&&e.evidence!==null)for(const n of e.evidence)t.evidence.push(Fo.fromJSON(n));return t},toJSON(e){const t={};return e.evidence?t.evidence=e.evidence.map(n=>n?Fo.toJSON(n):void 0):t.evidence=[],t},fromPartial(e){const t=r({},ya);if(t.evidence=[],e.evidence!==void 0&&e.evidence!==null)for(const n of e.evidence)t.evidence.push(Fo.fromPartial(n));return t}};var _a=(()=>{if(typeof _a!="undefined")return _a;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Ah(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function va(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function Oh(e){return e instanceof Date?e:typeof e=="string"?new Date(e):va(Ee.fromJSON(e))}function Is(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new _a.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const ba={},nU={encode(e,t=l.Writer.create()){return e.header!==void 0&&hi.encode(e.header,t.uint32(10).fork()).ldelim(),e.data!==void 0&&Go.encode(e.data,t.uint32(18).fork()).ldelim(),e.evidence!==void 0&&Yo.encode(e.evidence,t.uint32(26).fork()).ldelim(),e.last_commit!==void 0&&gt.encode(e.last_commit,t.uint32(34).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ba);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.header=hi.decode(n,n.uint32());break;case 2:i.data=Go.decode(n,n.uint32());break;case 3:i.evidence=Yo.decode(n,n.uint32());break;case 4:i.last_commit=gt.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ba);return e.header!==void 0&&e.header!==null?t.header=hi.fromJSON(e.header):t.header=void 0,e.data!==void 0&&e.data!==null?t.data=Go.fromJSON(e.data):t.data=void 0,e.evidence!==void 0&&e.evidence!==null?t.evidence=Yo.fromJSON(e.evidence):t.evidence=void 0,e.last_commit!==void 0&&e.last_commit!==null?t.last_commit=gt.fromJSON(e.last_commit):t.last_commit=void 0,t},toJSON(e){const t={};return e.header!==void 0&&(t.header=e.header?hi.toJSON(e.header):void 0),e.data!==void 0&&(t.data=e.data?Go.toJSON(e.data):void 0),e.evidence!==void 0&&(t.evidence=e.evidence?Yo.toJSON(e.evidence):void 0),e.last_commit!==void 0&&(t.last_commit=e.last_commit?gt.toJSON(e.last_commit):void 0),t},fromPartial(e){const t=r({},ba);return e.header!==void 0&&e.header!==null?t.header=hi.fromPartial(e.header):t.header=void 0,e.data!==void 0&&e.data!==null?t.data=Go.fromPartial(e.data):t.data=void 0,e.evidence!==void 0&&e.evidence!==null?t.evidence=Yo.fromPartial(e.evidence):t.evidence=void 0,e.last_commit!==void 0&&e.last_commit!==null?t.last_commit=gt.fromPartial(e.last_commit):t.last_commit=void 0,t}},wa={chain_id:"",height:0,proposer_address:""},hi={encode(e,t=l.Writer.create()){return e.version!==void 0&&mt.encode(e.version,t.uint32(10).fork()).ldelim(),e.chain_id!==""&&t.uint32(18).string(e.chain_id),e.height!==0&&t.uint32(24).int64(e.height),e.time!==void 0&&Ee.encode(sU(e.time),t.uint32(34).fork()).ldelim(),e.last_block_id!==void 0&&de.encode(e.last_block_id,t.uint32(42).fork()).ldelim(),e.last_commit_hash.length!==0&&t.uint32(50).bytes(e.last_commit_hash),e.data_hash.length!==0&&t.uint32(58).bytes(e.data_hash),e.validators_hash.length!==0&&t.uint32(66).bytes(e.validators_hash),e.next_validators_hash.length!==0&&t.uint32(74).bytes(e.next_validators_hash),e.consensus_hash.length!==0&&t.uint32(82).bytes(e.consensus_hash),e.app_hash.length!==0&&t.uint32(90).bytes(e.app_hash),e.last_results_hash.length!==0&&t.uint32(98).bytes(e.last_results_hash),e.evidence_hash.length!==0&&t.uint32(106).bytes(e.evidence_hash),e.proposer_address!==""&&t.uint32(114).string(e.proposer_address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},wa);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.version=mt.decode(n,n.uint32());break;case 2:i.chain_id=n.string();break;case 3:i.height=aU(n.int64());break;case 4:i.time=qh(Ee.decode(n,n.uint32()));break;case 5:i.last_block_id=de.decode(n,n.uint32());break;case 6:i.last_commit_hash=n.bytes();break;case 7:i.data_hash=n.bytes();break;case 8:i.validators_hash=n.bytes();break;case 9:i.next_validators_hash=n.bytes();break;case 10:i.consensus_hash=n.bytes();break;case 11:i.app_hash=n.bytes();break;case 12:i.last_results_hash=n.bytes();break;case 13:i.evidence_hash=n.bytes();break;case 14:i.proposer_address=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},wa);return e.version!==void 0&&e.version!==null?t.version=mt.fromJSON(e.version):t.version=void 0,e.chain_id!==void 0&&e.chain_id!==null?t.chain_id=String(e.chain_id):t.chain_id="",e.height!==void 0&&e.height!==null?t.height=Number(e.height):t.height=0,e.time!==void 0&&e.time!==null?t.time=rU(e.time):t.time=void 0,e.last_block_id!==void 0&&e.last_block_id!==null?t.last_block_id=de.fromJSON(e.last_block_id):t.last_block_id=void 0,e.last_commit_hash!==void 0&&e.last_commit_hash!==null&&(t.last_commit_hash=Gt(e.last_commit_hash)),e.data_hash!==void 0&&e.data_hash!==null&&(t.data_hash=Gt(e.data_hash)),e.validators_hash!==void 0&&e.validators_hash!==null&&(t.validators_hash=Gt(e.validators_hash)),e.next_validators_hash!==void 0&&e.next_validators_hash!==null&&(t.next_validators_hash=Gt(e.next_validators_hash)),e.consensus_hash!==void 0&&e.consensus_hash!==null&&(t.consensus_hash=Gt(e.consensus_hash)),e.app_hash!==void 0&&e.app_hash!==null&&(t.app_hash=Gt(e.app_hash)),e.last_results_hash!==void 0&&e.last_results_hash!==null&&(t.last_results_hash=Gt(e.last_results_hash)),e.evidence_hash!==void 0&&e.evidence_hash!==null&&(t.evidence_hash=Gt(e.evidence_hash)),e.proposer_address!==void 0&&e.proposer_address!==null?t.proposer_address=String(e.proposer_address):t.proposer_address="",t},toJSON(e){const t={};return e.version!==void 0&&(t.version=e.version?mt.toJSON(e.version):void 0),e.chain_id!==void 0&&(t.chain_id=e.chain_id),e.height!==void 0&&(t.height=e.height),e.time!==void 0&&(t.time=e.time!==void 0?e.time.toISOString():null),e.last_block_id!==void 0&&(t.last_block_id=e.last_block_id?de.toJSON(e.last_block_id):void 0),e.last_commit_hash!==void 0&&(t.last_commit_hash=Lt(e.last_commit_hash!==void 0?e.last_commit_hash:new Uint8Array)),e.data_hash!==void 0&&(t.data_hash=Lt(e.data_hash!==void 0?e.data_hash:new Uint8Array)),e.validators_hash!==void 0&&(t.validators_hash=Lt(e.validators_hash!==void 0?e.validators_hash:new Uint8Array)),e.next_validators_hash!==void 0&&(t.next_validators_hash=Lt(e.next_validators_hash!==void 0?e.next_validators_hash:new Uint8Array)),e.consensus_hash!==void 0&&(t.consensus_hash=Lt(e.consensus_hash!==void 0?e.consensus_hash:new Uint8Array)),e.app_hash!==void 0&&(t.app_hash=Lt(e.app_hash!==void 0?e.app_hash:new Uint8Array)),e.last_results_hash!==void 0&&(t.last_results_hash=Lt(e.last_results_hash!==void 0?e.last_results_hash:new Uint8Array)),e.evidence_hash!==void 0&&(t.evidence_hash=Lt(e.evidence_hash!==void 0?e.evidence_hash:new Uint8Array)),e.proposer_address!==void 0&&(t.proposer_address=e.proposer_address),t},fromPartial(e){const t=r({},wa);return e.version!==void 0&&e.version!==null?t.version=mt.fromPartial(e.version):t.version=void 0,e.chain_id!==void 0&&e.chain_id!==null?t.chain_id=e.chain_id:t.chain_id="",e.height!==void 0&&e.height!==null?t.height=e.height:t.height=0,e.time!==void 0&&e.time!==null?t.time=e.time:t.time=void 0,e.last_block_id!==void 0&&e.last_block_id!==null?t.last_block_id=de.fromPartial(e.last_block_id):t.last_block_id=void 0,e.last_commit_hash!==void 0&&e.last_commit_hash!==null?t.last_commit_hash=e.last_commit_hash:t.last_commit_hash=new Uint8Array,e.data_hash!==void 0&&e.data_hash!==null?t.data_hash=e.data_hash:t.data_hash=new Uint8Array,e.validators_hash!==void 0&&e.validators_hash!==null?t.validators_hash=e.validators_hash:t.validators_hash=new Uint8Array,e.next_validators_hash!==void 0&&e.next_validators_hash!==null?t.next_validators_hash=e.next_validators_hash:t.next_validators_hash=new Uint8Array,e.consensus_hash!==void 0&&e.consensus_hash!==null?t.consensus_hash=e.consensus_hash:t.consensus_hash=new Uint8Array,e.app_hash!==void 0&&e.app_hash!==null?t.app_hash=e.app_hash:t.app_hash=new Uint8Array,e.last_results_hash!==void 0&&e.last_results_hash!==null?t.last_results_hash=e.last_results_hash:t.last_results_hash=new Uint8Array,e.evidence_hash!==void 0&&e.evidence_hash!==null?t.evidence_hash=e.evidence_hash:t.evidence_hash=new Uint8Array,e.proposer_address!==void 0&&e.proposer_address!==null?t.proposer_address=e.proposer_address:t.proposer_address="",t}};var mn=(()=>{if(typeof mn!="undefined")return mn;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const iU=mn.atob||(e=>mn.Buffer.from(e,"base64").toString("binary"));function Gt(e){const t=iU(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const oU=mn.btoa||(e=>mn.Buffer.from(e,"binary").toString("base64"));function Lt(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return oU(t.join(""))}function sU(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function qh(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function rU(e){return e instanceof Date?e:typeof e=="string"?new Date(e):qh(Ee.fromJSON(e))}function aU(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new mn.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());var gi=(()=>{if(typeof gi!="undefined")return gi;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();gi.atob;gi.btoa;l.util.Long!==S&&(l.util.Long=S,l.configure());const Sa={address:"",voting_power:0,proposer_priority:0},dU={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),e.pub_key!==void 0&&Do.encode(e.pub_key,t.uint32(18).fork()).ldelim(),e.voting_power!==0&&t.uint32(24).int64(e.voting_power),e.proposer_priority!==0&&t.uint32(32).int64(e.proposer_priority),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Sa);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.pub_key=Do.decode(n,n.uint32());break;case 3:i.voting_power=Ih(n.int64());break;case 4:i.proposer_priority=Ih(n.int64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Sa);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.pub_key!==void 0&&e.pub_key!==null?t.pub_key=Do.fromJSON(e.pub_key):t.pub_key=void 0,e.voting_power!==void 0&&e.voting_power!==null?t.voting_power=Number(e.voting_power):t.voting_power=0,e.proposer_priority!==void 0&&e.proposer_priority!==null?t.proposer_priority=Number(e.proposer_priority):t.proposer_priority=0,t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.pub_key!==void 0&&(t.pub_key=e.pub_key?Do.toJSON(e.pub_key):void 0),e.voting_power!==void 0&&(t.voting_power=e.voting_power),e.proposer_priority!==void 0&&(t.proposer_priority=e.proposer_priority),t},fromPartial(e){const t=r({},Sa);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.pub_key!==void 0&&e.pub_key!==null?t.pub_key=Do.fromPartial(e.pub_key):t.pub_key=void 0,e.voting_power!==void 0&&e.voting_power!==null?t.voting_power=e.voting_power:t.voting_power=0,e.proposer_priority!==void 0&&e.proposer_priority!==null?t.proposer_priority=e.proposer_priority:t.proposer_priority=0,t}},ka={name:"",app_name:"",version:"",git_commit:"",build_tags:"",go_version:"",cosmos_sdk_version:""},lU={encode(e,t=l.Writer.create()){e.name!==""&&t.uint32(10).string(e.name),e.app_name!==""&&t.uint32(18).string(e.app_name),e.version!==""&&t.uint32(26).string(e.version),e.git_commit!==""&&t.uint32(34).string(e.git_commit),e.build_tags!==""&&t.uint32(42).string(e.build_tags),e.go_version!==""&&t.uint32(50).string(e.go_version);for(const n of e.build_deps)yi.encode(n,t.uint32(58).fork()).ldelim();return e.cosmos_sdk_version!==""&&t.uint32(66).string(e.cosmos_sdk_version),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ka);for(i.build_deps=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.name=n.string();break;case 2:i.app_name=n.string();break;case 3:i.version=n.string();break;case 4:i.git_commit=n.string();break;case 5:i.build_tags=n.string();break;case 6:i.go_version=n.string();break;case 7:i.build_deps.push(yi.decode(n,n.uint32()));break;case 8:i.cosmos_sdk_version=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ka);if(t.build_deps=[],e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.app_name!==void 0&&e.app_name!==null?t.app_name=String(e.app_name):t.app_name="",e.version!==void 0&&e.version!==null?t.version=String(e.version):t.version="",e.git_commit!==void 0&&e.git_commit!==null?t.git_commit=String(e.git_commit):t.git_commit="",e.build_tags!==void 0&&e.build_tags!==null?t.build_tags=String(e.build_tags):t.build_tags="",e.go_version!==void 0&&e.go_version!==null?t.go_version=String(e.go_version):t.go_version="",e.build_deps!==void 0&&e.build_deps!==null)for(const n of e.build_deps)t.build_deps.push(yi.fromJSON(n));return e.cosmos_sdk_version!==void 0&&e.cosmos_sdk_version!==null?t.cosmos_sdk_version=String(e.cosmos_sdk_version):t.cosmos_sdk_version="",t},toJSON(e){const t={};return e.name!==void 0&&(t.name=e.name),e.app_name!==void 0&&(t.app_name=e.app_name),e.version!==void 0&&(t.version=e.version),e.git_commit!==void 0&&(t.git_commit=e.git_commit),e.build_tags!==void 0&&(t.build_tags=e.build_tags),e.go_version!==void 0&&(t.go_version=e.go_version),e.build_deps?t.build_deps=e.build_deps.map(n=>n?yi.toJSON(n):void 0):t.build_deps=[],e.cosmos_sdk_version!==void 0&&(t.cosmos_sdk_version=e.cosmos_sdk_version),t},fromPartial(e){const t=r({},ka);if(t.build_deps=[],e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.app_name!==void 0&&e.app_name!==null?t.app_name=e.app_name:t.app_name="",e.version!==void 0&&e.version!==null?t.version=e.version:t.version="",e.git_commit!==void 0&&e.git_commit!==null?t.git_commit=e.git_commit:t.git_commit="",e.build_tags!==void 0&&e.build_tags!==null?t.build_tags=e.build_tags:t.build_tags="",e.go_version!==void 0&&e.go_version!==null?t.go_version=e.go_version:t.go_version="",e.build_deps!==void 0&&e.build_deps!==null)for(const n of e.build_deps)t.build_deps.push(yi.fromPartial(n));return e.cosmos_sdk_version!==void 0&&e.cosmos_sdk_version!==null?t.cosmos_sdk_version=e.cosmos_sdk_version:t.cosmos_sdk_version="",t}},Pa={path:"",version:"",sum:""},yi={encode(e,t=l.Writer.create()){return e.path!==""&&t.uint32(10).string(e.path),e.version!==""&&t.uint32(18).string(e.version),e.sum!==""&&t.uint32(26).string(e.sum),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Pa);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.path=n.string();break;case 2:i.version=n.string();break;case 3:i.sum=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Pa);return e.path!==void 0&&e.path!==null?t.path=String(e.path):t.path="",e.version!==void 0&&e.version!==null?t.version=String(e.version):t.version="",e.sum!==void 0&&e.sum!==null?t.sum=String(e.sum):t.sum="",t},toJSON(e){const t={};return e.path!==void 0&&(t.path=e.path),e.version!==void 0&&(t.version=e.version),e.sum!==void 0&&(t.sum=e.sum),t},fromPartial(e){const t=r({},Pa);return e.path!==void 0&&e.path!==null?t.path=e.path:t.path="",e.version!==void 0&&e.version!==null?t.version=e.version:t.version="",e.sum!==void 0&&e.sum!==null?t.sum=e.sum:t.sum="",t}},Ca={type:""},_i={encode(e,t=l.Writer.create()){return e.type!==""&&t.uint32(10).string(e.type),e.key.length!==0&&t.uint32(18).bytes(e.key),e.data.length!==0&&t.uint32(26).bytes(e.data),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ca);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type=n.string();break;case 2:i.key=n.bytes();break;case 3:i.data=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ca);return e.type!==void 0&&e.type!==null?t.type=String(e.type):t.type="",e.key!==void 0&&e.key!==null&&(t.key=Uh(e.key)),e.data!==void 0&&e.data!==null&&(t.data=Uh(e.data)),t},toJSON(e){const t={};return e.type!==void 0&&(t.type=e.type),e.key!==void 0&&(t.key=$h(e.key!==void 0?e.key:new Uint8Array)),e.data!==void 0&&(t.data=$h(e.data!==void 0?e.data:new Uint8Array)),t},fromPartial(e){const t=r({},Ca);return e.type!==void 0&&e.type!==null?t.type=e.type:t.type="",e.key!==void 0&&e.key!==null?t.key=e.key:t.key=new Uint8Array,e.data!==void 0&&e.data!==null?t.data=e.data:t.data=new Uint8Array,t}},Ra={},uU={encode(e,t=l.Writer.create()){for(const n of e.ops)_i.encode(n,t.uint32(10).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ra);for(i.ops=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.ops.push(_i.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ra);if(t.ops=[],e.ops!==void 0&&e.ops!==null)for(const n of e.ops)t.ops.push(_i.fromJSON(n));return t},toJSON(e){const t={};return e.ops?t.ops=e.ops.map(n=>n?_i.toJSON(n):void 0):t.ops=[],t},fromPartial(e){const t=r({},Ra);if(t.ops=[],e.ops!==void 0&&e.ops!==null)for(const n of e.ops)t.ops.push(_i.fromPartial(n));return t}};var hn=(()=>{if(typeof hn!="undefined")return hn;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const cU=hn.atob||(e=>hn.Buffer.from(e,"base64").toString("binary"));function Uh(e){const t=cU(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const pU=hn.btoa||(e=>hn.Buffer.from(e,"binary").toString("base64"));function $h(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return pU(t.join(""))}function Ih(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new hn.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());async function gn(e){return await Qq({addr:e["common/env/apiCosmos"]})}function Ea(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function yn(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const xh=()=>({GetNodeInfo:{},GetSyncing:{},GetLatestBlock:{},GetBlockByHeight:{},GetLatestValidatorSet:{},GetValidatorSetByHeight:{},ABCIQuery:{},_Structure:{Validator:yn(dU.fromPartial({})),VersionInfo:yn(lU.fromPartial({})),Module:yn(yi.fromPartial({})),ProofOp:yn(_i.fromPartial({})),ProofOps:yn(uU.fromPartial({})),Block:yn(nU.fromPartial({})),Header:yn(hi.fromPartial({}))},_Registry:Dq,_Subscriptions:new Set}),fU=xh();var mU={namespaced:!0,state:fU,mutations:{RESET_STATE(e){Object.assign(e,xh())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getGetNodeInfo:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GetNodeInfo[JSON.stringify(t)])!=null?n:{}},getGetSyncing:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GetSyncing[JSON.stringify(t)])!=null?n:{}},getGetLatestBlock:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GetLatestBlock[JSON.stringify(t)])!=null?n:{}},getGetBlockByHeight:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GetBlockByHeight[JSON.stringify(t)])!=null?n:{}},getGetLatestValidatorSet:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GetLatestValidatorSet[JSON.stringify(t)])!=null?n:{}},getGetValidatorSetByHeight:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GetValidatorSetByHeight[JSON.stringify(t)])!=null?n:{}},getABCIQuery:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ABCIQuery[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.base.tendermint.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async ServiceGetNodeInfo({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await gn(t)).serviceGetNodeInfo()).data;return e("QUERY",{query:"GetNodeInfo",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"ServiceGetNodeInfo",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGetNodeInfo({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:ServiceGetNodeInfo API Node Unavailable. Could not perform query: "+a.error.message)}},async ServiceGetSyncing({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await gn(t)).serviceGetSyncing()).data;return e("QUERY",{query:"GetSyncing",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"ServiceGetSyncing",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGetSyncing({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:ServiceGetSyncing API Node Unavailable. Could not perform query: "+a.error.message)}},async ServiceGetLatestBlock({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await gn(t)).serviceGetLatestBlock()).data;return e("QUERY",{query:"GetLatestBlock",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"ServiceGetLatestBlock",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGetLatestBlock({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:ServiceGetLatestBlock API Node Unavailable. Could not perform query: "+a.error.message)}},async ServiceGetBlockByHeight({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await gn(t)).serviceGetBlockByHeight(a.height)).data;return e("QUERY",{query:"GetBlockByHeight",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"ServiceGetBlockByHeight",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGetBlockByHeight({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:ServiceGetBlockByHeight API Node Unavailable. Could not perform query: "+a.error.message)}},async ServiceGetLatestValidatorSet({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await gn(t);let u=(await p.serviceGetLatestValidatorSet(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.serviceGetLatestValidatorSet(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Ea(u,g)}return e("QUERY",{query:"GetLatestValidatorSet",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"ServiceGetLatestValidatorSet",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGetLatestValidatorSet({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:ServiceGetLatestValidatorSet API Node Unavailable. Could not perform query: "+a.error.message)}},async ServiceGetValidatorSetByHeight({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await gn(t);let u=(await p.serviceGetValidatorSetByHeight(a.height,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.serviceGetValidatorSetByHeight(a.height,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Ea(u,g)}return e("QUERY",{query:"GetValidatorSetByHeight",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"ServiceGetValidatorSetByHeight",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGetValidatorSetByHeight({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:ServiceGetValidatorSetByHeight API Node Unavailable. Could not perform query: "+a.error.message)}},async ServiceABCIQuery({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await gn(t);let u=(await p.serviceABCIQuery(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.serviceABCIQuery(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Ea(u,g)}return e("QUERY",{query:"ABCIQuery",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"ServiceABCIQuery",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getABCIQuery({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:ServiceABCIQuery API Node Unavailable. Could not perform query: "+a.error.message)}}}},Dh;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Dh||(Dh={}));const Ta={sender:"",invariant_module_name:"",invariant_route:""},Qh={encode(e,t=l.Writer.create()){return e.sender!==""&&t.uint32(10).string(e.sender),e.invariant_module_name!==""&&t.uint32(18).string(e.invariant_module_name),e.invariant_route!==""&&t.uint32(26).string(e.invariant_route),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ta);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.sender=n.string();break;case 2:i.invariant_module_name=n.string();break;case 3:i.invariant_route=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ta);return e.sender!==void 0&&e.sender!==null?t.sender=String(e.sender):t.sender="",e.invariant_module_name!==void 0&&e.invariant_module_name!==null?t.invariant_module_name=String(e.invariant_module_name):t.invariant_module_name="",e.invariant_route!==void 0&&e.invariant_route!==null?t.invariant_route=String(e.invariant_route):t.invariant_route="",t},toJSON(e){const t={};return e.sender!==void 0&&(t.sender=e.sender),e.invariant_module_name!==void 0&&(t.invariant_module_name=e.invariant_module_name),e.invariant_route!==void 0&&(t.invariant_route=e.invariant_route),t},fromPartial(e){const t=r({},Ta);return e.sender!==void 0&&e.sender!==null?t.sender=e.sender:t.sender="",e.invariant_module_name!==void 0&&e.invariant_module_name!==null?t.invariant_module_name=e.invariant_module_name:t.invariant_module_name="",e.invariant_route!==void 0&&e.invariant_route!==null?t.invariant_route=e.invariant_route:t.invariant_route="",t}},hU=[["/cosmos.crisis.v1beta1.MsgVerifyInvariant",Qh]],Na=new Error("wallet is required"),Aa=new Y.Registry(hU),gU={amount:[],gas:"200000"},yU=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw Na;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:Aa}):n=await J.SigningStargateClient.offline(e,{registry:Aa});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:gU,memo:""})=>n.signAndBroadcast(s,i,o,d),msgVerifyInvariant:i=>({typeUrl:"/cosmos.crisis.v1beta1.MsgVerifyInvariant",value:Qh.fromPartial(i)})}};async function Mh(e){return await yU(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}const Bh=()=>({_Structure:{},_Registry:Aa,_Subscriptions:new Set}),_U=Bh();var vU={namespaced:!0,state:_U,mutations:{RESET_STATE(e){Object.assign(e,Bh())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.crisis.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async sendMsgVerifyInvariant({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Mh(e),d=await o.msgVerifyInvariant(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Na?new Error("TxClient:MsgVerifyInvariant:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgVerifyInvariant:Send Could not broadcast Tx: "+o.message)}},async MsgVerifyInvariant({rootGetters:e},{value:t}){try{return await(await Mh(e)).msgVerifyInvariant(t)}catch(n){throw n==Na?new Error("TxClient:MsgVerifyInvariant:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgVerifyInvariant:Create Could not create message: "+n.message)}}}},_n;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(_n||(_n={}));class bU{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[_n.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[_n.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[_n.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||_n.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==_n.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class wU extends bU{constructor(){super(...arguments);this.queryCommunityPool=(t={})=>this.request(r({path:"/cosmos/distribution/v1beta1/community_pool",method:"GET",format:"json"},t)),this.queryDelegationTotalRewards=(t,n={})=>this.request(r({path:`/cosmos/distribution/v1beta1/delegators/${t}/rewards`,method:"GET",format:"json"},n)),this.queryDelegationRewards=(t,n,s={})=>this.request(r({path:`/cosmos/distribution/v1beta1/delegators/${t}/rewards/${n}`,method:"GET",format:"json"},s)),this.queryDelegatorValidators=(t,n={})=>this.request(r({path:`/cosmos/distribution/v1beta1/delegators/${t}/validators`,method:"GET",format:"json"},n)),this.queryDelegatorWithdrawAddress=(t,n={})=>this.request(r({path:`/cosmos/distribution/v1beta1/delegators/${t}/withdraw_address`,method:"GET",format:"json"},n)),this.queryParams=(t={})=>this.request(r({path:"/cosmos/distribution/v1beta1/params",method:"GET",format:"json"},t)),this.queryValidatorCommission=(t,n={})=>this.request(r({path:`/cosmos/distribution/v1beta1/validators/${t}/commission`,method:"GET",format:"json"},n)),this.queryValidatorOutstandingRewards=(t,n={})=>this.request(r({path:`/cosmos/distribution/v1beta1/validators/${t}/outstanding_rewards`,method:"GET",format:"json"},n)),this.queryValidatorSlashes=(t,n,s={})=>this.request(r({path:`/cosmos/distribution/v1beta1/validators/${t}/slashes`,method:"GET",query:n,format:"json"},s))}}const Oa={denom:"",amount:""},yt={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Oa);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Oa);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},Oa);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}},qa={denom:"",amount:""},M={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},qa);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},qa);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},qa);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}},Ua={delegator_address:"",withdraw_address:""},Jh={encode(e,t=l.Writer.create()){return e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.withdraw_address!==""&&t.uint32(18).string(e.withdraw_address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ua);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.withdraw_address=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ua);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.withdraw_address!==void 0&&e.withdraw_address!==null?t.withdraw_address=String(e.withdraw_address):t.withdraw_address="",t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.withdraw_address!==void 0&&(t.withdraw_address=e.withdraw_address),t},fromPartial(e){const t=r({},Ua);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.withdraw_address!==void 0&&e.withdraw_address!==null?t.withdraw_address=e.withdraw_address:t.withdraw_address="",t}},$a={delegator_address:"",validator_address:""},Gh={encode(e,t=l.Writer.create()){return e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.validator_address!==""&&t.uint32(18).string(e.validator_address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},$a);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.validator_address=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},$a);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.validator_address!==void 0&&(t.validator_address=e.validator_address),t},fromPartial(e){const t=r({},$a);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",t}},Ia={validator_address:""},Lh={encode(e,t=l.Writer.create()){return e.validator_address!==""&&t.uint32(10).string(e.validator_address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ia);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.validator_address=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ia);return e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",t},toJSON(e){const t={};return e.validator_address!==void 0&&(t.validator_address=e.validator_address),t},fromPartial(e){const t=r({},Ia);return e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",t}},xa={depositor:""},Vh={encode(e,t=l.Writer.create()){for(const n of e.amount)yt.encode(n,t.uint32(10).fork()).ldelim();return e.depositor!==""&&t.uint32(18).string(e.depositor),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},xa);for(i.amount=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.amount.push(yt.decode(n,n.uint32()));break;case 2:i.depositor=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},xa);if(t.amount=[],e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(yt.fromJSON(n));return e.depositor!==void 0&&e.depositor!==null?t.depositor=String(e.depositor):t.depositor="",t},toJSON(e){const t={};return e.amount?t.amount=e.amount.map(n=>n?yt.toJSON(n):void 0):t.amount=[],e.depositor!==void 0&&(t.depositor=e.depositor),t},fromPartial(e){const t=r({},xa);if(t.amount=[],e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(yt.fromPartial(n));return e.depositor!==void 0&&e.depositor!==null?t.depositor=e.depositor:t.depositor="",t}},SU=[["/cosmos.distribution.v1beta1.MsgSetWithdrawAddress",Jh],["/cosmos.distribution.v1beta1.MsgFundCommunityPool",Vh],["/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",Gh],["/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",Lh]],Tt=new Error("wallet is required"),Da=new Y.Registry(SU),kU={amount:[],gas:"200000"},PU=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw Tt;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:Da}):n=await J.SigningStargateClient.offline(e,{registry:Da});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:kU,memo:""})=>n.signAndBroadcast(s,i,o,d),msgSetWithdrawAddress:i=>({typeUrl:"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress",value:Jh.fromPartial(i)}),msgFundCommunityPool:i=>({typeUrl:"/cosmos.distribution.v1beta1.MsgFundCommunityPool",value:Vh.fromPartial(i)}),msgWithdrawDelegatorReward:i=>({typeUrl:"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",value:Gh.fromPartial(i)}),msgWithdrawValidatorCommission:i=>({typeUrl:"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",value:Lh.fromPartial(i)})}},CU=async({addr:e}={addr:"http://localhost:1317"})=>new wU({baseUrl:e}),Qa={community_tax:"",base_proposer_reward:"",bonus_proposer_reward:"",withdraw_addr_enabled:!1},RU={encode(e,t=l.Writer.create()){return e.community_tax!==""&&t.uint32(10).string(e.community_tax),e.base_proposer_reward!==""&&t.uint32(18).string(e.base_proposer_reward),e.bonus_proposer_reward!==""&&t.uint32(26).string(e.bonus_proposer_reward),e.withdraw_addr_enabled===!0&&t.uint32(32).bool(e.withdraw_addr_enabled),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Qa);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.community_tax=n.string();break;case 2:i.base_proposer_reward=n.string();break;case 3:i.bonus_proposer_reward=n.string();break;case 4:i.withdraw_addr_enabled=n.bool();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Qa);return e.community_tax!==void 0&&e.community_tax!==null?t.community_tax=String(e.community_tax):t.community_tax="",e.base_proposer_reward!==void 0&&e.base_proposer_reward!==null?t.base_proposer_reward=String(e.base_proposer_reward):t.base_proposer_reward="",e.bonus_proposer_reward!==void 0&&e.bonus_proposer_reward!==null?t.bonus_proposer_reward=String(e.bonus_proposer_reward):t.bonus_proposer_reward="",e.withdraw_addr_enabled!==void 0&&e.withdraw_addr_enabled!==null?t.withdraw_addr_enabled=Boolean(e.withdraw_addr_enabled):t.withdraw_addr_enabled=!1,t},toJSON(e){const t={};return e.community_tax!==void 0&&(t.community_tax=e.community_tax),e.base_proposer_reward!==void 0&&(t.base_proposer_reward=e.base_proposer_reward),e.bonus_proposer_reward!==void 0&&(t.bonus_proposer_reward=e.bonus_proposer_reward),e.withdraw_addr_enabled!==void 0&&(t.withdraw_addr_enabled=e.withdraw_addr_enabled),t},fromPartial(e){const t=r({},Qa);return e.community_tax!==void 0&&e.community_tax!==null?t.community_tax=e.community_tax:t.community_tax="",e.base_proposer_reward!==void 0&&e.base_proposer_reward!==null?t.base_proposer_reward=e.base_proposer_reward:t.base_proposer_reward="",e.bonus_proposer_reward!==void 0&&e.bonus_proposer_reward!==null?t.bonus_proposer_reward=e.bonus_proposer_reward:t.bonus_proposer_reward="",e.withdraw_addr_enabled!==void 0&&e.withdraw_addr_enabled!==null?t.withdraw_addr_enabled=e.withdraw_addr_enabled:t.withdraw_addr_enabled=!1,t}},Ma={reference_count:0},vi={encode(e,t=l.Writer.create()){for(const n of e.cumulative_reward_ratio)M.encode(n,t.uint32(10).fork()).ldelim();return e.reference_count!==0&&t.uint32(16).uint32(e.reference_count),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ma);for(i.cumulative_reward_ratio=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.cumulative_reward_ratio.push(M.decode(n,n.uint32()));break;case 2:i.reference_count=n.uint32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ma);if(t.cumulative_reward_ratio=[],e.cumulative_reward_ratio!==void 0&&e.cumulative_reward_ratio!==null)for(const n of e.cumulative_reward_ratio)t.cumulative_reward_ratio.push(M.fromJSON(n));return e.reference_count!==void 0&&e.reference_count!==null?t.reference_count=Number(e.reference_count):t.reference_count=0,t},toJSON(e){const t={};return e.cumulative_reward_ratio?t.cumulative_reward_ratio=e.cumulative_reward_ratio.map(n=>n?M.toJSON(n):void 0):t.cumulative_reward_ratio=[],e.reference_count!==void 0&&(t.reference_count=e.reference_count),t},fromPartial(e){const t=r({},Ma);if(t.cumulative_reward_ratio=[],e.cumulative_reward_ratio!==void 0&&e.cumulative_reward_ratio!==null)for(const n of e.cumulative_reward_ratio)t.cumulative_reward_ratio.push(M.fromPartial(n));return e.reference_count!==void 0&&e.reference_count!==null?t.reference_count=e.reference_count:t.reference_count=0,t}},Ba={period:0},bi={encode(e,t=l.Writer.create()){for(const n of e.rewards)M.encode(n,t.uint32(10).fork()).ldelim();return e.period!==0&&t.uint32(16).uint64(e.period),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ba);for(i.rewards=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.rewards.push(M.decode(n,n.uint32()));break;case 2:i.period=xs(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ba);if(t.rewards=[],e.rewards!==void 0&&e.rewards!==null)for(const n of e.rewards)t.rewards.push(M.fromJSON(n));return e.period!==void 0&&e.period!==null?t.period=Number(e.period):t.period=0,t},toJSON(e){const t={};return e.rewards?t.rewards=e.rewards.map(n=>n?M.toJSON(n):void 0):t.rewards=[],e.period!==void 0&&(t.period=e.period),t},fromPartial(e){const t=r({},Ba);if(t.rewards=[],e.rewards!==void 0&&e.rewards!==null)for(const n of e.rewards)t.rewards.push(M.fromPartial(n));return e.period!==void 0&&e.period!==null?t.period=e.period:t.period=0,t}},Ja={},wi={encode(e,t=l.Writer.create()){for(const n of e.commission)M.encode(n,t.uint32(10).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ja);for(i.commission=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.commission.push(M.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ja);if(t.commission=[],e.commission!==void 0&&e.commission!==null)for(const n of e.commission)t.commission.push(M.fromJSON(n));return t},toJSON(e){const t={};return e.commission?t.commission=e.commission.map(n=>n?M.toJSON(n):void 0):t.commission=[],t},fromPartial(e){const t=r({},Ja);if(t.commission=[],e.commission!==void 0&&e.commission!==null)for(const n of e.commission)t.commission.push(M.fromPartial(n));return t}},Ga={},EU={encode(e,t=l.Writer.create()){for(const n of e.rewards)M.encode(n,t.uint32(10).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ga);for(i.rewards=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.rewards.push(M.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ga);if(t.rewards=[],e.rewards!==void 0&&e.rewards!==null)for(const n of e.rewards)t.rewards.push(M.fromJSON(n));return t},toJSON(e){const t={};return e.rewards?t.rewards=e.rewards.map(n=>n?M.toJSON(n):void 0):t.rewards=[],t},fromPartial(e){const t=r({},Ga);if(t.rewards=[],e.rewards!==void 0&&e.rewards!==null)for(const n of e.rewards)t.rewards.push(M.fromPartial(n));return t}},La={validator_period:0,fraction:""},ze={encode(e,t=l.Writer.create()){return e.validator_period!==0&&t.uint32(8).uint64(e.validator_period),e.fraction!==""&&t.uint32(18).string(e.fraction),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},La);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.validator_period=xs(n.uint64());break;case 2:i.fraction=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},La);return e.validator_period!==void 0&&e.validator_period!==null?t.validator_period=Number(e.validator_period):t.validator_period=0,e.fraction!==void 0&&e.fraction!==null?t.fraction=String(e.fraction):t.fraction="",t},toJSON(e){const t={};return e.validator_period!==void 0&&(t.validator_period=e.validator_period),e.fraction!==void 0&&(t.fraction=e.fraction),t},fromPartial(e){const t=r({},La);return e.validator_period!==void 0&&e.validator_period!==null?t.validator_period=e.validator_period:t.validator_period=0,e.fraction!==void 0&&e.fraction!==null?t.fraction=e.fraction:t.fraction="",t}},Va={},TU={encode(e,t=l.Writer.create()){for(const n of e.validator_slash_events)ze.encode(n,t.uint32(10).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Va);for(i.validator_slash_events=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.validator_slash_events.push(ze.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Va);if(t.validator_slash_events=[],e.validator_slash_events!==void 0&&e.validator_slash_events!==null)for(const n of e.validator_slash_events)t.validator_slash_events.push(ze.fromJSON(n));return t},toJSON(e){const t={};return e.validator_slash_events?t.validator_slash_events=e.validator_slash_events.map(n=>n?ze.toJSON(n):void 0):t.validator_slash_events=[],t},fromPartial(e){const t=r({},Va);if(t.validator_slash_events=[],e.validator_slash_events!==void 0&&e.validator_slash_events!==null)for(const n of e.validator_slash_events)t.validator_slash_events.push(ze.fromPartial(n));return t}},Wa={},NU={encode(e,t=l.Writer.create()){for(const n of e.community_pool)M.encode(n,t.uint32(10).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Wa);for(i.community_pool=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.community_pool.push(M.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Wa);if(t.community_pool=[],e.community_pool!==void 0&&e.community_pool!==null)for(const n of e.community_pool)t.community_pool.push(M.fromJSON(n));return t},toJSON(e){const t={};return e.community_pool?t.community_pool=e.community_pool.map(n=>n?M.toJSON(n):void 0):t.community_pool=[],t},fromPartial(e){const t=r({},Wa);if(t.community_pool=[],e.community_pool!==void 0&&e.community_pool!==null)for(const n of e.community_pool)t.community_pool.push(M.fromPartial(n));return t}},Fa={title:"",description:"",recipient:""},AU={encode(e,t=l.Writer.create()){e.title!==""&&t.uint32(10).string(e.title),e.description!==""&&t.uint32(18).string(e.description),e.recipient!==""&&t.uint32(26).string(e.recipient);for(const n of e.amount)yt.encode(n,t.uint32(34).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Fa);for(i.amount=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.title=n.string();break;case 2:i.description=n.string();break;case 3:i.recipient=n.string();break;case 4:i.amount.push(yt.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Fa);if(t.amount=[],e.title!==void 0&&e.title!==null?t.title=String(e.title):t.title="",e.description!==void 0&&e.description!==null?t.description=String(e.description):t.description="",e.recipient!==void 0&&e.recipient!==null?t.recipient=String(e.recipient):t.recipient="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(yt.fromJSON(n));return t},toJSON(e){const t={};return e.title!==void 0&&(t.title=e.title),e.description!==void 0&&(t.description=e.description),e.recipient!==void 0&&(t.recipient=e.recipient),e.amount?t.amount=e.amount.map(n=>n?yt.toJSON(n):void 0):t.amount=[],t},fromPartial(e){const t=r({},Fa);if(t.amount=[],e.title!==void 0&&e.title!==null?t.title=e.title:t.title="",e.description!==void 0&&e.description!==null?t.description=e.description:t.description="",e.recipient!==void 0&&e.recipient!==null?t.recipient=e.recipient:t.recipient="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(yt.fromPartial(n));return t}},Ha={previous_period:0,stake:"",height:0},Si={encode(e,t=l.Writer.create()){return e.previous_period!==0&&t.uint32(8).uint64(e.previous_period),e.stake!==""&&t.uint32(18).string(e.stake),e.height!==0&&t.uint32(24).uint64(e.height),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ha);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.previous_period=xs(n.uint64());break;case 2:i.stake=n.string();break;case 3:i.height=xs(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ha);return e.previous_period!==void 0&&e.previous_period!==null?t.previous_period=Number(e.previous_period):t.previous_period=0,e.stake!==void 0&&e.stake!==null?t.stake=String(e.stake):t.stake="",e.height!==void 0&&e.height!==null?t.height=Number(e.height):t.height=0,t},toJSON(e){const t={};return e.previous_period!==void 0&&(t.previous_period=e.previous_period),e.stake!==void 0&&(t.stake=e.stake),e.height!==void 0&&(t.height=e.height),t},fromPartial(e){const t=r({},Ha);return e.previous_period!==void 0&&e.previous_period!==null?t.previous_period=e.previous_period:t.previous_period=0,e.stake!==void 0&&e.stake!==null?t.stake=e.stake:t.stake="",e.height!==void 0&&e.height!==null?t.height=e.height:t.height=0,t}},za={validator_address:""},OU={encode(e,t=l.Writer.create()){e.validator_address!==""&&t.uint32(10).string(e.validator_address);for(const n of e.reward)M.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},za);for(i.reward=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.validator_address=n.string();break;case 2:i.reward.push(M.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},za);if(t.reward=[],e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.reward!==void 0&&e.reward!==null)for(const n of e.reward)t.reward.push(M.fromJSON(n));return t},toJSON(e){const t={};return e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.reward?t.reward=e.reward.map(n=>n?M.toJSON(n):void 0):t.reward=[],t},fromPartial(e){const t=r({},za);if(t.reward=[],e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.reward!==void 0&&e.reward!==null)for(const n of e.reward)t.reward.push(M.fromPartial(n));return t}},Ya={title:"",description:"",recipient:"",amount:"",deposit:""},qU={encode(e,t=l.Writer.create()){return e.title!==""&&t.uint32(10).string(e.title),e.description!==""&&t.uint32(18).string(e.description),e.recipient!==""&&t.uint32(26).string(e.recipient),e.amount!==""&&t.uint32(34).string(e.amount),e.deposit!==""&&t.uint32(42).string(e.deposit),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ya);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.title=n.string();break;case 2:i.description=n.string();break;case 3:i.recipient=n.string();break;case 4:i.amount=n.string();break;case 5:i.deposit=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ya);return e.title!==void 0&&e.title!==null?t.title=String(e.title):t.title="",e.description!==void 0&&e.description!==null?t.description=String(e.description):t.description="",e.recipient!==void 0&&e.recipient!==null?t.recipient=String(e.recipient):t.recipient="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",e.deposit!==void 0&&e.deposit!==null?t.deposit=String(e.deposit):t.deposit="",t},toJSON(e){const t={};return e.title!==void 0&&(t.title=e.title),e.description!==void 0&&(t.description=e.description),e.recipient!==void 0&&(t.recipient=e.recipient),e.amount!==void 0&&(t.amount=e.amount),e.deposit!==void 0&&(t.deposit=e.deposit),t},fromPartial(e){const t=r({},Ya);return e.title!==void 0&&e.title!==null?t.title=e.title:t.title="",e.description!==void 0&&e.description!==null?t.description=e.description:t.description="",e.recipient!==void 0&&e.recipient!==null?t.recipient=e.recipient:t.recipient="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",e.deposit!==void 0&&e.deposit!==null?t.deposit=e.deposit:t.deposit="",t}};var Xa=(()=>{if(typeof Xa!="undefined")return Xa;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function xs(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Xa.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Ka={delegator_address:"",withdraw_address:""},UU={encode(e,t=l.Writer.create()){return e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.withdraw_address!==""&&t.uint32(18).string(e.withdraw_address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ka);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.withdraw_address=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ka);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.withdraw_address!==void 0&&e.withdraw_address!==null?t.withdraw_address=String(e.withdraw_address):t.withdraw_address="",t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.withdraw_address!==void 0&&(t.withdraw_address=e.withdraw_address),t},fromPartial(e){const t=r({},Ka);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.withdraw_address!==void 0&&e.withdraw_address!==null?t.withdraw_address=e.withdraw_address:t.withdraw_address="",t}},Za={validator_address:""},$U={encode(e,t=l.Writer.create()){e.validator_address!==""&&t.uint32(10).string(e.validator_address);for(const n of e.outstanding_rewards)M.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Za);for(i.outstanding_rewards=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.validator_address=n.string();break;case 2:i.outstanding_rewards.push(M.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Za);if(t.outstanding_rewards=[],e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.outstanding_rewards!==void 0&&e.outstanding_rewards!==null)for(const n of e.outstanding_rewards)t.outstanding_rewards.push(M.fromJSON(n));return t},toJSON(e){const t={};return e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.outstanding_rewards?t.outstanding_rewards=e.outstanding_rewards.map(n=>n?M.toJSON(n):void 0):t.outstanding_rewards=[],t},fromPartial(e){const t=r({},Za);if(t.outstanding_rewards=[],e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.outstanding_rewards!==void 0&&e.outstanding_rewards!==null)for(const n of e.outstanding_rewards)t.outstanding_rewards.push(M.fromPartial(n));return t}},ja={validator_address:""},IU={encode(e,t=l.Writer.create()){return e.validator_address!==""&&t.uint32(10).string(e.validator_address),e.accumulated!==void 0&&wi.encode(e.accumulated,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ja);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.validator_address=n.string();break;case 2:i.accumulated=wi.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ja);return e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.accumulated!==void 0&&e.accumulated!==null?t.accumulated=wi.fromJSON(e.accumulated):t.accumulated=void 0,t},toJSON(e){const t={};return e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.accumulated!==void 0&&(t.accumulated=e.accumulated?wi.toJSON(e.accumulated):void 0),t},fromPartial(e){const t=r({},ja);return e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.accumulated!==void 0&&e.accumulated!==null?t.accumulated=wi.fromPartial(e.accumulated):t.accumulated=void 0,t}},ed={validator_address:"",period:0},xU={encode(e,t=l.Writer.create()){return e.validator_address!==""&&t.uint32(10).string(e.validator_address),e.period!==0&&t.uint32(16).uint64(e.period),e.rewards!==void 0&&vi.encode(e.rewards,t.uint32(26).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ed);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.validator_address=n.string();break;case 2:i.period=sd(n.uint64());break;case 3:i.rewards=vi.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ed);return e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.period!==void 0&&e.period!==null?t.period=Number(e.period):t.period=0,e.rewards!==void 0&&e.rewards!==null?t.rewards=vi.fromJSON(e.rewards):t.rewards=void 0,t},toJSON(e){const t={};return e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.period!==void 0&&(t.period=e.period),e.rewards!==void 0&&(t.rewards=e.rewards?vi.toJSON(e.rewards):void 0),t},fromPartial(e){const t=r({},ed);return e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.period!==void 0&&e.period!==null?t.period=e.period:t.period=0,e.rewards!==void 0&&e.rewards!==null?t.rewards=vi.fromPartial(e.rewards):t.rewards=void 0,t}},td={validator_address:""},DU={encode(e,t=l.Writer.create()){return e.validator_address!==""&&t.uint32(10).string(e.validator_address),e.rewards!==void 0&&bi.encode(e.rewards,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},td);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.validator_address=n.string();break;case 2:i.rewards=bi.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},td);return e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.rewards!==void 0&&e.rewards!==null?t.rewards=bi.fromJSON(e.rewards):t.rewards=void 0,t},toJSON(e){const t={};return e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.rewards!==void 0&&(t.rewards=e.rewards?bi.toJSON(e.rewards):void 0),t},fromPartial(e){const t=r({},td);return e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.rewards!==void 0&&e.rewards!==null?t.rewards=bi.fromPartial(e.rewards):t.rewards=void 0,t}},nd={delegator_address:"",validator_address:""},QU={encode(e,t=l.Writer.create()){return e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.validator_address!==""&&t.uint32(18).string(e.validator_address),e.starting_info!==void 0&&Si.encode(e.starting_info,t.uint32(26).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},nd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.validator_address=n.string();break;case 3:i.starting_info=Si.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},nd);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.starting_info!==void 0&&e.starting_info!==null?t.starting_info=Si.fromJSON(e.starting_info):t.starting_info=void 0,t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.starting_info!==void 0&&(t.starting_info=e.starting_info?Si.toJSON(e.starting_info):void 0),t},fromPartial(e){const t=r({},nd);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.starting_info!==void 0&&e.starting_info!==null?t.starting_info=Si.fromPartial(e.starting_info):t.starting_info=void 0,t}},id={validator_address:"",height:0,period:0},MU={encode(e,t=l.Writer.create()){return e.validator_address!==""&&t.uint32(10).string(e.validator_address),e.height!==0&&t.uint32(16).uint64(e.height),e.period!==0&&t.uint32(24).uint64(e.period),e.validator_slash_event!==void 0&&ze.encode(e.validator_slash_event,t.uint32(34).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},id);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.validator_address=n.string();break;case 2:i.height=sd(n.uint64());break;case 3:i.period=sd(n.uint64());break;case 4:i.validator_slash_event=ze.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},id);return e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.height!==void 0&&e.height!==null?t.height=Number(e.height):t.height=0,e.period!==void 0&&e.period!==null?t.period=Number(e.period):t.period=0,e.validator_slash_event!==void 0&&e.validator_slash_event!==null?t.validator_slash_event=ze.fromJSON(e.validator_slash_event):t.validator_slash_event=void 0,t},toJSON(e){const t={};return e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.height!==void 0&&(t.height=e.height),e.period!==void 0&&(t.period=e.period),e.validator_slash_event!==void 0&&(t.validator_slash_event=e.validator_slash_event?ze.toJSON(e.validator_slash_event):void 0),t},fromPartial(e){const t=r({},id);return e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.height!==void 0&&e.height!==null?t.height=e.height:t.height=0,e.period!==void 0&&e.period!==null?t.period=e.period:t.period=0,e.validator_slash_event!==void 0&&e.validator_slash_event!==null?t.validator_slash_event=ze.fromPartial(e.validator_slash_event):t.validator_slash_event=void 0,t}};var od=(()=>{if(typeof od!="undefined")return od;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function sd(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new od.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());async function Vt(e){return await PU(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function Nt(e){return await CU({addr:e["common/env/apiCosmos"]})}function BU(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function he(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const Wh=()=>({Params:{},ValidatorOutstandingRewards:{},ValidatorCommission:{},ValidatorSlashes:{},DelegationRewards:{},DelegationTotalRewards:{},DelegatorValidators:{},DelegatorWithdrawAddress:{},CommunityPool:{},_Structure:{Params:he(RU.fromPartial({})),ValidatorHistoricalRewards:he(vi.fromPartial({})),ValidatorCurrentRewards:he(bi.fromPartial({})),ValidatorAccumulatedCommission:he(wi.fromPartial({})),ValidatorOutstandingRewards:he(EU.fromPartial({})),ValidatorSlashEvent:he(ze.fromPartial({})),ValidatorSlashEvents:he(TU.fromPartial({})),FeePool:he(NU.fromPartial({})),CommunityPoolSpendProposal:he(AU.fromPartial({})),DelegatorStartingInfo:he(Si.fromPartial({})),DelegationDelegatorReward:he(OU.fromPartial({})),CommunityPoolSpendProposalWithDeposit:he(qU.fromPartial({})),DelegatorWithdrawInfo:he(UU.fromPartial({})),ValidatorOutstandingRewardsRecord:he($U.fromPartial({})),ValidatorAccumulatedCommissionRecord:he(IU.fromPartial({})),ValidatorHistoricalRewardsRecord:he(xU.fromPartial({})),ValidatorCurrentRewardsRecord:he(DU.fromPartial({})),DelegatorStartingInfoRecord:he(QU.fromPartial({})),ValidatorSlashEventRecord:he(MU.fromPartial({}))},_Registry:Da,_Subscriptions:new Set}),JU=Wh();var GU={namespaced:!0,state:JU,mutations:{RESET_STATE(e){Object.assign(e,Wh())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getValidatorOutstandingRewards:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ValidatorOutstandingRewards[JSON.stringify(t)])!=null?n:{}},getValidatorCommission:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ValidatorCommission[JSON.stringify(t)])!=null?n:{}},getValidatorSlashes:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ValidatorSlashes[JSON.stringify(t)])!=null?n:{}},getDelegationRewards:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DelegationRewards[JSON.stringify(t)])!=null?n:{}},getDelegationTotalRewards:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DelegationTotalRewards[JSON.stringify(t)])!=null?n:{}},getDelegatorValidators:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DelegatorValidators[JSON.stringify(t)])!=null?n:{}},getDelegatorWithdrawAddress:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DelegatorWithdrawAddress[JSON.stringify(t)])!=null?n:{}},getCommunityPool:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.CommunityPool[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.distribution.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nt(t)).queryParams()).data;return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryValidatorOutstandingRewards({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nt(t)).queryValidatorOutstandingRewards(a.validator_address)).data;return e("QUERY",{query:"ValidatorOutstandingRewards",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryValidatorOutstandingRewards",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getValidatorOutstandingRewards({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryValidatorOutstandingRewards API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryValidatorCommission({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nt(t)).queryValidatorCommission(a.validator_address)).data;return e("QUERY",{query:"ValidatorCommission",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryValidatorCommission",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getValidatorCommission({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryValidatorCommission API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryValidatorSlashes({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Nt(t);let u=(await p.queryValidatorSlashes(a.validator_address,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryValidatorSlashes(a.validator_address,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=BU(u,g)}return e("QUERY",{query:"ValidatorSlashes",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryValidatorSlashes",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getValidatorSlashes({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryValidatorSlashes API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDelegationRewards({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nt(t)).queryDelegationRewards(a.delegator_address,a.validator_address)).data;return e("QUERY",{query:"DelegationRewards",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDelegationRewards",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDelegationRewards({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDelegationRewards API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDelegationTotalRewards({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nt(t)).queryDelegationTotalRewards(a.delegator_address)).data;return e("QUERY",{query:"DelegationTotalRewards",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDelegationTotalRewards",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDelegationTotalRewards({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDelegationTotalRewards API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDelegatorValidators({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nt(t)).queryDelegatorValidators(a.delegator_address)).data;return e("QUERY",{query:"DelegatorValidators",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDelegatorValidators",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDelegatorValidators({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDelegatorValidators API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDelegatorWithdrawAddress({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nt(t)).queryDelegatorWithdrawAddress(a.delegator_address)).data;return e("QUERY",{query:"DelegatorWithdrawAddress",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDelegatorWithdrawAddress",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDelegatorWithdrawAddress({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDelegatorWithdrawAddress API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryCommunityPool({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nt(t)).queryCommunityPool()).data;return e("QUERY",{query:"CommunityPool",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryCommunityPool",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getCommunityPool({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryCommunityPool API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgSetWithdrawAddress({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Vt(e),d=await o.msgSetWithdrawAddress(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Tt?new Error("TxClient:MsgSetWithdrawAddress:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSetWithdrawAddress:Send Could not broadcast Tx: "+o.message)}},async sendMsgFundCommunityPool({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Vt(e),d=await o.msgFundCommunityPool(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Tt?new Error("TxClient:MsgFundCommunityPool:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgFundCommunityPool:Send Could not broadcast Tx: "+o.message)}},async sendMsgWithdrawDelegatorReward({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Vt(e),d=await o.msgWithdrawDelegatorReward(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Tt?new Error("TxClient:MsgWithdrawDelegatorReward:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgWithdrawDelegatorReward:Send Could not broadcast Tx: "+o.message)}},async sendMsgWithdrawValidatorCommission({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Vt(e),d=await o.msgWithdrawValidatorCommission(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Tt?new Error("TxClient:MsgWithdrawValidatorCommission:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgWithdrawValidatorCommission:Send Could not broadcast Tx: "+o.message)}},async MsgSetWithdrawAddress({rootGetters:e},{value:t}){try{return await(await Vt(e)).msgSetWithdrawAddress(t)}catch(n){throw n==Tt?new Error("TxClient:MsgSetWithdrawAddress:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSetWithdrawAddress:Create Could not create message: "+n.message)}},async MsgFundCommunityPool({rootGetters:e},{value:t}){try{return await(await Vt(e)).msgFundCommunityPool(t)}catch(n){throw n==Tt?new Error("TxClient:MsgFundCommunityPool:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgFundCommunityPool:Create Could not create message: "+n.message)}},async MsgWithdrawDelegatorReward({rootGetters:e},{value:t}){try{return await(await Vt(e)).msgWithdrawDelegatorReward(t)}catch(n){throw n==Tt?new Error("TxClient:MsgWithdrawDelegatorReward:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgWithdrawDelegatorReward:Create Could not create message: "+n.message)}},async MsgWithdrawValidatorCommission({rootGetters:e},{value:t}){try{return await(await Vt(e)).msgWithdrawValidatorCommission(t)}catch(n){throw n==Tt?new Error("TxClient:MsgWithdrawValidatorCommission:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgWithdrawValidatorCommission:Create Could not create message: "+n.message)}}}},vn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(vn||(vn={}));class LU{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[vn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[vn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[vn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||vn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==vn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class VU extends LU{constructor(){super(...arguments);this.queryAllEvidence=(t,n={})=>this.request(r({path:"/cosmos/evidence/v1beta1/evidence",method:"GET",query:t,format:"json"},n)),this.queryEvidence=(t,n={})=>this.request(r({path:`/cosmos/evidence/v1beta1/evidence/${t}`,method:"GET",format:"json"},n))}}const rd={type_url:""},Xo={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},rd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},rd);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=FU(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=zU(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},rd);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var ki=(()=>{if(typeof ki!="undefined")return ki;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const WU=ki.atob||(e=>ki.Buffer.from(e,"base64").toString("binary"));function FU(e){const t=WU(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const HU=ki.btoa||(e=>ki.Buffer.from(e,"binary").toString("base64"));function zU(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return HU(t.join(""))}const ad={submitter:""},Fh={encode(e,t=l.Writer.create()){return e.submitter!==""&&t.uint32(10).string(e.submitter),e.evidence!==void 0&&Xo.encode(e.evidence,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ad);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.submitter=n.string();break;case 2:i.evidence=Xo.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ad);return e.submitter!==void 0&&e.submitter!==null?t.submitter=String(e.submitter):t.submitter="",e.evidence!==void 0&&e.evidence!==null?t.evidence=Xo.fromJSON(e.evidence):t.evidence=void 0,t},toJSON(e){const t={};return e.submitter!==void 0&&(t.submitter=e.submitter),e.evidence!==void 0&&(t.evidence=e.evidence?Xo.toJSON(e.evidence):void 0),t},fromPartial(e){const t=r({},ad);return e.submitter!==void 0&&e.submitter!==null?t.submitter=e.submitter:t.submitter="",e.evidence!==void 0&&e.evidence!==null?t.evidence=Xo.fromPartial(e.evidence):t.evidence=void 0,t}};var Pi=(()=>{if(typeof Pi!="undefined")return Pi;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();Pi.atob;Pi.btoa;const YU=[["/cosmos.evidence.v1beta1.MsgSubmitEvidence",Fh]],dd=new Error("wallet is required"),ld=new Y.Registry(YU),XU={amount:[],gas:"200000"},KU=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw dd;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:ld}):n=await J.SigningStargateClient.offline(e,{registry:ld});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:XU,memo:""})=>n.signAndBroadcast(s,i,o,d),msgSubmitEvidence:i=>({typeUrl:"/cosmos.evidence.v1beta1.MsgSubmitEvidence",value:Fh.fromPartial(i)})}},ZU=async({addr:e}={addr:"http://localhost:1317"})=>new VU({baseUrl:e}),ud={seconds:0,nanos:0},cd={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ud);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=jU(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ud);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},ud);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var pd=(()=>{if(typeof pd!="undefined")return pd;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function jU(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new pd.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const fd={height:0,power:0,consensus_address:""},e$={encode(e,t=l.Writer.create()){return e.height!==0&&t.uint32(8).int64(e.height),e.time!==void 0&&cd.encode(t$(e.time),t.uint32(18).fork()).ldelim(),e.power!==0&&t.uint32(24).int64(e.power),e.consensus_address!==""&&t.uint32(34).string(e.consensus_address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},fd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.height=zh(n.int64());break;case 2:i.time=Hh(cd.decode(n,n.uint32()));break;case 3:i.power=zh(n.int64());break;case 4:i.consensus_address=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},fd);return e.height!==void 0&&e.height!==null?t.height=Number(e.height):t.height=0,e.time!==void 0&&e.time!==null?t.time=n$(e.time):t.time=void 0,e.power!==void 0&&e.power!==null?t.power=Number(e.power):t.power=0,e.consensus_address!==void 0&&e.consensus_address!==null?t.consensus_address=String(e.consensus_address):t.consensus_address="",t},toJSON(e){const t={};return e.height!==void 0&&(t.height=e.height),e.time!==void 0&&(t.time=e.time!==void 0?e.time.toISOString():null),e.power!==void 0&&(t.power=e.power),e.consensus_address!==void 0&&(t.consensus_address=e.consensus_address),t},fromPartial(e){const t=r({},fd);return e.height!==void 0&&e.height!==null?t.height=e.height:t.height=0,e.time!==void 0&&e.time!==null?t.time=e.time:t.time=void 0,e.power!==void 0&&e.power!==null?t.power=e.power:t.power=0,e.consensus_address!==void 0&&e.consensus_address!==null?t.consensus_address=e.consensus_address:t.consensus_address="",t}};var md=(()=>{if(typeof md!="undefined")return md;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function t$(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function Hh(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function n$(e){return e instanceof Date?e:typeof e=="string"?new Date(e):Hh(cd.fromJSON(e))}function zh(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new md.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());async function Yh(e){return await KU(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function Xh(e){return await ZU({addr:e["common/env/apiCosmos"]})}function i$(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function o$(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const Kh=()=>({Evidence:{},AllEvidence:{},_Structure:{Equivocation:o$(e$.fromPartial({}))},_Registry:ld,_Subscriptions:new Set}),s$=Kh();var r$={namespaced:!0,state:s$,mutations:{RESET_STATE(e){Object.assign(e,Kh())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getEvidence:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Evidence[JSON.stringify(t)])!=null?n:{}},getAllEvidence:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.AllEvidence[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.evidence.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryEvidence({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Xh(t)).queryEvidence(a.evidence_hash)).data;return e("QUERY",{query:"Evidence",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryEvidence",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getEvidence({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryEvidence API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryAllEvidence({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Xh(t);let u=(await p.queryAllEvidence(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryAllEvidence(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=i$(u,g)}return e("QUERY",{query:"AllEvidence",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAllEvidence",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAllEvidence({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAllEvidence API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgSubmitEvidence({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Yh(e),d=await o.msgSubmitEvidence(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==dd?new Error("TxClient:MsgSubmitEvidence:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSubmitEvidence:Send Could not broadcast Tx: "+o.message)}},async MsgSubmitEvidence({rootGetters:e},{value:t}){try{return await(await Yh(e)).msgSubmitEvidence(t)}catch(n){throw n==dd?new Error("TxClient:MsgSubmitEvidence:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSubmitEvidence:Create Could not create message: "+n.message)}}}},bn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(bn||(bn={}));class a${constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[bn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[bn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[bn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||bn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==bn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class d$ extends a${constructor(){super(...arguments);this.queryAllowance=(t,n,s={})=>this.request(r({path:`/cosmos/feegrant/v1beta1/allowance/${t}/${n}`,method:"GET",format:"json"},s)),this.queryAllowances=(t,n,s={})=>this.request(r({path:`/cosmos/feegrant/v1beta1/allowances/${t}`,method:"GET",query:n,format:"json"},s)),this.queryAllowancesByGranter=(t,n,s={})=>this.request(r({path:`/cosmos/feegrant/v1beta1/issued/${t}`,method:"GET",query:n,format:"json"},s))}}const hd={type_url:""},Ne={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},hd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},hd);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=u$(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=p$(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},hd);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var Ci=(()=>{if(typeof Ci!="undefined")return Ci;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const l$=Ci.atob||(e=>Ci.Buffer.from(e,"base64").toString("binary"));function u$(e){const t=l$(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const c$=Ci.btoa||(e=>Ci.Buffer.from(e,"binary").toString("base64"));function p$(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return c$(t.join(""))}const gd={granter:"",grantee:""},Zh={encode(e,t=l.Writer.create()){return e.granter!==""&&t.uint32(10).string(e.granter),e.grantee!==""&&t.uint32(18).string(e.grantee),e.allowance!==void 0&&Ne.encode(e.allowance,t.uint32(26).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},gd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.granter=n.string();break;case 2:i.grantee=n.string();break;case 3:i.allowance=Ne.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},gd);return e.granter!==void 0&&e.granter!==null?t.granter=String(e.granter):t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=String(e.grantee):t.grantee="",e.allowance!==void 0&&e.allowance!==null?t.allowance=Ne.fromJSON(e.allowance):t.allowance=void 0,t},toJSON(e){const t={};return e.granter!==void 0&&(t.granter=e.granter),e.grantee!==void 0&&(t.grantee=e.grantee),e.allowance!==void 0&&(t.allowance=e.allowance?Ne.toJSON(e.allowance):void 0),t},fromPartial(e){const t=r({},gd);return e.granter!==void 0&&e.granter!==null?t.granter=e.granter:t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=e.grantee:t.grantee="",e.allowance!==void 0&&e.allowance!==null?t.allowance=Ne.fromPartial(e.allowance):t.allowance=void 0,t}},yd={granter:"",grantee:""},jh={encode(e,t=l.Writer.create()){return e.granter!==""&&t.uint32(10).string(e.granter),e.grantee!==""&&t.uint32(18).string(e.grantee),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},yd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.granter=n.string();break;case 2:i.grantee=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},yd);return e.granter!==void 0&&e.granter!==null?t.granter=String(e.granter):t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=String(e.grantee):t.grantee="",t},toJSON(e){const t={};return e.granter!==void 0&&(t.granter=e.granter),e.grantee!==void 0&&(t.grantee=e.grantee),t},fromPartial(e){const t=r({},yd);return e.granter!==void 0&&e.granter!==null?t.granter=e.granter:t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=e.grantee:t.grantee="",t}},f$=[["/cosmos.feegrant.v1beta1.MsgGrantAllowance",Zh],["/cosmos.feegrant.v1beta1.MsgRevokeAllowance",jh]],Ko=new Error("wallet is required"),_d=new Y.Registry(f$),m$={amount:[],gas:"200000"},h$=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw Ko;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:_d}):n=await J.SigningStargateClient.offline(e,{registry:_d});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:m$,memo:""})=>n.signAndBroadcast(s,i,o,d),msgGrantAllowance:i=>({typeUrl:"/cosmos.feegrant.v1beta1.MsgGrantAllowance",value:Zh.fromPartial(i)}),msgRevokeAllowance:i=>({typeUrl:"/cosmos.feegrant.v1beta1.MsgRevokeAllowance",value:jh.fromPartial(i)})}},g$=async({addr:e}={addr:"http://localhost:1317"})=>new d$({baseUrl:e}),vd={seconds:0,nanos:0},Zo={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},vd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=y$(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},vd);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},vd);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var bd=(()=>{if(typeof bd!="undefined")return bd;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function y$(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new bd.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const wd={denom:"",amount:""},Ae={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},wd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},wd);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},wd);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}},Sd={seconds:0,nanos:0},jo={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Sd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=_$(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Sd);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},Sd);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var kd=(()=>{if(typeof kd!="undefined")return kd;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function _$(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new kd.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Pd={},Ri={encode(e,t=l.Writer.create()){for(const n of e.spend_limit)Ae.encode(n,t.uint32(10).fork()).ldelim();return e.expiration!==void 0&&Zo.encode(eg(e.expiration),t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Pd);for(i.spend_limit=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.spend_limit.push(Ae.decode(n,n.uint32()));break;case 2:i.expiration=Td(Zo.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Pd);if(t.spend_limit=[],e.spend_limit!==void 0&&e.spend_limit!==null)for(const n of e.spend_limit)t.spend_limit.push(Ae.fromJSON(n));return e.expiration!==void 0&&e.expiration!==null?t.expiration=tg(e.expiration):t.expiration=void 0,t},toJSON(e){const t={};return e.spend_limit?t.spend_limit=e.spend_limit.map(n=>n?Ae.toJSON(n):void 0):t.spend_limit=[],e.expiration!==void 0&&(t.expiration=e.expiration!==void 0?e.expiration.toISOString():null),t},fromPartial(e){const t=r({},Pd);if(t.spend_limit=[],e.spend_limit!==void 0&&e.spend_limit!==null)for(const n of e.spend_limit)t.spend_limit.push(Ae.fromPartial(n));return e.expiration!==void 0&&e.expiration!==null?t.expiration=e.expiration:t.expiration=void 0,t}},Cd={},v$={encode(e,t=l.Writer.create()){e.basic!==void 0&&Ri.encode(e.basic,t.uint32(10).fork()).ldelim(),e.period!==void 0&&jo.encode(e.period,t.uint32(18).fork()).ldelim();for(const n of e.period_spend_limit)Ae.encode(n,t.uint32(26).fork()).ldelim();for(const n of e.period_can_spend)Ae.encode(n,t.uint32(34).fork()).ldelim();return e.period_reset!==void 0&&Zo.encode(eg(e.period_reset),t.uint32(42).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Cd);for(i.period_spend_limit=[],i.period_can_spend=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.basic=Ri.decode(n,n.uint32());break;case 2:i.period=jo.decode(n,n.uint32());break;case 3:i.period_spend_limit.push(Ae.decode(n,n.uint32()));break;case 4:i.period_can_spend.push(Ae.decode(n,n.uint32()));break;case 5:i.period_reset=Td(Zo.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Cd);if(t.period_spend_limit=[],t.period_can_spend=[],e.basic!==void 0&&e.basic!==null?t.basic=Ri.fromJSON(e.basic):t.basic=void 0,e.period!==void 0&&e.period!==null?t.period=jo.fromJSON(e.period):t.period=void 0,e.period_spend_limit!==void 0&&e.period_spend_limit!==null)for(const n of e.period_spend_limit)t.period_spend_limit.push(Ae.fromJSON(n));if(e.period_can_spend!==void 0&&e.period_can_spend!==null)for(const n of e.period_can_spend)t.period_can_spend.push(Ae.fromJSON(n));return e.period_reset!==void 0&&e.period_reset!==null?t.period_reset=tg(e.period_reset):t.period_reset=void 0,t},toJSON(e){const t={};return e.basic!==void 0&&(t.basic=e.basic?Ri.toJSON(e.basic):void 0),e.period!==void 0&&(t.period=e.period?jo.toJSON(e.period):void 0),e.period_spend_limit?t.period_spend_limit=e.period_spend_limit.map(n=>n?Ae.toJSON(n):void 0):t.period_spend_limit=[],e.period_can_spend?t.period_can_spend=e.period_can_spend.map(n=>n?Ae.toJSON(n):void 0):t.period_can_spend=[],e.period_reset!==void 0&&(t.period_reset=e.period_reset!==void 0?e.period_reset.toISOString():null),t},fromPartial(e){const t=r({},Cd);if(t.period_spend_limit=[],t.period_can_spend=[],e.basic!==void 0&&e.basic!==null?t.basic=Ri.fromPartial(e.basic):t.basic=void 0,e.period!==void 0&&e.period!==null?t.period=jo.fromPartial(e.period):t.period=void 0,e.period_spend_limit!==void 0&&e.period_spend_limit!==null)for(const n of e.period_spend_limit)t.period_spend_limit.push(Ae.fromPartial(n));if(e.period_can_spend!==void 0&&e.period_can_spend!==null)for(const n of e.period_can_spend)t.period_can_spend.push(Ae.fromPartial(n));return e.period_reset!==void 0&&e.period_reset!==null?t.period_reset=e.period_reset:t.period_reset=void 0,t}},Rd={allowed_messages:""},b$={encode(e,t=l.Writer.create()){e.allowance!==void 0&&Ne.encode(e.allowance,t.uint32(10).fork()).ldelim();for(const n of e.allowed_messages)t.uint32(18).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Rd);for(i.allowed_messages=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.allowance=Ne.decode(n,n.uint32());break;case 2:i.allowed_messages.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Rd);if(t.allowed_messages=[],e.allowance!==void 0&&e.allowance!==null?t.allowance=Ne.fromJSON(e.allowance):t.allowance=void 0,e.allowed_messages!==void 0&&e.allowed_messages!==null)for(const n of e.allowed_messages)t.allowed_messages.push(String(n));return t},toJSON(e){const t={};return e.allowance!==void 0&&(t.allowance=e.allowance?Ne.toJSON(e.allowance):void 0),e.allowed_messages?t.allowed_messages=e.allowed_messages.map(n=>n):t.allowed_messages=[],t},fromPartial(e){const t=r({},Rd);if(t.allowed_messages=[],e.allowance!==void 0&&e.allowance!==null?t.allowance=Ne.fromPartial(e.allowance):t.allowance=void 0,e.allowed_messages!==void 0&&e.allowed_messages!==null)for(const n of e.allowed_messages)t.allowed_messages.push(n);return t}},Ed={granter:"",grantee:""},w$={encode(e,t=l.Writer.create()){return e.granter!==""&&t.uint32(10).string(e.granter),e.grantee!==""&&t.uint32(18).string(e.grantee),e.allowance!==void 0&&Ne.encode(e.allowance,t.uint32(26).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ed);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.granter=n.string();break;case 2:i.grantee=n.string();break;case 3:i.allowance=Ne.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ed);return e.granter!==void 0&&e.granter!==null?t.granter=String(e.granter):t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=String(e.grantee):t.grantee="",e.allowance!==void 0&&e.allowance!==null?t.allowance=Ne.fromJSON(e.allowance):t.allowance=void 0,t},toJSON(e){const t={};return e.granter!==void 0&&(t.granter=e.granter),e.grantee!==void 0&&(t.grantee=e.grantee),e.allowance!==void 0&&(t.allowance=e.allowance?Ne.toJSON(e.allowance):void 0),t},fromPartial(e){const t=r({},Ed);return e.granter!==void 0&&e.granter!==null?t.granter=e.granter:t.granter="",e.grantee!==void 0&&e.grantee!==null?t.grantee=e.grantee:t.grantee="",e.allowance!==void 0&&e.allowance!==null?t.allowance=Ne.fromPartial(e.allowance):t.allowance=void 0,t}};function eg(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function Td(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function tg(e){return e instanceof Date?e:typeof e=="string"?new Date(e):Td(Zo.fromJSON(e))}async function Ds(e){return await h$(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function Nd(e){return await g$({addr:e["common/env/apiCosmos"]})}function ng(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function Qs(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const ig=()=>({Allowance:{},Allowances:{},AllowancesByGranter:{},_Structure:{BasicAllowance:Qs(Ri.fromPartial({})),PeriodicAllowance:Qs(v$.fromPartial({})),AllowedMsgAllowance:Qs(b$.fromPartial({})),Grant:Qs(w$.fromPartial({}))},_Registry:_d,_Subscriptions:new Set}),S$=ig();var k$={namespaced:!0,state:S$,mutations:{RESET_STATE(e){Object.assign(e,ig())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getAllowance:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Allowance[JSON.stringify(t)])!=null?n:{}},getAllowances:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Allowances[JSON.stringify(t)])!=null?n:{}},getAllowancesByGranter:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.AllowancesByGranter[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.feegrant.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryAllowance({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nd(t)).queryAllowance(a.granter,a.grantee)).data;return e("QUERY",{query:"Allowance",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAllowance",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAllowance({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAllowance API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryAllowances({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Nd(t);let u=(await p.queryAllowances(a.grantee,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryAllowances(a.grantee,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=ng(u,g)}return e("QUERY",{query:"Allowances",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAllowances",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAllowances({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAllowances API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryAllowancesByGranter({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Nd(t);let u=(await p.queryAllowancesByGranter(a.granter,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryAllowancesByGranter(a.granter,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=ng(u,g)}return e("QUERY",{query:"AllowancesByGranter",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAllowancesByGranter",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAllowancesByGranter({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAllowancesByGranter API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgGrantAllowance({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Ds(e),d=await o.msgGrantAllowance(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Ko?new Error("TxClient:MsgGrantAllowance:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgGrantAllowance:Send Could not broadcast Tx: "+o.message)}},async sendMsgRevokeAllowance({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Ds(e),d=await o.msgRevokeAllowance(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Ko?new Error("TxClient:MsgRevokeAllowance:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgRevokeAllowance:Send Could not broadcast Tx: "+o.message)}},async MsgGrantAllowance({rootGetters:e},{value:t}){try{return await(await Ds(e)).msgGrantAllowance(t)}catch(n){throw n==Ko?new Error("TxClient:MsgGrantAllowance:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgGrantAllowance:Create Could not create message: "+n.message)}},async MsgRevokeAllowance({rootGetters:e},{value:t}){try{return await(await Ds(e)).msgRevokeAllowance(t)}catch(n){throw n==Ko?new Error("TxClient:MsgRevokeAllowance:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgRevokeAllowance:Create Could not create message: "+n.message)}}}},og;(function(e){e.PROPOSAL_STATUS_UNSPECIFIED="PROPOSAL_STATUS_UNSPECIFIED",e.PROPOSAL_STATUS_DEPOSIT_PERIOD="PROPOSAL_STATUS_DEPOSIT_PERIOD",e.PROPOSAL_STATUS_VOTING_PERIOD="PROPOSAL_STATUS_VOTING_PERIOD",e.PROPOSAL_STATUS_PASSED="PROPOSAL_STATUS_PASSED",e.PROPOSAL_STATUS_REJECTED="PROPOSAL_STATUS_REJECTED",e.PROPOSAL_STATUS_FAILED="PROPOSAL_STATUS_FAILED"})(og||(og={}));var sg;(function(e){e.VOTE_OPTION_UNSPECIFIED="VOTE_OPTION_UNSPECIFIED",e.VOTE_OPTION_YES="VOTE_OPTION_YES",e.VOTE_OPTION_ABSTAIN="VOTE_OPTION_ABSTAIN",e.VOTE_OPTION_NO="VOTE_OPTION_NO",e.VOTE_OPTION_NO_WITH_VETO="VOTE_OPTION_NO_WITH_VETO"})(sg||(sg={}));var wn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(wn||(wn={}));class P${constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[wn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[wn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[wn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||wn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==wn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class C$ extends P${constructor(){super(...arguments);this.queryParams=(t,n={})=>this.request(r({path:`/cosmos/gov/v1/params/${t}`,method:"GET",format:"json"},n)),this.queryProposals=(t,n={})=>this.request(r({path:"/cosmos/gov/v1/proposals",method:"GET",query:t,format:"json"},n)),this.queryProposal=(t,n={})=>this.request(r({path:`/cosmos/gov/v1/proposals/${t}`,method:"GET",format:"json"},n)),this.queryDeposits=(t,n,s={})=>this.request(r({path:`/cosmos/gov/v1/proposals/${t}/deposits`,method:"GET",query:n,format:"json"},s)),this.queryDeposit=(t,n,s={})=>this.request(r({path:`/cosmos/gov/v1/proposals/${t}/deposits/${n}`,method:"GET",format:"json"},s)),this.queryTallyResult=(t,n={})=>this.request(r({path:`/cosmos/gov/v1/proposals/${t}/tally`,method:"GET",format:"json"},n)),this.queryVotes=(t,n,s={})=>this.request(r({path:`/cosmos/gov/v1/proposals/${t}/votes`,method:"GET",query:n,format:"json"},s)),this.queryVote=(t,n,s={})=>this.request(r({path:`/cosmos/gov/v1/proposals/${t}/votes/${n}`,method:"GET",format:"json"},s))}}const Ad={seconds:0,nanos:0},At={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ad);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=R$(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ad);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},Ad);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var Od=(()=>{if(typeof Od!="undefined")return Od;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function R$(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Od.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const qd={denom:"",amount:""},j={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},qd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},qd);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},qd);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}},Ud={type_url:""},_t={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ud);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ud);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=T$(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=A$(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},Ud);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var Ei=(()=>{if(typeof Ei!="undefined")return Ei;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const E$=Ei.atob||(e=>Ei.Buffer.from(e,"base64").toString("binary"));function T$(e){const t=E$(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const N$=Ei.btoa||(e=>Ei.Buffer.from(e,"binary").toString("base64"));function A$(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return N$(t.join(""))}const $d={seconds:0,nanos:0},vt={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},$d);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=O$(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},$d);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},$d);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var Id=(()=>{if(typeof Id!="undefined")return Id;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function O$(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Id.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());var rg;(function(e){e[e.VOTE_OPTION_UNSPECIFIED=0]="VOTE_OPTION_UNSPECIFIED",e[e.VOTE_OPTION_YES=1]="VOTE_OPTION_YES",e[e.VOTE_OPTION_ABSTAIN=2]="VOTE_OPTION_ABSTAIN",e[e.VOTE_OPTION_NO=3]="VOTE_OPTION_NO",e[e.VOTE_OPTION_NO_WITH_VETO=4]="VOTE_OPTION_NO_WITH_VETO",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(rg||(rg={}));function ag(e){switch(e){case 0:case"VOTE_OPTION_UNSPECIFIED":return 0;case 1:case"VOTE_OPTION_YES":return 1;case 2:case"VOTE_OPTION_ABSTAIN":return 2;case 3:case"VOTE_OPTION_NO":return 3;case 4:case"VOTE_OPTION_NO_WITH_VETO":return 4;case-1:case"UNRECOGNIZED":default:return-1}}function dg(e){switch(e){case 0:return"VOTE_OPTION_UNSPECIFIED";case 1:return"VOTE_OPTION_YES";case 2:return"VOTE_OPTION_ABSTAIN";case 3:return"VOTE_OPTION_NO";case 4:return"VOTE_OPTION_NO_WITH_VETO";default:return"UNKNOWN"}}var lg;(function(e){e[e.PROPOSAL_STATUS_UNSPECIFIED=0]="PROPOSAL_STATUS_UNSPECIFIED",e[e.PROPOSAL_STATUS_DEPOSIT_PERIOD=1]="PROPOSAL_STATUS_DEPOSIT_PERIOD",e[e.PROPOSAL_STATUS_VOTING_PERIOD=2]="PROPOSAL_STATUS_VOTING_PERIOD",e[e.PROPOSAL_STATUS_PASSED=3]="PROPOSAL_STATUS_PASSED",e[e.PROPOSAL_STATUS_REJECTED=4]="PROPOSAL_STATUS_REJECTED",e[e.PROPOSAL_STATUS_FAILED=5]="PROPOSAL_STATUS_FAILED",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(lg||(lg={}));function q$(e){switch(e){case 0:case"PROPOSAL_STATUS_UNSPECIFIED":return 0;case 1:case"PROPOSAL_STATUS_DEPOSIT_PERIOD":return 1;case 2:case"PROPOSAL_STATUS_VOTING_PERIOD":return 2;case 3:case"PROPOSAL_STATUS_PASSED":return 3;case 4:case"PROPOSAL_STATUS_REJECTED":return 4;case 5:case"PROPOSAL_STATUS_FAILED":return 5;case-1:case"UNRECOGNIZED":default:return-1}}function U$(e){switch(e){case 0:return"PROPOSAL_STATUS_UNSPECIFIED";case 1:return"PROPOSAL_STATUS_DEPOSIT_PERIOD";case 2:return"PROPOSAL_STATUS_VOTING_PERIOD";case 3:return"PROPOSAL_STATUS_PASSED";case 4:return"PROPOSAL_STATUS_REJECTED";case 5:return"PROPOSAL_STATUS_FAILED";default:return"UNKNOWN"}}const xd={option:0,weight:""},Ye={encode(e,t=l.Writer.create()){return e.option!==0&&t.uint32(8).int32(e.option),e.weight!==""&&t.uint32(18).string(e.weight),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},xd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.option=n.int32();break;case 2:i.weight=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},xd);return e.option!==void 0&&e.option!==null?t.option=ag(e.option):t.option=0,e.weight!==void 0&&e.weight!==null?t.weight=String(e.weight):t.weight="",t},toJSON(e){const t={};return e.option!==void 0&&(t.option=dg(e.option)),e.weight!==void 0&&(t.weight=e.weight),t},fromPartial(e){const t=r({},xd);return e.option!==void 0&&e.option!==null?t.option=e.option:t.option=0,e.weight!==void 0&&e.weight!==null?t.weight=e.weight:t.weight="",t}},Dd={proposal_id:0,depositor:""},$$={encode(e,t=l.Writer.create()){e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.depositor!==""&&t.uint32(18).string(e.depositor);for(const n of e.amount)j.encode(n,t.uint32(26).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Dd);for(i.amount=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Wd(n.uint64());break;case 2:i.depositor=n.string();break;case 3:i.amount.push(j.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Dd);if(t.amount=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.depositor!==void 0&&e.depositor!==null?t.depositor=String(e.depositor):t.depositor="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(j.fromJSON(n));return t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.depositor!==void 0&&(t.depositor=e.depositor),e.amount?t.amount=e.amount.map(n=>n?j.toJSON(n):void 0):t.amount=[],t},fromPartial(e){const t=r({},Dd);if(t.amount=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.depositor!==void 0&&e.depositor!==null?t.depositor=e.depositor:t.depositor="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(j.fromPartial(n));return t}},Qd={id:0,status:0,metadata:""},I$={encode(e,t=l.Writer.create()){e.id!==0&&t.uint32(8).uint64(e.id);for(const n of e.messages)_t.encode(n,t.uint32(18).fork()).ldelim();e.status!==0&&t.uint32(24).int32(e.status),e.final_tally_result!==void 0&&Ti.encode(e.final_tally_result,t.uint32(34).fork()).ldelim(),e.submit_time!==void 0&&At.encode(Ms(e.submit_time),t.uint32(42).fork()).ldelim(),e.deposit_end_time!==void 0&&At.encode(Ms(e.deposit_end_time),t.uint32(50).fork()).ldelim();for(const n of e.total_deposit)j.encode(n,t.uint32(58).fork()).ldelim();return e.voting_start_time!==void 0&&At.encode(Ms(e.voting_start_time),t.uint32(66).fork()).ldelim(),e.voting_end_time!==void 0&&At.encode(Ms(e.voting_end_time),t.uint32(74).fork()).ldelim(),e.metadata!==""&&t.uint32(82).string(e.metadata),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Qd);for(i.messages=[],i.total_deposit=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.id=Wd(n.uint64());break;case 2:i.messages.push(_t.decode(n,n.uint32()));break;case 3:i.status=n.int32();break;case 4:i.final_tally_result=Ti.decode(n,n.uint32());break;case 5:i.submit_time=es(At.decode(n,n.uint32()));break;case 6:i.deposit_end_time=es(At.decode(n,n.uint32()));break;case 7:i.total_deposit.push(j.decode(n,n.uint32()));break;case 8:i.voting_start_time=es(At.decode(n,n.uint32()));break;case 9:i.voting_end_time=es(At.decode(n,n.uint32()));break;case 10:i.metadata=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Qd);if(t.messages=[],t.total_deposit=[],e.id!==void 0&&e.id!==null?t.id=Number(e.id):t.id=0,e.messages!==void 0&&e.messages!==null)for(const n of e.messages)t.messages.push(_t.fromJSON(n));if(e.status!==void 0&&e.status!==null?t.status=q$(e.status):t.status=0,e.final_tally_result!==void 0&&e.final_tally_result!==null?t.final_tally_result=Ti.fromJSON(e.final_tally_result):t.final_tally_result=void 0,e.submit_time!==void 0&&e.submit_time!==null?t.submit_time=Bs(e.submit_time):t.submit_time=void 0,e.deposit_end_time!==void 0&&e.deposit_end_time!==null?t.deposit_end_time=Bs(e.deposit_end_time):t.deposit_end_time=void 0,e.total_deposit!==void 0&&e.total_deposit!==null)for(const n of e.total_deposit)t.total_deposit.push(j.fromJSON(n));return e.voting_start_time!==void 0&&e.voting_start_time!==null?t.voting_start_time=Bs(e.voting_start_time):t.voting_start_time=void 0,e.voting_end_time!==void 0&&e.voting_end_time!==null?t.voting_end_time=Bs(e.voting_end_time):t.voting_end_time=void 0,e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",t},toJSON(e){const t={};return e.id!==void 0&&(t.id=e.id),e.messages?t.messages=e.messages.map(n=>n?_t.toJSON(n):void 0):t.messages=[],e.status!==void 0&&(t.status=U$(e.status)),e.final_tally_result!==void 0&&(t.final_tally_result=e.final_tally_result?Ti.toJSON(e.final_tally_result):void 0),e.submit_time!==void 0&&(t.submit_time=e.submit_time!==void 0?e.submit_time.toISOString():null),e.deposit_end_time!==void 0&&(t.deposit_end_time=e.deposit_end_time!==void 0?e.deposit_end_time.toISOString():null),e.total_deposit?t.total_deposit=e.total_deposit.map(n=>n?j.toJSON(n):void 0):t.total_deposit=[],e.voting_start_time!==void 0&&(t.voting_start_time=e.voting_start_time!==void 0?e.voting_start_time.toISOString():null),e.voting_end_time!==void 0&&(t.voting_end_time=e.voting_end_time!==void 0?e.voting_end_time.toISOString():null),e.metadata!==void 0&&(t.metadata=e.metadata),t},fromPartial(e){const t=r({},Qd);if(t.messages=[],t.total_deposit=[],e.id!==void 0&&e.id!==null?t.id=e.id:t.id=0,e.messages!==void 0&&e.messages!==null)for(const n of e.messages)t.messages.push(_t.fromPartial(n));if(e.status!==void 0&&e.status!==null?t.status=e.status:t.status=0,e.final_tally_result!==void 0&&e.final_tally_result!==null?t.final_tally_result=Ti.fromPartial(e.final_tally_result):t.final_tally_result=void 0,e.submit_time!==void 0&&e.submit_time!==null?t.submit_time=e.submit_time:t.submit_time=void 0,e.deposit_end_time!==void 0&&e.deposit_end_time!==null?t.deposit_end_time=e.deposit_end_time:t.deposit_end_time=void 0,e.total_deposit!==void 0&&e.total_deposit!==null)for(const n of e.total_deposit)t.total_deposit.push(j.fromPartial(n));return e.voting_start_time!==void 0&&e.voting_start_time!==null?t.voting_start_time=e.voting_start_time:t.voting_start_time=void 0,e.voting_end_time!==void 0&&e.voting_end_time!==null?t.voting_end_time=e.voting_end_time:t.voting_end_time=void 0,e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",t}},Md={yes_count:"",abstain_count:"",no_count:"",no_with_veto_count:""},Ti={encode(e,t=l.Writer.create()){return e.yes_count!==""&&t.uint32(10).string(e.yes_count),e.abstain_count!==""&&t.uint32(18).string(e.abstain_count),e.no_count!==""&&t.uint32(26).string(e.no_count),e.no_with_veto_count!==""&&t.uint32(34).string(e.no_with_veto_count),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Md);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.yes_count=n.string();break;case 2:i.abstain_count=n.string();break;case 3:i.no_count=n.string();break;case 4:i.no_with_veto_count=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Md);return e.yes_count!==void 0&&e.yes_count!==null?t.yes_count=String(e.yes_count):t.yes_count="",e.abstain_count!==void 0&&e.abstain_count!==null?t.abstain_count=String(e.abstain_count):t.abstain_count="",e.no_count!==void 0&&e.no_count!==null?t.no_count=String(e.no_count):t.no_count="",e.no_with_veto_count!==void 0&&e.no_with_veto_count!==null?t.no_with_veto_count=String(e.no_with_veto_count):t.no_with_veto_count="",t},toJSON(e){const t={};return e.yes_count!==void 0&&(t.yes_count=e.yes_count),e.abstain_count!==void 0&&(t.abstain_count=e.abstain_count),e.no_count!==void 0&&(t.no_count=e.no_count),e.no_with_veto_count!==void 0&&(t.no_with_veto_count=e.no_with_veto_count),t},fromPartial(e){const t=r({},Md);return e.yes_count!==void 0&&e.yes_count!==null?t.yes_count=e.yes_count:t.yes_count="",e.abstain_count!==void 0&&e.abstain_count!==null?t.abstain_count=e.abstain_count:t.abstain_count="",e.no_count!==void 0&&e.no_count!==null?t.no_count=e.no_count:t.no_count="",e.no_with_veto_count!==void 0&&e.no_with_veto_count!==null?t.no_with_veto_count=e.no_with_veto_count:t.no_with_veto_count="",t}},Bd={proposal_id:0,voter:"",metadata:""},x$={encode(e,t=l.Writer.create()){e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.voter!==""&&t.uint32(18).string(e.voter);for(const n of e.options)Ye.encode(n,t.uint32(34).fork()).ldelim();return e.metadata!==""&&t.uint32(42).string(e.metadata),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Bd);for(i.options=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Wd(n.uint64());break;case 2:i.voter=n.string();break;case 4:i.options.push(Ye.decode(n,n.uint32()));break;case 5:i.metadata=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Bd);if(t.options=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=String(e.voter):t.voter="",e.options!==void 0&&e.options!==null)for(const n of e.options)t.options.push(Ye.fromJSON(n));return e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.voter!==void 0&&(t.voter=e.voter),e.options?t.options=e.options.map(n=>n?Ye.toJSON(n):void 0):t.options=[],e.metadata!==void 0&&(t.metadata=e.metadata),t},fromPartial(e){const t=r({},Bd);if(t.options=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=e.voter:t.voter="",e.options!==void 0&&e.options!==null)for(const n of e.options)t.options.push(Ye.fromPartial(n));return e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",t}},Jd={},D$={encode(e,t=l.Writer.create()){for(const n of e.min_deposit)j.encode(n,t.uint32(10).fork()).ldelim();return e.max_deposit_period!==void 0&&vt.encode(e.max_deposit_period,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Jd);for(i.min_deposit=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.min_deposit.push(j.decode(n,n.uint32()));break;case 2:i.max_deposit_period=vt.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Jd);if(t.min_deposit=[],e.min_deposit!==void 0&&e.min_deposit!==null)for(const n of e.min_deposit)t.min_deposit.push(j.fromJSON(n));return e.max_deposit_period!==void 0&&e.max_deposit_period!==null?t.max_deposit_period=vt.fromJSON(e.max_deposit_period):t.max_deposit_period=void 0,t},toJSON(e){const t={};return e.min_deposit?t.min_deposit=e.min_deposit.map(n=>n?j.toJSON(n):void 0):t.min_deposit=[],e.max_deposit_period!==void 0&&(t.max_deposit_period=e.max_deposit_period?vt.toJSON(e.max_deposit_period):void 0),t},fromPartial(e){const t=r({},Jd);if(t.min_deposit=[],e.min_deposit!==void 0&&e.min_deposit!==null)for(const n of e.min_deposit)t.min_deposit.push(j.fromPartial(n));return e.max_deposit_period!==void 0&&e.max_deposit_period!==null?t.max_deposit_period=vt.fromPartial(e.max_deposit_period):t.max_deposit_period=void 0,t}},Gd={},Q$={encode(e,t=l.Writer.create()){return e.voting_period!==void 0&&vt.encode(e.voting_period,t.uint32(10).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Gd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.voting_period=vt.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Gd);return e.voting_period!==void 0&&e.voting_period!==null?t.voting_period=vt.fromJSON(e.voting_period):t.voting_period=void 0,t},toJSON(e){const t={};return e.voting_period!==void 0&&(t.voting_period=e.voting_period?vt.toJSON(e.voting_period):void 0),t},fromPartial(e){const t=r({},Gd);return e.voting_period!==void 0&&e.voting_period!==null?t.voting_period=vt.fromPartial(e.voting_period):t.voting_period=void 0,t}},Ld={quorum:"",threshold:"",veto_threshold:""},M$={encode(e,t=l.Writer.create()){return e.quorum!==""&&t.uint32(10).string(e.quorum),e.threshold!==""&&t.uint32(18).string(e.threshold),e.veto_threshold!==""&&t.uint32(26).string(e.veto_threshold),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ld);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.quorum=n.string();break;case 2:i.threshold=n.string();break;case 3:i.veto_threshold=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ld);return e.quorum!==void 0&&e.quorum!==null?t.quorum=String(e.quorum):t.quorum="",e.threshold!==void 0&&e.threshold!==null?t.threshold=String(e.threshold):t.threshold="",e.veto_threshold!==void 0&&e.veto_threshold!==null?t.veto_threshold=String(e.veto_threshold):t.veto_threshold="",t},toJSON(e){const t={};return e.quorum!==void 0&&(t.quorum=e.quorum),e.threshold!==void 0&&(t.threshold=e.threshold),e.veto_threshold!==void 0&&(t.veto_threshold=e.veto_threshold),t},fromPartial(e){const t=r({},Ld);return e.quorum!==void 0&&e.quorum!==null?t.quorum=e.quorum:t.quorum="",e.threshold!==void 0&&e.threshold!==null?t.threshold=e.threshold:t.threshold="",e.veto_threshold!==void 0&&e.veto_threshold!==null?t.veto_threshold=e.veto_threshold:t.veto_threshold="",t}};var Vd=(()=>{if(typeof Vd!="undefined")return Vd;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Ms(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function es(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function Bs(e){return e instanceof Date?e:typeof e=="string"?new Date(e):es(At.fromJSON(e))}function Wd(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Vd.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Fd={proposer:"",metadata:""},ug={encode(e,t=l.Writer.create()){for(const n of e.messages)_t.encode(n,t.uint32(10).fork()).ldelim();for(const n of e.initial_deposit)j.encode(n,t.uint32(18).fork()).ldelim();return e.proposer!==""&&t.uint32(26).string(e.proposer),e.metadata!==""&&t.uint32(34).string(e.metadata),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Fd);for(i.messages=[],i.initial_deposit=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.messages.push(_t.decode(n,n.uint32()));break;case 2:i.initial_deposit.push(j.decode(n,n.uint32()));break;case 3:i.proposer=n.string();break;case 4:i.metadata=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Fd);if(t.messages=[],t.initial_deposit=[],e.messages!==void 0&&e.messages!==null)for(const n of e.messages)t.messages.push(_t.fromJSON(n));if(e.initial_deposit!==void 0&&e.initial_deposit!==null)for(const n of e.initial_deposit)t.initial_deposit.push(j.fromJSON(n));return e.proposer!==void 0&&e.proposer!==null?t.proposer=String(e.proposer):t.proposer="",e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",t},toJSON(e){const t={};return e.messages?t.messages=e.messages.map(n=>n?_t.toJSON(n):void 0):t.messages=[],e.initial_deposit?t.initial_deposit=e.initial_deposit.map(n=>n?j.toJSON(n):void 0):t.initial_deposit=[],e.proposer!==void 0&&(t.proposer=e.proposer),e.metadata!==void 0&&(t.metadata=e.metadata),t},fromPartial(e){const t=r({},Fd);if(t.messages=[],t.initial_deposit=[],e.messages!==void 0&&e.messages!==null)for(const n of e.messages)t.messages.push(_t.fromPartial(n));if(e.initial_deposit!==void 0&&e.initial_deposit!==null)for(const n of e.initial_deposit)t.initial_deposit.push(j.fromPartial(n));return e.proposer!==void 0&&e.proposer!==null?t.proposer=e.proposer:t.proposer="",e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",t}},Hd={proposal_id:0,voter:"",option:0,metadata:""},cg={encode(e,t=l.Writer.create()){return e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.voter!==""&&t.uint32(18).string(e.voter),e.option!==0&&t.uint32(24).int32(e.option),e.metadata!==""&&t.uint32(34).string(e.metadata),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Hd);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Kd(n.uint64());break;case 2:i.voter=n.string();break;case 3:i.option=n.int32();break;case 4:i.metadata=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Hd);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=String(e.voter):t.voter="",e.option!==void 0&&e.option!==null?t.option=ag(e.option):t.option=0,e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.voter!==void 0&&(t.voter=e.voter),e.option!==void 0&&(t.option=dg(e.option)),e.metadata!==void 0&&(t.metadata=e.metadata),t},fromPartial(e){const t=r({},Hd);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=e.voter:t.voter="",e.option!==void 0&&e.option!==null?t.option=e.option:t.option=0,e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",t}},zd={proposal_id:0,voter:"",metadata:""},pg={encode(e,t=l.Writer.create()){e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.voter!==""&&t.uint32(18).string(e.voter);for(const n of e.options)Ye.encode(n,t.uint32(26).fork()).ldelim();return e.metadata!==""&&t.uint32(34).string(e.metadata),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},zd);for(i.options=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Kd(n.uint64());break;case 2:i.voter=n.string();break;case 3:i.options.push(Ye.decode(n,n.uint32()));break;case 4:i.metadata=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},zd);if(t.options=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=String(e.voter):t.voter="",e.options!==void 0&&e.options!==null)for(const n of e.options)t.options.push(Ye.fromJSON(n));return e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.voter!==void 0&&(t.voter=e.voter),e.options?t.options=e.options.map(n=>n?Ye.toJSON(n):void 0):t.options=[],e.metadata!==void 0&&(t.metadata=e.metadata),t},fromPartial(e){const t=r({},zd);if(t.options=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=e.voter:t.voter="",e.options!==void 0&&e.options!==null)for(const n of e.options)t.options.push(Ye.fromPartial(n));return e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",t}},Yd={proposal_id:0,depositor:""},fg={encode(e,t=l.Writer.create()){e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.depositor!==""&&t.uint32(18).string(e.depositor);for(const n of e.amount)j.encode(n,t.uint32(26).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Yd);for(i.amount=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Kd(n.uint64());break;case 2:i.depositor=n.string();break;case 3:i.amount.push(j.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Yd);if(t.amount=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.depositor!==void 0&&e.depositor!==null?t.depositor=String(e.depositor):t.depositor="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(j.fromJSON(n));return t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.depositor!==void 0&&(t.depositor=e.depositor),e.amount?t.amount=e.amount.map(n=>n?j.toJSON(n):void 0):t.amount=[],t},fromPartial(e){const t=r({},Yd);if(t.amount=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.depositor!==void 0&&e.depositor!==null?t.depositor=e.depositor:t.depositor="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(j.fromPartial(n));return t}};var Xd=(()=>{if(typeof Xd!="undefined")return Xd;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Kd(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Xd.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const B$=[["/cosmos.gov.v1.MsgDeposit",fg],["/cosmos.gov.v1.MsgVote",cg],["/cosmos.gov.v1.MsgVoteWeighted",pg],["/cosmos.gov.v1.MsgSubmitProposal",ug]],Ot=new Error("wallet is required"),Zd=new Y.Registry(B$),J$={amount:[],gas:"200000"},G$=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw Ot;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:Zd}):n=await J.SigningStargateClient.offline(e,{registry:Zd});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:J$,memo:""})=>n.signAndBroadcast(s,i,o,d),msgDeposit:i=>({typeUrl:"/cosmos.gov.v1.MsgDeposit",value:fg.fromPartial(i)}),msgVote:i=>({typeUrl:"/cosmos.gov.v1.MsgVote",value:cg.fromPartial(i)}),msgVoteWeighted:i=>({typeUrl:"/cosmos.gov.v1.MsgVoteWeighted",value:pg.fromPartial(i)}),msgSubmitProposal:i=>({typeUrl:"/cosmos.gov.v1.MsgSubmitProposal",value:ug.fromPartial(i)})}},L$=async({addr:e}={addr:"http://localhost:1317"})=>new C$({baseUrl:e});async function Wt(e){return await G$(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function Ft(e){return await L$({addr:e["common/env/apiCosmos"]})}function jd(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function Ht(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const mg=()=>({Proposal:{},Proposals:{},Vote:{},Votes:{},Params:{},Deposit:{},Deposits:{},TallyResult:{},_Structure:{WeightedVoteOption:Ht(Ye.fromPartial({})),Deposit:Ht($$.fromPartial({})),Proposal:Ht(I$.fromPartial({})),TallyResult:Ht(Ti.fromPartial({})),Vote:Ht(x$.fromPartial({})),DepositParams:Ht(D$.fromPartial({})),VotingParams:Ht(Q$.fromPartial({})),TallyParams:Ht(M$.fromPartial({}))},_Registry:Zd,_Subscriptions:new Set}),V$=mg();var W$={namespaced:!0,state:V$,mutations:{RESET_STATE(e){Object.assign(e,mg())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getProposal:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Proposal[JSON.stringify(t)])!=null?n:{}},getProposals:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Proposals[JSON.stringify(t)])!=null?n:{}},getVote:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Vote[JSON.stringify(t)])!=null?n:{}},getVotes:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Votes[JSON.stringify(t)])!=null?n:{}},getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getDeposit:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Deposit[JSON.stringify(t)])!=null?n:{}},getDeposits:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Deposits[JSON.stringify(t)])!=null?n:{}},getTallyResult:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.TallyResult[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.gov.v1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryProposal({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Ft(t)).queryProposal(a.proposal_id)).data;return e("QUERY",{query:"Proposal",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryProposal",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getProposal({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryProposal API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryProposals({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Ft(t);let u=(await p.queryProposals(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryProposals(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=jd(u,g)}return e("QUERY",{query:"Proposals",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryProposals",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getProposals({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryProposals API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryVote({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Ft(t)).queryVote(a.proposal_id,a.voter)).data;return e("QUERY",{query:"Vote",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryVote",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getVote({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryVote API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryVotes({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Ft(t);let u=(await p.queryVotes(a.proposal_id,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryVotes(a.proposal_id,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=jd(u,g)}return e("QUERY",{query:"Votes",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryVotes",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getVotes({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryVotes API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Ft(t)).queryParams(a.params_type)).data;return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDeposit({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Ft(t)).queryDeposit(a.proposal_id,a.depositor)).data;return e("QUERY",{query:"Deposit",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDeposit",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDeposit({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDeposit API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDeposits({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Ft(t);let u=(await p.queryDeposits(a.proposal_id,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryDeposits(a.proposal_id,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=jd(u,g)}return e("QUERY",{query:"Deposits",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDeposits",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDeposits({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDeposits API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryTallyResult({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Ft(t)).queryTallyResult(a.proposal_id)).data;return e("QUERY",{query:"TallyResult",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryTallyResult",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getTallyResult({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryTallyResult API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgDeposit({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Wt(e),d=await o.msgDeposit(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Ot?new Error("TxClient:MsgDeposit:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDeposit:Send Could not broadcast Tx: "+o.message)}},async sendMsgVote({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Wt(e),d=await o.msgVote(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Ot?new Error("TxClient:MsgVote:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgVote:Send Could not broadcast Tx: "+o.message)}},async sendMsgVoteWeighted({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Wt(e),d=await o.msgVoteWeighted(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Ot?new Error("TxClient:MsgVoteWeighted:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgVoteWeighted:Send Could not broadcast Tx: "+o.message)}},async sendMsgSubmitProposal({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Wt(e),d=await o.msgSubmitProposal(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Ot?new Error("TxClient:MsgSubmitProposal:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSubmitProposal:Send Could not broadcast Tx: "+o.message)}},async MsgDeposit({rootGetters:e},{value:t}){try{return await(await Wt(e)).msgDeposit(t)}catch(n){throw n==Ot?new Error("TxClient:MsgDeposit:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDeposit:Create Could not create message: "+n.message)}},async MsgVote({rootGetters:e},{value:t}){try{return await(await Wt(e)).msgVote(t)}catch(n){throw n==Ot?new Error("TxClient:MsgVote:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgVote:Create Could not create message: "+n.message)}},async MsgVoteWeighted({rootGetters:e},{value:t}){try{return await(await Wt(e)).msgVoteWeighted(t)}catch(n){throw n==Ot?new Error("TxClient:MsgVoteWeighted:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgVoteWeighted:Create Could not create message: "+n.message)}},async MsgSubmitProposal({rootGetters:e},{value:t}){try{return await(await Wt(e)).msgSubmitProposal(t)}catch(n){throw n==Ot?new Error("TxClient:MsgSubmitProposal:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSubmitProposal:Create Could not create message: "+n.message)}}}},hg;(function(e){e.PROPOSAL_STATUS_UNSPECIFIED="PROPOSAL_STATUS_UNSPECIFIED",e.PROPOSAL_STATUS_DEPOSIT_PERIOD="PROPOSAL_STATUS_DEPOSIT_PERIOD",e.PROPOSAL_STATUS_VOTING_PERIOD="PROPOSAL_STATUS_VOTING_PERIOD",e.PROPOSAL_STATUS_PASSED="PROPOSAL_STATUS_PASSED",e.PROPOSAL_STATUS_REJECTED="PROPOSAL_STATUS_REJECTED",e.PROPOSAL_STATUS_FAILED="PROPOSAL_STATUS_FAILED"})(hg||(hg={}));var gg;(function(e){e.VOTE_OPTION_UNSPECIFIED="VOTE_OPTION_UNSPECIFIED",e.VOTE_OPTION_YES="VOTE_OPTION_YES",e.VOTE_OPTION_ABSTAIN="VOTE_OPTION_ABSTAIN",e.VOTE_OPTION_NO="VOTE_OPTION_NO",e.VOTE_OPTION_NO_WITH_VETO="VOTE_OPTION_NO_WITH_VETO"})(gg||(gg={}));var Sn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Sn||(Sn={}));class F${constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[Sn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[Sn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[Sn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||Sn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==Sn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class H$ extends F${constructor(){super(...arguments);this.queryParams=(t,n={})=>this.request(r({path:`/cosmos/gov/v1beta1/params/${t}`,method:"GET",format:"json"},n)),this.queryProposals=(t,n={})=>this.request(r({path:"/cosmos/gov/v1beta1/proposals",method:"GET",query:t,format:"json"},n)),this.queryProposal=(t,n={})=>this.request(r({path:`/cosmos/gov/v1beta1/proposals/${t}`,method:"GET",format:"json"},n)),this.queryDeposits=(t,n,s={})=>this.request(r({path:`/cosmos/gov/v1beta1/proposals/${t}/deposits`,method:"GET",query:n,format:"json"},s)),this.queryDeposit=(t,n,s={})=>this.request(r({path:`/cosmos/gov/v1beta1/proposals/${t}/deposits/${n}`,method:"GET",format:"json"},s)),this.queryTallyResult=(t,n={})=>this.request(r({path:`/cosmos/gov/v1beta1/proposals/${t}/tally`,method:"GET",format:"json"},n)),this.queryVotes=(t,n,s={})=>this.request(r({path:`/cosmos/gov/v1beta1/proposals/${t}/votes`,method:"GET",query:n,format:"json"},s)),this.queryVote=(t,n,s={})=>this.request(r({path:`/cosmos/gov/v1beta1/proposals/${t}/votes/${n}`,method:"GET",format:"json"},s))}}const el={seconds:0,nanos:0},qt={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},el);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=z$(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},el);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},el);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var tl=(()=>{if(typeof tl!="undefined")return tl;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function z$(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new tl.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const nl={denom:"",amount:""},ee={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},nl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},nl);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},nl);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}},il={type_url:""},bt={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},il);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},il);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=X$(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=Z$(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},il);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var Ni=(()=>{if(typeof Ni!="undefined")return Ni;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const Y$=Ni.atob||(e=>Ni.Buffer.from(e,"base64").toString("binary"));function X$(e){const t=Y$(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const K$=Ni.btoa||(e=>Ni.Buffer.from(e,"binary").toString("base64"));function Z$(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return K$(t.join(""))}const ol={seconds:0,nanos:0},wt={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ol);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=j$(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ol);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},ol);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var sl=(()=>{if(typeof sl!="undefined")return sl;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function j$(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new sl.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());var yg;(function(e){e[e.VOTE_OPTION_UNSPECIFIED=0]="VOTE_OPTION_UNSPECIFIED",e[e.VOTE_OPTION_YES=1]="VOTE_OPTION_YES",e[e.VOTE_OPTION_ABSTAIN=2]="VOTE_OPTION_ABSTAIN",e[e.VOTE_OPTION_NO=3]="VOTE_OPTION_NO",e[e.VOTE_OPTION_NO_WITH_VETO=4]="VOTE_OPTION_NO_WITH_VETO",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(yg||(yg={}));function rl(e){switch(e){case 0:case"VOTE_OPTION_UNSPECIFIED":return 0;case 1:case"VOTE_OPTION_YES":return 1;case 2:case"VOTE_OPTION_ABSTAIN":return 2;case 3:case"VOTE_OPTION_NO":return 3;case 4:case"VOTE_OPTION_NO_WITH_VETO":return 4;case-1:case"UNRECOGNIZED":default:return-1}}function al(e){switch(e){case 0:return"VOTE_OPTION_UNSPECIFIED";case 1:return"VOTE_OPTION_YES";case 2:return"VOTE_OPTION_ABSTAIN";case 3:return"VOTE_OPTION_NO";case 4:return"VOTE_OPTION_NO_WITH_VETO";default:return"UNKNOWN"}}var _g;(function(e){e[e.PROPOSAL_STATUS_UNSPECIFIED=0]="PROPOSAL_STATUS_UNSPECIFIED",e[e.PROPOSAL_STATUS_DEPOSIT_PERIOD=1]="PROPOSAL_STATUS_DEPOSIT_PERIOD",e[e.PROPOSAL_STATUS_VOTING_PERIOD=2]="PROPOSAL_STATUS_VOTING_PERIOD",e[e.PROPOSAL_STATUS_PASSED=3]="PROPOSAL_STATUS_PASSED",e[e.PROPOSAL_STATUS_REJECTED=4]="PROPOSAL_STATUS_REJECTED",e[e.PROPOSAL_STATUS_FAILED=5]="PROPOSAL_STATUS_FAILED",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(_g||(_g={}));function e4(e){switch(e){case 0:case"PROPOSAL_STATUS_UNSPECIFIED":return 0;case 1:case"PROPOSAL_STATUS_DEPOSIT_PERIOD":return 1;case 2:case"PROPOSAL_STATUS_VOTING_PERIOD":return 2;case 3:case"PROPOSAL_STATUS_PASSED":return 3;case 4:case"PROPOSAL_STATUS_REJECTED":return 4;case 5:case"PROPOSAL_STATUS_FAILED":return 5;case-1:case"UNRECOGNIZED":default:return-1}}function t4(e){switch(e){case 0:return"PROPOSAL_STATUS_UNSPECIFIED";case 1:return"PROPOSAL_STATUS_DEPOSIT_PERIOD";case 2:return"PROPOSAL_STATUS_VOTING_PERIOD";case 3:return"PROPOSAL_STATUS_PASSED";case 4:return"PROPOSAL_STATUS_REJECTED";case 5:return"PROPOSAL_STATUS_FAILED";default:return"UNKNOWN"}}const dl={option:0,weight:""},Xe={encode(e,t=l.Writer.create()){return e.option!==0&&t.uint32(8).int32(e.option),e.weight!==""&&t.uint32(18).string(e.weight),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},dl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.option=n.int32();break;case 2:i.weight=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},dl);return e.option!==void 0&&e.option!==null?t.option=rl(e.option):t.option=0,e.weight!==void 0&&e.weight!==null?t.weight=String(e.weight):t.weight="",t},toJSON(e){const t={};return e.option!==void 0&&(t.option=al(e.option)),e.weight!==void 0&&(t.weight=e.weight),t},fromPartial(e){const t=r({},dl);return e.option!==void 0&&e.option!==null?t.option=e.option:t.option=0,e.weight!==void 0&&e.weight!==null?t.weight=e.weight:t.weight="",t}},ll={title:"",description:""},n4={encode(e,t=l.Writer.create()){return e.title!==""&&t.uint32(10).string(e.title),e.description!==""&&t.uint32(18).string(e.description),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ll);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.title=n.string();break;case 2:i.description=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ll);return e.title!==void 0&&e.title!==null?t.title=String(e.title):t.title="",e.description!==void 0&&e.description!==null?t.description=String(e.description):t.description="",t},toJSON(e){const t={};return e.title!==void 0&&(t.title=e.title),e.description!==void 0&&(t.description=e.description),t},fromPartial(e){const t=r({},ll);return e.title!==void 0&&e.title!==null?t.title=e.title:t.title="",e.description!==void 0&&e.description!==null?t.description=e.description:t.description="",t}},ul={proposal_id:0,depositor:""},i4={encode(e,t=l.Writer.create()){e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.depositor!==""&&t.uint32(18).string(e.depositor);for(const n of e.amount)ee.encode(n,t.uint32(26).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ul);for(i.amount=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=vl(n.uint64());break;case 2:i.depositor=n.string();break;case 3:i.amount.push(ee.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ul);if(t.amount=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.depositor!==void 0&&e.depositor!==null?t.depositor=String(e.depositor):t.depositor="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(ee.fromJSON(n));return t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.depositor!==void 0&&(t.depositor=e.depositor),e.amount?t.amount=e.amount.map(n=>n?ee.toJSON(n):void 0):t.amount=[],t},fromPartial(e){const t=r({},ul);if(t.amount=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.depositor!==void 0&&e.depositor!==null?t.depositor=e.depositor:t.depositor="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(ee.fromPartial(n));return t}},cl={proposal_id:0,status:0},o4={encode(e,t=l.Writer.create()){e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.content!==void 0&&bt.encode(e.content,t.uint32(18).fork()).ldelim(),e.status!==0&&t.uint32(24).int32(e.status),e.final_tally_result!==void 0&&Ai.encode(e.final_tally_result,t.uint32(34).fork()).ldelim(),e.submit_time!==void 0&&qt.encode(Js(e.submit_time),t.uint32(42).fork()).ldelim(),e.deposit_end_time!==void 0&&qt.encode(Js(e.deposit_end_time),t.uint32(50).fork()).ldelim();for(const n of e.total_deposit)ee.encode(n,t.uint32(58).fork()).ldelim();return e.voting_start_time!==void 0&&qt.encode(Js(e.voting_start_time),t.uint32(66).fork()).ldelim(),e.voting_end_time!==void 0&&qt.encode(Js(e.voting_end_time),t.uint32(74).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},cl);for(i.total_deposit=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=vl(n.uint64());break;case 2:i.content=bt.decode(n,n.uint32());break;case 3:i.status=n.int32();break;case 4:i.final_tally_result=Ai.decode(n,n.uint32());break;case 5:i.submit_time=ts(qt.decode(n,n.uint32()));break;case 6:i.deposit_end_time=ts(qt.decode(n,n.uint32()));break;case 7:i.total_deposit.push(ee.decode(n,n.uint32()));break;case 8:i.voting_start_time=ts(qt.decode(n,n.uint32()));break;case 9:i.voting_end_time=ts(qt.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},cl);if(t.total_deposit=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.content!==void 0&&e.content!==null?t.content=bt.fromJSON(e.content):t.content=void 0,e.status!==void 0&&e.status!==null?t.status=e4(e.status):t.status=0,e.final_tally_result!==void 0&&e.final_tally_result!==null?t.final_tally_result=Ai.fromJSON(e.final_tally_result):t.final_tally_result=void 0,e.submit_time!==void 0&&e.submit_time!==null?t.submit_time=Gs(e.submit_time):t.submit_time=void 0,e.deposit_end_time!==void 0&&e.deposit_end_time!==null?t.deposit_end_time=Gs(e.deposit_end_time):t.deposit_end_time=void 0,e.total_deposit!==void 0&&e.total_deposit!==null)for(const n of e.total_deposit)t.total_deposit.push(ee.fromJSON(n));return e.voting_start_time!==void 0&&e.voting_start_time!==null?t.voting_start_time=Gs(e.voting_start_time):t.voting_start_time=void 0,e.voting_end_time!==void 0&&e.voting_end_time!==null?t.voting_end_time=Gs(e.voting_end_time):t.voting_end_time=void 0,t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.content!==void 0&&(t.content=e.content?bt.toJSON(e.content):void 0),e.status!==void 0&&(t.status=t4(e.status)),e.final_tally_result!==void 0&&(t.final_tally_result=e.final_tally_result?Ai.toJSON(e.final_tally_result):void 0),e.submit_time!==void 0&&(t.submit_time=e.submit_time!==void 0?e.submit_time.toISOString():null),e.deposit_end_time!==void 0&&(t.deposit_end_time=e.deposit_end_time!==void 0?e.deposit_end_time.toISOString():null),e.total_deposit?t.total_deposit=e.total_deposit.map(n=>n?ee.toJSON(n):void 0):t.total_deposit=[],e.voting_start_time!==void 0&&(t.voting_start_time=e.voting_start_time!==void 0?e.voting_start_time.toISOString():null),e.voting_end_time!==void 0&&(t.voting_end_time=e.voting_end_time!==void 0?e.voting_end_time.toISOString():null),t},fromPartial(e){const t=r({},cl);if(t.total_deposit=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.content!==void 0&&e.content!==null?t.content=bt.fromPartial(e.content):t.content=void 0,e.status!==void 0&&e.status!==null?t.status=e.status:t.status=0,e.final_tally_result!==void 0&&e.final_tally_result!==null?t.final_tally_result=Ai.fromPartial(e.final_tally_result):t.final_tally_result=void 0,e.submit_time!==void 0&&e.submit_time!==null?t.submit_time=e.submit_time:t.submit_time=void 0,e.deposit_end_time!==void 0&&e.deposit_end_time!==null?t.deposit_end_time=e.deposit_end_time:t.deposit_end_time=void 0,e.total_deposit!==void 0&&e.total_deposit!==null)for(const n of e.total_deposit)t.total_deposit.push(ee.fromPartial(n));return e.voting_start_time!==void 0&&e.voting_start_time!==null?t.voting_start_time=e.voting_start_time:t.voting_start_time=void 0,e.voting_end_time!==void 0&&e.voting_end_time!==null?t.voting_end_time=e.voting_end_time:t.voting_end_time=void 0,t}},pl={yes:"",abstain:"",no:"",no_with_veto:""},Ai={encode(e,t=l.Writer.create()){return e.yes!==""&&t.uint32(10).string(e.yes),e.abstain!==""&&t.uint32(18).string(e.abstain),e.no!==""&&t.uint32(26).string(e.no),e.no_with_veto!==""&&t.uint32(34).string(e.no_with_veto),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},pl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.yes=n.string();break;case 2:i.abstain=n.string();break;case 3:i.no=n.string();break;case 4:i.no_with_veto=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},pl);return e.yes!==void 0&&e.yes!==null?t.yes=String(e.yes):t.yes="",e.abstain!==void 0&&e.abstain!==null?t.abstain=String(e.abstain):t.abstain="",e.no!==void 0&&e.no!==null?t.no=String(e.no):t.no="",e.no_with_veto!==void 0&&e.no_with_veto!==null?t.no_with_veto=String(e.no_with_veto):t.no_with_veto="",t},toJSON(e){const t={};return e.yes!==void 0&&(t.yes=e.yes),e.abstain!==void 0&&(t.abstain=e.abstain),e.no!==void 0&&(t.no=e.no),e.no_with_veto!==void 0&&(t.no_with_veto=e.no_with_veto),t},fromPartial(e){const t=r({},pl);return e.yes!==void 0&&e.yes!==null?t.yes=e.yes:t.yes="",e.abstain!==void 0&&e.abstain!==null?t.abstain=e.abstain:t.abstain="",e.no!==void 0&&e.no!==null?t.no=e.no:t.no="",e.no_with_veto!==void 0&&e.no_with_veto!==null?t.no_with_veto=e.no_with_veto:t.no_with_veto="",t}},fl={proposal_id:0,voter:"",option:0},s4={encode(e,t=l.Writer.create()){e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.voter!==""&&t.uint32(18).string(e.voter),e.option!==0&&t.uint32(24).int32(e.option);for(const n of e.options)Xe.encode(n,t.uint32(34).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},fl);for(i.options=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=vl(n.uint64());break;case 2:i.voter=n.string();break;case 3:i.option=n.int32();break;case 4:i.options.push(Xe.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},fl);if(t.options=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=String(e.voter):t.voter="",e.option!==void 0&&e.option!==null?t.option=rl(e.option):t.option=0,e.options!==void 0&&e.options!==null)for(const n of e.options)t.options.push(Xe.fromJSON(n));return t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.voter!==void 0&&(t.voter=e.voter),e.option!==void 0&&(t.option=al(e.option)),e.options?t.options=e.options.map(n=>n?Xe.toJSON(n):void 0):t.options=[],t},fromPartial(e){const t=r({},fl);if(t.options=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=e.voter:t.voter="",e.option!==void 0&&e.option!==null?t.option=e.option:t.option=0,e.options!==void 0&&e.options!==null)for(const n of e.options)t.options.push(Xe.fromPartial(n));return t}},ml={},r4={encode(e,t=l.Writer.create()){for(const n of e.min_deposit)ee.encode(n,t.uint32(10).fork()).ldelim();return e.max_deposit_period!==void 0&&wt.encode(e.max_deposit_period,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ml);for(i.min_deposit=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.min_deposit.push(ee.decode(n,n.uint32()));break;case 2:i.max_deposit_period=wt.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ml);if(t.min_deposit=[],e.min_deposit!==void 0&&e.min_deposit!==null)for(const n of e.min_deposit)t.min_deposit.push(ee.fromJSON(n));return e.max_deposit_period!==void 0&&e.max_deposit_period!==null?t.max_deposit_period=wt.fromJSON(e.max_deposit_period):t.max_deposit_period=void 0,t},toJSON(e){const t={};return e.min_deposit?t.min_deposit=e.min_deposit.map(n=>n?ee.toJSON(n):void 0):t.min_deposit=[],e.max_deposit_period!==void 0&&(t.max_deposit_period=e.max_deposit_period?wt.toJSON(e.max_deposit_period):void 0),t},fromPartial(e){const t=r({},ml);if(t.min_deposit=[],e.min_deposit!==void 0&&e.min_deposit!==null)for(const n of e.min_deposit)t.min_deposit.push(ee.fromPartial(n));return e.max_deposit_period!==void 0&&e.max_deposit_period!==null?t.max_deposit_period=wt.fromPartial(e.max_deposit_period):t.max_deposit_period=void 0,t}},hl={},a4={encode(e,t=l.Writer.create()){return e.voting_period!==void 0&&wt.encode(e.voting_period,t.uint32(10).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},hl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.voting_period=wt.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},hl);return e.voting_period!==void 0&&e.voting_period!==null?t.voting_period=wt.fromJSON(e.voting_period):t.voting_period=void 0,t},toJSON(e){const t={};return e.voting_period!==void 0&&(t.voting_period=e.voting_period?wt.toJSON(e.voting_period):void 0),t},fromPartial(e){const t=r({},hl);return e.voting_period!==void 0&&e.voting_period!==null?t.voting_period=wt.fromPartial(e.voting_period):t.voting_period=void 0,t}},gl={},d4={encode(e,t=l.Writer.create()){return e.quorum.length!==0&&t.uint32(10).bytes(e.quorum),e.threshold.length!==0&&t.uint32(18).bytes(e.threshold),e.veto_threshold.length!==0&&t.uint32(26).bytes(e.veto_threshold),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},gl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.quorum=n.bytes();break;case 2:i.threshold=n.bytes();break;case 3:i.veto_threshold=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},gl);return e.quorum!==void 0&&e.quorum!==null&&(t.quorum=yl(e.quorum)),e.threshold!==void 0&&e.threshold!==null&&(t.threshold=yl(e.threshold)),e.veto_threshold!==void 0&&e.veto_threshold!==null&&(t.veto_threshold=yl(e.veto_threshold)),t},toJSON(e){const t={};return e.quorum!==void 0&&(t.quorum=_l(e.quorum!==void 0?e.quorum:new Uint8Array)),e.threshold!==void 0&&(t.threshold=_l(e.threshold!==void 0?e.threshold:new Uint8Array)),e.veto_threshold!==void 0&&(t.veto_threshold=_l(e.veto_threshold!==void 0?e.veto_threshold:new Uint8Array)),t},fromPartial(e){const t=r({},gl);return e.quorum!==void 0&&e.quorum!==null?t.quorum=e.quorum:t.quorum=new Uint8Array,e.threshold!==void 0&&e.threshold!==null?t.threshold=e.threshold:t.threshold=new Uint8Array,e.veto_threshold!==void 0&&e.veto_threshold!==null?t.veto_threshold=e.veto_threshold:t.veto_threshold=new Uint8Array,t}};var kn=(()=>{if(typeof kn!="undefined")return kn;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const l4=kn.atob||(e=>kn.Buffer.from(e,"base64").toString("binary"));function yl(e){const t=l4(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const u4=kn.btoa||(e=>kn.Buffer.from(e,"binary").toString("base64"));function _l(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return u4(t.join(""))}function Js(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function ts(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function Gs(e){return e instanceof Date?e:typeof e=="string"?new Date(e):ts(qt.fromJSON(e))}function vl(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new kn.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const bl={proposer:""},vg={encode(e,t=l.Writer.create()){e.content!==void 0&&bt.encode(e.content,t.uint32(10).fork()).ldelim();for(const n of e.initial_deposit)ee.encode(n,t.uint32(18).fork()).ldelim();return e.proposer!==""&&t.uint32(26).string(e.proposer),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},bl);for(i.initial_deposit=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.content=bt.decode(n,n.uint32());break;case 2:i.initial_deposit.push(ee.decode(n,n.uint32()));break;case 3:i.proposer=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},bl);if(t.initial_deposit=[],e.content!==void 0&&e.content!==null?t.content=bt.fromJSON(e.content):t.content=void 0,e.initial_deposit!==void 0&&e.initial_deposit!==null)for(const n of e.initial_deposit)t.initial_deposit.push(ee.fromJSON(n));return e.proposer!==void 0&&e.proposer!==null?t.proposer=String(e.proposer):t.proposer="",t},toJSON(e){const t={};return e.content!==void 0&&(t.content=e.content?bt.toJSON(e.content):void 0),e.initial_deposit?t.initial_deposit=e.initial_deposit.map(n=>n?ee.toJSON(n):void 0):t.initial_deposit=[],e.proposer!==void 0&&(t.proposer=e.proposer),t},fromPartial(e){const t=r({},bl);if(t.initial_deposit=[],e.content!==void 0&&e.content!==null?t.content=bt.fromPartial(e.content):t.content=void 0,e.initial_deposit!==void 0&&e.initial_deposit!==null)for(const n of e.initial_deposit)t.initial_deposit.push(ee.fromPartial(n));return e.proposer!==void 0&&e.proposer!==null?t.proposer=e.proposer:t.proposer="",t}},wl={proposal_id:0,voter:"",option:0},bg={encode(e,t=l.Writer.create()){return e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.voter!==""&&t.uint32(18).string(e.voter),e.option!==0&&t.uint32(24).int32(e.option),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},wl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Cl(n.uint64());break;case 2:i.voter=n.string();break;case 3:i.option=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},wl);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=String(e.voter):t.voter="",e.option!==void 0&&e.option!==null?t.option=rl(e.option):t.option=0,t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.voter!==void 0&&(t.voter=e.voter),e.option!==void 0&&(t.option=al(e.option)),t},fromPartial(e){const t=r({},wl);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=e.voter:t.voter="",e.option!==void 0&&e.option!==null?t.option=e.option:t.option=0,t}},Sl={proposal_id:0,voter:""},wg={encode(e,t=l.Writer.create()){e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.voter!==""&&t.uint32(18).string(e.voter);for(const n of e.options)Xe.encode(n,t.uint32(26).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Sl);for(i.options=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Cl(n.uint64());break;case 2:i.voter=n.string();break;case 3:i.options.push(Xe.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Sl);if(t.options=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=String(e.voter):t.voter="",e.options!==void 0&&e.options!==null)for(const n of e.options)t.options.push(Xe.fromJSON(n));return t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.voter!==void 0&&(t.voter=e.voter),e.options?t.options=e.options.map(n=>n?Xe.toJSON(n):void 0):t.options=[],t},fromPartial(e){const t=r({},Sl);if(t.options=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=e.voter:t.voter="",e.options!==void 0&&e.options!==null)for(const n of e.options)t.options.push(Xe.fromPartial(n));return t}},kl={proposal_id:0,depositor:""},Sg={encode(e,t=l.Writer.create()){e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.depositor!==""&&t.uint32(18).string(e.depositor);for(const n of e.amount)ee.encode(n,t.uint32(26).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},kl);for(i.amount=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Cl(n.uint64());break;case 2:i.depositor=n.string();break;case 3:i.amount.push(ee.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},kl);if(t.amount=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.depositor!==void 0&&e.depositor!==null?t.depositor=String(e.depositor):t.depositor="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(ee.fromJSON(n));return t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.depositor!==void 0&&(t.depositor=e.depositor),e.amount?t.amount=e.amount.map(n=>n?ee.toJSON(n):void 0):t.amount=[],t},fromPartial(e){const t=r({},kl);if(t.amount=[],e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.depositor!==void 0&&e.depositor!==null?t.depositor=e.depositor:t.depositor="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(ee.fromPartial(n));return t}};var Pl=(()=>{if(typeof Pl!="undefined")return Pl;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Cl(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Pl.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const c4=[["/cosmos.gov.v1beta1.MsgVoteWeighted",wg],["/cosmos.gov.v1beta1.MsgDeposit",Sg],["/cosmos.gov.v1beta1.MsgVote",bg],["/cosmos.gov.v1beta1.MsgSubmitProposal",vg]],Ut=new Error("wallet is required"),Rl=new Y.Registry(c4),p4={amount:[],gas:"200000"},f4=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw Ut;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:Rl}):n=await J.SigningStargateClient.offline(e,{registry:Rl});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:p4,memo:""})=>n.signAndBroadcast(s,i,o,d),msgVoteWeighted:i=>({typeUrl:"/cosmos.gov.v1beta1.MsgVoteWeighted",value:wg.fromPartial(i)}),msgDeposit:i=>({typeUrl:"/cosmos.gov.v1beta1.MsgDeposit",value:Sg.fromPartial(i)}),msgVote:i=>({typeUrl:"/cosmos.gov.v1beta1.MsgVote",value:bg.fromPartial(i)}),msgSubmitProposal:i=>({typeUrl:"/cosmos.gov.v1beta1.MsgSubmitProposal",value:vg.fromPartial(i)})}},m4=async({addr:e}={addr:"http://localhost:1317"})=>new H$({baseUrl:e});async function zt(e){return await f4(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function Yt(e){return await m4({addr:e["common/env/apiCosmos"]})}function El(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function $t(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const kg=()=>({Proposal:{},Proposals:{},Vote:{},Votes:{},Params:{},Deposit:{},Deposits:{},TallyResult:{},_Structure:{WeightedVoteOption:$t(Xe.fromPartial({})),TextProposal:$t(n4.fromPartial({})),Deposit:$t(i4.fromPartial({})),Proposal:$t(o4.fromPartial({})),TallyResult:$t(Ai.fromPartial({})),Vote:$t(s4.fromPartial({})),DepositParams:$t(r4.fromPartial({})),VotingParams:$t(a4.fromPartial({})),TallyParams:$t(d4.fromPartial({}))},_Registry:Rl,_Subscriptions:new Set}),h4=kg();var g4={namespaced:!0,state:h4,mutations:{RESET_STATE(e){Object.assign(e,kg())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getProposal:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Proposal[JSON.stringify(t)])!=null?n:{}},getProposals:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Proposals[JSON.stringify(t)])!=null?n:{}},getVote:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Vote[JSON.stringify(t)])!=null?n:{}},getVotes:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Votes[JSON.stringify(t)])!=null?n:{}},getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getDeposit:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Deposit[JSON.stringify(t)])!=null?n:{}},getDeposits:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Deposits[JSON.stringify(t)])!=null?n:{}},getTallyResult:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.TallyResult[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.gov.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryProposal({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Yt(t)).queryProposal(a.proposal_id)).data;return e("QUERY",{query:"Proposal",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryProposal",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getProposal({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryProposal API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryProposals({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Yt(t);let u=(await p.queryProposals(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryProposals(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=El(u,g)}return e("QUERY",{query:"Proposals",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryProposals",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getProposals({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryProposals API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryVote({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Yt(t)).queryVote(a.proposal_id,a.voter)).data;return e("QUERY",{query:"Vote",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryVote",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getVote({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryVote API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryVotes({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Yt(t);let u=(await p.queryVotes(a.proposal_id,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryVotes(a.proposal_id,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=El(u,g)}return e("QUERY",{query:"Votes",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryVotes",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getVotes({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryVotes API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Yt(t)).queryParams(a.params_type)).data;return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDeposit({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Yt(t)).queryDeposit(a.proposal_id,a.depositor)).data;return e("QUERY",{query:"Deposit",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDeposit",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDeposit({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDeposit API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDeposits({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Yt(t);let u=(await p.queryDeposits(a.proposal_id,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryDeposits(a.proposal_id,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=El(u,g)}return e("QUERY",{query:"Deposits",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDeposits",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDeposits({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDeposits API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryTallyResult({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Yt(t)).queryTallyResult(a.proposal_id)).data;return e("QUERY",{query:"TallyResult",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryTallyResult",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getTallyResult({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryTallyResult API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgVoteWeighted({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await zt(e),d=await o.msgVoteWeighted(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Ut?new Error("TxClient:MsgVoteWeighted:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgVoteWeighted:Send Could not broadcast Tx: "+o.message)}},async sendMsgDeposit({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await zt(e),d=await o.msgDeposit(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Ut?new Error("TxClient:MsgDeposit:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDeposit:Send Could not broadcast Tx: "+o.message)}},async sendMsgVote({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await zt(e),d=await o.msgVote(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Ut?new Error("TxClient:MsgVote:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgVote:Send Could not broadcast Tx: "+o.message)}},async sendMsgSubmitProposal({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await zt(e),d=await o.msgSubmitProposal(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Ut?new Error("TxClient:MsgSubmitProposal:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSubmitProposal:Send Could not broadcast Tx: "+o.message)}},async MsgVoteWeighted({rootGetters:e},{value:t}){try{return await(await zt(e)).msgVoteWeighted(t)}catch(n){throw n==Ut?new Error("TxClient:MsgVoteWeighted:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgVoteWeighted:Create Could not create message: "+n.message)}},async MsgDeposit({rootGetters:e},{value:t}){try{return await(await zt(e)).msgDeposit(t)}catch(n){throw n==Ut?new Error("TxClient:MsgDeposit:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDeposit:Create Could not create message: "+n.message)}},async MsgVote({rootGetters:e},{value:t}){try{return await(await zt(e)).msgVote(t)}catch(n){throw n==Ut?new Error("TxClient:MsgVote:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgVote:Create Could not create message: "+n.message)}},async MsgSubmitProposal({rootGetters:e},{value:t}){try{return await(await zt(e)).msgSubmitProposal(t)}catch(n){throw n==Ut?new Error("TxClient:MsgSubmitProposal:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSubmitProposal:Create Could not create message: "+n.message)}}}},Pg;(function(e){e.EXEC_UNSPECIFIED="EXEC_UNSPECIFIED",e.EXEC_TRY="EXEC_TRY"})(Pg||(Pg={}));var Cg;(function(e){e.PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED="PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED",e.PROPOSAL_EXECUTOR_RESULT_NOT_RUN="PROPOSAL_EXECUTOR_RESULT_NOT_RUN",e.PROPOSAL_EXECUTOR_RESULT_SUCCESS="PROPOSAL_EXECUTOR_RESULT_SUCCESS",e.PROPOSAL_EXECUTOR_RESULT_FAILURE="PROPOSAL_EXECUTOR_RESULT_FAILURE"})(Cg||(Cg={}));var Rg;(function(e){e.PROPOSAL_STATUS_UNSPECIFIED="PROPOSAL_STATUS_UNSPECIFIED",e.PROPOSAL_STATUS_SUBMITTED="PROPOSAL_STATUS_SUBMITTED",e.PROPOSAL_STATUS_ACCEPTED="PROPOSAL_STATUS_ACCEPTED",e.PROPOSAL_STATUS_REJECTED="PROPOSAL_STATUS_REJECTED",e.PROPOSAL_STATUS_ABORTED="PROPOSAL_STATUS_ABORTED",e.PROPOSAL_STATUS_WITHDRAWN="PROPOSAL_STATUS_WITHDRAWN"})(Rg||(Rg={}));var Eg;(function(e){e.VOTE_OPTION_UNSPECIFIED="VOTE_OPTION_UNSPECIFIED",e.VOTE_OPTION_YES="VOTE_OPTION_YES",e.VOTE_OPTION_ABSTAIN="VOTE_OPTION_ABSTAIN",e.VOTE_OPTION_NO="VOTE_OPTION_NO",e.VOTE_OPTION_NO_WITH_VETO="VOTE_OPTION_NO_WITH_VETO"})(Eg||(Eg={}));var Pn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Pn||(Pn={}));class y4{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[Pn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[Pn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[Pn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||Pn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==Pn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class _4 extends y4{constructor(){super(...arguments);this.queryGroupInfo=(t,n={})=>this.request(r({path:`/cosmos/group/v1/group_info/${t}`,method:"GET",format:"json"},n)),this.queryGroupMembers=(t,n,s={})=>this.request(r({path:`/cosmos/group/v1/group_members/${t}`,method:"GET",query:n,format:"json"},s)),this.queryGroupPoliciesByAdmin=(t,n,s={})=>this.request(r({path:`/cosmos/group/v1/group_policies_by_admin/${t}`,method:"GET",query:n,format:"json"},s)),this.queryGroupPoliciesByGroup=(t,n,s={})=>this.request(r({path:`/cosmos/group/v1/group_policies_by_group/${t}`,method:"GET",query:n,format:"json"},s)),this.queryGroupPolicyInfo=(t,n={})=>this.request(r({path:`/cosmos/group/v1/group_policy_info/${t}`,method:"GET",format:"json"},n)),this.queryGroupsByAdmin=(t,n,s={})=>this.request(r({path:`/cosmos/group/v1/groups_by_admin/${t}`,method:"GET",query:n,format:"json"},s)),this.queryGroupsByMember=(t,n,s={})=>this.request(r({path:`/cosmos/group/v1/groups_by_member/${t}`,method:"GET",query:n,format:"json"},s)),this.queryProposal=(t,n={})=>this.request(r({path:`/cosmos/group/v1/proposal/${t}`,method:"GET",format:"json"},n)),this.queryTallyResult=(t,n={})=>this.request(r({path:`/cosmos/group/v1/proposals/${t}/tally`,method:"GET",format:"json"},n)),this.queryProposalsByGroupPolicy=(t,n,s={})=>this.request(r({path:`/cosmos/group/v1/proposals_by_group_policy/${t}`,method:"GET",query:n,format:"json"},s)),this.queryVoteByProposalVoter=(t,n,s={})=>this.request(r({path:`/cosmos/group/v1/vote_by_proposal_voter/${t}/${n}`,method:"GET",format:"json"},s)),this.queryVotesByProposal=(t,n,s={})=>this.request(r({path:`/cosmos/group/v1/votes_by_proposal/${t}`,method:"GET",query:n,format:"json"},s)),this.queryVotesByVoter=(t,n,s={})=>this.request(r({path:`/cosmos/group/v1/votes_by_voter/${t}`,method:"GET",query:n,format:"json"},s))}}const Tl={seconds:0,nanos:0},$e={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Tl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=v4(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Tl);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},Tl);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var Nl=(()=>{if(typeof Nl!="undefined")return Nl;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function v4(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Nl.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Al={seconds:0,nanos:0},St={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Al);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=b4(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Al);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},Al);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var Ol=(()=>{if(typeof Ol!="undefined")return Ol;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function b4(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Ol.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const ql={type_url:""},V={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ql);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ql);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=S4(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=P4(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},ql);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var Oi=(()=>{if(typeof Oi!="undefined")return Oi;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const w4=Oi.atob||(e=>Oi.Buffer.from(e,"base64").toString("binary"));function S4(e){const t=w4(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const k4=Oi.btoa||(e=>Oi.Buffer.from(e,"binary").toString("base64"));function P4(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return k4(t.join(""))}var Tg;(function(e){e[e.VOTE_OPTION_UNSPECIFIED=0]="VOTE_OPTION_UNSPECIFIED",e[e.VOTE_OPTION_YES=1]="VOTE_OPTION_YES",e[e.VOTE_OPTION_ABSTAIN=2]="VOTE_OPTION_ABSTAIN",e[e.VOTE_OPTION_NO=3]="VOTE_OPTION_NO",e[e.VOTE_OPTION_NO_WITH_VETO=4]="VOTE_OPTION_NO_WITH_VETO",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(Tg||(Tg={}));function Ng(e){switch(e){case 0:case"VOTE_OPTION_UNSPECIFIED":return 0;case 1:case"VOTE_OPTION_YES":return 1;case 2:case"VOTE_OPTION_ABSTAIN":return 2;case 3:case"VOTE_OPTION_NO":return 3;case 4:case"VOTE_OPTION_NO_WITH_VETO":return 4;case-1:case"UNRECOGNIZED":default:return-1}}function Ag(e){switch(e){case 0:return"VOTE_OPTION_UNSPECIFIED";case 1:return"VOTE_OPTION_YES";case 2:return"VOTE_OPTION_ABSTAIN";case 3:return"VOTE_OPTION_NO";case 4:return"VOTE_OPTION_NO_WITH_VETO";default:return"UNKNOWN"}}var Og;(function(e){e[e.PROPOSAL_STATUS_UNSPECIFIED=0]="PROPOSAL_STATUS_UNSPECIFIED",e[e.PROPOSAL_STATUS_SUBMITTED=1]="PROPOSAL_STATUS_SUBMITTED",e[e.PROPOSAL_STATUS_ACCEPTED=2]="PROPOSAL_STATUS_ACCEPTED",e[e.PROPOSAL_STATUS_REJECTED=3]="PROPOSAL_STATUS_REJECTED",e[e.PROPOSAL_STATUS_ABORTED=4]="PROPOSAL_STATUS_ABORTED",e[e.PROPOSAL_STATUS_WITHDRAWN=5]="PROPOSAL_STATUS_WITHDRAWN",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(Og||(Og={}));function C4(e){switch(e){case 0:case"PROPOSAL_STATUS_UNSPECIFIED":return 0;case 1:case"PROPOSAL_STATUS_SUBMITTED":return 1;case 2:case"PROPOSAL_STATUS_ACCEPTED":return 2;case 3:case"PROPOSAL_STATUS_REJECTED":return 3;case 4:case"PROPOSAL_STATUS_ABORTED":return 4;case 5:case"PROPOSAL_STATUS_WITHDRAWN":return 5;case-1:case"UNRECOGNIZED":default:return-1}}function R4(e){switch(e){case 0:return"PROPOSAL_STATUS_UNSPECIFIED";case 1:return"PROPOSAL_STATUS_SUBMITTED";case 2:return"PROPOSAL_STATUS_ACCEPTED";case 3:return"PROPOSAL_STATUS_REJECTED";case 4:return"PROPOSAL_STATUS_ABORTED";case 5:return"PROPOSAL_STATUS_WITHDRAWN";default:return"UNKNOWN"}}var qg;(function(e){e[e.PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED=0]="PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED",e[e.PROPOSAL_EXECUTOR_RESULT_NOT_RUN=1]="PROPOSAL_EXECUTOR_RESULT_NOT_RUN",e[e.PROPOSAL_EXECUTOR_RESULT_SUCCESS=2]="PROPOSAL_EXECUTOR_RESULT_SUCCESS",e[e.PROPOSAL_EXECUTOR_RESULT_FAILURE=3]="PROPOSAL_EXECUTOR_RESULT_FAILURE",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(qg||(qg={}));function Ug(e){switch(e){case 0:case"PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED":return 0;case 1:case"PROPOSAL_EXECUTOR_RESULT_NOT_RUN":return 1;case 2:case"PROPOSAL_EXECUTOR_RESULT_SUCCESS":return 2;case 3:case"PROPOSAL_EXECUTOR_RESULT_FAILURE":return 3;case-1:case"UNRECOGNIZED":default:return-1}}function $g(e){switch(e){case 0:return"PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED";case 1:return"PROPOSAL_EXECUTOR_RESULT_NOT_RUN";case 2:return"PROPOSAL_EXECUTOR_RESULT_SUCCESS";case 3:return"PROPOSAL_EXECUTOR_RESULT_FAILURE";default:return"UNKNOWN"}}const Ul={address:"",weight:"",metadata:""},qi={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),e.weight!==""&&t.uint32(18).string(e.weight),e.metadata!==""&&t.uint32(26).string(e.metadata),e.added_at!==void 0&&$e.encode($i(e.added_at),t.uint32(34).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ul);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.weight=n.string();break;case 3:i.metadata=n.string();break;case 4:i.added_at=Cn($e.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ul);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.weight!==void 0&&e.weight!==null?t.weight=String(e.weight):t.weight="",e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",e.added_at!==void 0&&e.added_at!==null?t.added_at=Ii(e.added_at):t.added_at=void 0,t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.weight!==void 0&&(t.weight=e.weight),e.metadata!==void 0&&(t.metadata=e.metadata),e.added_at!==void 0&&(t.added_at=e.added_at!==void 0?e.added_at.toISOString():null),t},fromPartial(e){const t=r({},Ul);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.weight!==void 0&&e.weight!==null?t.weight=e.weight:t.weight="",e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",e.added_at!==void 0&&e.added_at!==null?t.added_at=e.added_at:t.added_at=void 0,t}},$l={address:"",weight:"",metadata:""},ke={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),e.weight!==""&&t.uint32(18).string(e.weight),e.metadata!==""&&t.uint32(26).string(e.metadata),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},$l);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.weight=n.string();break;case 3:i.metadata=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},$l);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.weight!==void 0&&e.weight!==null?t.weight=String(e.weight):t.weight="",e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.weight!==void 0&&(t.weight=e.weight),e.metadata!==void 0&&(t.metadata=e.metadata),t},fromPartial(e){const t=r({},$l);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.weight!==void 0&&e.weight!==null?t.weight=e.weight:t.weight="",e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",t}},Il={threshold:""},E4={encode(e,t=l.Writer.create()){return e.threshold!==""&&t.uint32(10).string(e.threshold),e.windows!==void 0&&Ke.encode(e.windows,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Il);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.threshold=n.string();break;case 2:i.windows=Ke.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Il);return e.threshold!==void 0&&e.threshold!==null?t.threshold=String(e.threshold):t.threshold="",e.windows!==void 0&&e.windows!==null?t.windows=Ke.fromJSON(e.windows):t.windows=void 0,t},toJSON(e){const t={};return e.threshold!==void 0&&(t.threshold=e.threshold),e.windows!==void 0&&(t.windows=e.windows?Ke.toJSON(e.windows):void 0),t},fromPartial(e){const t=r({},Il);return e.threshold!==void 0&&e.threshold!==null?t.threshold=e.threshold:t.threshold="",e.windows!==void 0&&e.windows!==null?t.windows=Ke.fromPartial(e.windows):t.windows=void 0,t}},xl={percentage:""},T4={encode(e,t=l.Writer.create()){return e.percentage!==""&&t.uint32(10).string(e.percentage),e.windows!==void 0&&Ke.encode(e.windows,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},xl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.percentage=n.string();break;case 2:i.windows=Ke.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},xl);return e.percentage!==void 0&&e.percentage!==null?t.percentage=String(e.percentage):t.percentage="",e.windows!==void 0&&e.windows!==null?t.windows=Ke.fromJSON(e.windows):t.windows=void 0,t},toJSON(e){const t={};return e.percentage!==void 0&&(t.percentage=e.percentage),e.windows!==void 0&&(t.windows=e.windows?Ke.toJSON(e.windows):void 0),t},fromPartial(e){const t=r({},xl);return e.percentage!==void 0&&e.percentage!==null?t.percentage=e.percentage:t.percentage="",e.windows!==void 0&&e.windows!==null?t.windows=Ke.fromPartial(e.windows):t.windows=void 0,t}},Dl={},Ke={encode(e,t=l.Writer.create()){return e.voting_period!==void 0&&St.encode(e.voting_period,t.uint32(10).fork()).ldelim(),e.min_execution_period!==void 0&&St.encode(e.min_execution_period,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Dl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.voting_period=St.decode(n,n.uint32());break;case 2:i.min_execution_period=St.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Dl);return e.voting_period!==void 0&&e.voting_period!==null?t.voting_period=St.fromJSON(e.voting_period):t.voting_period=void 0,e.min_execution_period!==void 0&&e.min_execution_period!==null?t.min_execution_period=St.fromJSON(e.min_execution_period):t.min_execution_period=void 0,t},toJSON(e){const t={};return e.voting_period!==void 0&&(t.voting_period=e.voting_period?St.toJSON(e.voting_period):void 0),e.min_execution_period!==void 0&&(t.min_execution_period=e.min_execution_period?St.toJSON(e.min_execution_period):void 0),t},fromPartial(e){const t=r({},Dl);return e.voting_period!==void 0&&e.voting_period!==null?t.voting_period=St.fromPartial(e.voting_period):t.voting_period=void 0,e.min_execution_period!==void 0&&e.min_execution_period!==null?t.min_execution_period=St.fromPartial(e.min_execution_period):t.min_execution_period=void 0,t}},Ql={id:0,admin:"",metadata:"",version:0,total_weight:""},N4={encode(e,t=l.Writer.create()){return e.id!==0&&t.uint32(8).uint64(e.id),e.admin!==""&&t.uint32(18).string(e.admin),e.metadata!==""&&t.uint32(26).string(e.metadata),e.version!==0&&t.uint32(32).uint64(e.version),e.total_weight!==""&&t.uint32(42).string(e.total_weight),e.created_at!==void 0&&$e.encode($i(e.created_at),t.uint32(50).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ql);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.id=It(n.uint64());break;case 2:i.admin=n.string();break;case 3:i.metadata=n.string();break;case 4:i.version=It(n.uint64());break;case 5:i.total_weight=n.string();break;case 6:i.created_at=Cn($e.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ql);return e.id!==void 0&&e.id!==null?t.id=Number(e.id):t.id=0,e.admin!==void 0&&e.admin!==null?t.admin=String(e.admin):t.admin="",e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",e.version!==void 0&&e.version!==null?t.version=Number(e.version):t.version=0,e.total_weight!==void 0&&e.total_weight!==null?t.total_weight=String(e.total_weight):t.total_weight="",e.created_at!==void 0&&e.created_at!==null?t.created_at=Ii(e.created_at):t.created_at=void 0,t},toJSON(e){const t={};return e.id!==void 0&&(t.id=e.id),e.admin!==void 0&&(t.admin=e.admin),e.metadata!==void 0&&(t.metadata=e.metadata),e.version!==void 0&&(t.version=e.version),e.total_weight!==void 0&&(t.total_weight=e.total_weight),e.created_at!==void 0&&(t.created_at=e.created_at!==void 0?e.created_at.toISOString():null),t},fromPartial(e){const t=r({},Ql);return e.id!==void 0&&e.id!==null?t.id=e.id:t.id=0,e.admin!==void 0&&e.admin!==null?t.admin=e.admin:t.admin="",e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",e.version!==void 0&&e.version!==null?t.version=e.version:t.version=0,e.total_weight!==void 0&&e.total_weight!==null?t.total_weight=e.total_weight:t.total_weight="",e.created_at!==void 0&&e.created_at!==null?t.created_at=e.created_at:t.created_at=void 0,t}},Ml={group_id:0},A4={encode(e,t=l.Writer.create()){return e.group_id!==0&&t.uint32(8).uint64(e.group_id),e.member!==void 0&&qi.encode(e.member,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ml);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.group_id=It(n.uint64());break;case 2:i.member=qi.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ml);return e.group_id!==void 0&&e.group_id!==null?t.group_id=Number(e.group_id):t.group_id=0,e.member!==void 0&&e.member!==null?t.member=qi.fromJSON(e.member):t.member=void 0,t},toJSON(e){const t={};return e.group_id!==void 0&&(t.group_id=e.group_id),e.member!==void 0&&(t.member=e.member?qi.toJSON(e.member):void 0),t},fromPartial(e){const t=r({},Ml);return e.group_id!==void 0&&e.group_id!==null?t.group_id=e.group_id:t.group_id=0,e.member!==void 0&&e.member!==null?t.member=qi.fromPartial(e.member):t.member=void 0,t}},Bl={address:"",group_id:0,admin:"",metadata:"",version:0},O4={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),e.group_id!==0&&t.uint32(16).uint64(e.group_id),e.admin!==""&&t.uint32(26).string(e.admin),e.metadata!==""&&t.uint32(34).string(e.metadata),e.version!==0&&t.uint32(40).uint64(e.version),e.decision_policy!==void 0&&V.encode(e.decision_policy,t.uint32(50).fork()).ldelim(),e.created_at!==void 0&&$e.encode($i(e.created_at),t.uint32(58).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Bl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.group_id=It(n.uint64());break;case 3:i.admin=n.string();break;case 4:i.metadata=n.string();break;case 5:i.version=It(n.uint64());break;case 6:i.decision_policy=V.decode(n,n.uint32());break;case 7:i.created_at=Cn($e.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Bl);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.group_id!==void 0&&e.group_id!==null?t.group_id=Number(e.group_id):t.group_id=0,e.admin!==void 0&&e.admin!==null?t.admin=String(e.admin):t.admin="",e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",e.version!==void 0&&e.version!==null?t.version=Number(e.version):t.version=0,e.decision_policy!==void 0&&e.decision_policy!==null?t.decision_policy=V.fromJSON(e.decision_policy):t.decision_policy=void 0,e.created_at!==void 0&&e.created_at!==null?t.created_at=Ii(e.created_at):t.created_at=void 0,t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.group_id!==void 0&&(t.group_id=e.group_id),e.admin!==void 0&&(t.admin=e.admin),e.metadata!==void 0&&(t.metadata=e.metadata),e.version!==void 0&&(t.version=e.version),e.decision_policy!==void 0&&(t.decision_policy=e.decision_policy?V.toJSON(e.decision_policy):void 0),e.created_at!==void 0&&(t.created_at=e.created_at!==void 0?e.created_at.toISOString():null),t},fromPartial(e){const t=r({},Bl);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.group_id!==void 0&&e.group_id!==null?t.group_id=e.group_id:t.group_id=0,e.admin!==void 0&&e.admin!==null?t.admin=e.admin:t.admin="",e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",e.version!==void 0&&e.version!==null?t.version=e.version:t.version=0,e.decision_policy!==void 0&&e.decision_policy!==null?t.decision_policy=V.fromPartial(e.decision_policy):t.decision_policy=void 0,e.created_at!==void 0&&e.created_at!==null?t.created_at=e.created_at:t.created_at=void 0,t}},Jl={id:0,group_policy_address:"",metadata:"",proposers:"",group_version:0,group_policy_version:0,status:0,executor_result:0},q4={encode(e,t=l.Writer.create()){e.id!==0&&t.uint32(8).uint64(e.id),e.group_policy_address!==""&&t.uint32(18).string(e.group_policy_address),e.metadata!==""&&t.uint32(26).string(e.metadata);for(const n of e.proposers)t.uint32(34).string(n);e.submit_time!==void 0&&$e.encode($i(e.submit_time),t.uint32(42).fork()).ldelim(),e.group_version!==0&&t.uint32(48).uint64(e.group_version),e.group_policy_version!==0&&t.uint32(56).uint64(e.group_policy_version),e.status!==0&&t.uint32(64).int32(e.status),e.final_tally_result!==void 0&&Ui.encode(e.final_tally_result,t.uint32(74).fork()).ldelim(),e.voting_period_end!==void 0&&$e.encode($i(e.voting_period_end),t.uint32(82).fork()).ldelim(),e.executor_result!==0&&t.uint32(88).int32(e.executor_result);for(const n of e.messages)V.encode(n,t.uint32(98).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Jl);for(i.proposers=[],i.messages=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.id=It(n.uint64());break;case 2:i.group_policy_address=n.string();break;case 3:i.metadata=n.string();break;case 4:i.proposers.push(n.string());break;case 5:i.submit_time=Cn($e.decode(n,n.uint32()));break;case 6:i.group_version=It(n.uint64());break;case 7:i.group_policy_version=It(n.uint64());break;case 8:i.status=n.int32();break;case 9:i.final_tally_result=Ui.decode(n,n.uint32());break;case 10:i.voting_period_end=Cn($e.decode(n,n.uint32()));break;case 11:i.executor_result=n.int32();break;case 12:i.messages.push(V.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Jl);if(t.proposers=[],t.messages=[],e.id!==void 0&&e.id!==null?t.id=Number(e.id):t.id=0,e.group_policy_address!==void 0&&e.group_policy_address!==null?t.group_policy_address=String(e.group_policy_address):t.group_policy_address="",e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",e.proposers!==void 0&&e.proposers!==null)for(const n of e.proposers)t.proposers.push(String(n));if(e.submit_time!==void 0&&e.submit_time!==null?t.submit_time=Ii(e.submit_time):t.submit_time=void 0,e.group_version!==void 0&&e.group_version!==null?t.group_version=Number(e.group_version):t.group_version=0,e.group_policy_version!==void 0&&e.group_policy_version!==null?t.group_policy_version=Number(e.group_policy_version):t.group_policy_version=0,e.status!==void 0&&e.status!==null?t.status=C4(e.status):t.status=0,e.final_tally_result!==void 0&&e.final_tally_result!==null?t.final_tally_result=Ui.fromJSON(e.final_tally_result):t.final_tally_result=void 0,e.voting_period_end!==void 0&&e.voting_period_end!==null?t.voting_period_end=Ii(e.voting_period_end):t.voting_period_end=void 0,e.executor_result!==void 0&&e.executor_result!==null?t.executor_result=Ug(e.executor_result):t.executor_result=0,e.messages!==void 0&&e.messages!==null)for(const n of e.messages)t.messages.push(V.fromJSON(n));return t},toJSON(e){const t={};return e.id!==void 0&&(t.id=e.id),e.group_policy_address!==void 0&&(t.group_policy_address=e.group_policy_address),e.metadata!==void 0&&(t.metadata=e.metadata),e.proposers?t.proposers=e.proposers.map(n=>n):t.proposers=[],e.submit_time!==void 0&&(t.submit_time=e.submit_time!==void 0?e.submit_time.toISOString():null),e.group_version!==void 0&&(t.group_version=e.group_version),e.group_policy_version!==void 0&&(t.group_policy_version=e.group_policy_version),e.status!==void 0&&(t.status=R4(e.status)),e.final_tally_result!==void 0&&(t.final_tally_result=e.final_tally_result?Ui.toJSON(e.final_tally_result):void 0),e.voting_period_end!==void 0&&(t.voting_period_end=e.voting_period_end!==void 0?e.voting_period_end.toISOString():null),e.executor_result!==void 0&&(t.executor_result=$g(e.executor_result)),e.messages?t.messages=e.messages.map(n=>n?V.toJSON(n):void 0):t.messages=[],t},fromPartial(e){const t=r({},Jl);if(t.proposers=[],t.messages=[],e.id!==void 0&&e.id!==null?t.id=e.id:t.id=0,e.group_policy_address!==void 0&&e.group_policy_address!==null?t.group_policy_address=e.group_policy_address:t.group_policy_address="",e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",e.proposers!==void 0&&e.proposers!==null)for(const n of e.proposers)t.proposers.push(n);if(e.submit_time!==void 0&&e.submit_time!==null?t.submit_time=e.submit_time:t.submit_time=void 0,e.group_version!==void 0&&e.group_version!==null?t.group_version=e.group_version:t.group_version=0,e.group_policy_version!==void 0&&e.group_policy_version!==null?t.group_policy_version=e.group_policy_version:t.group_policy_version=0,e.status!==void 0&&e.status!==null?t.status=e.status:t.status=0,e.final_tally_result!==void 0&&e.final_tally_result!==null?t.final_tally_result=Ui.fromPartial(e.final_tally_result):t.final_tally_result=void 0,e.voting_period_end!==void 0&&e.voting_period_end!==null?t.voting_period_end=e.voting_period_end:t.voting_period_end=void 0,e.executor_result!==void 0&&e.executor_result!==null?t.executor_result=e.executor_result:t.executor_result=0,e.messages!==void 0&&e.messages!==null)for(const n of e.messages)t.messages.push(V.fromPartial(n));return t}},Gl={yes_count:"",abstain_count:"",no_count:"",no_with_veto_count:""},Ui={encode(e,t=l.Writer.create()){return e.yes_count!==""&&t.uint32(10).string(e.yes_count),e.abstain_count!==""&&t.uint32(18).string(e.abstain_count),e.no_count!==""&&t.uint32(26).string(e.no_count),e.no_with_veto_count!==""&&t.uint32(34).string(e.no_with_veto_count),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Gl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.yes_count=n.string();break;case 2:i.abstain_count=n.string();break;case 3:i.no_count=n.string();break;case 4:i.no_with_veto_count=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Gl);return e.yes_count!==void 0&&e.yes_count!==null?t.yes_count=String(e.yes_count):t.yes_count="",e.abstain_count!==void 0&&e.abstain_count!==null?t.abstain_count=String(e.abstain_count):t.abstain_count="",e.no_count!==void 0&&e.no_count!==null?t.no_count=String(e.no_count):t.no_count="",e.no_with_veto_count!==void 0&&e.no_with_veto_count!==null?t.no_with_veto_count=String(e.no_with_veto_count):t.no_with_veto_count="",t},toJSON(e){const t={};return e.yes_count!==void 0&&(t.yes_count=e.yes_count),e.abstain_count!==void 0&&(t.abstain_count=e.abstain_count),e.no_count!==void 0&&(t.no_count=e.no_count),e.no_with_veto_count!==void 0&&(t.no_with_veto_count=e.no_with_veto_count),t},fromPartial(e){const t=r({},Gl);return e.yes_count!==void 0&&e.yes_count!==null?t.yes_count=e.yes_count:t.yes_count="",e.abstain_count!==void 0&&e.abstain_count!==null?t.abstain_count=e.abstain_count:t.abstain_count="",e.no_count!==void 0&&e.no_count!==null?t.no_count=e.no_count:t.no_count="",e.no_with_veto_count!==void 0&&e.no_with_veto_count!==null?t.no_with_veto_count=e.no_with_veto_count:t.no_with_veto_count="",t}},Ll={proposal_id:0,voter:"",option:0,metadata:""},U4={encode(e,t=l.Writer.create()){return e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.voter!==""&&t.uint32(18).string(e.voter),e.option!==0&&t.uint32(24).int32(e.option),e.metadata!==""&&t.uint32(34).string(e.metadata),e.submit_time!==void 0&&$e.encode($i(e.submit_time),t.uint32(42).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ll);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=It(n.uint64());break;case 2:i.voter=n.string();break;case 3:i.option=n.int32();break;case 4:i.metadata=n.string();break;case 5:i.submit_time=Cn($e.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ll);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=String(e.voter):t.voter="",e.option!==void 0&&e.option!==null?t.option=Ng(e.option):t.option=0,e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",e.submit_time!==void 0&&e.submit_time!==null?t.submit_time=Ii(e.submit_time):t.submit_time=void 0,t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.voter!==void 0&&(t.voter=e.voter),e.option!==void 0&&(t.option=Ag(e.option)),e.metadata!==void 0&&(t.metadata=e.metadata),e.submit_time!==void 0&&(t.submit_time=e.submit_time!==void 0?e.submit_time.toISOString():null),t},fromPartial(e){const t=r({},Ll);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=e.voter:t.voter="",e.option!==void 0&&e.option!==null?t.option=e.option:t.option=0,e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",e.submit_time!==void 0&&e.submit_time!==null?t.submit_time=e.submit_time:t.submit_time=void 0,t}};var Vl=(()=>{if(typeof Vl!="undefined")return Vl;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function $i(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function Cn(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function Ii(e){return e instanceof Date?e:typeof e=="string"?new Date(e):Cn($e.fromJSON(e))}function It(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Vl.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());var Ig;(function(e){e[e.EXEC_UNSPECIFIED=0]="EXEC_UNSPECIFIED",e[e.EXEC_TRY=1]="EXEC_TRY",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(Ig||(Ig={}));function xg(e){switch(e){case 0:case"EXEC_UNSPECIFIED":return 0;case 1:case"EXEC_TRY":return 1;case-1:case"UNRECOGNIZED":default:return-1}}function Dg(e){switch(e){case 0:return"EXEC_UNSPECIFIED";case 1:return"EXEC_TRY";default:return"UNKNOWN"}}const Wl={admin:"",metadata:""},Qg={encode(e,t=l.Writer.create()){e.admin!==""&&t.uint32(10).string(e.admin);for(const n of e.members)ke.encode(n,t.uint32(18).fork()).ldelim();return e.metadata!==""&&t.uint32(26).string(e.metadata),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Wl);for(i.members=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.admin=n.string();break;case 2:i.members.push(ke.decode(n,n.uint32()));break;case 3:i.metadata=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Wl);if(t.members=[],e.admin!==void 0&&e.admin!==null?t.admin=String(e.admin):t.admin="",e.members!==void 0&&e.members!==null)for(const n of e.members)t.members.push(ke.fromJSON(n));return e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",t},toJSON(e){const t={};return e.admin!==void 0&&(t.admin=e.admin),e.members?t.members=e.members.map(n=>n?ke.toJSON(n):void 0):t.members=[],e.metadata!==void 0&&(t.metadata=e.metadata),t},fromPartial(e){const t=r({},Wl);if(t.members=[],e.admin!==void 0&&e.admin!==null?t.admin=e.admin:t.admin="",e.members!==void 0&&e.members!==null)for(const n of e.members)t.members.push(ke.fromPartial(n));return e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",t}},Fl={admin:"",group_id:0},Mg={encode(e,t=l.Writer.create()){e.admin!==""&&t.uint32(10).string(e.admin),e.group_id!==0&&t.uint32(16).uint64(e.group_id);for(const n of e.member_updates)ke.encode(n,t.uint32(26).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Fl);for(i.member_updates=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.admin=n.string();break;case 2:i.group_id=Xt(n.uint64());break;case 3:i.member_updates.push(ke.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Fl);if(t.member_updates=[],e.admin!==void 0&&e.admin!==null?t.admin=String(e.admin):t.admin="",e.group_id!==void 0&&e.group_id!==null?t.group_id=Number(e.group_id):t.group_id=0,e.member_updates!==void 0&&e.member_updates!==null)for(const n of e.member_updates)t.member_updates.push(ke.fromJSON(n));return t},toJSON(e){const t={};return e.admin!==void 0&&(t.admin=e.admin),e.group_id!==void 0&&(t.group_id=e.group_id),e.member_updates?t.member_updates=e.member_updates.map(n=>n?ke.toJSON(n):void 0):t.member_updates=[],t},fromPartial(e){const t=r({},Fl);if(t.member_updates=[],e.admin!==void 0&&e.admin!==null?t.admin=e.admin:t.admin="",e.group_id!==void 0&&e.group_id!==null?t.group_id=e.group_id:t.group_id=0,e.member_updates!==void 0&&e.member_updates!==null)for(const n of e.member_updates)t.member_updates.push(ke.fromPartial(n));return t}},Hl={admin:"",group_id:0,new_admin:""},Bg={encode(e,t=l.Writer.create()){return e.admin!==""&&t.uint32(10).string(e.admin),e.group_id!==0&&t.uint32(16).uint64(e.group_id),e.new_admin!==""&&t.uint32(26).string(e.new_admin),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Hl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.admin=n.string();break;case 2:i.group_id=Xt(n.uint64());break;case 3:i.new_admin=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Hl);return e.admin!==void 0&&e.admin!==null?t.admin=String(e.admin):t.admin="",e.group_id!==void 0&&e.group_id!==null?t.group_id=Number(e.group_id):t.group_id=0,e.new_admin!==void 0&&e.new_admin!==null?t.new_admin=String(e.new_admin):t.new_admin="",t},toJSON(e){const t={};return e.admin!==void 0&&(t.admin=e.admin),e.group_id!==void 0&&(t.group_id=e.group_id),e.new_admin!==void 0&&(t.new_admin=e.new_admin),t},fromPartial(e){const t=r({},Hl);return e.admin!==void 0&&e.admin!==null?t.admin=e.admin:t.admin="",e.group_id!==void 0&&e.group_id!==null?t.group_id=e.group_id:t.group_id=0,e.new_admin!==void 0&&e.new_admin!==null?t.new_admin=e.new_admin:t.new_admin="",t}},zl={admin:"",group_id:0,metadata:""},Jg={encode(e,t=l.Writer.create()){return e.admin!==""&&t.uint32(10).string(e.admin),e.group_id!==0&&t.uint32(16).uint64(e.group_id),e.metadata!==""&&t.uint32(26).string(e.metadata),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},zl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.admin=n.string();break;case 2:i.group_id=Xt(n.uint64());break;case 3:i.metadata=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},zl);return e.admin!==void 0&&e.admin!==null?t.admin=String(e.admin):t.admin="",e.group_id!==void 0&&e.group_id!==null?t.group_id=Number(e.group_id):t.group_id=0,e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",t},toJSON(e){const t={};return e.admin!==void 0&&(t.admin=e.admin),e.group_id!==void 0&&(t.group_id=e.group_id),e.metadata!==void 0&&(t.metadata=e.metadata),t},fromPartial(e){const t=r({},zl);return e.admin!==void 0&&e.admin!==null?t.admin=e.admin:t.admin="",e.group_id!==void 0&&e.group_id!==null?t.group_id=e.group_id:t.group_id=0,e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",t}},Yl={admin:"",group_id:0,metadata:""},Gg={encode(e,t=l.Writer.create()){return e.admin!==""&&t.uint32(10).string(e.admin),e.group_id!==0&&t.uint32(16).uint64(e.group_id),e.metadata!==""&&t.uint32(26).string(e.metadata),e.decision_policy!==void 0&&V.encode(e.decision_policy,t.uint32(34).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Yl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.admin=n.string();break;case 2:i.group_id=Xt(n.uint64());break;case 3:i.metadata=n.string();break;case 4:i.decision_policy=V.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Yl);return e.admin!==void 0&&e.admin!==null?t.admin=String(e.admin):t.admin="",e.group_id!==void 0&&e.group_id!==null?t.group_id=Number(e.group_id):t.group_id=0,e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",e.decision_policy!==void 0&&e.decision_policy!==null?t.decision_policy=V.fromJSON(e.decision_policy):t.decision_policy=void 0,t},toJSON(e){const t={};return e.admin!==void 0&&(t.admin=e.admin),e.group_id!==void 0&&(t.group_id=e.group_id),e.metadata!==void 0&&(t.metadata=e.metadata),e.decision_policy!==void 0&&(t.decision_policy=e.decision_policy?V.toJSON(e.decision_policy):void 0),t},fromPartial(e){const t=r({},Yl);return e.admin!==void 0&&e.admin!==null?t.admin=e.admin:t.admin="",e.group_id!==void 0&&e.group_id!==null?t.group_id=e.group_id:t.group_id=0,e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",e.decision_policy!==void 0&&e.decision_policy!==null?t.decision_policy=V.fromPartial(e.decision_policy):t.decision_policy=void 0,t}},Xl={admin:"",group_policy_address:"",new_admin:""},Lg={encode(e,t=l.Writer.create()){return e.admin!==""&&t.uint32(10).string(e.admin),e.group_policy_address!==""&&t.uint32(18).string(e.group_policy_address),e.new_admin!==""&&t.uint32(26).string(e.new_admin),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Xl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.admin=n.string();break;case 2:i.group_policy_address=n.string();break;case 3:i.new_admin=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Xl);return e.admin!==void 0&&e.admin!==null?t.admin=String(e.admin):t.admin="",e.group_policy_address!==void 0&&e.group_policy_address!==null?t.group_policy_address=String(e.group_policy_address):t.group_policy_address="",e.new_admin!==void 0&&e.new_admin!==null?t.new_admin=String(e.new_admin):t.new_admin="",t},toJSON(e){const t={};return e.admin!==void 0&&(t.admin=e.admin),e.group_policy_address!==void 0&&(t.group_policy_address=e.group_policy_address),e.new_admin!==void 0&&(t.new_admin=e.new_admin),t},fromPartial(e){const t=r({},Xl);return e.admin!==void 0&&e.admin!==null?t.admin=e.admin:t.admin="",e.group_policy_address!==void 0&&e.group_policy_address!==null?t.group_policy_address=e.group_policy_address:t.group_policy_address="",e.new_admin!==void 0&&e.new_admin!==null?t.new_admin=e.new_admin:t.new_admin="",t}},Kl={admin:"",group_metadata:"",group_policy_metadata:"",group_policy_as_admin:!1},Vg={encode(e,t=l.Writer.create()){e.admin!==""&&t.uint32(10).string(e.admin);for(const n of e.members)ke.encode(n,t.uint32(18).fork()).ldelim();return e.group_metadata!==""&&t.uint32(26).string(e.group_metadata),e.group_policy_metadata!==""&&t.uint32(34).string(e.group_policy_metadata),e.group_policy_as_admin===!0&&t.uint32(40).bool(e.group_policy_as_admin),e.decision_policy!==void 0&&V.encode(e.decision_policy,t.uint32(50).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Kl);for(i.members=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.admin=n.string();break;case 2:i.members.push(ke.decode(n,n.uint32()));break;case 3:i.group_metadata=n.string();break;case 4:i.group_policy_metadata=n.string();break;case 5:i.group_policy_as_admin=n.bool();break;case 6:i.decision_policy=V.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Kl);if(t.members=[],e.admin!==void 0&&e.admin!==null?t.admin=String(e.admin):t.admin="",e.members!==void 0&&e.members!==null)for(const n of e.members)t.members.push(ke.fromJSON(n));return e.group_metadata!==void 0&&e.group_metadata!==null?t.group_metadata=String(e.group_metadata):t.group_metadata="",e.group_policy_metadata!==void 0&&e.group_policy_metadata!==null?t.group_policy_metadata=String(e.group_policy_metadata):t.group_policy_metadata="",e.group_policy_as_admin!==void 0&&e.group_policy_as_admin!==null?t.group_policy_as_admin=Boolean(e.group_policy_as_admin):t.group_policy_as_admin=!1,e.decision_policy!==void 0&&e.decision_policy!==null?t.decision_policy=V.fromJSON(e.decision_policy):t.decision_policy=void 0,t},toJSON(e){const t={};return e.admin!==void 0&&(t.admin=e.admin),e.members?t.members=e.members.map(n=>n?ke.toJSON(n):void 0):t.members=[],e.group_metadata!==void 0&&(t.group_metadata=e.group_metadata),e.group_policy_metadata!==void 0&&(t.group_policy_metadata=e.group_policy_metadata),e.group_policy_as_admin!==void 0&&(t.group_policy_as_admin=e.group_policy_as_admin),e.decision_policy!==void 0&&(t.decision_policy=e.decision_policy?V.toJSON(e.decision_policy):void 0),t},fromPartial(e){const t=r({},Kl);if(t.members=[],e.admin!==void 0&&e.admin!==null?t.admin=e.admin:t.admin="",e.members!==void 0&&e.members!==null)for(const n of e.members)t.members.push(ke.fromPartial(n));return e.group_metadata!==void 0&&e.group_metadata!==null?t.group_metadata=e.group_metadata:t.group_metadata="",e.group_policy_metadata!==void 0&&e.group_policy_metadata!==null?t.group_policy_metadata=e.group_policy_metadata:t.group_policy_metadata="",e.group_policy_as_admin!==void 0&&e.group_policy_as_admin!==null?t.group_policy_as_admin=e.group_policy_as_admin:t.group_policy_as_admin=!1,e.decision_policy!==void 0&&e.decision_policy!==null?t.decision_policy=V.fromPartial(e.decision_policy):t.decision_policy=void 0,t}},Zl={admin:"",group_policy_address:""},Wg={encode(e,t=l.Writer.create()){return e.admin!==""&&t.uint32(10).string(e.admin),e.group_policy_address!==""&&t.uint32(18).string(e.group_policy_address),e.decision_policy!==void 0&&V.encode(e.decision_policy,t.uint32(26).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Zl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.admin=n.string();break;case 2:i.group_policy_address=n.string();break;case 3:i.decision_policy=V.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Zl);return e.admin!==void 0&&e.admin!==null?t.admin=String(e.admin):t.admin="",e.group_policy_address!==void 0&&e.group_policy_address!==null?t.group_policy_address=String(e.group_policy_address):t.group_policy_address="",e.decision_policy!==void 0&&e.decision_policy!==null?t.decision_policy=V.fromJSON(e.decision_policy):t.decision_policy=void 0,t},toJSON(e){const t={};return e.admin!==void 0&&(t.admin=e.admin),e.group_policy_address!==void 0&&(t.group_policy_address=e.group_policy_address),e.decision_policy!==void 0&&(t.decision_policy=e.decision_policy?V.toJSON(e.decision_policy):void 0),t},fromPartial(e){const t=r({},Zl);return e.admin!==void 0&&e.admin!==null?t.admin=e.admin:t.admin="",e.group_policy_address!==void 0&&e.group_policy_address!==null?t.group_policy_address=e.group_policy_address:t.group_policy_address="",e.decision_policy!==void 0&&e.decision_policy!==null?t.decision_policy=V.fromPartial(e.decision_policy):t.decision_policy=void 0,t}},jl={admin:"",group_policy_address:"",metadata:""},Fg={encode(e,t=l.Writer.create()){return e.admin!==""&&t.uint32(10).string(e.admin),e.group_policy_address!==""&&t.uint32(18).string(e.group_policy_address),e.metadata!==""&&t.uint32(26).string(e.metadata),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},jl);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.admin=n.string();break;case 2:i.group_policy_address=n.string();break;case 3:i.metadata=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},jl);return e.admin!==void 0&&e.admin!==null?t.admin=String(e.admin):t.admin="",e.group_policy_address!==void 0&&e.group_policy_address!==null?t.group_policy_address=String(e.group_policy_address):t.group_policy_address="",e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",t},toJSON(e){const t={};return e.admin!==void 0&&(t.admin=e.admin),e.group_policy_address!==void 0&&(t.group_policy_address=e.group_policy_address),e.metadata!==void 0&&(t.metadata=e.metadata),t},fromPartial(e){const t=r({},jl);return e.admin!==void 0&&e.admin!==null?t.admin=e.admin:t.admin="",e.group_policy_address!==void 0&&e.group_policy_address!==null?t.group_policy_address=e.group_policy_address:t.group_policy_address="",e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",t}},eu={group_policy_address:"",proposers:"",metadata:"",exec:0},Hg={encode(e,t=l.Writer.create()){e.group_policy_address!==""&&t.uint32(10).string(e.group_policy_address);for(const n of e.proposers)t.uint32(18).string(n);e.metadata!==""&&t.uint32(26).string(e.metadata);for(const n of e.messages)V.encode(n,t.uint32(34).fork()).ldelim();return e.exec!==0&&t.uint32(40).int32(e.exec),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},eu);for(i.proposers=[],i.messages=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.group_policy_address=n.string();break;case 2:i.proposers.push(n.string());break;case 3:i.metadata=n.string();break;case 4:i.messages.push(V.decode(n,n.uint32()));break;case 5:i.exec=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},eu);if(t.proposers=[],t.messages=[],e.group_policy_address!==void 0&&e.group_policy_address!==null?t.group_policy_address=String(e.group_policy_address):t.group_policy_address="",e.proposers!==void 0&&e.proposers!==null)for(const n of e.proposers)t.proposers.push(String(n));if(e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",e.messages!==void 0&&e.messages!==null)for(const n of e.messages)t.messages.push(V.fromJSON(n));return e.exec!==void 0&&e.exec!==null?t.exec=xg(e.exec):t.exec=0,t},toJSON(e){const t={};return e.group_policy_address!==void 0&&(t.group_policy_address=e.group_policy_address),e.proposers?t.proposers=e.proposers.map(n=>n):t.proposers=[],e.metadata!==void 0&&(t.metadata=e.metadata),e.messages?t.messages=e.messages.map(n=>n?V.toJSON(n):void 0):t.messages=[],e.exec!==void 0&&(t.exec=Dg(e.exec)),t},fromPartial(e){const t=r({},eu);if(t.proposers=[],t.messages=[],e.group_policy_address!==void 0&&e.group_policy_address!==null?t.group_policy_address=e.group_policy_address:t.group_policy_address="",e.proposers!==void 0&&e.proposers!==null)for(const n of e.proposers)t.proposers.push(n);if(e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",e.messages!==void 0&&e.messages!==null)for(const n of e.messages)t.messages.push(V.fromPartial(n));return e.exec!==void 0&&e.exec!==null?t.exec=e.exec:t.exec=0,t}},tu={proposal_id:0,address:""},zg={encode(e,t=l.Writer.create()){return e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.address!==""&&t.uint32(18).string(e.address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},tu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Xt(n.uint64());break;case 2:i.address=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},tu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.address!==void 0&&(t.address=e.address),t},fromPartial(e){const t=r({},tu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",t}},nu={proposal_id:0,voter:"",option:0,metadata:"",exec:0},Yg={encode(e,t=l.Writer.create()){return e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.voter!==""&&t.uint32(18).string(e.voter),e.option!==0&&t.uint32(24).int32(e.option),e.metadata!==""&&t.uint32(34).string(e.metadata),e.exec!==0&&t.uint32(40).int32(e.exec),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},nu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Xt(n.uint64());break;case 2:i.voter=n.string();break;case 3:i.option=n.int32();break;case 4:i.metadata=n.string();break;case 5:i.exec=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},nu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=String(e.voter):t.voter="",e.option!==void 0&&e.option!==null?t.option=Ng(e.option):t.option=0,e.metadata!==void 0&&e.metadata!==null?t.metadata=String(e.metadata):t.metadata="",e.exec!==void 0&&e.exec!==null?t.exec=xg(e.exec):t.exec=0,t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.voter!==void 0&&(t.voter=e.voter),e.option!==void 0&&(t.option=Ag(e.option)),e.metadata!==void 0&&(t.metadata=e.metadata),e.exec!==void 0&&(t.exec=Dg(e.exec)),t},fromPartial(e){const t=r({},nu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.voter!==void 0&&e.voter!==null?t.voter=e.voter:t.voter="",e.option!==void 0&&e.option!==null?t.option=e.option:t.option=0,e.metadata!==void 0&&e.metadata!==null?t.metadata=e.metadata:t.metadata="",e.exec!==void 0&&e.exec!==null?t.exec=e.exec:t.exec=0,t}},iu={proposal_id:0,executor:""},Xg={encode(e,t=l.Writer.create()){return e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.executor!==""&&t.uint32(18).string(e.executor),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},iu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Xt(n.uint64());break;case 2:i.executor=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},iu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.executor!==void 0&&e.executor!==null?t.executor=String(e.executor):t.executor="",t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.executor!==void 0&&(t.executor=e.executor),t},fromPartial(e){const t=r({},iu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.executor!==void 0&&e.executor!==null?t.executor=e.executor:t.executor="",t}},ou={address:"",group_id:0},Kg={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),e.group_id!==0&&t.uint32(16).uint64(e.group_id),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ou);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.group_id=Xt(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ou);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.group_id!==void 0&&e.group_id!==null?t.group_id=Number(e.group_id):t.group_id=0,t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.group_id!==void 0&&(t.group_id=e.group_id),t},fromPartial(e){const t=r({},ou);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.group_id!==void 0&&e.group_id!==null?t.group_id=e.group_id:t.group_id=0,t}};var su=(()=>{if(typeof su!="undefined")return su;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Xt(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new su.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const $4=[["/cosmos.group.v1.MsgUpdateGroupPolicyAdmin",Lg],["/cosmos.group.v1.MsgUpdateGroupPolicyMetadata",Fg],["/cosmos.group.v1.MsgCreateGroupWithPolicy",Vg],["/cosmos.group.v1.MsgSubmitProposal",Hg],["/cosmos.group.v1.MsgCreateGroup",Qg],["/cosmos.group.v1.MsgVote",Yg],["/cosmos.group.v1.MsgUpdateGroupAdmin",Bg],["/cosmos.group.v1.MsgExec",Xg],["/cosmos.group.v1.MsgCreateGroupPolicy",Gg],["/cosmos.group.v1.MsgUpdateGroupMembers",Mg],["/cosmos.group.v1.MsgLeaveGroup",Kg],["/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",Wg],["/cosmos.group.v1.MsgWithdrawProposal",zg],["/cosmos.group.v1.MsgUpdateGroupMetadata",Jg]],H=new Error("wallet is required"),ru=new Y.Registry($4),I4={amount:[],gas:"200000"},x4=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw H;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:ru}):n=await J.SigningStargateClient.offline(e,{registry:ru});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:I4,memo:""})=>n.signAndBroadcast(s,i,o,d),msgUpdateGroupPolicyAdmin:i=>({typeUrl:"/cosmos.group.v1.MsgUpdateGroupPolicyAdmin",value:Lg.fromPartial(i)}),msgUpdateGroupPolicyMetadata:i=>({typeUrl:"/cosmos.group.v1.MsgUpdateGroupPolicyMetadata",value:Fg.fromPartial(i)}),msgCreateGroupWithPolicy:i=>({typeUrl:"/cosmos.group.v1.MsgCreateGroupWithPolicy",value:Vg.fromPartial(i)}),msgSubmitProposal:i=>({typeUrl:"/cosmos.group.v1.MsgSubmitProposal",value:Hg.fromPartial(i)}),msgCreateGroup:i=>({typeUrl:"/cosmos.group.v1.MsgCreateGroup",value:Qg.fromPartial(i)}),msgVote:i=>({typeUrl:"/cosmos.group.v1.MsgVote",value:Yg.fromPartial(i)}),msgUpdateGroupAdmin:i=>({typeUrl:"/cosmos.group.v1.MsgUpdateGroupAdmin",value:Bg.fromPartial(i)}),msgExec:i=>({typeUrl:"/cosmos.group.v1.MsgExec",value:Xg.fromPartial(i)}),msgCreateGroupPolicy:i=>({typeUrl:"/cosmos.group.v1.MsgCreateGroupPolicy",value:Gg.fromPartial(i)}),msgUpdateGroupMembers:i=>({typeUrl:"/cosmos.group.v1.MsgUpdateGroupMembers",value:Mg.fromPartial(i)}),msgLeaveGroup:i=>({typeUrl:"/cosmos.group.v1.MsgLeaveGroup",value:Kg.fromPartial(i)}),msgUpdateGroupPolicyDecisionPolicy:i=>({typeUrl:"/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",value:Wg.fromPartial(i)}),msgWithdrawProposal:i=>({typeUrl:"/cosmos.group.v1.MsgWithdrawProposal",value:zg.fromPartial(i)}),msgUpdateGroupMetadata:i=>({typeUrl:"/cosmos.group.v1.MsgUpdateGroupMetadata",value:Jg.fromPartial(i)})}},D4=async({addr:e}={addr:"http://localhost:1317"})=>new _4({baseUrl:e}),au={group_id:0},Q4={encode(e,t=l.Writer.create()){return e.group_id!==0&&t.uint32(8).uint64(e.group_id),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},au);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.group_id=Rn(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},au);return e.group_id!==void 0&&e.group_id!==null?t.group_id=Number(e.group_id):t.group_id=0,t},toJSON(e){const t={};return e.group_id!==void 0&&(t.group_id=e.group_id),t},fromPartial(e){const t=r({},au);return e.group_id!==void 0&&e.group_id!==null?t.group_id=e.group_id:t.group_id=0,t}},du={group_id:0},M4={encode(e,t=l.Writer.create()){return e.group_id!==0&&t.uint32(8).uint64(e.group_id),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},du);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.group_id=Rn(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},du);return e.group_id!==void 0&&e.group_id!==null?t.group_id=Number(e.group_id):t.group_id=0,t},toJSON(e){const t={};return e.group_id!==void 0&&(t.group_id=e.group_id),t},fromPartial(e){const t=r({},du);return e.group_id!==void 0&&e.group_id!==null?t.group_id=e.group_id:t.group_id=0,t}},lu={address:""},B4={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},lu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},lu);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),t},fromPartial(e){const t=r({},lu);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",t}},uu={address:""},J4={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},uu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},uu);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),t},fromPartial(e){const t=r({},uu);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",t}},cu={proposal_id:0},G4={encode(e,t=l.Writer.create()){return e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},cu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Rn(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},cu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),t},fromPartial(e){const t=r({},cu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,t}},pu={proposal_id:0},L4={encode(e,t=l.Writer.create()){return e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},pu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Rn(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},pu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),t},fromPartial(e){const t=r({},pu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,t}},fu={proposal_id:0},V4={encode(e,t=l.Writer.create()){return e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},fu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Rn(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},fu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),t},fromPartial(e){const t=r({},fu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,t}},mu={proposal_id:0,result:0,logs:""},W4={encode(e,t=l.Writer.create()){return e.proposal_id!==0&&t.uint32(8).uint64(e.proposal_id),e.result!==0&&t.uint32(16).int32(e.result),e.logs!==""&&t.uint32(26).string(e.logs),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},mu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.proposal_id=Rn(n.uint64());break;case 2:i.result=n.int32();break;case 3:i.logs=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},mu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=Number(e.proposal_id):t.proposal_id=0,e.result!==void 0&&e.result!==null?t.result=Ug(e.result):t.result=0,e.logs!==void 0&&e.logs!==null?t.logs=String(e.logs):t.logs="",t},toJSON(e){const t={};return e.proposal_id!==void 0&&(t.proposal_id=e.proposal_id),e.result!==void 0&&(t.result=$g(e.result)),e.logs!==void 0&&(t.logs=e.logs),t},fromPartial(e){const t=r({},mu);return e.proposal_id!==void 0&&e.proposal_id!==null?t.proposal_id=e.proposal_id:t.proposal_id=0,e.result!==void 0&&e.result!==null?t.result=e.result:t.result=0,e.logs!==void 0&&e.logs!==null?t.logs=e.logs:t.logs="",t}},hu={group_id:0,address:""},F4={encode(e,t=l.Writer.create()){return e.group_id!==0&&t.uint32(8).uint64(e.group_id),e.address!==""&&t.uint32(18).string(e.address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},hu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.group_id=Rn(n.uint64());break;case 2:i.address=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},hu);return e.group_id!==void 0&&e.group_id!==null?t.group_id=Number(e.group_id):t.group_id=0,e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",t},toJSON(e){const t={};return e.group_id!==void 0&&(t.group_id=e.group_id),e.address!==void 0&&(t.address=e.address),t},fromPartial(e){const t=r({},hu);return e.group_id!==void 0&&e.group_id!==null?t.group_id=e.group_id:t.group_id=0,e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",t}};var gu=(()=>{if(typeof gu!="undefined")return gu;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Rn(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new gu.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());async function z(e){return await x4(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function Ie(e){return await D4({addr:e["common/env/apiCosmos"]})}function Kt(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function le(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const Zg=()=>({GroupInfo:{},GroupPolicyInfo:{},GroupMembers:{},GroupsByAdmin:{},GroupPoliciesByGroup:{},GroupPoliciesByAdmin:{},Proposal:{},ProposalsByGroupPolicy:{},VoteByProposalVoter:{},VotesByProposal:{},VotesByVoter:{},GroupsByMember:{},TallyResult:{},_Structure:{EventCreateGroup:le(Q4.fromPartial({})),EventUpdateGroup:le(M4.fromPartial({})),EventCreateGroupPolicy:le(B4.fromPartial({})),EventUpdateGroupPolicy:le(J4.fromPartial({})),EventSubmitProposal:le(G4.fromPartial({})),EventWithdrawProposal:le(L4.fromPartial({})),EventVote:le(V4.fromPartial({})),EventExec:le(W4.fromPartial({})),EventLeaveGroup:le(F4.fromPartial({})),Member:le(qi.fromPartial({})),MemberRequest:le(ke.fromPartial({})),ThresholdDecisionPolicy:le(E4.fromPartial({})),PercentageDecisionPolicy:le(T4.fromPartial({})),DecisionPolicyWindows:le(Ke.fromPartial({})),GroupInfo:le(N4.fromPartial({})),GroupMember:le(A4.fromPartial({})),GroupPolicyInfo:le(O4.fromPartial({})),Proposal:le(q4.fromPartial({})),TallyResult:le(Ui.fromPartial({})),Vote:le(U4.fromPartial({}))},_Registry:ru,_Subscriptions:new Set}),H4=Zg();var z4={namespaced:!0,state:H4,mutations:{RESET_STATE(e){Object.assign(e,Zg())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getGroupInfo:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GroupInfo[JSON.stringify(t)])!=null?n:{}},getGroupPolicyInfo:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GroupPolicyInfo[JSON.stringify(t)])!=null?n:{}},getGroupMembers:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GroupMembers[JSON.stringify(t)])!=null?n:{}},getGroupsByAdmin:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GroupsByAdmin[JSON.stringify(t)])!=null?n:{}},getGroupPoliciesByGroup:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GroupPoliciesByGroup[JSON.stringify(t)])!=null?n:{}},getGroupPoliciesByAdmin:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GroupPoliciesByAdmin[JSON.stringify(t)])!=null?n:{}},getProposal:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Proposal[JSON.stringify(t)])!=null?n:{}},getProposalsByGroupPolicy:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ProposalsByGroupPolicy[JSON.stringify(t)])!=null?n:{}},getVoteByProposalVoter:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.VoteByProposalVoter[JSON.stringify(t)])!=null?n:{}},getVotesByProposal:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.VotesByProposal[JSON.stringify(t)])!=null?n:{}},getVotesByVoter:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.VotesByVoter[JSON.stringify(t)])!=null?n:{}},getGroupsByMember:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GroupsByMember[JSON.stringify(t)])!=null?n:{}},getTallyResult:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.TallyResult[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.group.v1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryGroupInfo({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Ie(t)).queryGroupInfo(a.group_id)).data;return e("QUERY",{query:"GroupInfo",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryGroupInfo",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGroupInfo({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryGroupInfo API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryGroupPolicyInfo({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Ie(t)).queryGroupPolicyInfo(a.address)).data;return e("QUERY",{query:"GroupPolicyInfo",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryGroupPolicyInfo",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGroupPolicyInfo({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryGroupPolicyInfo API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryGroupMembers({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Ie(t);let u=(await p.queryGroupMembers(a.group_id,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryGroupMembers(a.group_id,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Kt(u,g)}return e("QUERY",{query:"GroupMembers",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryGroupMembers",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGroupMembers({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryGroupMembers API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryGroupsByAdmin({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Ie(t);let u=(await p.queryGroupsByAdmin(a.admin,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryGroupsByAdmin(a.admin,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Kt(u,g)}return e("QUERY",{query:"GroupsByAdmin",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryGroupsByAdmin",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGroupsByAdmin({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryGroupsByAdmin API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryGroupPoliciesByGroup({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Ie(t);let u=(await p.queryGroupPoliciesByGroup(a.group_id,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryGroupPoliciesByGroup(a.group_id,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Kt(u,g)}return e("QUERY",{query:"GroupPoliciesByGroup",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryGroupPoliciesByGroup",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGroupPoliciesByGroup({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryGroupPoliciesByGroup API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryGroupPoliciesByAdmin({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Ie(t);let u=(await p.queryGroupPoliciesByAdmin(a.admin,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryGroupPoliciesByAdmin(a.admin,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Kt(u,g)}return e("QUERY",{query:"GroupPoliciesByAdmin",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryGroupPoliciesByAdmin",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGroupPoliciesByAdmin({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryGroupPoliciesByAdmin API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryProposal({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Ie(t)).queryProposal(a.proposal_id)).data;return e("QUERY",{query:"Proposal",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryProposal",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getProposal({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryProposal API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryProposalsByGroupPolicy({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Ie(t);let u=(await p.queryProposalsByGroupPolicy(a.address,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryProposalsByGroupPolicy(a.address,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Kt(u,g)}return e("QUERY",{query:"ProposalsByGroupPolicy",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryProposalsByGroupPolicy",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getProposalsByGroupPolicy({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryProposalsByGroupPolicy API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryVoteByProposalVoter({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Ie(t)).queryVoteByProposalVoter(a.proposal_id,a.voter)).data;return e("QUERY",{query:"VoteByProposalVoter",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryVoteByProposalVoter",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getVoteByProposalVoter({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryVoteByProposalVoter API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryVotesByProposal({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Ie(t);let u=(await p.queryVotesByProposal(a.proposal_id,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryVotesByProposal(a.proposal_id,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Kt(u,g)}return e("QUERY",{query:"VotesByProposal",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryVotesByProposal",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getVotesByProposal({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryVotesByProposal API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryVotesByVoter({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Ie(t);let u=(await p.queryVotesByVoter(a.voter,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryVotesByVoter(a.voter,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Kt(u,g)}return e("QUERY",{query:"VotesByVoter",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryVotesByVoter",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getVotesByVoter({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryVotesByVoter API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryGroupsByMember({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Ie(t);let u=(await p.queryGroupsByMember(a.address,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryGroupsByMember(a.address,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Kt(u,g)}return e("QUERY",{query:"GroupsByMember",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryGroupsByMember",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGroupsByMember({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryGroupsByMember API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryTallyResult({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Ie(t)).queryTallyResult(a.proposal_id)).data;return e("QUERY",{query:"TallyResult",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryTallyResult",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getTallyResult({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryTallyResult API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgUpdateGroupPolicyAdmin({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgUpdateGroupPolicyAdmin(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgUpdateGroupPolicyAdmin:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateGroupPolicyAdmin:Send Could not broadcast Tx: "+o.message)}},async sendMsgUpdateGroupPolicyMetadata({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgUpdateGroupPolicyMetadata(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgUpdateGroupPolicyMetadata:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateGroupPolicyMetadata:Send Could not broadcast Tx: "+o.message)}},async sendMsgCreateGroupWithPolicy({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgCreateGroupWithPolicy(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgCreateGroupWithPolicy:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateGroupWithPolicy:Send Could not broadcast Tx: "+o.message)}},async sendMsgSubmitProposal({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgSubmitProposal(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgSubmitProposal:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSubmitProposal:Send Could not broadcast Tx: "+o.message)}},async sendMsgCreateGroup({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgCreateGroup(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgCreateGroup:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateGroup:Send Could not broadcast Tx: "+o.message)}},async sendMsgVote({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgVote(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgVote:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgVote:Send Could not broadcast Tx: "+o.message)}},async sendMsgUpdateGroupAdmin({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgUpdateGroupAdmin(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgUpdateGroupAdmin:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateGroupAdmin:Send Could not broadcast Tx: "+o.message)}},async sendMsgExec({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgExec(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgExec:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgExec:Send Could not broadcast Tx: "+o.message)}},async sendMsgCreateGroupPolicy({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgCreateGroupPolicy(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgCreateGroupPolicy:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateGroupPolicy:Send Could not broadcast Tx: "+o.message)}},async sendMsgUpdateGroupMembers({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgUpdateGroupMembers(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgUpdateGroupMembers:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateGroupMembers:Send Could not broadcast Tx: "+o.message)}},async sendMsgLeaveGroup({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgLeaveGroup(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgLeaveGroup:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgLeaveGroup:Send Could not broadcast Tx: "+o.message)}},async sendMsgUpdateGroupPolicyDecisionPolicy({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgUpdateGroupPolicyDecisionPolicy(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgUpdateGroupPolicyDecisionPolicy:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateGroupPolicyDecisionPolicy:Send Could not broadcast Tx: "+o.message)}},async sendMsgWithdrawProposal({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgWithdrawProposal(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgWithdrawProposal:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgWithdrawProposal:Send Could not broadcast Tx: "+o.message)}},async sendMsgUpdateGroupMetadata({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await z(e),d=await o.msgUpdateGroupMetadata(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==H?new Error("TxClient:MsgUpdateGroupMetadata:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateGroupMetadata:Send Could not broadcast Tx: "+o.message)}},async MsgUpdateGroupPolicyAdmin({rootGetters:e},{value:t}){try{return await(await z(e)).msgUpdateGroupPolicyAdmin(t)}catch(n){throw n==H?new Error("TxClient:MsgUpdateGroupPolicyAdmin:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateGroupPolicyAdmin:Create Could not create message: "+n.message)}},async MsgUpdateGroupPolicyMetadata({rootGetters:e},{value:t}){try{return await(await z(e)).msgUpdateGroupPolicyMetadata(t)}catch(n){throw n==H?new Error("TxClient:MsgUpdateGroupPolicyMetadata:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateGroupPolicyMetadata:Create Could not create message: "+n.message)}},async MsgCreateGroupWithPolicy({rootGetters:e},{value:t}){try{return await(await z(e)).msgCreateGroupWithPolicy(t)}catch(n){throw n==H?new Error("TxClient:MsgCreateGroupWithPolicy:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateGroupWithPolicy:Create Could not create message: "+n.message)}},async MsgSubmitProposal({rootGetters:e},{value:t}){try{return await(await z(e)).msgSubmitProposal(t)}catch(n){throw n==H?new Error("TxClient:MsgSubmitProposal:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSubmitProposal:Create Could not create message: "+n.message)}},async MsgCreateGroup({rootGetters:e},{value:t}){try{return await(await z(e)).msgCreateGroup(t)}catch(n){throw n==H?new Error("TxClient:MsgCreateGroup:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateGroup:Create Could not create message: "+n.message)}},async MsgVote({rootGetters:e},{value:t}){try{return await(await z(e)).msgVote(t)}catch(n){throw n==H?new Error("TxClient:MsgVote:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgVote:Create Could not create message: "+n.message)}},async MsgUpdateGroupAdmin({rootGetters:e},{value:t}){try{return await(await z(e)).msgUpdateGroupAdmin(t)}catch(n){throw n==H?new Error("TxClient:MsgUpdateGroupAdmin:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateGroupAdmin:Create Could not create message: "+n.message)}},async MsgExec({rootGetters:e},{value:t}){try{return await(await z(e)).msgExec(t)}catch(n){throw n==H?new Error("TxClient:MsgExec:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgExec:Create Could not create message: "+n.message)}},async MsgCreateGroupPolicy({rootGetters:e},{value:t}){try{return await(await z(e)).msgCreateGroupPolicy(t)}catch(n){throw n==H?new Error("TxClient:MsgCreateGroupPolicy:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateGroupPolicy:Create Could not create message: "+n.message)}},async MsgUpdateGroupMembers({rootGetters:e},{value:t}){try{return await(await z(e)).msgUpdateGroupMembers(t)}catch(n){throw n==H?new Error("TxClient:MsgUpdateGroupMembers:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateGroupMembers:Create Could not create message: "+n.message)}},async MsgLeaveGroup({rootGetters:e},{value:t}){try{return await(await z(e)).msgLeaveGroup(t)}catch(n){throw n==H?new Error("TxClient:MsgLeaveGroup:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgLeaveGroup:Create Could not create message: "+n.message)}},async MsgUpdateGroupPolicyDecisionPolicy({rootGetters:e},{value:t}){try{return await(await z(e)).msgUpdateGroupPolicyDecisionPolicy(t)}catch(n){throw n==H?new Error("TxClient:MsgUpdateGroupPolicyDecisionPolicy:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateGroupPolicyDecisionPolicy:Create Could not create message: "+n.message)}},async MsgWithdrawProposal({rootGetters:e},{value:t}){try{return await(await z(e)).msgWithdrawProposal(t)}catch(n){throw n==H?new Error("TxClient:MsgWithdrawProposal:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgWithdrawProposal:Create Could not create message: "+n.message)}},async MsgUpdateGroupMetadata({rootGetters:e},{value:t}){try{return await(await z(e)).msgUpdateGroupMetadata(t)}catch(n){throw n==H?new Error("TxClient:MsgUpdateGroupMetadata:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateGroupMetadata:Create Could not create message: "+n.message)}}}},En;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(En||(En={}));class Y4{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[En.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[En.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[En.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||En.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==En.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class X4 extends Y4{constructor(){super(...arguments);this.queryAnnualProvisions=(t={})=>this.request(r({path:"/cosmos/mint/v1beta1/annual_provisions",method:"GET",format:"json"},t)),this.queryInflation=(t={})=>this.request(r({path:"/cosmos/mint/v1beta1/inflation",method:"GET",format:"json"},t)),this.queryParams=(t={})=>this.request(r({path:"/cosmos/mint/v1beta1/params",method:"GET",format:"json"},t))}}const K4=[],Z4=new Y.Registry(K4),j4=async({addr:e}={addr:"http://localhost:1317"})=>new X4({baseUrl:e}),yu={inflation:"",annual_provisions:""},eI={encode(e,t=l.Writer.create()){return e.inflation!==""&&t.uint32(10).string(e.inflation),e.annual_provisions!==""&&t.uint32(18).string(e.annual_provisions),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},yu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.inflation=n.string();break;case 2:i.annual_provisions=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},yu);return e.inflation!==void 0&&e.inflation!==null?t.inflation=String(e.inflation):t.inflation="",e.annual_provisions!==void 0&&e.annual_provisions!==null?t.annual_provisions=String(e.annual_provisions):t.annual_provisions="",t},toJSON(e){const t={};return e.inflation!==void 0&&(t.inflation=e.inflation),e.annual_provisions!==void 0&&(t.annual_provisions=e.annual_provisions),t},fromPartial(e){const t=r({},yu);return e.inflation!==void 0&&e.inflation!==null?t.inflation=e.inflation:t.inflation="",e.annual_provisions!==void 0&&e.annual_provisions!==null?t.annual_provisions=e.annual_provisions:t.annual_provisions="",t}},_u={mint_denom:"",inflation_rate_change:"",inflation_max:"",inflation_min:"",goal_bonded:"",blocks_per_year:0},tI={encode(e,t=l.Writer.create()){return e.mint_denom!==""&&t.uint32(10).string(e.mint_denom),e.inflation_rate_change!==""&&t.uint32(18).string(e.inflation_rate_change),e.inflation_max!==""&&t.uint32(26).string(e.inflation_max),e.inflation_min!==""&&t.uint32(34).string(e.inflation_min),e.goal_bonded!==""&&t.uint32(42).string(e.goal_bonded),e.blocks_per_year!==0&&t.uint32(48).uint64(e.blocks_per_year),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},_u);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.mint_denom=n.string();break;case 2:i.inflation_rate_change=n.string();break;case 3:i.inflation_max=n.string();break;case 4:i.inflation_min=n.string();break;case 5:i.goal_bonded=n.string();break;case 6:i.blocks_per_year=nI(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},_u);return e.mint_denom!==void 0&&e.mint_denom!==null?t.mint_denom=String(e.mint_denom):t.mint_denom="",e.inflation_rate_change!==void 0&&e.inflation_rate_change!==null?t.inflation_rate_change=String(e.inflation_rate_change):t.inflation_rate_change="",e.inflation_max!==void 0&&e.inflation_max!==null?t.inflation_max=String(e.inflation_max):t.inflation_max="",e.inflation_min!==void 0&&e.inflation_min!==null?t.inflation_min=String(e.inflation_min):t.inflation_min="",e.goal_bonded!==void 0&&e.goal_bonded!==null?t.goal_bonded=String(e.goal_bonded):t.goal_bonded="",e.blocks_per_year!==void 0&&e.blocks_per_year!==null?t.blocks_per_year=Number(e.blocks_per_year):t.blocks_per_year=0,t},toJSON(e){const t={};return e.mint_denom!==void 0&&(t.mint_denom=e.mint_denom),e.inflation_rate_change!==void 0&&(t.inflation_rate_change=e.inflation_rate_change),e.inflation_max!==void 0&&(t.inflation_max=e.inflation_max),e.inflation_min!==void 0&&(t.inflation_min=e.inflation_min),e.goal_bonded!==void 0&&(t.goal_bonded=e.goal_bonded),e.blocks_per_year!==void 0&&(t.blocks_per_year=e.blocks_per_year),t},fromPartial(e){const t=r({},_u);return e.mint_denom!==void 0&&e.mint_denom!==null?t.mint_denom=e.mint_denom:t.mint_denom="",e.inflation_rate_change!==void 0&&e.inflation_rate_change!==null?t.inflation_rate_change=e.inflation_rate_change:t.inflation_rate_change="",e.inflation_max!==void 0&&e.inflation_max!==null?t.inflation_max=e.inflation_max:t.inflation_max="",e.inflation_min!==void 0&&e.inflation_min!==null?t.inflation_min=e.inflation_min:t.inflation_min="",e.goal_bonded!==void 0&&e.goal_bonded!==null?t.goal_bonded=e.goal_bonded:t.goal_bonded="",e.blocks_per_year!==void 0&&e.blocks_per_year!==null?t.blocks_per_year=e.blocks_per_year:t.blocks_per_year=0,t}};var vu=(()=>{if(typeof vu!="undefined")return vu;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function nI(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new vu.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());async function bu(e){return await j4({addr:e["common/env/apiCosmos"]})}function jg(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const ey=()=>({Params:{},Inflation:{},AnnualProvisions:{},_Structure:{Minter:jg(eI.fromPartial({})),Params:jg(tI.fromPartial({}))},_Registry:Z4,_Subscriptions:new Set}),iI=ey();var oI={namespaced:!0,state:iI,mutations:{RESET_STATE(e){Object.assign(e,ey())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getInflation:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Inflation[JSON.stringify(t)])!=null?n:{}},getAnnualProvisions:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.AnnualProvisions[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.mint.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await bu(t)).queryParams()).data;return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryInflation({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await bu(t)).queryInflation()).data;return e("QUERY",{query:"Inflation",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryInflation",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getInflation({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryInflation API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryAnnualProvisions({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await bu(t)).queryAnnualProvisions()).data;return e("QUERY",{query:"AnnualProvisions",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAnnualProvisions",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAnnualProvisions({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAnnualProvisions API Node Unavailable. Could not perform query: "+a.error.message)}}}},Tn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Tn||(Tn={}));class sI{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[Tn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[Tn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[Tn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||Tn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==Tn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class rI extends sI{constructor(){super(...arguments);this.queryBalance=(t,n,s={})=>this.request(r({path:`/cosmos/nft/v1beta1/balance/${t}/${n}`,method:"GET",format:"json"},s)),this.queryClasses=(t,n={})=>this.request(r({path:"/cosmos/nft/v1beta1/classes",method:"GET",query:t,format:"json"},n)),this.queryClass=(t,n={})=>this.request(r({path:`/cosmos/nft/v1beta1/classes/${t}`,method:"GET",format:"json"},n)),this.queryNfTs=(t,n={})=>this.request(r({path:"/cosmos/nft/v1beta1/nfts",method:"GET",query:t,format:"json"},n)),this.queryNft=(t,n,s={})=>this.request(r({path:`/cosmos/nft/v1beta1/nfts/${t}/${n}`,method:"GET",format:"json"},s)),this.queryOwner=(t,n,s={})=>this.request(r({path:`/cosmos/nft/v1beta1/owner/${t}/${n}`,method:"GET",format:"json"},s)),this.querySupply=(t,n={})=>this.request(r({path:`/cosmos/nft/v1beta1/supply/${t}`,method:"GET",format:"json"},n))}}const aI=[],dI=new Y.Registry(aI),lI=async({addr:e}={addr:"http://localhost:1317"})=>new rI({baseUrl:e}),wu={class_id:"",id:"",sender:"",receiver:""},uI={encode(e,t=l.Writer.create()){return e.class_id!==""&&t.uint32(10).string(e.class_id),e.id!==""&&t.uint32(18).string(e.id),e.sender!==""&&t.uint32(26).string(e.sender),e.receiver!==""&&t.uint32(34).string(e.receiver),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},wu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.class_id=n.string();break;case 2:i.id=n.string();break;case 3:i.sender=n.string();break;case 4:i.receiver=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},wu);return e.class_id!==void 0&&e.class_id!==null?t.class_id=String(e.class_id):t.class_id="",e.id!==void 0&&e.id!==null?t.id=String(e.id):t.id="",e.sender!==void 0&&e.sender!==null?t.sender=String(e.sender):t.sender="",e.receiver!==void 0&&e.receiver!==null?t.receiver=String(e.receiver):t.receiver="",t},toJSON(e){const t={};return e.class_id!==void 0&&(t.class_id=e.class_id),e.id!==void 0&&(t.id=e.id),e.sender!==void 0&&(t.sender=e.sender),e.receiver!==void 0&&(t.receiver=e.receiver),t},fromPartial(e){const t=r({},wu);return e.class_id!==void 0&&e.class_id!==null?t.class_id=e.class_id:t.class_id="",e.id!==void 0&&e.id!==null?t.id=e.id:t.id="",e.sender!==void 0&&e.sender!==null?t.sender=e.sender:t.sender="",e.receiver!==void 0&&e.receiver!==null?t.receiver=e.receiver:t.receiver="",t}},Su={class_id:"",id:"",owner:""},cI={encode(e,t=l.Writer.create()){return e.class_id!==""&&t.uint32(10).string(e.class_id),e.id!==""&&t.uint32(18).string(e.id),e.owner!==""&&t.uint32(26).string(e.owner),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Su);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.class_id=n.string();break;case 2:i.id=n.string();break;case 3:i.owner=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Su);return e.class_id!==void 0&&e.class_id!==null?t.class_id=String(e.class_id):t.class_id="",e.id!==void 0&&e.id!==null?t.id=String(e.id):t.id="",e.owner!==void 0&&e.owner!==null?t.owner=String(e.owner):t.owner="",t},toJSON(e){const t={};return e.class_id!==void 0&&(t.class_id=e.class_id),e.id!==void 0&&(t.id=e.id),e.owner!==void 0&&(t.owner=e.owner),t},fromPartial(e){const t=r({},Su);return e.class_id!==void 0&&e.class_id!==null?t.class_id=e.class_id:t.class_id="",e.id!==void 0&&e.id!==null?t.id=e.id:t.id="",e.owner!==void 0&&e.owner!==null?t.owner=e.owner:t.owner="",t}},ku={class_id:"",id:"",owner:""},pI={encode(e,t=l.Writer.create()){return e.class_id!==""&&t.uint32(10).string(e.class_id),e.id!==""&&t.uint32(18).string(e.id),e.owner!==""&&t.uint32(26).string(e.owner),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ku);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.class_id=n.string();break;case 2:i.id=n.string();break;case 3:i.owner=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ku);return e.class_id!==void 0&&e.class_id!==null?t.class_id=String(e.class_id):t.class_id="",e.id!==void 0&&e.id!==null?t.id=String(e.id):t.id="",e.owner!==void 0&&e.owner!==null?t.owner=String(e.owner):t.owner="",t},toJSON(e){const t={};return e.class_id!==void 0&&(t.class_id=e.class_id),e.id!==void 0&&(t.id=e.id),e.owner!==void 0&&(t.owner=e.owner),t},fromPartial(e){const t=r({},ku);return e.class_id!==void 0&&e.class_id!==null?t.class_id=e.class_id:t.class_id="",e.id!==void 0&&e.id!==null?t.id=e.id:t.id="",e.owner!==void 0&&e.owner!==null?t.owner=e.owner:t.owner="",t}},Pu={type_url:""},kt={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Pu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Pu);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=mI(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=gI(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},Pu);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var xi=(()=>{if(typeof xi!="undefined")return xi;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const fI=xi.atob||(e=>xi.Buffer.from(e,"base64").toString("binary"));function mI(e){const t=fI(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const hI=xi.btoa||(e=>xi.Buffer.from(e,"binary").toString("base64"));function gI(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return hI(t.join(""))}const Cu={id:"",name:"",symbol:"",description:"",uri:"",uri_hash:""},yI={encode(e,t=l.Writer.create()){return e.id!==""&&t.uint32(10).string(e.id),e.name!==""&&t.uint32(18).string(e.name),e.symbol!==""&&t.uint32(26).string(e.symbol),e.description!==""&&t.uint32(34).string(e.description),e.uri!==""&&t.uint32(42).string(e.uri),e.uri_hash!==""&&t.uint32(50).string(e.uri_hash),e.data!==void 0&&kt.encode(e.data,t.uint32(58).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Cu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.id=n.string();break;case 2:i.name=n.string();break;case 3:i.symbol=n.string();break;case 4:i.description=n.string();break;case 5:i.uri=n.string();break;case 6:i.uri_hash=n.string();break;case 7:i.data=kt.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Cu);return e.id!==void 0&&e.id!==null?t.id=String(e.id):t.id="",e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.symbol!==void 0&&e.symbol!==null?t.symbol=String(e.symbol):t.symbol="",e.description!==void 0&&e.description!==null?t.description=String(e.description):t.description="",e.uri!==void 0&&e.uri!==null?t.uri=String(e.uri):t.uri="",e.uri_hash!==void 0&&e.uri_hash!==null?t.uri_hash=String(e.uri_hash):t.uri_hash="",e.data!==void 0&&e.data!==null?t.data=kt.fromJSON(e.data):t.data=void 0,t},toJSON(e){const t={};return e.id!==void 0&&(t.id=e.id),e.name!==void 0&&(t.name=e.name),e.symbol!==void 0&&(t.symbol=e.symbol),e.description!==void 0&&(t.description=e.description),e.uri!==void 0&&(t.uri=e.uri),e.uri_hash!==void 0&&(t.uri_hash=e.uri_hash),e.data!==void 0&&(t.data=e.data?kt.toJSON(e.data):void 0),t},fromPartial(e){const t=r({},Cu);return e.id!==void 0&&e.id!==null?t.id=e.id:t.id="",e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.symbol!==void 0&&e.symbol!==null?t.symbol=e.symbol:t.symbol="",e.description!==void 0&&e.description!==null?t.description=e.description:t.description="",e.uri!==void 0&&e.uri!==null?t.uri=e.uri:t.uri="",e.uri_hash!==void 0&&e.uri_hash!==null?t.uri_hash=e.uri_hash:t.uri_hash="",e.data!==void 0&&e.data!==null?t.data=kt.fromPartial(e.data):t.data=void 0,t}},Ru={class_id:"",id:"",uri:"",uri_hash:""},Di={encode(e,t=l.Writer.create()){return e.class_id!==""&&t.uint32(10).string(e.class_id),e.id!==""&&t.uint32(18).string(e.id),e.uri!==""&&t.uint32(26).string(e.uri),e.uri_hash!==""&&t.uint32(34).string(e.uri_hash),e.data!==void 0&&kt.encode(e.data,t.uint32(82).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ru);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.class_id=n.string();break;case 2:i.id=n.string();break;case 3:i.uri=n.string();break;case 4:i.uri_hash=n.string();break;case 10:i.data=kt.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ru);return e.class_id!==void 0&&e.class_id!==null?t.class_id=String(e.class_id):t.class_id="",e.id!==void 0&&e.id!==null?t.id=String(e.id):t.id="",e.uri!==void 0&&e.uri!==null?t.uri=String(e.uri):t.uri="",e.uri_hash!==void 0&&e.uri_hash!==null?t.uri_hash=String(e.uri_hash):t.uri_hash="",e.data!==void 0&&e.data!==null?t.data=kt.fromJSON(e.data):t.data=void 0,t},toJSON(e){const t={};return e.class_id!==void 0&&(t.class_id=e.class_id),e.id!==void 0&&(t.id=e.id),e.uri!==void 0&&(t.uri=e.uri),e.uri_hash!==void 0&&(t.uri_hash=e.uri_hash),e.data!==void 0&&(t.data=e.data?kt.toJSON(e.data):void 0),t},fromPartial(e){const t=r({},Ru);return e.class_id!==void 0&&e.class_id!==null?t.class_id=e.class_id:t.class_id="",e.id!==void 0&&e.id!==null?t.id=e.id:t.id="",e.uri!==void 0&&e.uri!==null?t.uri=e.uri:t.uri="",e.uri_hash!==void 0&&e.uri_hash!==null?t.uri_hash=e.uri_hash:t.uri_hash="",e.data!==void 0&&e.data!==null?t.data=kt.fromPartial(e.data):t.data=void 0,t}},Eu={owner:""},_I={encode(e,t=l.Writer.create()){e.owner!==""&&t.uint32(10).string(e.owner);for(const n of e.nfts)Di.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Eu);for(i.nfts=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.owner=n.string();break;case 2:i.nfts.push(Di.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Eu);if(t.nfts=[],e.owner!==void 0&&e.owner!==null?t.owner=String(e.owner):t.owner="",e.nfts!==void 0&&e.nfts!==null)for(const n of e.nfts)t.nfts.push(Di.fromJSON(n));return t},toJSON(e){const t={};return e.owner!==void 0&&(t.owner=e.owner),e.nfts?t.nfts=e.nfts.map(n=>n?Di.toJSON(n):void 0):t.nfts=[],t},fromPartial(e){const t=r({},Eu);if(t.nfts=[],e.owner!==void 0&&e.owner!==null?t.owner=e.owner:t.owner="",e.nfts!==void 0&&e.nfts!==null)for(const n of e.nfts)t.nfts.push(Di.fromPartial(n));return t}};async function Nn(e){return await lI({addr:e["common/env/apiCosmos"]})}function ty(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function Qi(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const ny=()=>({Balance:{},Owner:{},Supply:{},NFTs:{},NFT:{},Class:{},Classes:{},_Structure:{EventSend:Qi(uI.fromPartial({})),EventMint:Qi(cI.fromPartial({})),EventBurn:Qi(pI.fromPartial({})),Entry:Qi(_I.fromPartial({})),Class:Qi(yI.fromPartial({})),NFT:Qi(Di.fromPartial({}))},_Registry:dI,_Subscriptions:new Set}),vI=ny();var bI={namespaced:!0,state:vI,mutations:{RESET_STATE(e){Object.assign(e,ny())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getBalance:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Balance[JSON.stringify(t)])!=null?n:{}},getOwner:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Owner[JSON.stringify(t)])!=null?n:{}},getSupply:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Supply[JSON.stringify(t)])!=null?n:{}},getNFTs:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.NFTs[JSON.stringify(t)])!=null?n:{}},getNFT:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.NFT[JSON.stringify(t)])!=null?n:{}},getClass:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Class[JSON.stringify(t)])!=null?n:{}},getClasses:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Classes[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.nft.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryBalance({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nn(t)).queryBalance(a.owner,a.class_id)).data;return e("QUERY",{query:"Balance",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryBalance",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getBalance({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryBalance API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryOwner({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nn(t)).queryOwner(a.class_id,a.id)).data;return e("QUERY",{query:"Owner",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryOwner",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getOwner({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryOwner API Node Unavailable. Could not perform query: "+a.error.message)}},async QuerySupply({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nn(t)).querySupply(a.class_id)).data;return e("QUERY",{query:"Supply",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QuerySupply",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getSupply({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QuerySupply API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryNFTs({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Nn(t);let u=(await p.queryNFTs(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryNFTs(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=ty(u,g)}return e("QUERY",{query:"NFTs",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryNFTs",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getNFTs({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryNFTs API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryNFT({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nn(t)).queryNFT(a.class_id,a.id)).data;return e("QUERY",{query:"NFT",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryNFT",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getNFT({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryNFT API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryClass({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Nn(t)).queryClass(a.class_id)).data;return e("QUERY",{query:"Class",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryClass",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getClass({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryClass API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryClasses({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Nn(t);let u=(await p.queryClasses(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryClasses(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=ty(u,g)}return e("QUERY",{query:"Classes",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryClasses",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getClasses({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryClasses API Node Unavailable. Could not perform query: "+a.error.message)}}}},An;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(An||(An={}));class wI{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[An.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[An.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[An.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||An.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==An.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class SI extends wI{constructor(){super(...arguments);this.queryParams=(t,n={})=>this.request(r({path:"/cosmos/params/v1beta1/params",method:"GET",query:t,format:"json"},n)),this.querySubspaces=(t={})=>this.request(r({path:"/cosmos/params/v1beta1/subspaces",method:"GET",format:"json"},t))}}const kI=[],PI=new Y.Registry(kI),CI=async({addr:e}={addr:"http://localhost:1317"})=>new SI({baseUrl:e}),Tu={title:"",description:""},RI={encode(e,t=l.Writer.create()){e.title!==""&&t.uint32(10).string(e.title),e.description!==""&&t.uint32(18).string(e.description);for(const n of e.changes)Mi.encode(n,t.uint32(26).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Tu);for(i.changes=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.title=n.string();break;case 2:i.description=n.string();break;case 3:i.changes.push(Mi.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Tu);if(t.changes=[],e.title!==void 0&&e.title!==null?t.title=String(e.title):t.title="",e.description!==void 0&&e.description!==null?t.description=String(e.description):t.description="",e.changes!==void 0&&e.changes!==null)for(const n of e.changes)t.changes.push(Mi.fromJSON(n));return t},toJSON(e){const t={};return e.title!==void 0&&(t.title=e.title),e.description!==void 0&&(t.description=e.description),e.changes?t.changes=e.changes.map(n=>n?Mi.toJSON(n):void 0):t.changes=[],t},fromPartial(e){const t=r({},Tu);if(t.changes=[],e.title!==void 0&&e.title!==null?t.title=e.title:t.title="",e.description!==void 0&&e.description!==null?t.description=e.description:t.description="",e.changes!==void 0&&e.changes!==null)for(const n of e.changes)t.changes.push(Mi.fromPartial(n));return t}},Nu={subspace:"",key:"",value:""},Mi={encode(e,t=l.Writer.create()){return e.subspace!==""&&t.uint32(10).string(e.subspace),e.key!==""&&t.uint32(18).string(e.key),e.value!==""&&t.uint32(26).string(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Nu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.subspace=n.string();break;case 2:i.key=n.string();break;case 3:i.value=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Nu);return e.subspace!==void 0&&e.subspace!==null?t.subspace=String(e.subspace):t.subspace="",e.key!==void 0&&e.key!==null?t.key=String(e.key):t.key="",e.value!==void 0&&e.value!==null?t.value=String(e.value):t.value="",t},toJSON(e){const t={};return e.subspace!==void 0&&(t.subspace=e.subspace),e.key!==void 0&&(t.key=e.key),e.value!==void 0&&(t.value=e.value),t},fromPartial(e){const t=r({},Nu);return e.subspace!==void 0&&e.subspace!==null?t.subspace=e.subspace:t.subspace="",e.key!==void 0&&e.key!==null?t.key=e.key:t.key="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value="",t}},Au={subspace:"",keys:""},EI={encode(e,t=l.Writer.create()){e.subspace!==""&&t.uint32(10).string(e.subspace);for(const n of e.keys)t.uint32(18).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Au);for(i.keys=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.subspace=n.string();break;case 2:i.keys.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Au);if(t.keys=[],e.subspace!==void 0&&e.subspace!==null?t.subspace=String(e.subspace):t.subspace="",e.keys!==void 0&&e.keys!==null)for(const n of e.keys)t.keys.push(String(n));return t},toJSON(e){const t={};return e.subspace!==void 0&&(t.subspace=e.subspace),e.keys?t.keys=e.keys.map(n=>n):t.keys=[],t},fromPartial(e){const t=r({},Au);if(t.keys=[],e.subspace!==void 0&&e.subspace!==null?t.subspace=e.subspace:t.subspace="",e.keys!==void 0&&e.keys!==null)for(const n of e.keys)t.keys.push(n);return t}};async function iy(e){return await CI({addr:e["common/env/apiCosmos"]})}function TI(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function Ou(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const oy=()=>({Params:{},Subspaces:{},_Structure:{ParameterChangeProposal:Ou(RI.fromPartial({})),ParamChange:Ou(Mi.fromPartial({})),Subspace:Ou(EI.fromPartial({}))},_Registry:PI,_Subscriptions:new Set}),NI=oy();var AI={namespaced:!0,state:NI,mutations:{RESET_STATE(e){Object.assign(e,oy())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getSubspaces:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Subspaces[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.params.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await iy(t);let u=(await p.queryParams(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryParams(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=TI(u,g)}return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}},async QuerySubspaces({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await iy(t)).querySubspaces()).data;return e("QUERY",{query:"Subspaces",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QuerySubspaces",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getSubspaces({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QuerySubspaces API Node Unavailable. Could not perform query: "+a.error.message)}}}},On;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(On||(On={}));class OI{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[On.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[On.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[On.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||On.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==On.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class qI extends OI{constructor(){super(...arguments);this.queryParams=(t={})=>this.request(r({path:"/cosmos/slashing/v1beta1/params",method:"GET",format:"json"},t)),this.querySigningInfos=(t,n={})=>this.request(r({path:"/cosmos/slashing/v1beta1/signing_infos",method:"GET",query:t,format:"json"},n)),this.querySigningInfo=(t,n={})=>this.request(r({path:`/cosmos/slashing/v1beta1/signing_infos/${t}`,method:"GET",format:"json"},n))}}const qu={validator_addr:""},sy={encode(e,t=l.Writer.create()){return e.validator_addr!==""&&t.uint32(10).string(e.validator_addr),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},qu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.validator_addr=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},qu);return e.validator_addr!==void 0&&e.validator_addr!==null?t.validator_addr=String(e.validator_addr):t.validator_addr="",t},toJSON(e){const t={};return e.validator_addr!==void 0&&(t.validator_addr=e.validator_addr),t},fromPartial(e){const t=r({},qu);return e.validator_addr!==void 0&&e.validator_addr!==null?t.validator_addr=e.validator_addr:t.validator_addr="",t}},UI=[["/cosmos.slashing.v1beta1.MsgUnjail",sy]],Uu=new Error("wallet is required"),$u=new Y.Registry(UI),$I={amount:[],gas:"200000"},II=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw Uu;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:$u}):n=await J.SigningStargateClient.offline(e,{registry:$u});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:$I,memo:""})=>n.signAndBroadcast(s,i,o,d),msgUnjail:i=>({typeUrl:"/cosmos.slashing.v1beta1.MsgUnjail",value:sy.fromPartial(i)})}},xI=async({addr:e}={addr:"http://localhost:1317"})=>new qI({baseUrl:e}),Iu={seconds:0,nanos:0},xu={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Iu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=DI(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Iu);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},Iu);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var Du=(()=>{if(typeof Du!="undefined")return Du;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function DI(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Du.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Qu={seconds:0,nanos:0},ns={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Qu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=QI(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Qu);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},Qu);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var Mu=(()=>{if(typeof Mu!="undefined")return Mu;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function QI(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Mu.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Bu={address:"",start_height:0,index_offset:0,tombstoned:!1,missed_blocks_counter:0},Bi={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),e.start_height!==0&&t.uint32(16).int64(e.start_height),e.index_offset!==0&&t.uint32(24).int64(e.index_offset),e.jailed_until!==void 0&&xu.encode(GI(e.jailed_until),t.uint32(34).fork()).ldelim(),e.tombstoned===!0&&t.uint32(40).bool(e.tombstoned),e.missed_blocks_counter!==0&&t.uint32(48).int64(e.missed_blocks_counter),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Bu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.start_height=Ls(n.int64());break;case 3:i.index_offset=Ls(n.int64());break;case 4:i.jailed_until=ry(xu.decode(n,n.uint32()));break;case 5:i.tombstoned=n.bool();break;case 6:i.missed_blocks_counter=Ls(n.int64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Bu);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.start_height!==void 0&&e.start_height!==null?t.start_height=Number(e.start_height):t.start_height=0,e.index_offset!==void 0&&e.index_offset!==null?t.index_offset=Number(e.index_offset):t.index_offset=0,e.jailed_until!==void 0&&e.jailed_until!==null?t.jailed_until=LI(e.jailed_until):t.jailed_until=void 0,e.tombstoned!==void 0&&e.tombstoned!==null?t.tombstoned=Boolean(e.tombstoned):t.tombstoned=!1,e.missed_blocks_counter!==void 0&&e.missed_blocks_counter!==null?t.missed_blocks_counter=Number(e.missed_blocks_counter):t.missed_blocks_counter=0,t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.start_height!==void 0&&(t.start_height=e.start_height),e.index_offset!==void 0&&(t.index_offset=e.index_offset),e.jailed_until!==void 0&&(t.jailed_until=e.jailed_until!==void 0?e.jailed_until.toISOString():null),e.tombstoned!==void 0&&(t.tombstoned=e.tombstoned),e.missed_blocks_counter!==void 0&&(t.missed_blocks_counter=e.missed_blocks_counter),t},fromPartial(e){const t=r({},Bu);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.start_height!==void 0&&e.start_height!==null?t.start_height=e.start_height:t.start_height=0,e.index_offset!==void 0&&e.index_offset!==null?t.index_offset=e.index_offset:t.index_offset=0,e.jailed_until!==void 0&&e.jailed_until!==null?t.jailed_until=e.jailed_until:t.jailed_until=void 0,e.tombstoned!==void 0&&e.tombstoned!==null?t.tombstoned=e.tombstoned:t.tombstoned=!1,e.missed_blocks_counter!==void 0&&e.missed_blocks_counter!==null?t.missed_blocks_counter=e.missed_blocks_counter:t.missed_blocks_counter=0,t}},Ju={signed_blocks_window:0},MI={encode(e,t=l.Writer.create()){return e.signed_blocks_window!==0&&t.uint32(8).int64(e.signed_blocks_window),e.min_signed_per_window.length!==0&&t.uint32(18).bytes(e.min_signed_per_window),e.downtime_jail_duration!==void 0&&ns.encode(e.downtime_jail_duration,t.uint32(26).fork()).ldelim(),e.slash_fraction_double_sign.length!==0&&t.uint32(34).bytes(e.slash_fraction_double_sign),e.slash_fraction_downtime.length!==0&&t.uint32(42).bytes(e.slash_fraction_downtime),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ju);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.signed_blocks_window=Ls(n.int64());break;case 2:i.min_signed_per_window=n.bytes();break;case 3:i.downtime_jail_duration=ns.decode(n,n.uint32());break;case 4:i.slash_fraction_double_sign=n.bytes();break;case 5:i.slash_fraction_downtime=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ju);return e.signed_blocks_window!==void 0&&e.signed_blocks_window!==null?t.signed_blocks_window=Number(e.signed_blocks_window):t.signed_blocks_window=0,e.min_signed_per_window!==void 0&&e.min_signed_per_window!==null&&(t.min_signed_per_window=Gu(e.min_signed_per_window)),e.downtime_jail_duration!==void 0&&e.downtime_jail_duration!==null?t.downtime_jail_duration=ns.fromJSON(e.downtime_jail_duration):t.downtime_jail_duration=void 0,e.slash_fraction_double_sign!==void 0&&e.slash_fraction_double_sign!==null&&(t.slash_fraction_double_sign=Gu(e.slash_fraction_double_sign)),e.slash_fraction_downtime!==void 0&&e.slash_fraction_downtime!==null&&(t.slash_fraction_downtime=Gu(e.slash_fraction_downtime)),t},toJSON(e){const t={};return e.signed_blocks_window!==void 0&&(t.signed_blocks_window=e.signed_blocks_window),e.min_signed_per_window!==void 0&&(t.min_signed_per_window=Lu(e.min_signed_per_window!==void 0?e.min_signed_per_window:new Uint8Array)),e.downtime_jail_duration!==void 0&&(t.downtime_jail_duration=e.downtime_jail_duration?ns.toJSON(e.downtime_jail_duration):void 0),e.slash_fraction_double_sign!==void 0&&(t.slash_fraction_double_sign=Lu(e.slash_fraction_double_sign!==void 0?e.slash_fraction_double_sign:new Uint8Array)),e.slash_fraction_downtime!==void 0&&(t.slash_fraction_downtime=Lu(e.slash_fraction_downtime!==void 0?e.slash_fraction_downtime:new Uint8Array)),t},fromPartial(e){const t=r({},Ju);return e.signed_blocks_window!==void 0&&e.signed_blocks_window!==null?t.signed_blocks_window=e.signed_blocks_window:t.signed_blocks_window=0,e.min_signed_per_window!==void 0&&e.min_signed_per_window!==null?t.min_signed_per_window=e.min_signed_per_window:t.min_signed_per_window=new Uint8Array,e.downtime_jail_duration!==void 0&&e.downtime_jail_duration!==null?t.downtime_jail_duration=ns.fromPartial(e.downtime_jail_duration):t.downtime_jail_duration=void 0,e.slash_fraction_double_sign!==void 0&&e.slash_fraction_double_sign!==null?t.slash_fraction_double_sign=e.slash_fraction_double_sign:t.slash_fraction_double_sign=new Uint8Array,e.slash_fraction_downtime!==void 0&&e.slash_fraction_downtime!==null?t.slash_fraction_downtime=e.slash_fraction_downtime:t.slash_fraction_downtime=new Uint8Array,t}};var qn=(()=>{if(typeof qn!="undefined")return qn;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const BI=qn.atob||(e=>qn.Buffer.from(e,"base64").toString("binary"));function Gu(e){const t=BI(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const JI=qn.btoa||(e=>qn.Buffer.from(e,"binary").toString("base64"));function Lu(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return JI(t.join(""))}function GI(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function ry(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function LI(e){return e instanceof Date?e:typeof e=="string"?new Date(e):ry(xu.fromJSON(e))}function Ls(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new qn.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Vu={address:""},VI={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),e.validator_signing_info!==void 0&&Bi.encode(e.validator_signing_info,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Vu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.validator_signing_info=Bi.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Vu);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.validator_signing_info!==void 0&&e.validator_signing_info!==null?t.validator_signing_info=Bi.fromJSON(e.validator_signing_info):t.validator_signing_info=void 0,t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.validator_signing_info!==void 0&&(t.validator_signing_info=e.validator_signing_info?Bi.toJSON(e.validator_signing_info):void 0),t},fromPartial(e){const t=r({},Vu);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.validator_signing_info!==void 0&&e.validator_signing_info!==null?t.validator_signing_info=Bi.fromPartial(e.validator_signing_info):t.validator_signing_info=void 0,t}},Wu={address:""},WI={encode(e,t=l.Writer.create()){e.address!==""&&t.uint32(10).string(e.address);for(const n of e.missed_blocks)Ji.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Wu);for(i.missed_blocks=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.missed_blocks.push(Ji.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Wu);if(t.missed_blocks=[],e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.missed_blocks!==void 0&&e.missed_blocks!==null)for(const n of e.missed_blocks)t.missed_blocks.push(Ji.fromJSON(n));return t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.missed_blocks?t.missed_blocks=e.missed_blocks.map(n=>n?Ji.toJSON(n):void 0):t.missed_blocks=[],t},fromPartial(e){const t=r({},Wu);if(t.missed_blocks=[],e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.missed_blocks!==void 0&&e.missed_blocks!==null)for(const n of e.missed_blocks)t.missed_blocks.push(Ji.fromPartial(n));return t}},Fu={index:0,missed:!1},Ji={encode(e,t=l.Writer.create()){return e.index!==0&&t.uint32(8).int64(e.index),e.missed===!0&&t.uint32(16).bool(e.missed),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Fu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.index=FI(n.int64());break;case 2:i.missed=n.bool();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Fu);return e.index!==void 0&&e.index!==null?t.index=Number(e.index):t.index=0,e.missed!==void 0&&e.missed!==null?t.missed=Boolean(e.missed):t.missed=!1,t},toJSON(e){const t={};return e.index!==void 0&&(t.index=e.index),e.missed!==void 0&&(t.missed=e.missed),t},fromPartial(e){const t=r({},Fu);return e.index!==void 0&&e.index!==null?t.index=e.index:t.index=0,e.missed!==void 0&&e.missed!==null?t.missed=e.missed:t.missed=!1,t}};var Hu=(()=>{if(typeof Hu!="undefined")return Hu;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function FI(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Hu.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());async function ay(e){return await II(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function zu(e){return await xI({addr:e["common/env/apiCosmos"]})}function HI(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function is(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const dy=()=>({Params:{},SigningInfo:{},SigningInfos:{},_Structure:{SigningInfo:is(VI.fromPartial({})),ValidatorMissedBlocks:is(WI.fromPartial({})),MissedBlock:is(Ji.fromPartial({})),ValidatorSigningInfo:is(Bi.fromPartial({})),Params:is(MI.fromPartial({}))},_Registry:$u,_Subscriptions:new Set}),zI=dy();var YI={namespaced:!0,state:zI,mutations:{RESET_STATE(e){Object.assign(e,dy())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getSigningInfo:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.SigningInfo[JSON.stringify(t)])!=null?n:{}},getSigningInfos:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.SigningInfos[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.slashing.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await zu(t)).queryParams()).data;return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}},async QuerySigningInfo({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await zu(t)).querySigningInfo(a.cons_address)).data;return e("QUERY",{query:"SigningInfo",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QuerySigningInfo",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getSigningInfo({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QuerySigningInfo API Node Unavailable. Could not perform query: "+a.error.message)}},async QuerySigningInfos({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await zu(t);let u=(await p.querySigningInfos(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.querySigningInfos(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=HI(u,g)}return e("QUERY",{query:"SigningInfos",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QuerySigningInfos",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getSigningInfos({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QuerySigningInfos API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgUnjail({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await ay(e),d=await o.msgUnjail(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Uu?new Error("TxClient:MsgUnjail:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUnjail:Send Could not broadcast Tx: "+o.message)}},async MsgUnjail({rootGetters:e},{value:t}){try{return await(await ay(e)).msgUnjail(t)}catch(n){throw n==Uu?new Error("TxClient:MsgUnjail:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUnjail:Create Could not create message: "+n.message)}}}},ly;(function(e){e.BOND_STATUS_UNSPECIFIED="BOND_STATUS_UNSPECIFIED",e.BOND_STATUS_UNBONDED="BOND_STATUS_UNBONDED",e.BOND_STATUS_UNBONDING="BOND_STATUS_UNBONDING",e.BOND_STATUS_BONDED="BOND_STATUS_BONDED"})(ly||(ly={}));var Un;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Un||(Un={}));class XI{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[Un.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[Un.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[Un.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||Un.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==Un.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class KI extends XI{constructor(){super(...arguments);this.queryDelegatorDelegations=(t,n,s={})=>this.request(r({path:`/cosmos/staking/v1beta1/delegations/${t}`,method:"GET",query:n,format:"json"},s)),this.queryRedelegations=(t,n,s={})=>this.request(r({path:`/cosmos/staking/v1beta1/delegators/${t}/redelegations`,method:"GET",query:n,format:"json"},s)),this.queryDelegatorUnbondingDelegations=(t,n,s={})=>this.request(r({path:`/cosmos/staking/v1beta1/delegators/${t}/unbonding_delegations`,method:"GET",query:n,format:"json"},s)),this.queryDelegatorValidators=(t,n,s={})=>this.request(r({path:`/cosmos/staking/v1beta1/delegators/${t}/validators`,method:"GET",query:n,format:"json"},s)),this.queryDelegatorValidator=(t,n,s={})=>this.request(r({path:`/cosmos/staking/v1beta1/delegators/${t}/validators/${n}`,method:"GET",format:"json"},s)),this.queryHistoricalInfo=(t,n={})=>this.request(r({path:`/cosmos/staking/v1beta1/historical_info/${t}`,method:"GET",format:"json"},n)),this.queryParams=(t={})=>this.request(r({path:"/cosmos/staking/v1beta1/params",method:"GET",format:"json"},t)),this.queryPool=(t={})=>this.request(r({path:"/cosmos/staking/v1beta1/pool",method:"GET",format:"json"},t)),this.queryValidators=(t,n={})=>this.request(r({path:"/cosmos/staking/v1beta1/validators",method:"GET",query:t,format:"json"},n)),this.queryValidator=(t,n={})=>this.request(r({path:`/cosmos/staking/v1beta1/validators/${t}`,method:"GET",format:"json"},n)),this.queryValidatorDelegations=(t,n,s={})=>this.request(r({path:`/cosmos/staking/v1beta1/validators/${t}/delegations`,method:"GET",query:n,format:"json"},s)),this.queryDelegation=(t,n,s={})=>this.request(r({path:`/cosmos/staking/v1beta1/validators/${t}/delegations/${n}`,method:"GET",format:"json"},s)),this.queryUnbondingDelegation=(t,n,s={})=>this.request(r({path:`/cosmos/staking/v1beta1/validators/${t}/delegations/${n}/unbonding_delegation`,method:"GET",format:"json"},s)),this.queryValidatorUnbondingDelegations=(t,n,s={})=>this.request(r({path:`/cosmos/staking/v1beta1/validators/${t}/unbonding_delegations`,method:"GET",query:n,format:"json"},s))}}const Yu={seconds:0,nanos:0},Le={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Yu);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=ZI(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Yu);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},Yu);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var Xu=(()=>{if(typeof Xu!="undefined")return Xu;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function ZI(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Xu.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());var Gi=(()=>{if(typeof Gi!="undefined")return Gi;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();Gi.atob;Gi.btoa;l.util.Long!==S&&(l.util.Long=S,l.configure());const Ku={block:0,app:0},os={encode(e,t=l.Writer.create()){return e.block!==0&&t.uint32(8).uint64(e.block),e.app!==0&&t.uint32(16).uint64(e.app),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ku);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.block=uy(n.uint64());break;case 2:i.app=uy(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ku);return e.block!==void 0&&e.block!==null?t.block=Number(e.block):t.block=0,e.app!==void 0&&e.app!==null?t.app=Number(e.app):t.app=0,t},toJSON(e){const t={};return e.block!==void 0&&(t.block=e.block),e.app!==void 0&&(t.app=e.app),t},fromPartial(e){const t=r({},Ku);return e.block!==void 0&&e.block!==null?t.block=e.block:t.block=0,e.app!==void 0&&e.app!==null?t.app=e.app:t.app=0,t}};var Zu=(()=>{if(typeof Zu!="undefined")return Zu;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function uy(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Zu.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());var Li=(()=>{if(typeof Li!="undefined")return Li;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();Li.atob;Li.btoa;var Vi=(()=>{if(typeof Vi!="undefined")return Vi;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();Vi.atob;Vi.btoa;l.util.Long!==S&&(l.util.Long=S,l.configure());var cy;(function(e){e[e.BLOCK_ID_FLAG_UNKNOWN=0]="BLOCK_ID_FLAG_UNKNOWN",e[e.BLOCK_ID_FLAG_ABSENT=1]="BLOCK_ID_FLAG_ABSENT",e[e.BLOCK_ID_FLAG_COMMIT=2]="BLOCK_ID_FLAG_COMMIT",e[e.BLOCK_ID_FLAG_NIL=3]="BLOCK_ID_FLAG_NIL",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(cy||(cy={}));var py;(function(e){e[e.SIGNED_MSG_TYPE_UNKNOWN=0]="SIGNED_MSG_TYPE_UNKNOWN",e[e.SIGNED_MSG_TYPE_PREVOTE=1]="SIGNED_MSG_TYPE_PREVOTE",e[e.SIGNED_MSG_TYPE_PRECOMMIT=2]="SIGNED_MSG_TYPE_PRECOMMIT",e[e.SIGNED_MSG_TYPE_PROPOSAL=32]="SIGNED_MSG_TYPE_PROPOSAL",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(py||(py={}));const ju={total:0},ss={encode(e,t=l.Writer.create()){return e.total!==0&&t.uint32(8).uint32(e.total),e.hash.length!==0&&t.uint32(18).bytes(e.hash),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ju);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.total=n.uint32();break;case 2:i.hash=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ju);return e.total!==void 0&&e.total!==null?t.total=Number(e.total):t.total=0,e.hash!==void 0&&e.hash!==null&&(t.hash=Ze(e.hash)),t},toJSON(e){const t={};return e.total!==void 0&&(t.total=e.total),e.hash!==void 0&&(t.hash=je(e.hash!==void 0?e.hash:new Uint8Array)),t},fromPartial(e){const t=r({},ju);return e.total!==void 0&&e.total!==null?t.total=e.total:t.total=0,e.hash!==void 0&&e.hash!==null?t.hash=e.hash:t.hash=new Uint8Array,t}},ec={},rs={encode(e,t=l.Writer.create()){return e.hash.length!==0&&t.uint32(10).bytes(e.hash),e.part_set_header!==void 0&&ss.encode(e.part_set_header,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ec);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.hash=n.bytes();break;case 2:i.part_set_header=ss.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ec);return e.hash!==void 0&&e.hash!==null&&(t.hash=Ze(e.hash)),e.part_set_header!==void 0&&e.part_set_header!==null?t.part_set_header=ss.fromJSON(e.part_set_header):t.part_set_header=void 0,t},toJSON(e){const t={};return e.hash!==void 0&&(t.hash=je(e.hash!==void 0?e.hash:new Uint8Array)),e.part_set_header!==void 0&&(t.part_set_header=e.part_set_header?ss.toJSON(e.part_set_header):void 0),t},fromPartial(e){const t=r({},ec);return e.hash!==void 0&&e.hash!==null?t.hash=e.hash:t.hash=new Uint8Array,e.part_set_header!==void 0&&e.part_set_header!==null?t.part_set_header=ss.fromPartial(e.part_set_header):t.part_set_header=void 0,t}},tc={chain_id:"",height:0},as={encode(e,t=l.Writer.create()){return e.version!==void 0&&os.encode(e.version,t.uint32(10).fork()).ldelim(),e.chain_id!==""&&t.uint32(18).string(e.chain_id),e.height!==0&&t.uint32(24).int64(e.height),e.time!==void 0&&Le.encode(tx(e.time),t.uint32(34).fork()).ldelim(),e.last_block_id!==void 0&&rs.encode(e.last_block_id,t.uint32(42).fork()).ldelim(),e.last_commit_hash.length!==0&&t.uint32(50).bytes(e.last_commit_hash),e.data_hash.length!==0&&t.uint32(58).bytes(e.data_hash),e.validators_hash.length!==0&&t.uint32(66).bytes(e.validators_hash),e.next_validators_hash.length!==0&&t.uint32(74).bytes(e.next_validators_hash),e.consensus_hash.length!==0&&t.uint32(82).bytes(e.consensus_hash),e.app_hash.length!==0&&t.uint32(90).bytes(e.app_hash),e.last_results_hash.length!==0&&t.uint32(98).bytes(e.last_results_hash),e.evidence_hash.length!==0&&t.uint32(106).bytes(e.evidence_hash),e.proposer_address.length!==0&&t.uint32(114).bytes(e.proposer_address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},tc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.version=os.decode(n,n.uint32());break;case 2:i.chain_id=n.string();break;case 3:i.height=ix(n.int64());break;case 4:i.time=fy(Le.decode(n,n.uint32()));break;case 5:i.last_block_id=rs.decode(n,n.uint32());break;case 6:i.last_commit_hash=n.bytes();break;case 7:i.data_hash=n.bytes();break;case 8:i.validators_hash=n.bytes();break;case 9:i.next_validators_hash=n.bytes();break;case 10:i.consensus_hash=n.bytes();break;case 11:i.app_hash=n.bytes();break;case 12:i.last_results_hash=n.bytes();break;case 13:i.evidence_hash=n.bytes();break;case 14:i.proposer_address=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},tc);return e.version!==void 0&&e.version!==null?t.version=os.fromJSON(e.version):t.version=void 0,e.chain_id!==void 0&&e.chain_id!==null?t.chain_id=String(e.chain_id):t.chain_id="",e.height!==void 0&&e.height!==null?t.height=Number(e.height):t.height=0,e.time!==void 0&&e.time!==null?t.time=nx(e.time):t.time=void 0,e.last_block_id!==void 0&&e.last_block_id!==null?t.last_block_id=rs.fromJSON(e.last_block_id):t.last_block_id=void 0,e.last_commit_hash!==void 0&&e.last_commit_hash!==null&&(t.last_commit_hash=Ze(e.last_commit_hash)),e.data_hash!==void 0&&e.data_hash!==null&&(t.data_hash=Ze(e.data_hash)),e.validators_hash!==void 0&&e.validators_hash!==null&&(t.validators_hash=Ze(e.validators_hash)),e.next_validators_hash!==void 0&&e.next_validators_hash!==null&&(t.next_validators_hash=Ze(e.next_validators_hash)),e.consensus_hash!==void 0&&e.consensus_hash!==null&&(t.consensus_hash=Ze(e.consensus_hash)),e.app_hash!==void 0&&e.app_hash!==null&&(t.app_hash=Ze(e.app_hash)),e.last_results_hash!==void 0&&e.last_results_hash!==null&&(t.last_results_hash=Ze(e.last_results_hash)),e.evidence_hash!==void 0&&e.evidence_hash!==null&&(t.evidence_hash=Ze(e.evidence_hash)),e.proposer_address!==void 0&&e.proposer_address!==null&&(t.proposer_address=Ze(e.proposer_address)),t},toJSON(e){const t={};return e.version!==void 0&&(t.version=e.version?os.toJSON(e.version):void 0),e.chain_id!==void 0&&(t.chain_id=e.chain_id),e.height!==void 0&&(t.height=e.height),e.time!==void 0&&(t.time=e.time!==void 0?e.time.toISOString():null),e.last_block_id!==void 0&&(t.last_block_id=e.last_block_id?rs.toJSON(e.last_block_id):void 0),e.last_commit_hash!==void 0&&(t.last_commit_hash=je(e.last_commit_hash!==void 0?e.last_commit_hash:new Uint8Array)),e.data_hash!==void 0&&(t.data_hash=je(e.data_hash!==void 0?e.data_hash:new Uint8Array)),e.validators_hash!==void 0&&(t.validators_hash=je(e.validators_hash!==void 0?e.validators_hash:new Uint8Array)),e.next_validators_hash!==void 0&&(t.next_validators_hash=je(e.next_validators_hash!==void 0?e.next_validators_hash:new Uint8Array)),e.consensus_hash!==void 0&&(t.consensus_hash=je(e.consensus_hash!==void 0?e.consensus_hash:new Uint8Array)),e.app_hash!==void 0&&(t.app_hash=je(e.app_hash!==void 0?e.app_hash:new Uint8Array)),e.last_results_hash!==void 0&&(t.last_results_hash=je(e.last_results_hash!==void 0?e.last_results_hash:new Uint8Array)),e.evidence_hash!==void 0&&(t.evidence_hash=je(e.evidence_hash!==void 0?e.evidence_hash:new Uint8Array)),e.proposer_address!==void 0&&(t.proposer_address=je(e.proposer_address!==void 0?e.proposer_address:new Uint8Array)),t},fromPartial(e){const t=r({},tc);return e.version!==void 0&&e.version!==null?t.version=os.fromPartial(e.version):t.version=void 0,e.chain_id!==void 0&&e.chain_id!==null?t.chain_id=e.chain_id:t.chain_id="",e.height!==void 0&&e.height!==null?t.height=e.height:t.height=0,e.time!==void 0&&e.time!==null?t.time=e.time:t.time=void 0,e.last_block_id!==void 0&&e.last_block_id!==null?t.last_block_id=rs.fromPartial(e.last_block_id):t.last_block_id=void 0,e.last_commit_hash!==void 0&&e.last_commit_hash!==null?t.last_commit_hash=e.last_commit_hash:t.last_commit_hash=new Uint8Array,e.data_hash!==void 0&&e.data_hash!==null?t.data_hash=e.data_hash:t.data_hash=new Uint8Array,e.validators_hash!==void 0&&e.validators_hash!==null?t.validators_hash=e.validators_hash:t.validators_hash=new Uint8Array,e.next_validators_hash!==void 0&&e.next_validators_hash!==null?t.next_validators_hash=e.next_validators_hash:t.next_validators_hash=new Uint8Array,e.consensus_hash!==void 0&&e.consensus_hash!==null?t.consensus_hash=e.consensus_hash:t.consensus_hash=new Uint8Array,e.app_hash!==void 0&&e.app_hash!==null?t.app_hash=e.app_hash:t.app_hash=new Uint8Array,e.last_results_hash!==void 0&&e.last_results_hash!==null?t.last_results_hash=e.last_results_hash:t.last_results_hash=new Uint8Array,e.evidence_hash!==void 0&&e.evidence_hash!==null?t.evidence_hash=e.evidence_hash:t.evidence_hash=new Uint8Array,e.proposer_address!==void 0&&e.proposer_address!==null?t.proposer_address=e.proposer_address:t.proposer_address=new Uint8Array,t}};var $n=(()=>{if(typeof $n!="undefined")return $n;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const jI=$n.atob||(e=>$n.Buffer.from(e,"base64").toString("binary"));function Ze(e){const t=jI(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const ex=$n.btoa||(e=>$n.Buffer.from(e,"binary").toString("base64"));function je(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return ex(t.join(""))}function tx(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function fy(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function nx(e){return e instanceof Date?e:typeof e=="string"?new Date(e):fy(Le.fromJSON(e))}function ix(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new $n.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const nc={type_url:""},Pt={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},nc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},nc);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=sx(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=ax(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},nc);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var Wi=(()=>{if(typeof Wi!="undefined")return Wi;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const ox=Wi.atob||(e=>Wi.Buffer.from(e,"base64").toString("binary"));function sx(e){const t=ox(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const rx=Wi.btoa||(e=>Wi.Buffer.from(e,"binary").toString("base64"));function ax(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return rx(t.join(""))}const ic={seconds:0,nanos:0},ds={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ic);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=dx(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ic);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},ic);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var oc=(()=>{if(typeof oc!="undefined")return oc;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function dx(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new oc.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const sc={denom:"",amount:""},B={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},sc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},sc);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},sc);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}};var my;(function(e){e[e.BOND_STATUS_UNSPECIFIED=0]="BOND_STATUS_UNSPECIFIED",e[e.BOND_STATUS_UNBONDED=1]="BOND_STATUS_UNBONDED",e[e.BOND_STATUS_UNBONDING=2]="BOND_STATUS_UNBONDING",e[e.BOND_STATUS_BONDED=3]="BOND_STATUS_BONDED",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(my||(my={}));function lx(e){switch(e){case 0:case"BOND_STATUS_UNSPECIFIED":return 0;case 1:case"BOND_STATUS_UNBONDED":return 1;case 2:case"BOND_STATUS_UNBONDING":return 2;case 3:case"BOND_STATUS_BONDED":return 3;case-1:case"UNRECOGNIZED":default:return-1}}function ux(e){switch(e){case 0:return"BOND_STATUS_UNSPECIFIED";case 1:return"BOND_STATUS_UNBONDED";case 2:return"BOND_STATUS_UNBONDING";case 3:return"BOND_STATUS_BONDED";default:return"UNKNOWN"}}const rc={},cx={encode(e,t=l.Writer.create()){e.header!==void 0&&as.encode(e.header,t.uint32(10).fork()).ldelim();for(const n of e.valset)Hi.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},rc);for(i.valset=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.header=as.decode(n,n.uint32());break;case 2:i.valset.push(Hi.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},rc);if(t.valset=[],e.header!==void 0&&e.header!==null?t.header=as.fromJSON(e.header):t.header=void 0,e.valset!==void 0&&e.valset!==null)for(const n of e.valset)t.valset.push(Hi.fromJSON(n));return t},toJSON(e){const t={};return e.header!==void 0&&(t.header=e.header?as.toJSON(e.header):void 0),e.valset?t.valset=e.valset.map(n=>n?Hi.toJSON(n):void 0):t.valset=[],t},fromPartial(e){const t=r({},rc);if(t.valset=[],e.header!==void 0&&e.header!==null?t.header=as.fromPartial(e.header):t.header=void 0,e.valset!==void 0&&e.valset!==null)for(const n of e.valset)t.valset.push(Hi.fromPartial(n));return t}},ac={rate:"",max_rate:"",max_change_rate:""},et={encode(e,t=l.Writer.create()){return e.rate!==""&&t.uint32(10).string(e.rate),e.max_rate!==""&&t.uint32(18).string(e.max_rate),e.max_change_rate!==""&&t.uint32(26).string(e.max_change_rate),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ac);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.rate=n.string();break;case 2:i.max_rate=n.string();break;case 3:i.max_change_rate=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ac);return e.rate!==void 0&&e.rate!==null?t.rate=String(e.rate):t.rate="",e.max_rate!==void 0&&e.max_rate!==null?t.max_rate=String(e.max_rate):t.max_rate="",e.max_change_rate!==void 0&&e.max_change_rate!==null?t.max_change_rate=String(e.max_change_rate):t.max_change_rate="",t},toJSON(e){const t={};return e.rate!==void 0&&(t.rate=e.rate),e.max_rate!==void 0&&(t.max_rate=e.max_rate),e.max_change_rate!==void 0&&(t.max_change_rate=e.max_change_rate),t},fromPartial(e){const t=r({},ac);return e.rate!==void 0&&e.rate!==null?t.rate=e.rate:t.rate="",e.max_rate!==void 0&&e.max_rate!==null?t.max_rate=e.max_rate:t.max_rate="",e.max_change_rate!==void 0&&e.max_change_rate!==null?t.max_change_rate=e.max_change_rate:t.max_change_rate="",t}},dc={},Fi={encode(e,t=l.Writer.create()){return e.commission_rates!==void 0&&et.encode(e.commission_rates,t.uint32(10).fork()).ldelim(),e.update_time!==void 0&&Le.encode(Vs(e.update_time),t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},dc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.commission_rates=et.decode(n,n.uint32());break;case 2:i.update_time=ls(Le.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},dc);return e.commission_rates!==void 0&&e.commission_rates!==null?t.commission_rates=et.fromJSON(e.commission_rates):t.commission_rates=void 0,e.update_time!==void 0&&e.update_time!==null?t.update_time=Ws(e.update_time):t.update_time=void 0,t},toJSON(e){const t={};return e.commission_rates!==void 0&&(t.commission_rates=e.commission_rates?et.toJSON(e.commission_rates):void 0),e.update_time!==void 0&&(t.update_time=e.update_time!==void 0?e.update_time.toISOString():null),t},fromPartial(e){const t=r({},dc);return e.commission_rates!==void 0&&e.commission_rates!==null?t.commission_rates=et.fromPartial(e.commission_rates):t.commission_rates=void 0,e.update_time!==void 0&&e.update_time!==null?t.update_time=e.update_time:t.update_time=void 0,t}},lc={moniker:"",identity:"",website:"",security_contact:"",details:""},Pe={encode(e,t=l.Writer.create()){return e.moniker!==""&&t.uint32(10).string(e.moniker),e.identity!==""&&t.uint32(18).string(e.identity),e.website!==""&&t.uint32(26).string(e.website),e.security_contact!==""&&t.uint32(34).string(e.security_contact),e.details!==""&&t.uint32(42).string(e.details),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},lc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.moniker=n.string();break;case 2:i.identity=n.string();break;case 3:i.website=n.string();break;case 4:i.security_contact=n.string();break;case 5:i.details=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},lc);return e.moniker!==void 0&&e.moniker!==null?t.moniker=String(e.moniker):t.moniker="",e.identity!==void 0&&e.identity!==null?t.identity=String(e.identity):t.identity="",e.website!==void 0&&e.website!==null?t.website=String(e.website):t.website="",e.security_contact!==void 0&&e.security_contact!==null?t.security_contact=String(e.security_contact):t.security_contact="",e.details!==void 0&&e.details!==null?t.details=String(e.details):t.details="",t},toJSON(e){const t={};return e.moniker!==void 0&&(t.moniker=e.moniker),e.identity!==void 0&&(t.identity=e.identity),e.website!==void 0&&(t.website=e.website),e.security_contact!==void 0&&(t.security_contact=e.security_contact),e.details!==void 0&&(t.details=e.details),t},fromPartial(e){const t=r({},lc);return e.moniker!==void 0&&e.moniker!==null?t.moniker=e.moniker:t.moniker="",e.identity!==void 0&&e.identity!==null?t.identity=e.identity:t.identity="",e.website!==void 0&&e.website!==null?t.website=e.website:t.website="",e.security_contact!==void 0&&e.security_contact!==null?t.security_contact=e.security_contact:t.security_contact="",e.details!==void 0&&e.details!==null?t.details=e.details:t.details="",t}},uc={operator_address:"",jailed:!1,status:0,tokens:"",delegator_shares:"",unbonding_height:0,min_self_delegation:""},Hi={encode(e,t=l.Writer.create()){return e.operator_address!==""&&t.uint32(10).string(e.operator_address),e.consensus_pubkey!==void 0&&Pt.encode(e.consensus_pubkey,t.uint32(18).fork()).ldelim(),e.jailed===!0&&t.uint32(24).bool(e.jailed),e.status!==0&&t.uint32(32).int32(e.status),e.tokens!==""&&t.uint32(42).string(e.tokens),e.delegator_shares!==""&&t.uint32(50).string(e.delegator_shares),e.description!==void 0&&Pe.encode(e.description,t.uint32(58).fork()).ldelim(),e.unbonding_height!==0&&t.uint32(64).int64(e.unbonding_height),e.unbonding_time!==void 0&&Le.encode(Vs(e.unbonding_time),t.uint32(74).fork()).ldelim(),e.commission!==void 0&&Fi.encode(e.commission,t.uint32(82).fork()).ldelim(),e.min_self_delegation!==""&&t.uint32(90).string(e.min_self_delegation),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},uc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.operator_address=n.string();break;case 2:i.consensus_pubkey=Pt.decode(n,n.uint32());break;case 3:i.jailed=n.bool();break;case 4:i.status=n.int32();break;case 5:i.tokens=n.string();break;case 6:i.delegator_shares=n.string();break;case 7:i.description=Pe.decode(n,n.uint32());break;case 8:i.unbonding_height=Ec(n.int64());break;case 9:i.unbonding_time=ls(Le.decode(n,n.uint32()));break;case 10:i.commission=Fi.decode(n,n.uint32());break;case 11:i.min_self_delegation=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},uc);return e.operator_address!==void 0&&e.operator_address!==null?t.operator_address=String(e.operator_address):t.operator_address="",e.consensus_pubkey!==void 0&&e.consensus_pubkey!==null?t.consensus_pubkey=Pt.fromJSON(e.consensus_pubkey):t.consensus_pubkey=void 0,e.jailed!==void 0&&e.jailed!==null?t.jailed=Boolean(e.jailed):t.jailed=!1,e.status!==void 0&&e.status!==null?t.status=lx(e.status):t.status=0,e.tokens!==void 0&&e.tokens!==null?t.tokens=String(e.tokens):t.tokens="",e.delegator_shares!==void 0&&e.delegator_shares!==null?t.delegator_shares=String(e.delegator_shares):t.delegator_shares="",e.description!==void 0&&e.description!==null?t.description=Pe.fromJSON(e.description):t.description=void 0,e.unbonding_height!==void 0&&e.unbonding_height!==null?t.unbonding_height=Number(e.unbonding_height):t.unbonding_height=0,e.unbonding_time!==void 0&&e.unbonding_time!==null?t.unbonding_time=Ws(e.unbonding_time):t.unbonding_time=void 0,e.commission!==void 0&&e.commission!==null?t.commission=Fi.fromJSON(e.commission):t.commission=void 0,e.min_self_delegation!==void 0&&e.min_self_delegation!==null?t.min_self_delegation=String(e.min_self_delegation):t.min_self_delegation="",t},toJSON(e){const t={};return e.operator_address!==void 0&&(t.operator_address=e.operator_address),e.consensus_pubkey!==void 0&&(t.consensus_pubkey=e.consensus_pubkey?Pt.toJSON(e.consensus_pubkey):void 0),e.jailed!==void 0&&(t.jailed=e.jailed),e.status!==void 0&&(t.status=ux(e.status)),e.tokens!==void 0&&(t.tokens=e.tokens),e.delegator_shares!==void 0&&(t.delegator_shares=e.delegator_shares),e.description!==void 0&&(t.description=e.description?Pe.toJSON(e.description):void 0),e.unbonding_height!==void 0&&(t.unbonding_height=e.unbonding_height),e.unbonding_time!==void 0&&(t.unbonding_time=e.unbonding_time!==void 0?e.unbonding_time.toISOString():null),e.commission!==void 0&&(t.commission=e.commission?Fi.toJSON(e.commission):void 0),e.min_self_delegation!==void 0&&(t.min_self_delegation=e.min_self_delegation),t},fromPartial(e){const t=r({},uc);return e.operator_address!==void 0&&e.operator_address!==null?t.operator_address=e.operator_address:t.operator_address="",e.consensus_pubkey!==void 0&&e.consensus_pubkey!==null?t.consensus_pubkey=Pt.fromPartial(e.consensus_pubkey):t.consensus_pubkey=void 0,e.jailed!==void 0&&e.jailed!==null?t.jailed=e.jailed:t.jailed=!1,e.status!==void 0&&e.status!==null?t.status=e.status:t.status=0,e.tokens!==void 0&&e.tokens!==null?t.tokens=e.tokens:t.tokens="",e.delegator_shares!==void 0&&e.delegator_shares!==null?t.delegator_shares=e.delegator_shares:t.delegator_shares="",e.description!==void 0&&e.description!==null?t.description=Pe.fromPartial(e.description):t.description=void 0,e.unbonding_height!==void 0&&e.unbonding_height!==null?t.unbonding_height=e.unbonding_height:t.unbonding_height=0,e.unbonding_time!==void 0&&e.unbonding_time!==null?t.unbonding_time=e.unbonding_time:t.unbonding_time=void 0,e.commission!==void 0&&e.commission!==null?t.commission=Fi.fromPartial(e.commission):t.commission=void 0,e.min_self_delegation!==void 0&&e.min_self_delegation!==null?t.min_self_delegation=e.min_self_delegation:t.min_self_delegation="",t}},cc={addresses:""},px={encode(e,t=l.Writer.create()){for(const n of e.addresses)t.uint32(10).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},cc);for(i.addresses=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.addresses.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},cc);if(t.addresses=[],e.addresses!==void 0&&e.addresses!==null)for(const n of e.addresses)t.addresses.push(String(n));return t},toJSON(e){const t={};return e.addresses?t.addresses=e.addresses.map(n=>n):t.addresses=[],t},fromPartial(e){const t=r({},cc);if(t.addresses=[],e.addresses!==void 0&&e.addresses!==null)for(const n of e.addresses)t.addresses.push(n);return t}},pc={delegator_address:"",validator_address:""},zi={encode(e,t=l.Writer.create()){return e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.validator_address!==""&&t.uint32(18).string(e.validator_address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},pc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.validator_address=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},pc);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.validator_address!==void 0&&(t.validator_address=e.validator_address),t},fromPartial(e){const t=r({},pc);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",t}},fc={},fx={encode(e,t=l.Writer.create()){for(const n of e.pairs)zi.encode(n,t.uint32(10).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},fc);for(i.pairs=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.pairs.push(zi.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},fc);if(t.pairs=[],e.pairs!==void 0&&e.pairs!==null)for(const n of e.pairs)t.pairs.push(zi.fromJSON(n));return t},toJSON(e){const t={};return e.pairs?t.pairs=e.pairs.map(n=>n?zi.toJSON(n):void 0):t.pairs=[],t},fromPartial(e){const t=r({},fc);if(t.pairs=[],e.pairs!==void 0&&e.pairs!==null)for(const n of e.pairs)t.pairs.push(zi.fromPartial(n));return t}},mc={delegator_address:"",validator_src_address:"",validator_dst_address:""},Yi={encode(e,t=l.Writer.create()){return e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.validator_src_address!==""&&t.uint32(18).string(e.validator_src_address),e.validator_dst_address!==""&&t.uint32(26).string(e.validator_dst_address),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},mc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.validator_src_address=n.string();break;case 3:i.validator_dst_address=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},mc);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.validator_src_address!==void 0&&e.validator_src_address!==null?t.validator_src_address=String(e.validator_src_address):t.validator_src_address="",e.validator_dst_address!==void 0&&e.validator_dst_address!==null?t.validator_dst_address=String(e.validator_dst_address):t.validator_dst_address="",t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.validator_src_address!==void 0&&(t.validator_src_address=e.validator_src_address),e.validator_dst_address!==void 0&&(t.validator_dst_address=e.validator_dst_address),t},fromPartial(e){const t=r({},mc);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.validator_src_address!==void 0&&e.validator_src_address!==null?t.validator_src_address=e.validator_src_address:t.validator_src_address="",e.validator_dst_address!==void 0&&e.validator_dst_address!==null?t.validator_dst_address=e.validator_dst_address:t.validator_dst_address="",t}},hc={},mx={encode(e,t=l.Writer.create()){for(const n of e.triplets)Yi.encode(n,t.uint32(10).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},hc);for(i.triplets=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.triplets.push(Yi.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},hc);if(t.triplets=[],e.triplets!==void 0&&e.triplets!==null)for(const n of e.triplets)t.triplets.push(Yi.fromJSON(n));return t},toJSON(e){const t={};return e.triplets?t.triplets=e.triplets.map(n=>n?Yi.toJSON(n):void 0):t.triplets=[],t},fromPartial(e){const t=r({},hc);if(t.triplets=[],e.triplets!==void 0&&e.triplets!==null)for(const n of e.triplets)t.triplets.push(Yi.fromPartial(n));return t}},gc={delegator_address:"",validator_address:"",shares:""},Xi={encode(e,t=l.Writer.create()){return e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.validator_address!==""&&t.uint32(18).string(e.validator_address),e.shares!==""&&t.uint32(26).string(e.shares),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},gc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.validator_address=n.string();break;case 3:i.shares=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},gc);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.shares!==void 0&&e.shares!==null?t.shares=String(e.shares):t.shares="",t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.shares!==void 0&&(t.shares=e.shares),t},fromPartial(e){const t=r({},gc);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.shares!==void 0&&e.shares!==null?t.shares=e.shares:t.shares="",t}},yc={delegator_address:"",validator_address:""},hx={encode(e,t=l.Writer.create()){e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.validator_address!==""&&t.uint32(18).string(e.validator_address);for(const n of e.entries)Ki.encode(n,t.uint32(26).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},yc);for(i.entries=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.validator_address=n.string();break;case 3:i.entries.push(Ki.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},yc);if(t.entries=[],e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.entries!==void 0&&e.entries!==null)for(const n of e.entries)t.entries.push(Ki.fromJSON(n));return t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.entries?t.entries=e.entries.map(n=>n?Ki.toJSON(n):void 0):t.entries=[],t},fromPartial(e){const t=r({},yc);if(t.entries=[],e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.entries!==void 0&&e.entries!==null)for(const n of e.entries)t.entries.push(Ki.fromPartial(n));return t}},_c={creation_height:0,initial_balance:"",balance:""},Ki={encode(e,t=l.Writer.create()){return e.creation_height!==0&&t.uint32(8).int64(e.creation_height),e.completion_time!==void 0&&Le.encode(Vs(e.completion_time),t.uint32(18).fork()).ldelim(),e.initial_balance!==""&&t.uint32(26).string(e.initial_balance),e.balance!==""&&t.uint32(34).string(e.balance),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},_c);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creation_height=Ec(n.int64());break;case 2:i.completion_time=ls(Le.decode(n,n.uint32()));break;case 3:i.initial_balance=n.string();break;case 4:i.balance=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},_c);return e.creation_height!==void 0&&e.creation_height!==null?t.creation_height=Number(e.creation_height):t.creation_height=0,e.completion_time!==void 0&&e.completion_time!==null?t.completion_time=Ws(e.completion_time):t.completion_time=void 0,e.initial_balance!==void 0&&e.initial_balance!==null?t.initial_balance=String(e.initial_balance):t.initial_balance="",e.balance!==void 0&&e.balance!==null?t.balance=String(e.balance):t.balance="",t},toJSON(e){const t={};return e.creation_height!==void 0&&(t.creation_height=e.creation_height),e.completion_time!==void 0&&(t.completion_time=e.completion_time!==void 0?e.completion_time.toISOString():null),e.initial_balance!==void 0&&(t.initial_balance=e.initial_balance),e.balance!==void 0&&(t.balance=e.balance),t},fromPartial(e){const t=r({},_c);return e.creation_height!==void 0&&e.creation_height!==null?t.creation_height=e.creation_height:t.creation_height=0,e.completion_time!==void 0&&e.completion_time!==null?t.completion_time=e.completion_time:t.completion_time=void 0,e.initial_balance!==void 0&&e.initial_balance!==null?t.initial_balance=e.initial_balance:t.initial_balance="",e.balance!==void 0&&e.balance!==null?t.balance=e.balance:t.balance="",t}},vc={creation_height:0,initial_balance:"",shares_dst:""},tt={encode(e,t=l.Writer.create()){return e.creation_height!==0&&t.uint32(8).int64(e.creation_height),e.completion_time!==void 0&&Le.encode(Vs(e.completion_time),t.uint32(18).fork()).ldelim(),e.initial_balance!==""&&t.uint32(26).string(e.initial_balance),e.shares_dst!==""&&t.uint32(34).string(e.shares_dst),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},vc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creation_height=Ec(n.int64());break;case 2:i.completion_time=ls(Le.decode(n,n.uint32()));break;case 3:i.initial_balance=n.string();break;case 4:i.shares_dst=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},vc);return e.creation_height!==void 0&&e.creation_height!==null?t.creation_height=Number(e.creation_height):t.creation_height=0,e.completion_time!==void 0&&e.completion_time!==null?t.completion_time=Ws(e.completion_time):t.completion_time=void 0,e.initial_balance!==void 0&&e.initial_balance!==null?t.initial_balance=String(e.initial_balance):t.initial_balance="",e.shares_dst!==void 0&&e.shares_dst!==null?t.shares_dst=String(e.shares_dst):t.shares_dst="",t},toJSON(e){const t={};return e.creation_height!==void 0&&(t.creation_height=e.creation_height),e.completion_time!==void 0&&(t.completion_time=e.completion_time!==void 0?e.completion_time.toISOString():null),e.initial_balance!==void 0&&(t.initial_balance=e.initial_balance),e.shares_dst!==void 0&&(t.shares_dst=e.shares_dst),t},fromPartial(e){const t=r({},vc);return e.creation_height!==void 0&&e.creation_height!==null?t.creation_height=e.creation_height:t.creation_height=0,e.completion_time!==void 0&&e.completion_time!==null?t.completion_time=e.completion_time:t.completion_time=void 0,e.initial_balance!==void 0&&e.initial_balance!==null?t.initial_balance=e.initial_balance:t.initial_balance="",e.shares_dst!==void 0&&e.shares_dst!==null?t.shares_dst=e.shares_dst:t.shares_dst="",t}},bc={delegator_address:"",validator_src_address:"",validator_dst_address:""},Zi={encode(e,t=l.Writer.create()){e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.validator_src_address!==""&&t.uint32(18).string(e.validator_src_address),e.validator_dst_address!==""&&t.uint32(26).string(e.validator_dst_address);for(const n of e.entries)tt.encode(n,t.uint32(34).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},bc);for(i.entries=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.validator_src_address=n.string();break;case 3:i.validator_dst_address=n.string();break;case 4:i.entries.push(tt.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},bc);if(t.entries=[],e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.validator_src_address!==void 0&&e.validator_src_address!==null?t.validator_src_address=String(e.validator_src_address):t.validator_src_address="",e.validator_dst_address!==void 0&&e.validator_dst_address!==null?t.validator_dst_address=String(e.validator_dst_address):t.validator_dst_address="",e.entries!==void 0&&e.entries!==null)for(const n of e.entries)t.entries.push(tt.fromJSON(n));return t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.validator_src_address!==void 0&&(t.validator_src_address=e.validator_src_address),e.validator_dst_address!==void 0&&(t.validator_dst_address=e.validator_dst_address),e.entries?t.entries=e.entries.map(n=>n?tt.toJSON(n):void 0):t.entries=[],t},fromPartial(e){const t=r({},bc);if(t.entries=[],e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.validator_src_address!==void 0&&e.validator_src_address!==null?t.validator_src_address=e.validator_src_address:t.validator_src_address="",e.validator_dst_address!==void 0&&e.validator_dst_address!==null?t.validator_dst_address=e.validator_dst_address:t.validator_dst_address="",e.entries!==void 0&&e.entries!==null)for(const n of e.entries)t.entries.push(tt.fromPartial(n));return t}},wc={max_validators:0,max_entries:0,historical_entries:0,bond_denom:"",min_commission_rate:""},gx={encode(e,t=l.Writer.create()){return e.unbonding_time!==void 0&&ds.encode(e.unbonding_time,t.uint32(10).fork()).ldelim(),e.max_validators!==0&&t.uint32(16).uint32(e.max_validators),e.max_entries!==0&&t.uint32(24).uint32(e.max_entries),e.historical_entries!==0&&t.uint32(32).uint32(e.historical_entries),e.bond_denom!==""&&t.uint32(42).string(e.bond_denom),e.min_commission_rate!==""&&t.uint32(50).string(e.min_commission_rate),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},wc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.unbonding_time=ds.decode(n,n.uint32());break;case 2:i.max_validators=n.uint32();break;case 3:i.max_entries=n.uint32();break;case 4:i.historical_entries=n.uint32();break;case 5:i.bond_denom=n.string();break;case 6:i.min_commission_rate=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},wc);return e.unbonding_time!==void 0&&e.unbonding_time!==null?t.unbonding_time=ds.fromJSON(e.unbonding_time):t.unbonding_time=void 0,e.max_validators!==void 0&&e.max_validators!==null?t.max_validators=Number(e.max_validators):t.max_validators=0,e.max_entries!==void 0&&e.max_entries!==null?t.max_entries=Number(e.max_entries):t.max_entries=0,e.historical_entries!==void 0&&e.historical_entries!==null?t.historical_entries=Number(e.historical_entries):t.historical_entries=0,e.bond_denom!==void 0&&e.bond_denom!==null?t.bond_denom=String(e.bond_denom):t.bond_denom="",e.min_commission_rate!==void 0&&e.min_commission_rate!==null?t.min_commission_rate=String(e.min_commission_rate):t.min_commission_rate="",t},toJSON(e){const t={};return e.unbonding_time!==void 0&&(t.unbonding_time=e.unbonding_time?ds.toJSON(e.unbonding_time):void 0),e.max_validators!==void 0&&(t.max_validators=e.max_validators),e.max_entries!==void 0&&(t.max_entries=e.max_entries),e.historical_entries!==void 0&&(t.historical_entries=e.historical_entries),e.bond_denom!==void 0&&(t.bond_denom=e.bond_denom),e.min_commission_rate!==void 0&&(t.min_commission_rate=e.min_commission_rate),t},fromPartial(e){const t=r({},wc);return e.unbonding_time!==void 0&&e.unbonding_time!==null?t.unbonding_time=ds.fromPartial(e.unbonding_time):t.unbonding_time=void 0,e.max_validators!==void 0&&e.max_validators!==null?t.max_validators=e.max_validators:t.max_validators=0,e.max_entries!==void 0&&e.max_entries!==null?t.max_entries=e.max_entries:t.max_entries=0,e.historical_entries!==void 0&&e.historical_entries!==null?t.historical_entries=e.historical_entries:t.historical_entries=0,e.bond_denom!==void 0&&e.bond_denom!==null?t.bond_denom=e.bond_denom:t.bond_denom="",e.min_commission_rate!==void 0&&e.min_commission_rate!==null?t.min_commission_rate=e.min_commission_rate:t.min_commission_rate="",t}},Sc={},yx={encode(e,t=l.Writer.create()){return e.delegation!==void 0&&Xi.encode(e.delegation,t.uint32(10).fork()).ldelim(),e.balance!==void 0&&B.encode(e.balance,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Sc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegation=Xi.decode(n,n.uint32());break;case 2:i.balance=B.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Sc);return e.delegation!==void 0&&e.delegation!==null?t.delegation=Xi.fromJSON(e.delegation):t.delegation=void 0,e.balance!==void 0&&e.balance!==null?t.balance=B.fromJSON(e.balance):t.balance=void 0,t},toJSON(e){const t={};return e.delegation!==void 0&&(t.delegation=e.delegation?Xi.toJSON(e.delegation):void 0),e.balance!==void 0&&(t.balance=e.balance?B.toJSON(e.balance):void 0),t},fromPartial(e){const t=r({},Sc);return e.delegation!==void 0&&e.delegation!==null?t.delegation=Xi.fromPartial(e.delegation):t.delegation=void 0,e.balance!==void 0&&e.balance!==null?t.balance=B.fromPartial(e.balance):t.balance=void 0,t}},kc={balance:""},ji={encode(e,t=l.Writer.create()){return e.redelegation_entry!==void 0&&tt.encode(e.redelegation_entry,t.uint32(10).fork()).ldelim(),e.balance!==""&&t.uint32(34).string(e.balance),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},kc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.redelegation_entry=tt.decode(n,n.uint32());break;case 4:i.balance=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},kc);return e.redelegation_entry!==void 0&&e.redelegation_entry!==null?t.redelegation_entry=tt.fromJSON(e.redelegation_entry):t.redelegation_entry=void 0,e.balance!==void 0&&e.balance!==null?t.balance=String(e.balance):t.balance="",t},toJSON(e){const t={};return e.redelegation_entry!==void 0&&(t.redelegation_entry=e.redelegation_entry?tt.toJSON(e.redelegation_entry):void 0),e.balance!==void 0&&(t.balance=e.balance),t},fromPartial(e){const t=r({},kc);return e.redelegation_entry!==void 0&&e.redelegation_entry!==null?t.redelegation_entry=tt.fromPartial(e.redelegation_entry):t.redelegation_entry=void 0,e.balance!==void 0&&e.balance!==null?t.balance=e.balance:t.balance="",t}},Pc={},_x={encode(e,t=l.Writer.create()){e.redelegation!==void 0&&Zi.encode(e.redelegation,t.uint32(10).fork()).ldelim();for(const n of e.entries)ji.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Pc);for(i.entries=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.redelegation=Zi.decode(n,n.uint32());break;case 2:i.entries.push(ji.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Pc);if(t.entries=[],e.redelegation!==void 0&&e.redelegation!==null?t.redelegation=Zi.fromJSON(e.redelegation):t.redelegation=void 0,e.entries!==void 0&&e.entries!==null)for(const n of e.entries)t.entries.push(ji.fromJSON(n));return t},toJSON(e){const t={};return e.redelegation!==void 0&&(t.redelegation=e.redelegation?Zi.toJSON(e.redelegation):void 0),e.entries?t.entries=e.entries.map(n=>n?ji.toJSON(n):void 0):t.entries=[],t},fromPartial(e){const t=r({},Pc);if(t.entries=[],e.redelegation!==void 0&&e.redelegation!==null?t.redelegation=Zi.fromPartial(e.redelegation):t.redelegation=void 0,e.entries!==void 0&&e.entries!==null)for(const n of e.entries)t.entries.push(ji.fromPartial(n));return t}},Cc={not_bonded_tokens:"",bonded_tokens:""},vx={encode(e,t=l.Writer.create()){return e.not_bonded_tokens!==""&&t.uint32(10).string(e.not_bonded_tokens),e.bonded_tokens!==""&&t.uint32(18).string(e.bonded_tokens),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Cc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.not_bonded_tokens=n.string();break;case 2:i.bonded_tokens=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Cc);return e.not_bonded_tokens!==void 0&&e.not_bonded_tokens!==null?t.not_bonded_tokens=String(e.not_bonded_tokens):t.not_bonded_tokens="",e.bonded_tokens!==void 0&&e.bonded_tokens!==null?t.bonded_tokens=String(e.bonded_tokens):t.bonded_tokens="",t},toJSON(e){const t={};return e.not_bonded_tokens!==void 0&&(t.not_bonded_tokens=e.not_bonded_tokens),e.bonded_tokens!==void 0&&(t.bonded_tokens=e.bonded_tokens),t},fromPartial(e){const t=r({},Cc);return e.not_bonded_tokens!==void 0&&e.not_bonded_tokens!==null?t.not_bonded_tokens=e.not_bonded_tokens:t.not_bonded_tokens="",e.bonded_tokens!==void 0&&e.bonded_tokens!==null?t.bonded_tokens=e.bonded_tokens:t.bonded_tokens="",t}};var Rc=(()=>{if(typeof Rc!="undefined")return Rc;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Vs(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function ls(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function Ws(e){return e instanceof Date?e:typeof e=="string"?new Date(e):ls(Le.fromJSON(e))}function Ec(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Rc.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Tc={min_self_delegation:"",delegator_address:"",validator_address:""},hy={encode(e,t=l.Writer.create()){return e.description!==void 0&&Pe.encode(e.description,t.uint32(10).fork()).ldelim(),e.commission!==void 0&&et.encode(e.commission,t.uint32(18).fork()).ldelim(),e.min_self_delegation!==""&&t.uint32(26).string(e.min_self_delegation),e.delegator_address!==""&&t.uint32(34).string(e.delegator_address),e.validator_address!==""&&t.uint32(42).string(e.validator_address),e.pubkey!==void 0&&Pt.encode(e.pubkey,t.uint32(50).fork()).ldelim(),e.value!==void 0&&B.encode(e.value,t.uint32(58).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Tc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.description=Pe.decode(n,n.uint32());break;case 2:i.commission=et.decode(n,n.uint32());break;case 3:i.min_self_delegation=n.string();break;case 4:i.delegator_address=n.string();break;case 5:i.validator_address=n.string();break;case 6:i.pubkey=Pt.decode(n,n.uint32());break;case 7:i.value=B.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Tc);return e.description!==void 0&&e.description!==null?t.description=Pe.fromJSON(e.description):t.description=void 0,e.commission!==void 0&&e.commission!==null?t.commission=et.fromJSON(e.commission):t.commission=void 0,e.min_self_delegation!==void 0&&e.min_self_delegation!==null?t.min_self_delegation=String(e.min_self_delegation):t.min_self_delegation="",e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.pubkey!==void 0&&e.pubkey!==null?t.pubkey=Pt.fromJSON(e.pubkey):t.pubkey=void 0,e.value!==void 0&&e.value!==null?t.value=B.fromJSON(e.value):t.value=void 0,t},toJSON(e){const t={};return e.description!==void 0&&(t.description=e.description?Pe.toJSON(e.description):void 0),e.commission!==void 0&&(t.commission=e.commission?et.toJSON(e.commission):void 0),e.min_self_delegation!==void 0&&(t.min_self_delegation=e.min_self_delegation),e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.pubkey!==void 0&&(t.pubkey=e.pubkey?Pt.toJSON(e.pubkey):void 0),e.value!==void 0&&(t.value=e.value?B.toJSON(e.value):void 0),t},fromPartial(e){const t=r({},Tc);return e.description!==void 0&&e.description!==null?t.description=Pe.fromPartial(e.description):t.description=void 0,e.commission!==void 0&&e.commission!==null?t.commission=et.fromPartial(e.commission):t.commission=void 0,e.min_self_delegation!==void 0&&e.min_self_delegation!==null?t.min_self_delegation=e.min_self_delegation:t.min_self_delegation="",e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.pubkey!==void 0&&e.pubkey!==null?t.pubkey=Pt.fromPartial(e.pubkey):t.pubkey=void 0,e.value!==void 0&&e.value!==null?t.value=B.fromPartial(e.value):t.value=void 0,t}},Nc={validator_address:"",commission_rate:"",min_self_delegation:""},gy={encode(e,t=l.Writer.create()){return e.description!==void 0&&Pe.encode(e.description,t.uint32(10).fork()).ldelim(),e.validator_address!==""&&t.uint32(18).string(e.validator_address),e.commission_rate!==""&&t.uint32(26).string(e.commission_rate),e.min_self_delegation!==""&&t.uint32(34).string(e.min_self_delegation),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Nc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.description=Pe.decode(n,n.uint32());break;case 2:i.validator_address=n.string();break;case 3:i.commission_rate=n.string();break;case 4:i.min_self_delegation=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Nc);return e.description!==void 0&&e.description!==null?t.description=Pe.fromJSON(e.description):t.description=void 0,e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.commission_rate!==void 0&&e.commission_rate!==null?t.commission_rate=String(e.commission_rate):t.commission_rate="",e.min_self_delegation!==void 0&&e.min_self_delegation!==null?t.min_self_delegation=String(e.min_self_delegation):t.min_self_delegation="",t},toJSON(e){const t={};return e.description!==void 0&&(t.description=e.description?Pe.toJSON(e.description):void 0),e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.commission_rate!==void 0&&(t.commission_rate=e.commission_rate),e.min_self_delegation!==void 0&&(t.min_self_delegation=e.min_self_delegation),t},fromPartial(e){const t=r({},Nc);return e.description!==void 0&&e.description!==null?t.description=Pe.fromPartial(e.description):t.description=void 0,e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.commission_rate!==void 0&&e.commission_rate!==null?t.commission_rate=e.commission_rate:t.commission_rate="",e.min_self_delegation!==void 0&&e.min_self_delegation!==null?t.min_self_delegation=e.min_self_delegation:t.min_self_delegation="",t}},Ac={delegator_address:"",validator_address:""},yy={encode(e,t=l.Writer.create()){return e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.validator_address!==""&&t.uint32(18).string(e.validator_address),e.amount!==void 0&&B.encode(e.amount,t.uint32(26).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ac);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.validator_address=n.string();break;case 3:i.amount=B.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ac);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.amount!==void 0&&e.amount!==null?t.amount=B.fromJSON(e.amount):t.amount=void 0,t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.amount!==void 0&&(t.amount=e.amount?B.toJSON(e.amount):void 0),t},fromPartial(e){const t=r({},Ac);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.amount!==void 0&&e.amount!==null?t.amount=B.fromPartial(e.amount):t.amount=void 0,t}},Oc={delegator_address:"",validator_src_address:"",validator_dst_address:""},_y={encode(e,t=l.Writer.create()){return e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.validator_src_address!==""&&t.uint32(18).string(e.validator_src_address),e.validator_dst_address!==""&&t.uint32(26).string(e.validator_dst_address),e.amount!==void 0&&B.encode(e.amount,t.uint32(34).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Oc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.validator_src_address=n.string();break;case 3:i.validator_dst_address=n.string();break;case 4:i.amount=B.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Oc);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.validator_src_address!==void 0&&e.validator_src_address!==null?t.validator_src_address=String(e.validator_src_address):t.validator_src_address="",e.validator_dst_address!==void 0&&e.validator_dst_address!==null?t.validator_dst_address=String(e.validator_dst_address):t.validator_dst_address="",e.amount!==void 0&&e.amount!==null?t.amount=B.fromJSON(e.amount):t.amount=void 0,t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.validator_src_address!==void 0&&(t.validator_src_address=e.validator_src_address),e.validator_dst_address!==void 0&&(t.validator_dst_address=e.validator_dst_address),e.amount!==void 0&&(t.amount=e.amount?B.toJSON(e.amount):void 0),t},fromPartial(e){const t=r({},Oc);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.validator_src_address!==void 0&&e.validator_src_address!==null?t.validator_src_address=e.validator_src_address:t.validator_src_address="",e.validator_dst_address!==void 0&&e.validator_dst_address!==null?t.validator_dst_address=e.validator_dst_address:t.validator_dst_address="",e.amount!==void 0&&e.amount!==null?t.amount=B.fromPartial(e.amount):t.amount=void 0,t}},qc={delegator_address:"",validator_address:""},vy={encode(e,t=l.Writer.create()){return e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.validator_address!==""&&t.uint32(18).string(e.validator_address),e.amount!==void 0&&B.encode(e.amount,t.uint32(26).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},qc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.validator_address=n.string();break;case 3:i.amount=B.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},qc);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.amount!==void 0&&e.amount!==null?t.amount=B.fromJSON(e.amount):t.amount=void 0,t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.amount!==void 0&&(t.amount=e.amount?B.toJSON(e.amount):void 0),t},fromPartial(e){const t=r({},qc);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.amount!==void 0&&e.amount!==null?t.amount=B.fromPartial(e.amount):t.amount=void 0,t}},Uc={delegator_address:"",validator_address:"",creation_height:0},by={encode(e,t=l.Writer.create()){return e.delegator_address!==""&&t.uint32(10).string(e.delegator_address),e.validator_address!==""&&t.uint32(18).string(e.validator_address),e.amount!==void 0&&B.encode(e.amount,t.uint32(26).fork()).ldelim(),e.creation_height!==0&&t.uint32(32).int64(e.creation_height),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Uc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.delegator_address=n.string();break;case 2:i.validator_address=n.string();break;case 3:i.amount=B.decode(n,n.uint32());break;case 4:i.creation_height=bx(n.int64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Uc);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=String(e.delegator_address):t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=String(e.validator_address):t.validator_address="",e.amount!==void 0&&e.amount!==null?t.amount=B.fromJSON(e.amount):t.amount=void 0,e.creation_height!==void 0&&e.creation_height!==null?t.creation_height=Number(e.creation_height):t.creation_height=0,t},toJSON(e){const t={};return e.delegator_address!==void 0&&(t.delegator_address=e.delegator_address),e.validator_address!==void 0&&(t.validator_address=e.validator_address),e.amount!==void 0&&(t.amount=e.amount?B.toJSON(e.amount):void 0),e.creation_height!==void 0&&(t.creation_height=e.creation_height),t},fromPartial(e){const t=r({},Uc);return e.delegator_address!==void 0&&e.delegator_address!==null?t.delegator_address=e.delegator_address:t.delegator_address="",e.validator_address!==void 0&&e.validator_address!==null?t.validator_address=e.validator_address:t.validator_address="",e.amount!==void 0&&e.amount!==null?t.amount=B.fromPartial(e.amount):t.amount=void 0,e.creation_height!==void 0&&e.creation_height!==null?t.creation_height=e.creation_height:t.creation_height=0,t}};var $c=(()=>{if(typeof $c!="undefined")return $c;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function bx(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new $c.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const wx=[["/cosmos.staking.v1beta1.MsgEditValidator",gy],["/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation",by],["/cosmos.staking.v1beta1.MsgCreateValidator",hy],["/cosmos.staking.v1beta1.MsgBeginRedelegate",_y],["/cosmos.staking.v1beta1.MsgUndelegate",vy],["/cosmos.staking.v1beta1.MsgDelegate",yy]],xe=new Error("wallet is required"),Ic=new Y.Registry(wx),Sx={amount:[],gas:"200000"},kx=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw xe;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:Ic}):n=await J.SigningStargateClient.offline(e,{registry:Ic});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:Sx,memo:""})=>n.signAndBroadcast(s,i,o,d),msgEditValidator:i=>({typeUrl:"/cosmos.staking.v1beta1.MsgEditValidator",value:gy.fromPartial(i)}),msgCancelUnbondingDelegation:i=>({typeUrl:"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation",value:by.fromPartial(i)}),msgCreateValidator:i=>({typeUrl:"/cosmos.staking.v1beta1.MsgCreateValidator",value:hy.fromPartial(i)}),msgBeginRedelegate:i=>({typeUrl:"/cosmos.staking.v1beta1.MsgBeginRedelegate",value:_y.fromPartial(i)}),msgUndelegate:i=>({typeUrl:"/cosmos.staking.v1beta1.MsgUndelegate",value:vy.fromPartial(i)}),msgDelegate:i=>({typeUrl:"/cosmos.staking.v1beta1.MsgDelegate",value:yy.fromPartial(i)})}},Px=async({addr:e}={addr:"http://localhost:1317"})=>new KI({baseUrl:e});var wy;(function(e){e[e.AUTHORIZATION_TYPE_UNSPECIFIED=0]="AUTHORIZATION_TYPE_UNSPECIFIED",e[e.AUTHORIZATION_TYPE_DELEGATE=1]="AUTHORIZATION_TYPE_DELEGATE",e[e.AUTHORIZATION_TYPE_UNDELEGATE=2]="AUTHORIZATION_TYPE_UNDELEGATE",e[e.AUTHORIZATION_TYPE_REDELEGATE=3]="AUTHORIZATION_TYPE_REDELEGATE",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(wy||(wy={}));function Cx(e){switch(e){case 0:case"AUTHORIZATION_TYPE_UNSPECIFIED":return 0;case 1:case"AUTHORIZATION_TYPE_DELEGATE":return 1;case 2:case"AUTHORIZATION_TYPE_UNDELEGATE":return 2;case 3:case"AUTHORIZATION_TYPE_REDELEGATE":return 3;case-1:case"UNRECOGNIZED":default:return-1}}function Rx(e){switch(e){case 0:return"AUTHORIZATION_TYPE_UNSPECIFIED";case 1:return"AUTHORIZATION_TYPE_DELEGATE";case 2:return"AUTHORIZATION_TYPE_UNDELEGATE";case 3:return"AUTHORIZATION_TYPE_REDELEGATE";default:return"UNKNOWN"}}const xc={authorization_type:0},Ex={encode(e,t=l.Writer.create()){return e.max_tokens!==void 0&&B.encode(e.max_tokens,t.uint32(10).fork()).ldelim(),e.allow_list!==void 0&&nt.encode(e.allow_list,t.uint32(18).fork()).ldelim(),e.deny_list!==void 0&&nt.encode(e.deny_list,t.uint32(26).fork()).ldelim(),e.authorization_type!==0&&t.uint32(32).int32(e.authorization_type),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},xc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.max_tokens=B.decode(n,n.uint32());break;case 2:i.allow_list=nt.decode(n,n.uint32());break;case 3:i.deny_list=nt.decode(n,n.uint32());break;case 4:i.authorization_type=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},xc);return e.max_tokens!==void 0&&e.max_tokens!==null?t.max_tokens=B.fromJSON(e.max_tokens):t.max_tokens=void 0,e.allow_list!==void 0&&e.allow_list!==null?t.allow_list=nt.fromJSON(e.allow_list):t.allow_list=void 0,e.deny_list!==void 0&&e.deny_list!==null?t.deny_list=nt.fromJSON(e.deny_list):t.deny_list=void 0,e.authorization_type!==void 0&&e.authorization_type!==null?t.authorization_type=Cx(e.authorization_type):t.authorization_type=0,t},toJSON(e){const t={};return e.max_tokens!==void 0&&(t.max_tokens=e.max_tokens?B.toJSON(e.max_tokens):void 0),e.allow_list!==void 0&&(t.allow_list=e.allow_list?nt.toJSON(e.allow_list):void 0),e.deny_list!==void 0&&(t.deny_list=e.deny_list?nt.toJSON(e.deny_list):void 0),e.authorization_type!==void 0&&(t.authorization_type=Rx(e.authorization_type)),t},fromPartial(e){const t=r({},xc);return e.max_tokens!==void 0&&e.max_tokens!==null?t.max_tokens=B.fromPartial(e.max_tokens):t.max_tokens=void 0,e.allow_list!==void 0&&e.allow_list!==null?t.allow_list=nt.fromPartial(e.allow_list):t.allow_list=void 0,e.deny_list!==void 0&&e.deny_list!==null?t.deny_list=nt.fromPartial(e.deny_list):t.deny_list=void 0,e.authorization_type!==void 0&&e.authorization_type!==null?t.authorization_type=e.authorization_type:t.authorization_type=0,t}},Dc={address:""},nt={encode(e,t=l.Writer.create()){for(const n of e.address)t.uint32(10).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Dc);for(i.address=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Dc);if(t.address=[],e.address!==void 0&&e.address!==null)for(const n of e.address)t.address.push(String(n));return t},toJSON(e){const t={};return e.address?t.address=e.address.map(n=>n):t.address=[],t},fromPartial(e){const t=r({},Dc);if(t.address=[],e.address!==void 0&&e.address!==null)for(const n of e.address)t.address.push(n);return t}},Qc={address:"",power:0},Tx={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),e.power!==0&&t.uint32(16).int64(e.power),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Qc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.power=Nx(n.int64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Qc);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.power!==void 0&&e.power!==null?t.power=Number(e.power):t.power=0,t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.power!==void 0&&(t.power=e.power),t},fromPartial(e){const t=r({},Qc);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.power!==void 0&&e.power!==null?t.power=e.power:t.power=0,t}};var In=(()=>{if(typeof In!="undefined")return In;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();In.atob;In.btoa;function Nx(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new In.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());async function Ve(e){return await kx(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function Oe(e){return await Px({addr:e["common/env/apiCosmos"]})}function xn(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function ne(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const Sy=()=>({Validators:{},Validator:{},ValidatorDelegations:{},ValidatorUnbondingDelegations:{},Delegation:{},UnbondingDelegation:{},DelegatorDelegations:{},DelegatorUnbondingDelegations:{},Redelegations:{},DelegatorValidators:{},DelegatorValidator:{},HistoricalInfo:{},Pool:{},Params:{},_Structure:{StakeAuthorization:ne(Ex.fromPartial({})),StakeAuthorization_Validators:ne(nt.fromPartial({})),LastValidatorPower:ne(Tx.fromPartial({})),HistoricalInfo:ne(cx.fromPartial({})),CommissionRates:ne(et.fromPartial({})),Commission:ne(Fi.fromPartial({})),Description:ne(Pe.fromPartial({})),Validator:ne(Hi.fromPartial({})),ValAddresses:ne(px.fromPartial({})),DVPair:ne(zi.fromPartial({})),DVPairs:ne(fx.fromPartial({})),DVVTriplet:ne(Yi.fromPartial({})),DVVTriplets:ne(mx.fromPartial({})),Delegation:ne(Xi.fromPartial({})),UnbondingDelegation:ne(hx.fromPartial({})),UnbondingDelegationEntry:ne(Ki.fromPartial({})),RedelegationEntry:ne(tt.fromPartial({})),Redelegation:ne(Zi.fromPartial({})),Params:ne(gx.fromPartial({})),DelegationResponse:ne(yx.fromPartial({})),RedelegationEntryResponse:ne(ji.fromPartial({})),RedelegationResponse:ne(_x.fromPartial({})),Pool:ne(vx.fromPartial({}))},_Registry:Ic,_Subscriptions:new Set}),Ax=Sy();var Ox={namespaced:!0,state:Ax,mutations:{RESET_STATE(e){Object.assign(e,Sy())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getValidators:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Validators[JSON.stringify(t)])!=null?n:{}},getValidator:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Validator[JSON.stringify(t)])!=null?n:{}},getValidatorDelegations:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ValidatorDelegations[JSON.stringify(t)])!=null?n:{}},getValidatorUnbondingDelegations:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ValidatorUnbondingDelegations[JSON.stringify(t)])!=null?n:{}},getDelegation:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Delegation[JSON.stringify(t)])!=null?n:{}},getUnbondingDelegation:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.UnbondingDelegation[JSON.stringify(t)])!=null?n:{}},getDelegatorDelegations:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DelegatorDelegations[JSON.stringify(t)])!=null?n:{}},getDelegatorUnbondingDelegations:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DelegatorUnbondingDelegations[JSON.stringify(t)])!=null?n:{}},getRedelegations:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Redelegations[JSON.stringify(t)])!=null?n:{}},getDelegatorValidators:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DelegatorValidators[JSON.stringify(t)])!=null?n:{}},getDelegatorValidator:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DelegatorValidator[JSON.stringify(t)])!=null?n:{}},getHistoricalInfo:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.HistoricalInfo[JSON.stringify(t)])!=null?n:{}},getPool:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Pool[JSON.stringify(t)])!=null?n:{}},getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.staking.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryValidators({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Oe(t);let u=(await p.queryValidators(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryValidators(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=xn(u,g)}return e("QUERY",{query:"Validators",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryValidators",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getValidators({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryValidators API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryValidator({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Oe(t)).queryValidator(a.validator_addr)).data;return e("QUERY",{query:"Validator",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryValidator",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getValidator({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryValidator API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryValidatorDelegations({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Oe(t);let u=(await p.queryValidatorDelegations(a.validator_addr,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryValidatorDelegations(a.validator_addr,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=xn(u,g)}return e("QUERY",{query:"ValidatorDelegations",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryValidatorDelegations",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getValidatorDelegations({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryValidatorDelegations API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryValidatorUnbondingDelegations({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Oe(t);let u=(await p.queryValidatorUnbondingDelegations(a.validator_addr,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryValidatorUnbondingDelegations(a.validator_addr,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=xn(u,g)}return e("QUERY",{query:"ValidatorUnbondingDelegations",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryValidatorUnbondingDelegations",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getValidatorUnbondingDelegations({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryValidatorUnbondingDelegations API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDelegation({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Oe(t)).queryDelegation(a.validator_addr,a.delegator_addr)).data;return e("QUERY",{query:"Delegation",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDelegation",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDelegation({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDelegation API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryUnbondingDelegation({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Oe(t)).queryUnbondingDelegation(a.validator_addr,a.delegator_addr)).data;return e("QUERY",{query:"UnbondingDelegation",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryUnbondingDelegation",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getUnbondingDelegation({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryUnbondingDelegation API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDelegatorDelegations({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Oe(t);let u=(await p.queryDelegatorDelegations(a.delegator_addr,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryDelegatorDelegations(a.delegator_addr,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=xn(u,g)}return e("QUERY",{query:"DelegatorDelegations",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDelegatorDelegations",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDelegatorDelegations({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDelegatorDelegations API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDelegatorUnbondingDelegations({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Oe(t);let u=(await p.queryDelegatorUnbondingDelegations(a.delegator_addr,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryDelegatorUnbondingDelegations(a.delegator_addr,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=xn(u,g)}return e("QUERY",{query:"DelegatorUnbondingDelegations",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDelegatorUnbondingDelegations",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDelegatorUnbondingDelegations({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDelegatorUnbondingDelegations API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryRedelegations({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Oe(t);let u=(await p.queryRedelegations(a.delegator_addr,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryRedelegations(a.delegator_addr,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=xn(u,g)}return e("QUERY",{query:"Redelegations",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryRedelegations",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getRedelegations({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryRedelegations API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDelegatorValidators({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Oe(t);let u=(await p.queryDelegatorValidators(a.delegator_addr,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryDelegatorValidators(a.delegator_addr,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=xn(u,g)}return e("QUERY",{query:"DelegatorValidators",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDelegatorValidators",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDelegatorValidators({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDelegatorValidators API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDelegatorValidator({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Oe(t)).queryDelegatorValidator(a.delegator_addr,a.validator_addr)).data;return e("QUERY",{query:"DelegatorValidator",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDelegatorValidator",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDelegatorValidator({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDelegatorValidator API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryHistoricalInfo({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Oe(t)).queryHistoricalInfo(a.height)).data;return e("QUERY",{query:"HistoricalInfo",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryHistoricalInfo",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getHistoricalInfo({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryHistoricalInfo API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryPool({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Oe(t)).queryPool()).data;return e("QUERY",{query:"Pool",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryPool",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getPool({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryPool API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Oe(t)).queryParams()).data;return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgEditValidator({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Ve(e),d=await o.msgEditValidator(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==xe?new Error("TxClient:MsgEditValidator:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgEditValidator:Send Could not broadcast Tx: "+o.message)}},async sendMsgCancelUnbondingDelegation({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Ve(e),d=await o.msgCancelUnbondingDelegation(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==xe?new Error("TxClient:MsgCancelUnbondingDelegation:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCancelUnbondingDelegation:Send Could not broadcast Tx: "+o.message)}},async sendMsgCreateValidator({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Ve(e),d=await o.msgCreateValidator(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==xe?new Error("TxClient:MsgCreateValidator:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateValidator:Send Could not broadcast Tx: "+o.message)}},async sendMsgBeginRedelegate({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Ve(e),d=await o.msgBeginRedelegate(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==xe?new Error("TxClient:MsgBeginRedelegate:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgBeginRedelegate:Send Could not broadcast Tx: "+o.message)}},async sendMsgUndelegate({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Ve(e),d=await o.msgUndelegate(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==xe?new Error("TxClient:MsgUndelegate:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUndelegate:Send Could not broadcast Tx: "+o.message)}},async sendMsgDelegate({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Ve(e),d=await o.msgDelegate(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==xe?new Error("TxClient:MsgDelegate:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDelegate:Send Could not broadcast Tx: "+o.message)}},async MsgEditValidator({rootGetters:e},{value:t}){try{return await(await Ve(e)).msgEditValidator(t)}catch(n){throw n==xe?new Error("TxClient:MsgEditValidator:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgEditValidator:Create Could not create message: "+n.message)}},async MsgCancelUnbondingDelegation({rootGetters:e},{value:t}){try{return await(await Ve(e)).msgCancelUnbondingDelegation(t)}catch(n){throw n==xe?new Error("TxClient:MsgCancelUnbondingDelegation:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCancelUnbondingDelegation:Create Could not create message: "+n.message)}},async MsgCreateValidator({rootGetters:e},{value:t}){try{return await(await Ve(e)).msgCreateValidator(t)}catch(n){throw n==xe?new Error("TxClient:MsgCreateValidator:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateValidator:Create Could not create message: "+n.message)}},async MsgBeginRedelegate({rootGetters:e},{value:t}){try{return await(await Ve(e)).msgBeginRedelegate(t)}catch(n){throw n==xe?new Error("TxClient:MsgBeginRedelegate:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgBeginRedelegate:Create Could not create message: "+n.message)}},async MsgUndelegate({rootGetters:e},{value:t}){try{return await(await Ve(e)).msgUndelegate(t)}catch(n){throw n==xe?new Error("TxClient:MsgUndelegate:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUndelegate:Create Could not create message: "+n.message)}},async MsgDelegate({rootGetters:e},{value:t}){try{return await(await Ve(e)).msgDelegate(t)}catch(n){throw n==xe?new Error("TxClient:MsgDelegate:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDelegate:Create Could not create message: "+n.message)}}}},ky;(function(e){e.BLOCK_ID_FLAG_UNKNOWN="BLOCK_ID_FLAG_UNKNOWN",e.BLOCK_ID_FLAG_ABSENT="BLOCK_ID_FLAG_ABSENT",e.BLOCK_ID_FLAG_COMMIT="BLOCK_ID_FLAG_COMMIT",e.BLOCK_ID_FLAG_NIL="BLOCK_ID_FLAG_NIL"})(ky||(ky={}));var Py;(function(e){e.SIGNED_MSG_TYPE_UNKNOWN="SIGNED_MSG_TYPE_UNKNOWN",e.SIGNED_MSG_TYPE_PREVOTE="SIGNED_MSG_TYPE_PREVOTE",e.SIGNED_MSG_TYPE_PRECOMMIT="SIGNED_MSG_TYPE_PRECOMMIT",e.SIGNED_MSG_TYPE_PROPOSAL="SIGNED_MSG_TYPE_PROPOSAL"})(Py||(Py={}));var Cy;(function(e){e.BROADCAST_MODE_UNSPECIFIED="BROADCAST_MODE_UNSPECIFIED",e.BROADCAST_MODE_BLOCK="BROADCAST_MODE_BLOCK",e.BROADCAST_MODE_SYNC="BROADCAST_MODE_SYNC",e.BROADCAST_MODE_ASYNC="BROADCAST_MODE_ASYNC"})(Cy||(Cy={}));var Ry;(function(e){e.ORDER_BY_UNSPECIFIED="ORDER_BY_UNSPECIFIED",e.ORDER_BY_ASC="ORDER_BY_ASC",e.ORDER_BY_DESC="ORDER_BY_DESC"})(Ry||(Ry={}));var Ey;(function(e){e.SIGN_MODE_UNSPECIFIED="SIGN_MODE_UNSPECIFIED",e.SIGN_MODE_DIRECT="SIGN_MODE_DIRECT",e.SIGN_MODE_TEXTUAL="SIGN_MODE_TEXTUAL",e.SIGN_MODE_DIRECT_AUX="SIGN_MODE_DIRECT_AUX",e.SIGN_MODE_LEGACY_AMINO_JSON="SIGN_MODE_LEGACY_AMINO_JSON",e.SIGNMODEEIP191="SIGN_MODE_EIP_191"})(Ey||(Ey={}));var xt;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(xt||(xt={}));class qx{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[xt.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[xt.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[xt.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||xt.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==xt.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class Ux extends qx{constructor(){super(...arguments);this.serviceSimulate=(t,n={})=>this.request(r({path:"/cosmos/tx/v1beta1/simulate",method:"POST",body:t,type:xt.Json,format:"json"},n)),this.serviceGetTxsEvent=(t,n={})=>this.request(r({path:"/cosmos/tx/v1beta1/txs",method:"GET",query:t,format:"json"},n)),this.serviceBroadcastTx=(t,n={})=>this.request(r({path:"/cosmos/tx/v1beta1/txs",method:"POST",body:t,type:xt.Json,format:"json"},n)),this.serviceGetBlockWithTxs=(t,n,s={})=>this.request(r({path:`/cosmos/tx/v1beta1/txs/block/${t}`,method:"GET",query:n,format:"json"},s)),this.serviceGetTx=(t,n={})=>this.request(r({path:`/cosmos/tx/v1beta1/txs/${t}`,method:"GET",format:"json"},n))}}const $x=[],Ix=new Y.Registry($x),xx=async({addr:e}={addr:"http://localhost:1317"})=>new Ux({baseUrl:e}),Mc={type_url:""},te={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Mc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Mc);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=Qx(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=Bx(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},Mc);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var eo=(()=>{if(typeof eo!="undefined")return eo;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const Dx=eo.atob||(e=>eo.Buffer.from(e,"base64").toString("binary"));function Qx(e){const t=Dx(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const Mx=eo.btoa||(e=>eo.Buffer.from(e,"binary").toString("base64"));function Bx(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return Mx(t.join(""))}const Bc={extra_bits_stored:0},us={encode(e,t=l.Writer.create()){return e.extra_bits_stored!==0&&t.uint32(8).uint32(e.extra_bits_stored),e.elems.length!==0&&t.uint32(18).bytes(e.elems),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Bc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.extra_bits_stored=n.uint32();break;case 2:i.elems=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Bc);return e.extra_bits_stored!==void 0&&e.extra_bits_stored!==null?t.extra_bits_stored=Number(e.extra_bits_stored):t.extra_bits_stored=0,e.elems!==void 0&&e.elems!==null&&(t.elems=Gx(e.elems)),t},toJSON(e){const t={};return e.extra_bits_stored!==void 0&&(t.extra_bits_stored=e.extra_bits_stored),e.elems!==void 0&&(t.elems=Vx(e.elems!==void 0?e.elems:new Uint8Array)),t},fromPartial(e){const t=r({},Bc);return e.extra_bits_stored!==void 0&&e.extra_bits_stored!==null?t.extra_bits_stored=e.extra_bits_stored:t.extra_bits_stored=0,e.elems!==void 0&&e.elems!==null?t.elems=e.elems:t.elems=new Uint8Array,t}};var to=(()=>{if(typeof to!="undefined")return to;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const Jx=to.atob||(e=>to.Buffer.from(e,"base64").toString("binary"));function Gx(e){const t=Jx(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const Lx=to.btoa||(e=>to.Buffer.from(e,"binary").toString("base64"));function Vx(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return Lx(t.join(""))}var Ty;(function(e){e[e.SIGN_MODE_UNSPECIFIED=0]="SIGN_MODE_UNSPECIFIED",e[e.SIGN_MODE_DIRECT=1]="SIGN_MODE_DIRECT",e[e.SIGN_MODE_TEXTUAL=2]="SIGN_MODE_TEXTUAL",e[e.SIGN_MODE_DIRECT_AUX=3]="SIGN_MODE_DIRECT_AUX",e[e.SIGN_MODE_LEGACY_AMINO_JSON=127]="SIGN_MODE_LEGACY_AMINO_JSON",e[e.SIGN_MODE_EIP_191=191]="SIGN_MODE_EIP_191",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(Ty||(Ty={}));function Ny(e){switch(e){case 0:case"SIGN_MODE_UNSPECIFIED":return 0;case 1:case"SIGN_MODE_DIRECT":return 1;case 2:case"SIGN_MODE_TEXTUAL":return 2;case 3:case"SIGN_MODE_DIRECT_AUX":return 3;case 127:case"SIGN_MODE_LEGACY_AMINO_JSON":return 127;case 191:case"SIGN_MODE_EIP_191":return 191;case-1:case"UNRECOGNIZED":default:return-1}}function Ay(e){switch(e){case 0:return"SIGN_MODE_UNSPECIFIED";case 1:return"SIGN_MODE_DIRECT";case 2:return"SIGN_MODE_TEXTUAL";case 3:return"SIGN_MODE_DIRECT_AUX";case 127:return"SIGN_MODE_LEGACY_AMINO_JSON";case 191:return"SIGN_MODE_EIP_191";default:return"UNKNOWN"}}var no=(()=>{if(typeof no!="undefined")return no;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();no.atob;no.btoa;l.util.Long!==S&&(l.util.Long=S,l.configure());const Jc={denom:"",amount:""},Ct={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Jc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Jc);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},Jc);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}},Gc={},Wx={encode(e,t=l.Writer.create()){e.body!==void 0&&oo.encode(e.body,t.uint32(10).fork()).ldelim(),e.auth_info!==void 0&&so.encode(e.auth_info,t.uint32(18).fork()).ldelim();for(const n of e.signatures)t.uint32(26).bytes(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Gc);for(i.signatures=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.body=oo.decode(n,n.uint32());break;case 2:i.auth_info=so.decode(n,n.uint32());break;case 3:i.signatures.push(n.bytes());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Gc);if(t.signatures=[],e.body!==void 0&&e.body!==null?t.body=oo.fromJSON(e.body):t.body=void 0,e.auth_info!==void 0&&e.auth_info!==null?t.auth_info=so.fromJSON(e.auth_info):t.auth_info=void 0,e.signatures!==void 0&&e.signatures!==null)for(const n of e.signatures)t.signatures.push(Zt(n));return t},toJSON(e){const t={};return e.body!==void 0&&(t.body=e.body?oo.toJSON(e.body):void 0),e.auth_info!==void 0&&(t.auth_info=e.auth_info?so.toJSON(e.auth_info):void 0),e.signatures?t.signatures=e.signatures.map(n=>jt(n!==void 0?n:new Uint8Array)):t.signatures=[],t},fromPartial(e){const t=r({},Gc);if(t.signatures=[],e.body!==void 0&&e.body!==null?t.body=oo.fromPartial(e.body):t.body=void 0,e.auth_info!==void 0&&e.auth_info!==null?t.auth_info=so.fromPartial(e.auth_info):t.auth_info=void 0,e.signatures!==void 0&&e.signatures!==null)for(const n of e.signatures)t.signatures.push(n);return t}},Lc={},Fx={encode(e,t=l.Writer.create()){e.body_bytes.length!==0&&t.uint32(10).bytes(e.body_bytes),e.auth_info_bytes.length!==0&&t.uint32(18).bytes(e.auth_info_bytes);for(const n of e.signatures)t.uint32(26).bytes(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Lc);for(i.signatures=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.body_bytes=n.bytes();break;case 2:i.auth_info_bytes=n.bytes();break;case 3:i.signatures.push(n.bytes());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Lc);if(t.signatures=[],e.body_bytes!==void 0&&e.body_bytes!==null&&(t.body_bytes=Zt(e.body_bytes)),e.auth_info_bytes!==void 0&&e.auth_info_bytes!==null&&(t.auth_info_bytes=Zt(e.auth_info_bytes)),e.signatures!==void 0&&e.signatures!==null)for(const n of e.signatures)t.signatures.push(Zt(n));return t},toJSON(e){const t={};return e.body_bytes!==void 0&&(t.body_bytes=jt(e.body_bytes!==void 0?e.body_bytes:new Uint8Array)),e.auth_info_bytes!==void 0&&(t.auth_info_bytes=jt(e.auth_info_bytes!==void 0?e.auth_info_bytes:new Uint8Array)),e.signatures?t.signatures=e.signatures.map(n=>jt(n!==void 0?n:new Uint8Array)):t.signatures=[],t},fromPartial(e){const t=r({},Lc);if(t.signatures=[],e.body_bytes!==void 0&&e.body_bytes!==null?t.body_bytes=e.body_bytes:t.body_bytes=new Uint8Array,e.auth_info_bytes!==void 0&&e.auth_info_bytes!==null?t.auth_info_bytes=e.auth_info_bytes:t.auth_info_bytes=new Uint8Array,e.signatures!==void 0&&e.signatures!==null)for(const n of e.signatures)t.signatures.push(n);return t}},Vc={chain_id:"",account_number:0},Hx={encode(e,t=l.Writer.create()){return e.body_bytes.length!==0&&t.uint32(10).bytes(e.body_bytes),e.auth_info_bytes.length!==0&&t.uint32(18).bytes(e.auth_info_bytes),e.chain_id!==""&&t.uint32(26).string(e.chain_id),e.account_number!==0&&t.uint32(32).uint64(e.account_number),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Vc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.body_bytes=n.bytes();break;case 2:i.auth_info_bytes=n.bytes();break;case 3:i.chain_id=n.string();break;case 4:i.account_number=co(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Vc);return e.body_bytes!==void 0&&e.body_bytes!==null&&(t.body_bytes=Zt(e.body_bytes)),e.auth_info_bytes!==void 0&&e.auth_info_bytes!==null&&(t.auth_info_bytes=Zt(e.auth_info_bytes)),e.chain_id!==void 0&&e.chain_id!==null?t.chain_id=String(e.chain_id):t.chain_id="",e.account_number!==void 0&&e.account_number!==null?t.account_number=Number(e.account_number):t.account_number=0,t},toJSON(e){const t={};return e.body_bytes!==void 0&&(t.body_bytes=jt(e.body_bytes!==void 0?e.body_bytes:new Uint8Array)),e.auth_info_bytes!==void 0&&(t.auth_info_bytes=jt(e.auth_info_bytes!==void 0?e.auth_info_bytes:new Uint8Array)),e.chain_id!==void 0&&(t.chain_id=e.chain_id),e.account_number!==void 0&&(t.account_number=e.account_number),t},fromPartial(e){const t=r({},Vc);return e.body_bytes!==void 0&&e.body_bytes!==null?t.body_bytes=e.body_bytes:t.body_bytes=new Uint8Array,e.auth_info_bytes!==void 0&&e.auth_info_bytes!==null?t.auth_info_bytes=e.auth_info_bytes:t.auth_info_bytes=new Uint8Array,e.chain_id!==void 0&&e.chain_id!==null?t.chain_id=e.chain_id:t.chain_id="",e.account_number!==void 0&&e.account_number!==null?t.account_number=e.account_number:t.account_number=0,t}},Wc={chain_id:"",account_number:0,sequence:0},io={encode(e,t=l.Writer.create()){return e.body_bytes.length!==0&&t.uint32(10).bytes(e.body_bytes),e.public_key!==void 0&&te.encode(e.public_key,t.uint32(18).fork()).ldelim(),e.chain_id!==""&&t.uint32(26).string(e.chain_id),e.account_number!==0&&t.uint32(32).uint64(e.account_number),e.sequence!==0&&t.uint32(40).uint64(e.sequence),e.tip!==void 0&&ot.encode(e.tip,t.uint32(50).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Wc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.body_bytes=n.bytes();break;case 2:i.public_key=te.decode(n,n.uint32());break;case 3:i.chain_id=n.string();break;case 4:i.account_number=co(n.uint64());break;case 5:i.sequence=co(n.uint64());break;case 6:i.tip=ot.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Wc);return e.body_bytes!==void 0&&e.body_bytes!==null&&(t.body_bytes=Zt(e.body_bytes)),e.public_key!==void 0&&e.public_key!==null?t.public_key=te.fromJSON(e.public_key):t.public_key=void 0,e.chain_id!==void 0&&e.chain_id!==null?t.chain_id=String(e.chain_id):t.chain_id="",e.account_number!==void 0&&e.account_number!==null?t.account_number=Number(e.account_number):t.account_number=0,e.sequence!==void 0&&e.sequence!==null?t.sequence=Number(e.sequence):t.sequence=0,e.tip!==void 0&&e.tip!==null?t.tip=ot.fromJSON(e.tip):t.tip=void 0,t},toJSON(e){const t={};return e.body_bytes!==void 0&&(t.body_bytes=jt(e.body_bytes!==void 0?e.body_bytes:new Uint8Array)),e.public_key!==void 0&&(t.public_key=e.public_key?te.toJSON(e.public_key):void 0),e.chain_id!==void 0&&(t.chain_id=e.chain_id),e.account_number!==void 0&&(t.account_number=e.account_number),e.sequence!==void 0&&(t.sequence=e.sequence),e.tip!==void 0&&(t.tip=e.tip?ot.toJSON(e.tip):void 0),t},fromPartial(e){const t=r({},Wc);return e.body_bytes!==void 0&&e.body_bytes!==null?t.body_bytes=e.body_bytes:t.body_bytes=new Uint8Array,e.public_key!==void 0&&e.public_key!==null?t.public_key=te.fromPartial(e.public_key):t.public_key=void 0,e.chain_id!==void 0&&e.chain_id!==null?t.chain_id=e.chain_id:t.chain_id="",e.account_number!==void 0&&e.account_number!==null?t.account_number=e.account_number:t.account_number=0,e.sequence!==void 0&&e.sequence!==null?t.sequence=e.sequence:t.sequence=0,e.tip!==void 0&&e.tip!==null?t.tip=ot.fromPartial(e.tip):t.tip=void 0,t}},Fc={memo:"",timeout_height:0},oo={encode(e,t=l.Writer.create()){for(const n of e.messages)te.encode(n,t.uint32(10).fork()).ldelim();e.memo!==""&&t.uint32(18).string(e.memo),e.timeout_height!==0&&t.uint32(24).uint64(e.timeout_height);for(const n of e.extension_options)te.encode(n,t.uint32(8186).fork()).ldelim();for(const n of e.non_critical_extension_options)te.encode(n,t.uint32(16378).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Fc);for(i.messages=[],i.extension_options=[],i.non_critical_extension_options=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.messages.push(te.decode(n,n.uint32()));break;case 2:i.memo=n.string();break;case 3:i.timeout_height=co(n.uint64());break;case 1023:i.extension_options.push(te.decode(n,n.uint32()));break;case 2047:i.non_critical_extension_options.push(te.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Fc);if(t.messages=[],t.extension_options=[],t.non_critical_extension_options=[],e.messages!==void 0&&e.messages!==null)for(const n of e.messages)t.messages.push(te.fromJSON(n));if(e.memo!==void 0&&e.memo!==null?t.memo=String(e.memo):t.memo="",e.timeout_height!==void 0&&e.timeout_height!==null?t.timeout_height=Number(e.timeout_height):t.timeout_height=0,e.extension_options!==void 0&&e.extension_options!==null)for(const n of e.extension_options)t.extension_options.push(te.fromJSON(n));if(e.non_critical_extension_options!==void 0&&e.non_critical_extension_options!==null)for(const n of e.non_critical_extension_options)t.non_critical_extension_options.push(te.fromJSON(n));return t},toJSON(e){const t={};return e.messages?t.messages=e.messages.map(n=>n?te.toJSON(n):void 0):t.messages=[],e.memo!==void 0&&(t.memo=e.memo),e.timeout_height!==void 0&&(t.timeout_height=e.timeout_height),e.extension_options?t.extension_options=e.extension_options.map(n=>n?te.toJSON(n):void 0):t.extension_options=[],e.non_critical_extension_options?t.non_critical_extension_options=e.non_critical_extension_options.map(n=>n?te.toJSON(n):void 0):t.non_critical_extension_options=[],t},fromPartial(e){const t=r({},Fc);if(t.messages=[],t.extension_options=[],t.non_critical_extension_options=[],e.messages!==void 0&&e.messages!==null)for(const n of e.messages)t.messages.push(te.fromPartial(n));if(e.memo!==void 0&&e.memo!==null?t.memo=e.memo:t.memo="",e.timeout_height!==void 0&&e.timeout_height!==null?t.timeout_height=e.timeout_height:t.timeout_height=0,e.extension_options!==void 0&&e.extension_options!==null)for(const n of e.extension_options)t.extension_options.push(te.fromPartial(n));if(e.non_critical_extension_options!==void 0&&e.non_critical_extension_options!==null)for(const n of e.non_critical_extension_options)t.non_critical_extension_options.push(te.fromPartial(n));return t}},Hc={},so={encode(e,t=l.Writer.create()){for(const n of e.signer_infos)ro.encode(n,t.uint32(10).fork()).ldelim();return e.fee!==void 0&&uo.encode(e.fee,t.uint32(18).fork()).ldelim(),e.tip!==void 0&&ot.encode(e.tip,t.uint32(26).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Hc);for(i.signer_infos=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.signer_infos.push(ro.decode(n,n.uint32()));break;case 2:i.fee=uo.decode(n,n.uint32());break;case 3:i.tip=ot.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Hc);if(t.signer_infos=[],e.signer_infos!==void 0&&e.signer_infos!==null)for(const n of e.signer_infos)t.signer_infos.push(ro.fromJSON(n));return e.fee!==void 0&&e.fee!==null?t.fee=uo.fromJSON(e.fee):t.fee=void 0,e.tip!==void 0&&e.tip!==null?t.tip=ot.fromJSON(e.tip):t.tip=void 0,t},toJSON(e){const t={};return e.signer_infos?t.signer_infos=e.signer_infos.map(n=>n?ro.toJSON(n):void 0):t.signer_infos=[],e.fee!==void 0&&(t.fee=e.fee?uo.toJSON(e.fee):void 0),e.tip!==void 0&&(t.tip=e.tip?ot.toJSON(e.tip):void 0),t},fromPartial(e){const t=r({},Hc);if(t.signer_infos=[],e.signer_infos!==void 0&&e.signer_infos!==null)for(const n of e.signer_infos)t.signer_infos.push(ro.fromPartial(n));return e.fee!==void 0&&e.fee!==null?t.fee=uo.fromPartial(e.fee):t.fee=void 0,e.tip!==void 0&&e.tip!==null?t.tip=ot.fromPartial(e.tip):t.tip=void 0,t}},zc={sequence:0},ro={encode(e,t=l.Writer.create()){return e.public_key!==void 0&&te.encode(e.public_key,t.uint32(10).fork()).ldelim(),e.mode_info!==void 0&&it.encode(e.mode_info,t.uint32(18).fork()).ldelim(),e.sequence!==0&&t.uint32(24).uint64(e.sequence),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},zc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.public_key=te.decode(n,n.uint32());break;case 2:i.mode_info=it.decode(n,n.uint32());break;case 3:i.sequence=co(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},zc);return e.public_key!==void 0&&e.public_key!==null?t.public_key=te.fromJSON(e.public_key):t.public_key=void 0,e.mode_info!==void 0&&e.mode_info!==null?t.mode_info=it.fromJSON(e.mode_info):t.mode_info=void 0,e.sequence!==void 0&&e.sequence!==null?t.sequence=Number(e.sequence):t.sequence=0,t},toJSON(e){const t={};return e.public_key!==void 0&&(t.public_key=e.public_key?te.toJSON(e.public_key):void 0),e.mode_info!==void 0&&(t.mode_info=e.mode_info?it.toJSON(e.mode_info):void 0),e.sequence!==void 0&&(t.sequence=e.sequence),t},fromPartial(e){const t=r({},zc);return e.public_key!==void 0&&e.public_key!==null?t.public_key=te.fromPartial(e.public_key):t.public_key=void 0,e.mode_info!==void 0&&e.mode_info!==null?t.mode_info=it.fromPartial(e.mode_info):t.mode_info=void 0,e.sequence!==void 0&&e.sequence!==null?t.sequence=e.sequence:t.sequence=0,t}},Yc={},it={encode(e,t=l.Writer.create()){return e.single!==void 0&&ao.encode(e.single,t.uint32(10).fork()).ldelim(),e.multi!==void 0&&lo.encode(e.multi,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Yc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.single=ao.decode(n,n.uint32());break;case 2:i.multi=lo.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Yc);return e.single!==void 0&&e.single!==null?t.single=ao.fromJSON(e.single):t.single=void 0,e.multi!==void 0&&e.multi!==null?t.multi=lo.fromJSON(e.multi):t.multi=void 0,t},toJSON(e){const t={};return e.single!==void 0&&(t.single=e.single?ao.toJSON(e.single):void 0),e.multi!==void 0&&(t.multi=e.multi?lo.toJSON(e.multi):void 0),t},fromPartial(e){const t=r({},Yc);return e.single!==void 0&&e.single!==null?t.single=ao.fromPartial(e.single):t.single=void 0,e.multi!==void 0&&e.multi!==null?t.multi=lo.fromPartial(e.multi):t.multi=void 0,t}},Xc={mode:0},ao={encode(e,t=l.Writer.create()){return e.mode!==0&&t.uint32(8).int32(e.mode),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Xc);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.mode=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Xc);return e.mode!==void 0&&e.mode!==null?t.mode=Ny(e.mode):t.mode=0,t},toJSON(e){const t={};return e.mode!==void 0&&(t.mode=Ay(e.mode)),t},fromPartial(e){const t=r({},Xc);return e.mode!==void 0&&e.mode!==null?t.mode=e.mode:t.mode=0,t}},Kc={},lo={encode(e,t=l.Writer.create()){e.bitarray!==void 0&&us.encode(e.bitarray,t.uint32(10).fork()).ldelim();for(const n of e.mode_infos)it.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Kc);for(i.mode_infos=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.bitarray=us.decode(n,n.uint32());break;case 2:i.mode_infos.push(it.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Kc);if(t.mode_infos=[],e.bitarray!==void 0&&e.bitarray!==null?t.bitarray=us.fromJSON(e.bitarray):t.bitarray=void 0,e.mode_infos!==void 0&&e.mode_infos!==null)for(const n of e.mode_infos)t.mode_infos.push(it.fromJSON(n));return t},toJSON(e){const t={};return e.bitarray!==void 0&&(t.bitarray=e.bitarray?us.toJSON(e.bitarray):void 0),e.mode_infos?t.mode_infos=e.mode_infos.map(n=>n?it.toJSON(n):void 0):t.mode_infos=[],t},fromPartial(e){const t=r({},Kc);if(t.mode_infos=[],e.bitarray!==void 0&&e.bitarray!==null?t.bitarray=us.fromPartial(e.bitarray):t.bitarray=void 0,e.mode_infos!==void 0&&e.mode_infos!==null)for(const n of e.mode_infos)t.mode_infos.push(it.fromPartial(n));return t}},Zc={gas_limit:0,payer:"",granter:""},uo={encode(e,t=l.Writer.create()){for(const n of e.amount)Ct.encode(n,t.uint32(10).fork()).ldelim();return e.gas_limit!==0&&t.uint32(16).uint64(e.gas_limit),e.payer!==""&&t.uint32(26).string(e.payer),e.granter!==""&&t.uint32(34).string(e.granter),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Zc);for(i.amount=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.amount.push(Ct.decode(n,n.uint32()));break;case 2:i.gas_limit=co(n.uint64());break;case 3:i.payer=n.string();break;case 4:i.granter=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Zc);if(t.amount=[],e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(Ct.fromJSON(n));return e.gas_limit!==void 0&&e.gas_limit!==null?t.gas_limit=Number(e.gas_limit):t.gas_limit=0,e.payer!==void 0&&e.payer!==null?t.payer=String(e.payer):t.payer="",e.granter!==void 0&&e.granter!==null?t.granter=String(e.granter):t.granter="",t},toJSON(e){const t={};return e.amount?t.amount=e.amount.map(n=>n?Ct.toJSON(n):void 0):t.amount=[],e.gas_limit!==void 0&&(t.gas_limit=e.gas_limit),e.payer!==void 0&&(t.payer=e.payer),e.granter!==void 0&&(t.granter=e.granter),t},fromPartial(e){const t=r({},Zc);if(t.amount=[],e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(Ct.fromPartial(n));return e.gas_limit!==void 0&&e.gas_limit!==null?t.gas_limit=e.gas_limit:t.gas_limit=0,e.payer!==void 0&&e.payer!==null?t.payer=e.payer:t.payer="",e.granter!==void 0&&e.granter!==null?t.granter=e.granter:t.granter="",t}},jc={tipper:""},ot={encode(e,t=l.Writer.create()){for(const n of e.amount)Ct.encode(n,t.uint32(10).fork()).ldelim();return e.tipper!==""&&t.uint32(18).string(e.tipper),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},jc);for(i.amount=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.amount.push(Ct.decode(n,n.uint32()));break;case 2:i.tipper=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},jc);if(t.amount=[],e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(Ct.fromJSON(n));return e.tipper!==void 0&&e.tipper!==null?t.tipper=String(e.tipper):t.tipper="",t},toJSON(e){const t={};return e.amount?t.amount=e.amount.map(n=>n?Ct.toJSON(n):void 0):t.amount=[],e.tipper!==void 0&&(t.tipper=e.tipper),t},fromPartial(e){const t=r({},jc);if(t.amount=[],e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(Ct.fromPartial(n));return e.tipper!==void 0&&e.tipper!==null?t.tipper=e.tipper:t.tipper="",t}},ep={address:"",mode:0},zx={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),e.sign_doc!==void 0&&io.encode(e.sign_doc,t.uint32(18).fork()).ldelim(),e.mode!==0&&t.uint32(24).int32(e.mode),e.sig.length!==0&&t.uint32(34).bytes(e.sig),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ep);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.sign_doc=io.decode(n,n.uint32());break;case 3:i.mode=n.int32();break;case 4:i.sig=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ep);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.sign_doc!==void 0&&e.sign_doc!==null?t.sign_doc=io.fromJSON(e.sign_doc):t.sign_doc=void 0,e.mode!==void 0&&e.mode!==null?t.mode=Ny(e.mode):t.mode=0,e.sig!==void 0&&e.sig!==null&&(t.sig=Zt(e.sig)),t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.sign_doc!==void 0&&(t.sign_doc=e.sign_doc?io.toJSON(e.sign_doc):void 0),e.mode!==void 0&&(t.mode=Ay(e.mode)),e.sig!==void 0&&(t.sig=jt(e.sig!==void 0?e.sig:new Uint8Array)),t},fromPartial(e){const t=r({},ep);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.sign_doc!==void 0&&e.sign_doc!==null?t.sign_doc=io.fromPartial(e.sign_doc):t.sign_doc=void 0,e.mode!==void 0&&e.mode!==null?t.mode=e.mode:t.mode=0,e.sig!==void 0&&e.sig!==null?t.sig=e.sig:t.sig=new Uint8Array,t}};var Dn=(()=>{if(typeof Dn!="undefined")return Dn;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const Yx=Dn.atob||(e=>Dn.Buffer.from(e,"base64").toString("binary"));function Zt(e){const t=Yx(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const Xx=Dn.btoa||(e=>Dn.Buffer.from(e,"binary").toString("base64"));function jt(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return Xx(t.join(""))}function co(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Dn.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());async function cs(e){return await xx({addr:e["common/env/apiCosmos"]})}function Oy(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function De(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const qy=()=>({Simulate:{},GetTx:{},BroadcastTx:{},GetTxsEvent:{},GetBlockWithTxs:{},_Structure:{Tx:De(Wx.fromPartial({})),TxRaw:De(Fx.fromPartial({})),SignDoc:De(Hx.fromPartial({})),SignDocDirectAux:De(io.fromPartial({})),TxBody:De(oo.fromPartial({})),AuthInfo:De(so.fromPartial({})),SignerInfo:De(ro.fromPartial({})),ModeInfo:De(it.fromPartial({})),ModeInfo_Single:De(ao.fromPartial({})),ModeInfo_Multi:De(lo.fromPartial({})),Fee:De(uo.fromPartial({})),Tip:De(ot.fromPartial({})),AuxSignerData:De(zx.fromPartial({}))},_Registry:Ix,_Subscriptions:new Set}),Kx=qy();var Zx={namespaced:!0,state:Kx,mutations:{RESET_STATE(e){Object.assign(e,qy())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getSimulate:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Simulate[JSON.stringify(t)])!=null?n:{}},getGetTx:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GetTx[JSON.stringify(t)])!=null?n:{}},getBroadcastTx:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.BroadcastTx[JSON.stringify(t)])!=null?n:{}},getGetTxsEvent:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GetTxsEvent[JSON.stringify(t)])!=null?n:{}},getGetBlockWithTxs:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GetBlockWithTxs[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.tx.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async ServiceSimulate({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await cs(t)).serviceSimulate(r({},a))).data;return e("QUERY",{query:"Simulate",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"ServiceSimulate",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getSimulate({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:ServiceSimulate API Node Unavailable. Could not perform query: "+a.error.message)}},async ServiceGetTx({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await cs(t)).serviceGetTx(a.hash)).data;return e("QUERY",{query:"GetTx",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"ServiceGetTx",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGetTx({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:ServiceGetTx API Node Unavailable. Could not perform query: "+a.error.message)}},async ServiceBroadcastTx({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await cs(t)).serviceBroadcastTx(r({},a))).data;return e("QUERY",{query:"BroadcastTx",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"ServiceBroadcastTx",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getBroadcastTx({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:ServiceBroadcastTx API Node Unavailable. Could not perform query: "+a.error.message)}},async ServiceGetTxsEvent({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await cs(t);let u=(await p.serviceGetTxsEvent(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.serviceGetTxsEvent(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Oy(u,g)}return e("QUERY",{query:"GetTxsEvent",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"ServiceGetTxsEvent",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGetTxsEvent({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:ServiceGetTxsEvent API Node Unavailable. Could not perform query: "+a.error.message)}},async ServiceGetBlockWithTxs({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await cs(t);let u=(await p.serviceGetBlockWithTxs(a.height,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.serviceGetBlockWithTxs(a.height,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Oy(u,g)}return e("QUERY",{query:"GetBlockWithTxs",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"ServiceGetBlockWithTxs",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGetBlockWithTxs({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:ServiceGetBlockWithTxs API Node Unavailable. Could not perform query: "+a.error.message)}}}},Qn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Qn||(Qn={}));class jx{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[Qn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[Qn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[Qn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||Qn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==Qn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class e6 extends jx{constructor(){super(...arguments);this.queryAppliedPlan=(t,n={})=>this.request(r({path:`/cosmos/upgrade/v1beta1/applied_plan/${t}`,method:"GET",format:"json"},n)),this.queryAuthority=(t={})=>this.request(r({path:"/cosmos/upgrade/v1beta1/authority",method:"GET",format:"json"},t)),this.queryCurrentPlan=(t={})=>this.request(r({path:"/cosmos/upgrade/v1beta1/current_plan",method:"GET",format:"json"},t)),this.queryModuleVersions=(t,n={})=>this.request(r({path:"/cosmos/upgrade/v1beta1/module_versions",method:"GET",query:t,format:"json"},n)),this.queryUpgradedConsensusState=(t,n={})=>this.request(r({path:`/cosmos/upgrade/v1beta1/upgraded_consensus_state/${t}`,method:"GET",format:"json"},n))}}const tp={seconds:0,nanos:0},np={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},tp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=t6(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},tp);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},tp);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var ip=(()=>{if(typeof ip!="undefined")return ip;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function t6(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new ip.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const op={type_url:""},ps={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},op);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},op);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=i6(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=s6(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},op);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var po=(()=>{if(typeof po!="undefined")return po;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const n6=po.atob||(e=>po.Buffer.from(e,"base64").toString("binary"));function i6(e){const t=n6(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const o6=po.btoa||(e=>po.Buffer.from(e,"binary").toString("base64"));function s6(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return o6(t.join(""))}const sp={name:"",height:0,info:""},st={encode(e,t=l.Writer.create()){return e.name!==""&&t.uint32(10).string(e.name),e.time!==void 0&&np.encode(l6(e.time),t.uint32(18).fork()).ldelim(),e.height!==0&&t.uint32(24).int64(e.height),e.info!==""&&t.uint32(34).string(e.info),e.upgraded_client_state!==void 0&&ps.encode(e.upgraded_client_state,t.uint32(42).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},sp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.name=n.string();break;case 2:i.time=Uy(np.decode(n,n.uint32()));break;case 3:i.height=$y(n.int64());break;case 4:i.info=n.string();break;case 5:i.upgraded_client_state=ps.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},sp);return e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.time!==void 0&&e.time!==null?t.time=u6(e.time):t.time=void 0,e.height!==void 0&&e.height!==null?t.height=Number(e.height):t.height=0,e.info!==void 0&&e.info!==null?t.info=String(e.info):t.info="",e.upgraded_client_state!==void 0&&e.upgraded_client_state!==null?t.upgraded_client_state=ps.fromJSON(e.upgraded_client_state):t.upgraded_client_state=void 0,t},toJSON(e){const t={};return e.name!==void 0&&(t.name=e.name),e.time!==void 0&&(t.time=e.time!==void 0?e.time.toISOString():null),e.height!==void 0&&(t.height=e.height),e.info!==void 0&&(t.info=e.info),e.upgraded_client_state!==void 0&&(t.upgraded_client_state=e.upgraded_client_state?ps.toJSON(e.upgraded_client_state):void 0),t},fromPartial(e){const t=r({},sp);return e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.time!==void 0&&e.time!==null?t.time=e.time:t.time=void 0,e.height!==void 0&&e.height!==null?t.height=e.height:t.height=0,e.info!==void 0&&e.info!==null?t.info=e.info:t.info="",e.upgraded_client_state!==void 0&&e.upgraded_client_state!==null?t.upgraded_client_state=ps.fromPartial(e.upgraded_client_state):t.upgraded_client_state=void 0,t}},rp={title:"",description:""},r6={encode(e,t=l.Writer.create()){return e.title!==""&&t.uint32(10).string(e.title),e.description!==""&&t.uint32(18).string(e.description),e.plan!==void 0&&st.encode(e.plan,t.uint32(26).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},rp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.title=n.string();break;case 2:i.description=n.string();break;case 3:i.plan=st.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},rp);return e.title!==void 0&&e.title!==null?t.title=String(e.title):t.title="",e.description!==void 0&&e.description!==null?t.description=String(e.description):t.description="",e.plan!==void 0&&e.plan!==null?t.plan=st.fromJSON(e.plan):t.plan=void 0,t},toJSON(e){const t={};return e.title!==void 0&&(t.title=e.title),e.description!==void 0&&(t.description=e.description),e.plan!==void 0&&(t.plan=e.plan?st.toJSON(e.plan):void 0),t},fromPartial(e){const t=r({},rp);return e.title!==void 0&&e.title!==null?t.title=e.title:t.title="",e.description!==void 0&&e.description!==null?t.description=e.description:t.description="",e.plan!==void 0&&e.plan!==null?t.plan=st.fromPartial(e.plan):t.plan=void 0,t}},ap={title:"",description:""},a6={encode(e,t=l.Writer.create()){return e.title!==""&&t.uint32(10).string(e.title),e.description!==""&&t.uint32(18).string(e.description),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ap);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.title=n.string();break;case 2:i.description=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ap);return e.title!==void 0&&e.title!==null?t.title=String(e.title):t.title="",e.description!==void 0&&e.description!==null?t.description=String(e.description):t.description="",t},toJSON(e){const t={};return e.title!==void 0&&(t.title=e.title),e.description!==void 0&&(t.description=e.description),t},fromPartial(e){const t=r({},ap);return e.title!==void 0&&e.title!==null?t.title=e.title:t.title="",e.description!==void 0&&e.description!==null?t.description=e.description:t.description="",t}},dp={name:"",version:0},d6={encode(e,t=l.Writer.create()){return e.name!==""&&t.uint32(10).string(e.name),e.version!==0&&t.uint32(16).uint64(e.version),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},dp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.name=n.string();break;case 2:i.version=$y(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},dp);return e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.version!==void 0&&e.version!==null?t.version=Number(e.version):t.version=0,t},toJSON(e){const t={};return e.name!==void 0&&(t.name=e.name),e.version!==void 0&&(t.version=e.version),t},fromPartial(e){const t=r({},dp);return e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.version!==void 0&&e.version!==null?t.version=e.version:t.version=0,t}};var lp=(()=>{if(typeof lp!="undefined")return lp;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function l6(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function Uy(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function u6(e){return e instanceof Date?e:typeof e=="string"?new Date(e):Uy(np.fromJSON(e))}function $y(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new lp.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const up={authority:""},Iy={encode(e,t=l.Writer.create()){return e.authority!==""&&t.uint32(10).string(e.authority),e.plan!==void 0&&st.encode(e.plan,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},up);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.authority=n.string();break;case 2:i.plan=st.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},up);return e.authority!==void 0&&e.authority!==null?t.authority=String(e.authority):t.authority="",e.plan!==void 0&&e.plan!==null?t.plan=st.fromJSON(e.plan):t.plan=void 0,t},toJSON(e){const t={};return e.authority!==void 0&&(t.authority=e.authority),e.plan!==void 0&&(t.plan=e.plan?st.toJSON(e.plan):void 0),t},fromPartial(e){const t=r({},up);return e.authority!==void 0&&e.authority!==null?t.authority=e.authority:t.authority="",e.plan!==void 0&&e.plan!==null?t.plan=st.fromPartial(e.plan):t.plan=void 0,t}},cp={authority:""},xy={encode(e,t=l.Writer.create()){return e.authority!==""&&t.uint32(10).string(e.authority),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},cp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.authority=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},cp);return e.authority!==void 0&&e.authority!==null?t.authority=String(e.authority):t.authority="",t},toJSON(e){const t={};return e.authority!==void 0&&(t.authority=e.authority),t},fromPartial(e){const t=r({},cp);return e.authority!==void 0&&e.authority!==null?t.authority=e.authority:t.authority="",t}},c6=[["/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade",Iy],["/cosmos.upgrade.v1beta1.MsgCancelUpgrade",xy]],fs=new Error("wallet is required"),pp=new Y.Registry(c6),p6={amount:[],gas:"200000"},f6=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw fs;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:pp}):n=await J.SigningStargateClient.offline(e,{registry:pp});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:p6,memo:""})=>n.signAndBroadcast(s,i,o,d),msgSoftwareUpgrade:i=>({typeUrl:"/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade",value:Iy.fromPartial(i)}),msgCancelUpgrade:i=>({typeUrl:"/cosmos.upgrade.v1beta1.MsgCancelUpgrade",value:xy.fromPartial(i)})}},m6=async({addr:e}={addr:"http://localhost:1317"})=>new e6({baseUrl:e});async function Fs(e){return await f6(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function ms(e){return await m6({addr:e["common/env/apiCosmos"]})}function h6(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function Hs(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const Dy=()=>({CurrentPlan:{},AppliedPlan:{},UpgradedConsensusState:{},ModuleVersions:{},Authority:{},_Structure:{Plan:Hs(st.fromPartial({})),SoftwareUpgradeProposal:Hs(r6.fromPartial({})),CancelSoftwareUpgradeProposal:Hs(a6.fromPartial({})),ModuleVersion:Hs(d6.fromPartial({}))},_Registry:pp,_Subscriptions:new Set}),g6=Dy();var y6={namespaced:!0,state:g6,mutations:{RESET_STATE(e){Object.assign(e,Dy())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getCurrentPlan:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.CurrentPlan[JSON.stringify(t)])!=null?n:{}},getAppliedPlan:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.AppliedPlan[JSON.stringify(t)])!=null?n:{}},getUpgradedConsensusState:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.UpgradedConsensusState[JSON.stringify(t)])!=null?n:{}},getModuleVersions:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ModuleVersions[JSON.stringify(t)])!=null?n:{}},getAuthority:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Authority[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.upgrade.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryCurrentPlan({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await ms(t)).queryCurrentPlan()).data;return e("QUERY",{query:"CurrentPlan",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryCurrentPlan",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getCurrentPlan({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryCurrentPlan API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryAppliedPlan({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await ms(t)).queryAppliedPlan(a.name)).data;return e("QUERY",{query:"AppliedPlan",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAppliedPlan",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAppliedPlan({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAppliedPlan API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryUpgradedConsensusState({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await ms(t)).queryUpgradedConsensusState(a.last_height)).data;return e("QUERY",{query:"UpgradedConsensusState",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryUpgradedConsensusState",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getUpgradedConsensusState({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryUpgradedConsensusState API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryModuleVersions({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await ms(t);let u=(await p.queryModuleVersions(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryModuleVersions(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=h6(u,g)}return e("QUERY",{query:"ModuleVersions",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryModuleVersions",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getModuleVersions({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryModuleVersions API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryAuthority({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await ms(t)).queryAuthority()).data;return e("QUERY",{query:"Authority",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryAuthority",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getAuthority({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryAuthority API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgSoftwareUpgrade({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Fs(e),d=await o.msgSoftwareUpgrade(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==fs?new Error("TxClient:MsgSoftwareUpgrade:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSoftwareUpgrade:Send Could not broadcast Tx: "+o.message)}},async sendMsgCancelUpgrade({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Fs(e),d=await o.msgCancelUpgrade(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==fs?new Error("TxClient:MsgCancelUpgrade:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCancelUpgrade:Send Could not broadcast Tx: "+o.message)}},async MsgSoftwareUpgrade({rootGetters:e},{value:t}){try{return await(await Fs(e)).msgSoftwareUpgrade(t)}catch(n){throw n==fs?new Error("TxClient:MsgSoftwareUpgrade:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSoftwareUpgrade:Create Could not create message: "+n.message)}},async MsgCancelUpgrade({rootGetters:e},{value:t}){try{return await(await Fs(e)).msgCancelUpgrade(t)}catch(n){throw n==fs?new Error("TxClient:MsgCancelUpgrade:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCancelUpgrade:Create Could not create message: "+n.message)}}}},Qy;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Qy||(Qy={}));const fp={denom:"",amount:""},W={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},fp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},fp);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},fp);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}},mp={type_url:""},hs={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},mp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},mp);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=v6(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=w6(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},mp);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var fo=(()=>{if(typeof fo!="undefined")return fo;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const _6=fo.atob||(e=>fo.Buffer.from(e,"base64").toString("binary"));function v6(e){const t=_6(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const b6=fo.btoa||(e=>fo.Buffer.from(e,"binary").toString("base64"));function w6(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return b6(t.join(""))}const hp={address:"",account_number:0,sequence:0},gs={encode(e,t=l.Writer.create()){return e.address!==""&&t.uint32(10).string(e.address),e.pub_key!==void 0&&hs.encode(e.pub_key,t.uint32(18).fork()).ldelim(),e.account_number!==0&&t.uint32(24).uint64(e.account_number),e.sequence!==0&&t.uint32(32).uint64(e.sequence),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},hp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.address=n.string();break;case 2:i.pub_key=hs.decode(n,n.uint32());break;case 3:i.account_number=My(n.uint64());break;case 4:i.sequence=My(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},hp);return e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.pub_key!==void 0&&e.pub_key!==null?t.pub_key=hs.fromJSON(e.pub_key):t.pub_key=void 0,e.account_number!==void 0&&e.account_number!==null?t.account_number=Number(e.account_number):t.account_number=0,e.sequence!==void 0&&e.sequence!==null?t.sequence=Number(e.sequence):t.sequence=0,t},toJSON(e){const t={};return e.address!==void 0&&(t.address=e.address),e.pub_key!==void 0&&(t.pub_key=e.pub_key?hs.toJSON(e.pub_key):void 0),e.account_number!==void 0&&(t.account_number=e.account_number),e.sequence!==void 0&&(t.sequence=e.sequence),t},fromPartial(e){const t=r({},hp);return e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.pub_key!==void 0&&e.pub_key!==null?t.pub_key=hs.fromPartial(e.pub_key):t.pub_key=void 0,e.account_number!==void 0&&e.account_number!==null?t.account_number=e.account_number:t.account_number=0,e.sequence!==void 0&&e.sequence!==null?t.sequence=e.sequence:t.sequence=0,t}};var gp=(()=>{if(typeof gp!="undefined")return gp;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function My(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new gp.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const yp={end_time:0},se={encode(e,t=l.Writer.create()){e.base_account!==void 0&&gs.encode(e.base_account,t.uint32(10).fork()).ldelim();for(const n of e.original_vesting)W.encode(n,t.uint32(18).fork()).ldelim();for(const n of e.delegated_free)W.encode(n,t.uint32(26).fork()).ldelim();for(const n of e.delegated_vesting)W.encode(n,t.uint32(34).fork()).ldelim();return e.end_time!==0&&t.uint32(40).int64(e.end_time),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},yp);for(i.original_vesting=[],i.delegated_free=[],i.delegated_vesting=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.base_account=gs.decode(n,n.uint32());break;case 2:i.original_vesting.push(W.decode(n,n.uint32()));break;case 3:i.delegated_free.push(W.decode(n,n.uint32()));break;case 4:i.delegated_vesting.push(W.decode(n,n.uint32()));break;case 5:i.end_time=zs(n.int64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},yp);if(t.original_vesting=[],t.delegated_free=[],t.delegated_vesting=[],e.base_account!==void 0&&e.base_account!==null?t.base_account=gs.fromJSON(e.base_account):t.base_account=void 0,e.original_vesting!==void 0&&e.original_vesting!==null)for(const n of e.original_vesting)t.original_vesting.push(W.fromJSON(n));if(e.delegated_free!==void 0&&e.delegated_free!==null)for(const n of e.delegated_free)t.delegated_free.push(W.fromJSON(n));if(e.delegated_vesting!==void 0&&e.delegated_vesting!==null)for(const n of e.delegated_vesting)t.delegated_vesting.push(W.fromJSON(n));return e.end_time!==void 0&&e.end_time!==null?t.end_time=Number(e.end_time):t.end_time=0,t},toJSON(e){const t={};return e.base_account!==void 0&&(t.base_account=e.base_account?gs.toJSON(e.base_account):void 0),e.original_vesting?t.original_vesting=e.original_vesting.map(n=>n?W.toJSON(n):void 0):t.original_vesting=[],e.delegated_free?t.delegated_free=e.delegated_free.map(n=>n?W.toJSON(n):void 0):t.delegated_free=[],e.delegated_vesting?t.delegated_vesting=e.delegated_vesting.map(n=>n?W.toJSON(n):void 0):t.delegated_vesting=[],e.end_time!==void 0&&(t.end_time=e.end_time),t},fromPartial(e){const t=r({},yp);if(t.original_vesting=[],t.delegated_free=[],t.delegated_vesting=[],e.base_account!==void 0&&e.base_account!==null?t.base_account=gs.fromPartial(e.base_account):t.base_account=void 0,e.original_vesting!==void 0&&e.original_vesting!==null)for(const n of e.original_vesting)t.original_vesting.push(W.fromPartial(n));if(e.delegated_free!==void 0&&e.delegated_free!==null)for(const n of e.delegated_free)t.delegated_free.push(W.fromPartial(n));if(e.delegated_vesting!==void 0&&e.delegated_vesting!==null)for(const n of e.delegated_vesting)t.delegated_vesting.push(W.fromPartial(n));return e.end_time!==void 0&&e.end_time!==null?t.end_time=e.end_time:t.end_time=0,t}},_p={start_time:0},S6={encode(e,t=l.Writer.create()){return e.base_vesting_account!==void 0&&se.encode(e.base_vesting_account,t.uint32(10).fork()).ldelim(),e.start_time!==0&&t.uint32(16).int64(e.start_time),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},_p);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.base_vesting_account=se.decode(n,n.uint32());break;case 2:i.start_time=zs(n.int64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},_p);return e.base_vesting_account!==void 0&&e.base_vesting_account!==null?t.base_vesting_account=se.fromJSON(e.base_vesting_account):t.base_vesting_account=void 0,e.start_time!==void 0&&e.start_time!==null?t.start_time=Number(e.start_time):t.start_time=0,t},toJSON(e){const t={};return e.base_vesting_account!==void 0&&(t.base_vesting_account=e.base_vesting_account?se.toJSON(e.base_vesting_account):void 0),e.start_time!==void 0&&(t.start_time=e.start_time),t},fromPartial(e){const t=r({},_p);return e.base_vesting_account!==void 0&&e.base_vesting_account!==null?t.base_vesting_account=se.fromPartial(e.base_vesting_account):t.base_vesting_account=void 0,e.start_time!==void 0&&e.start_time!==null?t.start_time=e.start_time:t.start_time=0,t}},vp={},k6={encode(e,t=l.Writer.create()){return e.base_vesting_account!==void 0&&se.encode(e.base_vesting_account,t.uint32(10).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},vp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.base_vesting_account=se.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},vp);return e.base_vesting_account!==void 0&&e.base_vesting_account!==null?t.base_vesting_account=se.fromJSON(e.base_vesting_account):t.base_vesting_account=void 0,t},toJSON(e){const t={};return e.base_vesting_account!==void 0&&(t.base_vesting_account=e.base_vesting_account?se.toJSON(e.base_vesting_account):void 0),t},fromPartial(e){const t=r({},vp);return e.base_vesting_account!==void 0&&e.base_vesting_account!==null?t.base_vesting_account=se.fromPartial(e.base_vesting_account):t.base_vesting_account=void 0,t}},bp={length:0},rt={encode(e,t=l.Writer.create()){e.length!==0&&t.uint32(8).int64(e.length);for(const n of e.amount)W.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},bp);for(i.amount=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.length=zs(n.int64());break;case 2:i.amount.push(W.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},bp);if(t.amount=[],e.length!==void 0&&e.length!==null?t.length=Number(e.length):t.length=0,e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(W.fromJSON(n));return t},toJSON(e){const t={};return e.length!==void 0&&(t.length=e.length),e.amount?t.amount=e.amount.map(n=>n?W.toJSON(n):void 0):t.amount=[],t},fromPartial(e){const t=r({},bp);if(t.amount=[],e.length!==void 0&&e.length!==null?t.length=e.length:t.length=0,e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(W.fromPartial(n));return t}},wp={start_time:0},P6={encode(e,t=l.Writer.create()){e.base_vesting_account!==void 0&&se.encode(e.base_vesting_account,t.uint32(10).fork()).ldelim(),e.start_time!==0&&t.uint32(16).int64(e.start_time);for(const n of e.vesting_periods)rt.encode(n,t.uint32(26).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},wp);for(i.vesting_periods=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.base_vesting_account=se.decode(n,n.uint32());break;case 2:i.start_time=zs(n.int64());break;case 3:i.vesting_periods.push(rt.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},wp);if(t.vesting_periods=[],e.base_vesting_account!==void 0&&e.base_vesting_account!==null?t.base_vesting_account=se.fromJSON(e.base_vesting_account):t.base_vesting_account=void 0,e.start_time!==void 0&&e.start_time!==null?t.start_time=Number(e.start_time):t.start_time=0,e.vesting_periods!==void 0&&e.vesting_periods!==null)for(const n of e.vesting_periods)t.vesting_periods.push(rt.fromJSON(n));return t},toJSON(e){const t={};return e.base_vesting_account!==void 0&&(t.base_vesting_account=e.base_vesting_account?se.toJSON(e.base_vesting_account):void 0),e.start_time!==void 0&&(t.start_time=e.start_time),e.vesting_periods?t.vesting_periods=e.vesting_periods.map(n=>n?rt.toJSON(n):void 0):t.vesting_periods=[],t},fromPartial(e){const t=r({},wp);if(t.vesting_periods=[],e.base_vesting_account!==void 0&&e.base_vesting_account!==null?t.base_vesting_account=se.fromPartial(e.base_vesting_account):t.base_vesting_account=void 0,e.start_time!==void 0&&e.start_time!==null?t.start_time=e.start_time:t.start_time=0,e.vesting_periods!==void 0&&e.vesting_periods!==null)for(const n of e.vesting_periods)t.vesting_periods.push(rt.fromPartial(n));return t}},Sp={},C6={encode(e,t=l.Writer.create()){return e.base_vesting_account!==void 0&&se.encode(e.base_vesting_account,t.uint32(10).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Sp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.base_vesting_account=se.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Sp);return e.base_vesting_account!==void 0&&e.base_vesting_account!==null?t.base_vesting_account=se.fromJSON(e.base_vesting_account):t.base_vesting_account=void 0,t},toJSON(e){const t={};return e.base_vesting_account!==void 0&&(t.base_vesting_account=e.base_vesting_account?se.toJSON(e.base_vesting_account):void 0),t},fromPartial(e){const t=r({},Sp);return e.base_vesting_account!==void 0&&e.base_vesting_account!==null?t.base_vesting_account=se.fromPartial(e.base_vesting_account):t.base_vesting_account=void 0,t}};var kp=(()=>{if(typeof kp!="undefined")return kp;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function zs(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new kp.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Pp={from_address:"",to_address:"",end_time:0,delayed:!1},By={encode(e,t=l.Writer.create()){e.from_address!==""&&t.uint32(10).string(e.from_address),e.to_address!==""&&t.uint32(18).string(e.to_address);for(const n of e.amount)W.encode(n,t.uint32(26).fork()).ldelim();return e.end_time!==0&&t.uint32(32).int64(e.end_time),e.delayed===!0&&t.uint32(40).bool(e.delayed),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Pp);for(i.amount=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.from_address=n.string();break;case 2:i.to_address=n.string();break;case 3:i.amount.push(W.decode(n,n.uint32()));break;case 4:i.end_time=Ly(n.int64());break;case 5:i.delayed=n.bool();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Pp);if(t.amount=[],e.from_address!==void 0&&e.from_address!==null?t.from_address=String(e.from_address):t.from_address="",e.to_address!==void 0&&e.to_address!==null?t.to_address=String(e.to_address):t.to_address="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(W.fromJSON(n));return e.end_time!==void 0&&e.end_time!==null?t.end_time=Number(e.end_time):t.end_time=0,e.delayed!==void 0&&e.delayed!==null?t.delayed=Boolean(e.delayed):t.delayed=!1,t},toJSON(e){const t={};return e.from_address!==void 0&&(t.from_address=e.from_address),e.to_address!==void 0&&(t.to_address=e.to_address),e.amount?t.amount=e.amount.map(n=>n?W.toJSON(n):void 0):t.amount=[],e.end_time!==void 0&&(t.end_time=e.end_time),e.delayed!==void 0&&(t.delayed=e.delayed),t},fromPartial(e){const t=r({},Pp);if(t.amount=[],e.from_address!==void 0&&e.from_address!==null?t.from_address=e.from_address:t.from_address="",e.to_address!==void 0&&e.to_address!==null?t.to_address=e.to_address:t.to_address="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(W.fromPartial(n));return e.end_time!==void 0&&e.end_time!==null?t.end_time=e.end_time:t.end_time=0,e.delayed!==void 0&&e.delayed!==null?t.delayed=e.delayed:t.delayed=!1,t}},Cp={from_address:"",to_address:""},Jy={encode(e,t=l.Writer.create()){e.from_address!==""&&t.uint32(10).string(e.from_address),e.to_address!==""&&t.uint32(18).string(e.to_address);for(const n of e.amount)W.encode(n,t.uint32(26).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Cp);for(i.amount=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.from_address=n.string();break;case 2:i.to_address=n.string();break;case 3:i.amount.push(W.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Cp);if(t.amount=[],e.from_address!==void 0&&e.from_address!==null?t.from_address=String(e.from_address):t.from_address="",e.to_address!==void 0&&e.to_address!==null?t.to_address=String(e.to_address):t.to_address="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(W.fromJSON(n));return t},toJSON(e){const t={};return e.from_address!==void 0&&(t.from_address=e.from_address),e.to_address!==void 0&&(t.to_address=e.to_address),e.amount?t.amount=e.amount.map(n=>n?W.toJSON(n):void 0):t.amount=[],t},fromPartial(e){const t=r({},Cp);if(t.amount=[],e.from_address!==void 0&&e.from_address!==null?t.from_address=e.from_address:t.from_address="",e.to_address!==void 0&&e.to_address!==null?t.to_address=e.to_address:t.to_address="",e.amount!==void 0&&e.amount!==null)for(const n of e.amount)t.amount.push(W.fromPartial(n));return t}},Rp={from_address:"",to_address:"",start_time:0},Gy={encode(e,t=l.Writer.create()){e.from_address!==""&&t.uint32(10).string(e.from_address),e.to_address!==""&&t.uint32(18).string(e.to_address),e.start_time!==0&&t.uint32(24).int64(e.start_time);for(const n of e.vesting_periods)rt.encode(n,t.uint32(34).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Rp);for(i.vesting_periods=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.from_address=n.string();break;case 2:i.to_address=n.string();break;case 3:i.start_time=Ly(n.int64());break;case 4:i.vesting_periods.push(rt.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Rp);if(t.vesting_periods=[],e.from_address!==void 0&&e.from_address!==null?t.from_address=String(e.from_address):t.from_address="",e.to_address!==void 0&&e.to_address!==null?t.to_address=String(e.to_address):t.to_address="",e.start_time!==void 0&&e.start_time!==null?t.start_time=Number(e.start_time):t.start_time=0,e.vesting_periods!==void 0&&e.vesting_periods!==null)for(const n of e.vesting_periods)t.vesting_periods.push(rt.fromJSON(n));return t},toJSON(e){const t={};return e.from_address!==void 0&&(t.from_address=e.from_address),e.to_address!==void 0&&(t.to_address=e.to_address),e.start_time!==void 0&&(t.start_time=e.start_time),e.vesting_periods?t.vesting_periods=e.vesting_periods.map(n=>n?rt.toJSON(n):void 0):t.vesting_periods=[],t},fromPartial(e){const t=r({},Rp);if(t.vesting_periods=[],e.from_address!==void 0&&e.from_address!==null?t.from_address=e.from_address:t.from_address="",e.to_address!==void 0&&e.to_address!==null?t.to_address=e.to_address:t.to_address="",e.start_time!==void 0&&e.start_time!==null?t.start_time=e.start_time:t.start_time=0,e.vesting_periods!==void 0&&e.vesting_periods!==null)for(const n of e.vesting_periods)t.vesting_periods.push(rt.fromPartial(n));return t}};var Ep=(()=>{if(typeof Ep!="undefined")return Ep;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Ly(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Ep.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const R6=[["/cosmos.vesting.v1beta1.MsgCreateVestingAccount",By],["/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount",Jy],["/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount",Gy]],Mn=new Error("wallet is required"),Tp=new Y.Registry(R6),E6={amount:[],gas:"200000"},T6=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw Mn;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:Tp}):n=await J.SigningStargateClient.offline(e,{registry:Tp});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:E6,memo:""})=>n.signAndBroadcast(s,i,o,d),msgCreateVestingAccount:i=>({typeUrl:"/cosmos.vesting.v1beta1.MsgCreateVestingAccount",value:By.fromPartial(i)}),msgCreatePermanentLockedAccount:i=>({typeUrl:"/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount",value:Jy.fromPartial(i)}),msgCreatePeriodicVestingAccount:i=>({typeUrl:"/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount",value:Gy.fromPartial(i)})}};async function mo(e){return await T6(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}function ho(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const Vy=()=>({_Structure:{BaseVestingAccount:ho(se.fromPartial({})),ContinuousVestingAccount:ho(S6.fromPartial({})),DelayedVestingAccount:ho(k6.fromPartial({})),Period:ho(rt.fromPartial({})),PeriodicVestingAccount:ho(P6.fromPartial({})),PermanentLockedAccount:ho(C6.fromPartial({}))},_Registry:Tp,_Subscriptions:new Set}),N6=Vy();var A6={namespaced:!0,state:N6,mutations:{RESET_STATE(e){Object.assign(e,Vy())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: cosmos.vesting.v1beta1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async sendMsgCreateVestingAccount({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await mo(e),d=await o.msgCreateVestingAccount(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Mn?new Error("TxClient:MsgCreateVestingAccount:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateVestingAccount:Send Could not broadcast Tx: "+o.message)}},async sendMsgCreatePermanentLockedAccount({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await mo(e),d=await o.msgCreatePermanentLockedAccount(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Mn?new Error("TxClient:MsgCreatePermanentLockedAccount:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreatePermanentLockedAccount:Send Could not broadcast Tx: "+o.message)}},async sendMsgCreatePeriodicVestingAccount({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await mo(e),d=await o.msgCreatePeriodicVestingAccount(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==Mn?new Error("TxClient:MsgCreatePeriodicVestingAccount:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreatePeriodicVestingAccount:Send Could not broadcast Tx: "+o.message)}},async MsgCreateVestingAccount({rootGetters:e},{value:t}){try{return await(await mo(e)).msgCreateVestingAccount(t)}catch(n){throw n==Mn?new Error("TxClient:MsgCreateVestingAccount:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateVestingAccount:Create Could not create message: "+n.message)}},async MsgCreatePermanentLockedAccount({rootGetters:e},{value:t}){try{return await(await mo(e)).msgCreatePermanentLockedAccount(t)}catch(n){throw n==Mn?new Error("TxClient:MsgCreatePermanentLockedAccount:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreatePermanentLockedAccount:Create Could not create message: "+n.message)}},async MsgCreatePeriodicVestingAccount({rootGetters:e},{value:t}){try{return await(await mo(e)).msgCreatePeriodicVestingAccount(t)}catch(n){throw n==Mn?new Error("TxClient:MsgCreatePeriodicVestingAccount:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreatePeriodicVestingAccount:Create Could not create message: "+n.message)}}}},Bn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Bn||(Bn={}));class O6{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[Bn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[Bn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[Bn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||Bn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==Bn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class q6 extends O6{constructor(){super(...arguments);this.queryInterchainAccount=(t,n,s={})=>this.request(r({path:`/ibc/apps/interchain_accounts/controller/v1/owners/${t}/connections/${n}`,method:"GET",format:"json"},s)),this.queryParams=(t={})=>this.request(r({path:"/ibc/apps/interchain_accounts/controller/v1/params",method:"GET",format:"json"},t))}}const U6=[],$6=new Y.Registry(U6),I6=async({addr:e}={addr:"http://localhost:1317"})=>new q6({baseUrl:e}),Np={controller_enabled:!1},x6={encode(e,t=l.Writer.create()){return e.controller_enabled===!0&&t.uint32(8).bool(e.controller_enabled),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Np);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.controller_enabled=n.bool();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Np);return e.controller_enabled!==void 0&&e.controller_enabled!==null?t.controller_enabled=Boolean(e.controller_enabled):t.controller_enabled=!1,t},toJSON(e){const t={};return e.controller_enabled!==void 0&&(t.controller_enabled=e.controller_enabled),t},fromPartial(e){const t=r({},Np);return e.controller_enabled!==void 0&&e.controller_enabled!==null?t.controller_enabled=e.controller_enabled:t.controller_enabled=!1,t}};async function Wy(e){return await I6({addr:e["common/env/apiCosmos"]})}function D6(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const Fy=()=>({InterchainAccount:{},Params:{},_Structure:{Params:D6(x6.fromPartial({}))},_Registry:$6,_Subscriptions:new Set}),Q6=Fy();var M6={namespaced:!0,state:Q6,mutations:{RESET_STATE(e){Object.assign(e,Fy())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getInterchainAccount:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.InterchainAccount[JSON.stringify(t)])!=null?n:{}},getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: ibc.applications.interchain_accounts.controller.v1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryInterchainAccount({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Wy(t)).queryInterchainAccount(a.owner,a.connection_id)).data;return e("QUERY",{query:"InterchainAccount",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryInterchainAccount",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getInterchainAccount({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryInterchainAccount API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Wy(t)).queryParams()).data;return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}}}},Jn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Jn||(Jn={}));class B6{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[Jn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[Jn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[Jn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||Jn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==Jn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class J6 extends B6{constructor(){super(...arguments);this.queryParams=(t={})=>this.request(r({path:"/ibc/apps/interchain_accounts/host/v1/params",method:"GET",format:"json"},t))}}const G6=[],L6=new Y.Registry(G6),V6=async({addr:e}={addr:"http://localhost:1317"})=>new J6({baseUrl:e}),Ap={host_enabled:!1,allow_messages:""},W6={encode(e,t=l.Writer.create()){e.host_enabled===!0&&t.uint32(8).bool(e.host_enabled);for(const n of e.allow_messages)t.uint32(18).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ap);for(i.allow_messages=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.host_enabled=n.bool();break;case 2:i.allow_messages.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ap);if(t.allow_messages=[],e.host_enabled!==void 0&&e.host_enabled!==null?t.host_enabled=Boolean(e.host_enabled):t.host_enabled=!1,e.allow_messages!==void 0&&e.allow_messages!==null)for(const n of e.allow_messages)t.allow_messages.push(String(n));return t},toJSON(e){const t={};return e.host_enabled!==void 0&&(t.host_enabled=e.host_enabled),e.allow_messages?t.allow_messages=e.allow_messages.map(n=>n):t.allow_messages=[],t},fromPartial(e){const t=r({},Ap);if(t.allow_messages=[],e.host_enabled!==void 0&&e.host_enabled!==null?t.host_enabled=e.host_enabled:t.host_enabled=!1,e.allow_messages!==void 0&&e.allow_messages!==null)for(const n of e.allow_messages)t.allow_messages.push(n);return t}};async function F6(e){return await V6({addr:e["common/env/apiCosmos"]})}function H6(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const Hy=()=>({Params:{},_Structure:{Params:H6(W6.fromPartial({}))},_Registry:L6,_Subscriptions:new Set}),z6=Hy();var Y6={namespaced:!0,state:z6,mutations:{RESET_STATE(e){Object.assign(e,Hy())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: ibc.applications.interchain_accounts.host.v1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await F6(t)).queryParams()).data;return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}}}},Gn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Gn||(Gn={}));class X6{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[Gn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[Gn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[Gn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||Gn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==Gn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class K6 extends X6{constructor(){super(...arguments);this.queryEscrowAddress=(t,n,s={})=>this.request(r({path:`/ibc/apps/transfer/v1/channels/${t}/ports/${n}/escrow_address`,method:"GET",format:"json"},s)),this.queryDenomHash=(t,n={})=>this.request(r({path:`/ibc/apps/transfer/v1/denom_hashes/${t}`,method:"GET",format:"json"},n)),this.queryDenomTraces=(t,n={})=>this.request(r({path:"/ibc/apps/transfer/v1/denom_traces",method:"GET",query:t,format:"json"},n)),this.queryDenomTrace=(t,n={})=>this.request(r({path:`/ibc/apps/transfer/v1/denom_traces/${t}`,method:"GET",format:"json"},n)),this.queryParams=(t={})=>this.request(r({path:"/ibc/apps/transfer/v1/params",method:"GET",format:"json"},t))}}const Op={denom:"",amount:""},ys={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Op);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Op);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},Op);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}};var go=(()=>{if(typeof go!="undefined")return go;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();go.atob;go.btoa;var zy=(()=>{if(typeof zy!="undefined")return zy;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();l.util.Long!==S&&(l.util.Long=S,l.configure());var Yy=(()=>{if(typeof Yy!="undefined")return Yy;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();l.util.Long!==S&&(l.util.Long=S,l.configure());const qp={revision_number:0,revision_height:0},_s={encode(e,t=l.Writer.create()){return e.revision_number!==0&&t.uint32(8).uint64(e.revision_number),e.revision_height!==0&&t.uint32(16).uint64(e.revision_height),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},qp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.revision_number=Xy(n.uint64());break;case 2:i.revision_height=Xy(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},qp);return e.revision_number!==void 0&&e.revision_number!==null?t.revision_number=Number(e.revision_number):t.revision_number=0,e.revision_height!==void 0&&e.revision_height!==null?t.revision_height=Number(e.revision_height):t.revision_height=0,t},toJSON(e){const t={};return e.revision_number!==void 0&&(t.revision_number=e.revision_number),e.revision_height!==void 0&&(t.revision_height=e.revision_height),t},fromPartial(e){const t=r({},qp);return e.revision_number!==void 0&&e.revision_number!==null?t.revision_number=e.revision_number:t.revision_number=0,e.revision_height!==void 0&&e.revision_height!==null?t.revision_height=e.revision_height:t.revision_height=0,t}};var Up=(()=>{if(typeof Up!="undefined")return Up;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Xy(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Up.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const $p={source_port:"",source_channel:"",sender:"",receiver:"",timeout_timestamp:0},Ky={encode(e,t=l.Writer.create()){return e.source_port!==""&&t.uint32(10).string(e.source_port),e.source_channel!==""&&t.uint32(18).string(e.source_channel),e.token!==void 0&&ys.encode(e.token,t.uint32(26).fork()).ldelim(),e.sender!==""&&t.uint32(34).string(e.sender),e.receiver!==""&&t.uint32(42).string(e.receiver),e.timeout_height!==void 0&&_s.encode(e.timeout_height,t.uint32(50).fork()).ldelim(),e.timeout_timestamp!==0&&t.uint32(56).uint64(e.timeout_timestamp),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},$p);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.source_port=n.string();break;case 2:i.source_channel=n.string();break;case 3:i.token=ys.decode(n,n.uint32());break;case 4:i.sender=n.string();break;case 5:i.receiver=n.string();break;case 6:i.timeout_height=_s.decode(n,n.uint32());break;case 7:i.timeout_timestamp=Z6(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},$p);return e.source_port!==void 0&&e.source_port!==null?t.source_port=String(e.source_port):t.source_port="",e.source_channel!==void 0&&e.source_channel!==null?t.source_channel=String(e.source_channel):t.source_channel="",e.token!==void 0&&e.token!==null?t.token=ys.fromJSON(e.token):t.token=void 0,e.sender!==void 0&&e.sender!==null?t.sender=String(e.sender):t.sender="",e.receiver!==void 0&&e.receiver!==null?t.receiver=String(e.receiver):t.receiver="",e.timeout_height!==void 0&&e.timeout_height!==null?t.timeout_height=_s.fromJSON(e.timeout_height):t.timeout_height=void 0,e.timeout_timestamp!==void 0&&e.timeout_timestamp!==null?t.timeout_timestamp=Number(e.timeout_timestamp):t.timeout_timestamp=0,t},toJSON(e){const t={};return e.source_port!==void 0&&(t.source_port=e.source_port),e.source_channel!==void 0&&(t.source_channel=e.source_channel),e.token!==void 0&&(t.token=e.token?ys.toJSON(e.token):void 0),e.sender!==void 0&&(t.sender=e.sender),e.receiver!==void 0&&(t.receiver=e.receiver),e.timeout_height!==void 0&&(t.timeout_height=e.timeout_height?_s.toJSON(e.timeout_height):void 0),e.timeout_timestamp!==void 0&&(t.timeout_timestamp=e.timeout_timestamp),t},fromPartial(e){const t=r({},$p);return e.source_port!==void 0&&e.source_port!==null?t.source_port=e.source_port:t.source_port="",e.source_channel!==void 0&&e.source_channel!==null?t.source_channel=e.source_channel:t.source_channel="",e.token!==void 0&&e.token!==null?t.token=ys.fromPartial(e.token):t.token=void 0,e.sender!==void 0&&e.sender!==null?t.sender=e.sender:t.sender="",e.receiver!==void 0&&e.receiver!==null?t.receiver=e.receiver:t.receiver="",e.timeout_height!==void 0&&e.timeout_height!==null?t.timeout_height=_s.fromPartial(e.timeout_height):t.timeout_height=void 0,e.timeout_timestamp!==void 0&&e.timeout_timestamp!==null?t.timeout_timestamp=e.timeout_timestamp:t.timeout_timestamp=0,t}};var Ip=(()=>{if(typeof Ip!="undefined")return Ip;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Z6(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Ip.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const j6=[["/ibc.applications.transfer.v1.MsgTransfer",Ky]],xp=new Error("wallet is required"),Dp=new Y.Registry(j6),e8={amount:[],gas:"200000"},t8=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw xp;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:Dp}):n=await J.SigningStargateClient.offline(e,{registry:Dp});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:e8,memo:""})=>n.signAndBroadcast(s,i,o,d),msgTransfer:i=>({typeUrl:"/ibc.applications.transfer.v1.MsgTransfer",value:Ky.fromPartial(i)})}},n8=async({addr:e}={addr:"http://localhost:1317"})=>new K6({baseUrl:e}),Qp={path:"",base_denom:""},i8={encode(e,t=l.Writer.create()){return e.path!==""&&t.uint32(10).string(e.path),e.base_denom!==""&&t.uint32(18).string(e.base_denom),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Qp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.path=n.string();break;case 2:i.base_denom=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Qp);return e.path!==void 0&&e.path!==null?t.path=String(e.path):t.path="",e.base_denom!==void 0&&e.base_denom!==null?t.base_denom=String(e.base_denom):t.base_denom="",t},toJSON(e){const t={};return e.path!==void 0&&(t.path=e.path),e.base_denom!==void 0&&(t.base_denom=e.base_denom),t},fromPartial(e){const t=r({},Qp);return e.path!==void 0&&e.path!==null?t.path=e.path:t.path="",e.base_denom!==void 0&&e.base_denom!==null?t.base_denom=e.base_denom:t.base_denom="",t}},Mp={send_enabled:!1,receive_enabled:!1},o8={encode(e,t=l.Writer.create()){return e.send_enabled===!0&&t.uint32(8).bool(e.send_enabled),e.receive_enabled===!0&&t.uint32(16).bool(e.receive_enabled),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Mp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.send_enabled=n.bool();break;case 2:i.receive_enabled=n.bool();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Mp);return e.send_enabled!==void 0&&e.send_enabled!==null?t.send_enabled=Boolean(e.send_enabled):t.send_enabled=!1,e.receive_enabled!==void 0&&e.receive_enabled!==null?t.receive_enabled=Boolean(e.receive_enabled):t.receive_enabled=!1,t},toJSON(e){const t={};return e.send_enabled!==void 0&&(t.send_enabled=e.send_enabled),e.receive_enabled!==void 0&&(t.receive_enabled=e.receive_enabled),t},fromPartial(e){const t=r({},Mp);return e.send_enabled!==void 0&&e.send_enabled!==null?t.send_enabled=e.send_enabled:t.send_enabled=!1,e.receive_enabled!==void 0&&e.receive_enabled!==null?t.receive_enabled=e.receive_enabled:t.receive_enabled=!1,t}};async function Zy(e){return await t8(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function vs(e){return await n8({addr:e["common/env/apiCosmos"]})}function s8(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function jy(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const e_=()=>({DenomTrace:{},DenomTraces:{},Params:{},DenomHash:{},EscrowAddress:{},_Structure:{DenomTrace:jy(i8.fromPartial({})),Params:jy(o8.fromPartial({}))},_Registry:Dp,_Subscriptions:new Set}),r8=e_();var a8={namespaced:!0,state:r8,mutations:{RESET_STATE(e){Object.assign(e,e_())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getDenomTrace:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DenomTrace[JSON.stringify(t)])!=null?n:{}},getDenomTraces:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DenomTraces[JSON.stringify(t)])!=null?n:{}},getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getDenomHash:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.DenomHash[JSON.stringify(t)])!=null?n:{}},getEscrowAddress:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.EscrowAddress[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: ibc.applications.transfer.v1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryDenomTrace({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await vs(t)).queryDenomTrace(a.hash)).data;return e("QUERY",{query:"DenomTrace",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDenomTrace",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDenomTrace({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDenomTrace API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDenomTraces({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await vs(t);let u=(await p.queryDenomTraces(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryDenomTraces(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=s8(u,g)}return e("QUERY",{query:"DenomTraces",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDenomTraces",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDenomTraces({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDenomTraces API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await vs(t)).queryParams()).data;return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryDenomHash({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await vs(t)).queryDenomHash(a.trace)).data;return e("QUERY",{query:"DenomHash",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryDenomHash",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getDenomHash({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryDenomHash API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryEscrowAddress({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await vs(t)).queryEscrowAddress(a.channel_id,a.port_id)).data;return e("QUERY",{query:"EscrowAddress",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryEscrowAddress",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getEscrowAddress({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryEscrowAddress API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgTransfer({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await Zy(e),d=await o.msgTransfer(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==xp?new Error("TxClient:MsgTransfer:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgTransfer:Send Could not broadcast Tx: "+o.message)}},async MsgTransfer({rootGetters:e},{value:t}){try{return await(await Zy(e)).msgTransfer(t)}catch(n){throw n==xp?new Error("TxClient:MsgTransfer:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgTransfer:Create Could not create message: "+n.message)}}}},t_;(function(e){e.ORDER_NONE_UNSPECIFIED="ORDER_NONE_UNSPECIFIED",e.ORDER_UNORDERED="ORDER_UNORDERED",e.ORDER_ORDERED="ORDER_ORDERED"})(t_||(t_={}));var n_;(function(e){e.RESPONSE_RESULT_TYPE_UNSPECIFIED="RESPONSE_RESULT_TYPE_UNSPECIFIED",e.RESPONSE_RESULT_TYPE_NOOP="RESPONSE_RESULT_TYPE_NOOP",e.RESPONSE_RESULT_TYPE_SUCCESS="RESPONSE_RESULT_TYPE_SUCCESS"})(n_||(n_={}));var i_;(function(e){e.STATE_UNINITIALIZED_UNSPECIFIED="STATE_UNINITIALIZED_UNSPECIFIED",e.STATE_INIT="STATE_INIT",e.STATE_TRYOPEN="STATE_TRYOPEN",e.STATE_OPEN="STATE_OPEN",e.STATE_CLOSED="STATE_CLOSED"})(i_||(i_={}));var Ln;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Ln||(Ln={}));class d8{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[Ln.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[Ln.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[Ln.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||Ln.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==Ln.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class l8 extends d8{constructor(){super(...arguments);this.queryChannels=(t,n={})=>this.request(r({path:"/ibc/core/channel/v1/channels",method:"GET",query:t,format:"json"},n)),this.queryChannel=(t,n,s={})=>this.request(r({path:`/ibc/core/channel/v1/channels/${t}/ports/${n}`,method:"GET",format:"json"},s)),this.queryChannelClientState=(t,n,s={})=>this.request(r({path:`/ibc/core/channel/v1/channels/${t}/ports/${n}/client_state`,method:"GET",format:"json"},s)),this.queryChannelConsensusState=(t,n,s,i,o={})=>this.request(r({path:`/ibc/core/channel/v1/channels/${t}/ports/${n}/consensus_state/revision/${s}/height/${i}`,method:"GET",format:"json"},o)),this.queryNextSequenceReceive=(t,n,s={})=>this.request(r({path:`/ibc/core/channel/v1/channels/${t}/ports/${n}/next_sequence`,method:"GET",format:"json"},s)),this.queryPacketAcknowledgements=(t,n,s,i={})=>this.request(r({path:`/ibc/core/channel/v1/channels/${t}/ports/${n}/packet_acknowledgements`,method:"GET",query:s,format:"json"},i)),this.queryPacketAcknowledgement=(t,n,s,i={})=>this.request(r({path:`/ibc/core/channel/v1/channels/${t}/ports/${n}/packet_acks/${s}`,method:"GET",format:"json"},i)),this.queryPacketCommitments=(t,n,s,i={})=>this.request(r({path:`/ibc/core/channel/v1/channels/${t}/ports/${n}/packet_commitments`,method:"GET",query:s,format:"json"},i)),this.queryUnreceivedAcks=(t,n,s,i={})=>this.request(r({path:`/ibc/core/channel/v1/channels/${t}/ports/${n}/packet_commitments/${s}/unreceived_acks`,method:"GET",format:"json"},i)),this.queryUnreceivedPackets=(t,n,s,i={})=>this.request(r({path:`/ibc/core/channel/v1/channels/${t}/ports/${n}/packet_commitments/${s}/unreceived_packets`,method:"GET",format:"json"},i)),this.queryPacketCommitment=(t,n,s,i={})=>this.request(r({path:`/ibc/core/channel/v1/channels/${t}/ports/${n}/packet_commitments/${s}`,method:"GET",format:"json"},i)),this.queryPacketReceipt=(t,n,s,i={})=>this.request(r({path:`/ibc/core/channel/v1/channels/${t}/ports/${n}/packet_receipts/${s}`,method:"GET",format:"json"},i)),this.queryConnectionChannels=(t,n,s={})=>this.request(r({path:`/ibc/core/channel/v1/connections/${t}/channels`,method:"GET",query:n,format:"json"},s))}}const u8=[],c8=new Y.Registry(u8),p8=async({addr:e}={addr:"http://localhost:1317"})=>new l8({baseUrl:e});var yo=(()=>{if(typeof yo!="undefined")return yo;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();yo.atob;yo.btoa;var o_=(()=>{if(typeof o_!="undefined")return o_;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();l.util.Long!==S&&(l.util.Long=S,l.configure());var s_=(()=>{if(typeof s_!="undefined")return s_;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();l.util.Long!==S&&(l.util.Long=S,l.configure());const Bp={revision_number:0,revision_height:0},bs={encode(e,t=l.Writer.create()){return e.revision_number!==0&&t.uint32(8).uint64(e.revision_number),e.revision_height!==0&&t.uint32(16).uint64(e.revision_height),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Bp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.revision_number=r_(n.uint64());break;case 2:i.revision_height=r_(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Bp);return e.revision_number!==void 0&&e.revision_number!==null?t.revision_number=Number(e.revision_number):t.revision_number=0,e.revision_height!==void 0&&e.revision_height!==null?t.revision_height=Number(e.revision_height):t.revision_height=0,t},toJSON(e){const t={};return e.revision_number!==void 0&&(t.revision_number=e.revision_number),e.revision_height!==void 0&&(t.revision_height=e.revision_height),t},fromPartial(e){const t=r({},Bp);return e.revision_number!==void 0&&e.revision_number!==null?t.revision_number=e.revision_number:t.revision_number=0,e.revision_height!==void 0&&e.revision_height!==null?t.revision_height=e.revision_height:t.revision_height=0,t}};var Jp=(()=>{if(typeof Jp!="undefined")return Jp;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function r_(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Jp.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());var a_;(function(e){e[e.STATE_UNINITIALIZED_UNSPECIFIED=0]="STATE_UNINITIALIZED_UNSPECIFIED",e[e.STATE_INIT=1]="STATE_INIT",e[e.STATE_TRYOPEN=2]="STATE_TRYOPEN",e[e.STATE_OPEN=3]="STATE_OPEN",e[e.STATE_CLOSED=4]="STATE_CLOSED",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(a_||(a_={}));function d_(e){switch(e){case 0:case"STATE_UNINITIALIZED_UNSPECIFIED":return 0;case 1:case"STATE_INIT":return 1;case 2:case"STATE_TRYOPEN":return 2;case 3:case"STATE_OPEN":return 3;case 4:case"STATE_CLOSED":return 4;case-1:case"UNRECOGNIZED":default:return-1}}function l_(e){switch(e){case 0:return"STATE_UNINITIALIZED_UNSPECIFIED";case 1:return"STATE_INIT";case 2:return"STATE_TRYOPEN";case 3:return"STATE_OPEN";case 4:return"STATE_CLOSED";default:return"UNKNOWN"}}var u_;(function(e){e[e.ORDER_NONE_UNSPECIFIED=0]="ORDER_NONE_UNSPECIFIED",e[e.ORDER_UNORDERED=1]="ORDER_UNORDERED",e[e.ORDER_ORDERED=2]="ORDER_ORDERED",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(u_||(u_={}));function c_(e){switch(e){case 0:case"ORDER_NONE_UNSPECIFIED":return 0;case 1:case"ORDER_UNORDERED":return 1;case 2:case"ORDER_ORDERED":return 2;case-1:case"UNRECOGNIZED":default:return-1}}function p_(e){switch(e){case 0:return"ORDER_NONE_UNSPECIFIED";case 1:return"ORDER_UNORDERED";case 2:return"ORDER_ORDERED";default:return"UNKNOWN"}}const Gp={state:0,ordering:0,connection_hops:"",version:""},f8={encode(e,t=l.Writer.create()){e.state!==0&&t.uint32(8).int32(e.state),e.ordering!==0&&t.uint32(16).int32(e.ordering),e.counterparty!==void 0&&at.encode(e.counterparty,t.uint32(26).fork()).ldelim();for(const n of e.connection_hops)t.uint32(34).string(n);return e.version!==""&&t.uint32(42).string(e.version),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Gp);for(i.connection_hops=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.state=n.int32();break;case 2:i.ordering=n.int32();break;case 3:i.counterparty=at.decode(n,n.uint32());break;case 4:i.connection_hops.push(n.string());break;case 5:i.version=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Gp);if(t.connection_hops=[],e.state!==void 0&&e.state!==null?t.state=d_(e.state):t.state=0,e.ordering!==void 0&&e.ordering!==null?t.ordering=c_(e.ordering):t.ordering=0,e.counterparty!==void 0&&e.counterparty!==null?t.counterparty=at.fromJSON(e.counterparty):t.counterparty=void 0,e.connection_hops!==void 0&&e.connection_hops!==null)for(const n of e.connection_hops)t.connection_hops.push(String(n));return e.version!==void 0&&e.version!==null?t.version=String(e.version):t.version="",t},toJSON(e){const t={};return e.state!==void 0&&(t.state=l_(e.state)),e.ordering!==void 0&&(t.ordering=p_(e.ordering)),e.counterparty!==void 0&&(t.counterparty=e.counterparty?at.toJSON(e.counterparty):void 0),e.connection_hops?t.connection_hops=e.connection_hops.map(n=>n):t.connection_hops=[],e.version!==void 0&&(t.version=e.version),t},fromPartial(e){const t=r({},Gp);if(t.connection_hops=[],e.state!==void 0&&e.state!==null?t.state=e.state:t.state=0,e.ordering!==void 0&&e.ordering!==null?t.ordering=e.ordering:t.ordering=0,e.counterparty!==void 0&&e.counterparty!==null?t.counterparty=at.fromPartial(e.counterparty):t.counterparty=void 0,e.connection_hops!==void 0&&e.connection_hops!==null)for(const n of e.connection_hops)t.connection_hops.push(n);return e.version!==void 0&&e.version!==null?t.version=e.version:t.version="",t}},Lp={state:0,ordering:0,connection_hops:"",version:"",port_id:"",channel_id:""},m8={encode(e,t=l.Writer.create()){e.state!==0&&t.uint32(8).int32(e.state),e.ordering!==0&&t.uint32(16).int32(e.ordering),e.counterparty!==void 0&&at.encode(e.counterparty,t.uint32(26).fork()).ldelim();for(const n of e.connection_hops)t.uint32(34).string(n);return e.version!==""&&t.uint32(42).string(e.version),e.port_id!==""&&t.uint32(50).string(e.port_id),e.channel_id!==""&&t.uint32(58).string(e.channel_id),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Lp);for(i.connection_hops=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.state=n.int32();break;case 2:i.ordering=n.int32();break;case 3:i.counterparty=at.decode(n,n.uint32());break;case 4:i.connection_hops.push(n.string());break;case 5:i.version=n.string();break;case 6:i.port_id=n.string();break;case 7:i.channel_id=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Lp);if(t.connection_hops=[],e.state!==void 0&&e.state!==null?t.state=d_(e.state):t.state=0,e.ordering!==void 0&&e.ordering!==null?t.ordering=c_(e.ordering):t.ordering=0,e.counterparty!==void 0&&e.counterparty!==null?t.counterparty=at.fromJSON(e.counterparty):t.counterparty=void 0,e.connection_hops!==void 0&&e.connection_hops!==null)for(const n of e.connection_hops)t.connection_hops.push(String(n));return e.version!==void 0&&e.version!==null?t.version=String(e.version):t.version="",e.port_id!==void 0&&e.port_id!==null?t.port_id=String(e.port_id):t.port_id="",e.channel_id!==void 0&&e.channel_id!==null?t.channel_id=String(e.channel_id):t.channel_id="",t},toJSON(e){const t={};return e.state!==void 0&&(t.state=l_(e.state)),e.ordering!==void 0&&(t.ordering=p_(e.ordering)),e.counterparty!==void 0&&(t.counterparty=e.counterparty?at.toJSON(e.counterparty):void 0),e.connection_hops?t.connection_hops=e.connection_hops.map(n=>n):t.connection_hops=[],e.version!==void 0&&(t.version=e.version),e.port_id!==void 0&&(t.port_id=e.port_id),e.channel_id!==void 0&&(t.channel_id=e.channel_id),t},fromPartial(e){const t=r({},Lp);if(t.connection_hops=[],e.state!==void 0&&e.state!==null?t.state=e.state:t.state=0,e.ordering!==void 0&&e.ordering!==null?t.ordering=e.ordering:t.ordering=0,e.counterparty!==void 0&&e.counterparty!==null?t.counterparty=at.fromPartial(e.counterparty):t.counterparty=void 0,e.connection_hops!==void 0&&e.connection_hops!==null)for(const n of e.connection_hops)t.connection_hops.push(n);return e.version!==void 0&&e.version!==null?t.version=e.version:t.version="",e.port_id!==void 0&&e.port_id!==null?t.port_id=e.port_id:t.port_id="",e.channel_id!==void 0&&e.channel_id!==null?t.channel_id=e.channel_id:t.channel_id="",t}},Vp={port_id:"",channel_id:""},at={encode(e,t=l.Writer.create()){return e.port_id!==""&&t.uint32(10).string(e.port_id),e.channel_id!==""&&t.uint32(18).string(e.channel_id),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Vp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.port_id=n.string();break;case 2:i.channel_id=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Vp);return e.port_id!==void 0&&e.port_id!==null?t.port_id=String(e.port_id):t.port_id="",e.channel_id!==void 0&&e.channel_id!==null?t.channel_id=String(e.channel_id):t.channel_id="",t},toJSON(e){const t={};return e.port_id!==void 0&&(t.port_id=e.port_id),e.channel_id!==void 0&&(t.channel_id=e.channel_id),t},fromPartial(e){const t=r({},Vp);return e.port_id!==void 0&&e.port_id!==null?t.port_id=e.port_id:t.port_id="",e.channel_id!==void 0&&e.channel_id!==null?t.channel_id=e.channel_id:t.channel_id="",t}},Wp={sequence:0,source_port:"",source_channel:"",destination_port:"",destination_channel:"",timeout_timestamp:0},h8={encode(e,t=l.Writer.create()){return e.sequence!==0&&t.uint32(8).uint64(e.sequence),e.source_port!==""&&t.uint32(18).string(e.source_port),e.source_channel!==""&&t.uint32(26).string(e.source_channel),e.destination_port!==""&&t.uint32(34).string(e.destination_port),e.destination_channel!==""&&t.uint32(42).string(e.destination_channel),e.data.length!==0&&t.uint32(50).bytes(e.data),e.timeout_height!==void 0&&bs.encode(e.timeout_height,t.uint32(58).fork()).ldelim(),e.timeout_timestamp!==0&&t.uint32(64).uint64(e.timeout_timestamp),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Wp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.sequence=Ys(n.uint64());break;case 2:i.source_port=n.string();break;case 3:i.source_channel=n.string();break;case 4:i.destination_port=n.string();break;case 5:i.destination_channel=n.string();break;case 6:i.data=n.bytes();break;case 7:i.timeout_height=bs.decode(n,n.uint32());break;case 8:i.timeout_timestamp=Ys(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Wp);return e.sequence!==void 0&&e.sequence!==null?t.sequence=Number(e.sequence):t.sequence=0,e.source_port!==void 0&&e.source_port!==null?t.source_port=String(e.source_port):t.source_port="",e.source_channel!==void 0&&e.source_channel!==null?t.source_channel=String(e.source_channel):t.source_channel="",e.destination_port!==void 0&&e.destination_port!==null?t.destination_port=String(e.destination_port):t.destination_port="",e.destination_channel!==void 0&&e.destination_channel!==null?t.destination_channel=String(e.destination_channel):t.destination_channel="",e.data!==void 0&&e.data!==null&&(t.data=Yp(e.data)),e.timeout_height!==void 0&&e.timeout_height!==null?t.timeout_height=bs.fromJSON(e.timeout_height):t.timeout_height=void 0,e.timeout_timestamp!==void 0&&e.timeout_timestamp!==null?t.timeout_timestamp=Number(e.timeout_timestamp):t.timeout_timestamp=0,t},toJSON(e){const t={};return e.sequence!==void 0&&(t.sequence=e.sequence),e.source_port!==void 0&&(t.source_port=e.source_port),e.source_channel!==void 0&&(t.source_channel=e.source_channel),e.destination_port!==void 0&&(t.destination_port=e.destination_port),e.destination_channel!==void 0&&(t.destination_channel=e.destination_channel),e.data!==void 0&&(t.data=Xp(e.data!==void 0?e.data:new Uint8Array)),e.timeout_height!==void 0&&(t.timeout_height=e.timeout_height?bs.toJSON(e.timeout_height):void 0),e.timeout_timestamp!==void 0&&(t.timeout_timestamp=e.timeout_timestamp),t},fromPartial(e){const t=r({},Wp);return e.sequence!==void 0&&e.sequence!==null?t.sequence=e.sequence:t.sequence=0,e.source_port!==void 0&&e.source_port!==null?t.source_port=e.source_port:t.source_port="",e.source_channel!==void 0&&e.source_channel!==null?t.source_channel=e.source_channel:t.source_channel="",e.destination_port!==void 0&&e.destination_port!==null?t.destination_port=e.destination_port:t.destination_port="",e.destination_channel!==void 0&&e.destination_channel!==null?t.destination_channel=e.destination_channel:t.destination_channel="",e.data!==void 0&&e.data!==null?t.data=e.data:t.data=new Uint8Array,e.timeout_height!==void 0&&e.timeout_height!==null?t.timeout_height=bs.fromPartial(e.timeout_height):t.timeout_height=void 0,e.timeout_timestamp!==void 0&&e.timeout_timestamp!==null?t.timeout_timestamp=e.timeout_timestamp:t.timeout_timestamp=0,t}},Fp={port_id:"",channel_id:"",sequence:0},g8={encode(e,t=l.Writer.create()){return e.port_id!==""&&t.uint32(10).string(e.port_id),e.channel_id!==""&&t.uint32(18).string(e.channel_id),e.sequence!==0&&t.uint32(24).uint64(e.sequence),e.data.length!==0&&t.uint32(34).bytes(e.data),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Fp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.port_id=n.string();break;case 2:i.channel_id=n.string();break;case 3:i.sequence=Ys(n.uint64());break;case 4:i.data=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Fp);return e.port_id!==void 0&&e.port_id!==null?t.port_id=String(e.port_id):t.port_id="",e.channel_id!==void 0&&e.channel_id!==null?t.channel_id=String(e.channel_id):t.channel_id="",e.sequence!==void 0&&e.sequence!==null?t.sequence=Number(e.sequence):t.sequence=0,e.data!==void 0&&e.data!==null&&(t.data=Yp(e.data)),t},toJSON(e){const t={};return e.port_id!==void 0&&(t.port_id=e.port_id),e.channel_id!==void 0&&(t.channel_id=e.channel_id),e.sequence!==void 0&&(t.sequence=e.sequence),e.data!==void 0&&(t.data=Xp(e.data!==void 0?e.data:new Uint8Array)),t},fromPartial(e){const t=r({},Fp);return e.port_id!==void 0&&e.port_id!==null?t.port_id=e.port_id:t.port_id="",e.channel_id!==void 0&&e.channel_id!==null?t.channel_id=e.channel_id:t.channel_id="",e.sequence!==void 0&&e.sequence!==null?t.sequence=e.sequence:t.sequence=0,e.data!==void 0&&e.data!==null?t.data=e.data:t.data=new Uint8Array,t}},Hp={port_id:"",channel_id:"",sequence:0},y8={encode(e,t=l.Writer.create()){return e.port_id!==""&&t.uint32(10).string(e.port_id),e.channel_id!==""&&t.uint32(18).string(e.channel_id),e.sequence!==0&&t.uint32(24).uint64(e.sequence),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Hp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.port_id=n.string();break;case 2:i.channel_id=n.string();break;case 3:i.sequence=Ys(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Hp);return e.port_id!==void 0&&e.port_id!==null?t.port_id=String(e.port_id):t.port_id="",e.channel_id!==void 0&&e.channel_id!==null?t.channel_id=String(e.channel_id):t.channel_id="",e.sequence!==void 0&&e.sequence!==null?t.sequence=Number(e.sequence):t.sequence=0,t},toJSON(e){const t={};return e.port_id!==void 0&&(t.port_id=e.port_id),e.channel_id!==void 0&&(t.channel_id=e.channel_id),e.sequence!==void 0&&(t.sequence=e.sequence),t},fromPartial(e){const t=r({},Hp);return e.port_id!==void 0&&e.port_id!==null?t.port_id=e.port_id:t.port_id="",e.channel_id!==void 0&&e.channel_id!==null?t.channel_id=e.channel_id:t.channel_id="",e.sequence!==void 0&&e.sequence!==null?t.sequence=e.sequence:t.sequence=0,t}},zp={},_8={encode(e,t=l.Writer.create()){return e.result!==void 0&&t.uint32(170).bytes(e.result),e.error!==void 0&&t.uint32(178).string(e.error),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},zp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 21:i.result=n.bytes();break;case 22:i.error=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},zp);return e.result!==void 0&&e.result!==null&&(t.result=Yp(e.result)),e.error!==void 0&&e.error!==null?t.error=String(e.error):t.error=void 0,t},toJSON(e){const t={};return e.result!==void 0&&(t.result=e.result!==void 0?Xp(e.result):void 0),e.error!==void 0&&(t.error=e.error),t},fromPartial(e){const t=r({},zp);return e.result!==void 0&&e.result!==null?t.result=e.result:t.result=void 0,e.error!==void 0&&e.error!==null?t.error=e.error:t.error=void 0,t}};var Vn=(()=>{if(typeof Vn!="undefined")return Vn;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const v8=Vn.atob||(e=>Vn.Buffer.from(e,"base64").toString("binary"));function Yp(e){const t=v8(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const b8=Vn.btoa||(e=>Vn.Buffer.from(e,"binary").toString("base64"));function Xp(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return b8(t.join(""))}function Ys(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Vn.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Kp={port_id:"",channel_id:"",sequence:0},w8={encode(e,t=l.Writer.create()){return e.port_id!==""&&t.uint32(10).string(e.port_id),e.channel_id!==""&&t.uint32(18).string(e.channel_id),e.sequence!==0&&t.uint32(24).uint64(e.sequence),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Kp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.port_id=n.string();break;case 2:i.channel_id=n.string();break;case 3:i.sequence=S8(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Kp);return e.port_id!==void 0&&e.port_id!==null?t.port_id=String(e.port_id):t.port_id="",e.channel_id!==void 0&&e.channel_id!==null?t.channel_id=String(e.channel_id):t.channel_id="",e.sequence!==void 0&&e.sequence!==null?t.sequence=Number(e.sequence):t.sequence=0,t},toJSON(e){const t={};return e.port_id!==void 0&&(t.port_id=e.port_id),e.channel_id!==void 0&&(t.channel_id=e.channel_id),e.sequence!==void 0&&(t.sequence=e.sequence),t},fromPartial(e){const t=r({},Kp);return e.port_id!==void 0&&e.port_id!==null?t.port_id=e.port_id:t.port_id="",e.channel_id!==void 0&&e.channel_id!==null?t.channel_id=e.channel_id:t.channel_id="",e.sequence!==void 0&&e.sequence!==null?t.sequence=e.sequence:t.sequence=0,t}};var Zp=(()=>{if(typeof Zp!="undefined")return Zp;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function S8(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Zp.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());async function Qe(e){return await p8({addr:e["common/env/apiCosmos"]})}function Xs(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function en(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const f_=()=>({Channel:{},Channels:{},ConnectionChannels:{},ChannelClientState:{},ChannelConsensusState:{},PacketCommitment:{},PacketCommitments:{},PacketReceipt:{},PacketAcknowledgement:{},PacketAcknowledgements:{},UnreceivedPackets:{},UnreceivedAcks:{},NextSequenceReceive:{},_Structure:{Channel:en(f8.fromPartial({})),IdentifiedChannel:en(m8.fromPartial({})),Counterparty:en(at.fromPartial({})),Packet:en(h8.fromPartial({})),PacketState:en(g8.fromPartial({})),PacketId:en(y8.fromPartial({})),Acknowledgement:en(_8.fromPartial({})),PacketSequence:en(w8.fromPartial({}))},_Registry:c8,_Subscriptions:new Set}),k8=f_();var P8={namespaced:!0,state:k8,mutations:{RESET_STATE(e){Object.assign(e,f_())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getChannel:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Channel[JSON.stringify(t)])!=null?n:{}},getChannels:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Channels[JSON.stringify(t)])!=null?n:{}},getConnectionChannels:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ConnectionChannels[JSON.stringify(t)])!=null?n:{}},getChannelClientState:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ChannelClientState[JSON.stringify(t)])!=null?n:{}},getChannelConsensusState:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ChannelConsensusState[JSON.stringify(t)])!=null?n:{}},getPacketCommitment:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.PacketCommitment[JSON.stringify(t)])!=null?n:{}},getPacketCommitments:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.PacketCommitments[JSON.stringify(t)])!=null?n:{}},getPacketReceipt:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.PacketReceipt[JSON.stringify(t)])!=null?n:{}},getPacketAcknowledgement:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.PacketAcknowledgement[JSON.stringify(t)])!=null?n:{}},getPacketAcknowledgements:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.PacketAcknowledgements[JSON.stringify(t)])!=null?n:{}},getUnreceivedPackets:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.UnreceivedPackets[JSON.stringify(t)])!=null?n:{}},getUnreceivedAcks:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.UnreceivedAcks[JSON.stringify(t)])!=null?n:{}},getNextSequenceReceive:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.NextSequenceReceive[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: ibc.core.channel.v1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryChannel({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Qe(t)).queryChannel(a.channel_id,a.port_id)).data;return e("QUERY",{query:"Channel",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryChannel",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getChannel({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryChannel API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryChannels({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Qe(t);let u=(await p.queryChannels(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryChannels(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Xs(u,g)}return e("QUERY",{query:"Channels",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryChannels",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getChannels({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryChannels API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryConnectionChannels({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Qe(t);let u=(await p.queryConnectionChannels(a.connection,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryConnectionChannels(a.connection,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Xs(u,g)}return e("QUERY",{query:"ConnectionChannels",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryConnectionChannels",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getConnectionChannels({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryConnectionChannels API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryChannelClientState({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Qe(t)).queryChannelClientState(a.channel_id,a.port_id)).data;return e("QUERY",{query:"ChannelClientState",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryChannelClientState",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getChannelClientState({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryChannelClientState API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryChannelConsensusState({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Qe(t)).queryChannelConsensusState(a.channel_id,a.port_id,a.revision_number,a.revision_height)).data;return e("QUERY",{query:"ChannelConsensusState",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryChannelConsensusState",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getChannelConsensusState({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryChannelConsensusState API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryPacketCommitment({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Qe(t)).queryPacketCommitment(a.channel_id,a.port_id,a.sequence)).data;return e("QUERY",{query:"PacketCommitment",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryPacketCommitment",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getPacketCommitment({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryPacketCommitment API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryPacketCommitments({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Qe(t);let u=(await p.queryPacketCommitments(a.channel_id,a.port_id,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryPacketCommitments(a.channel_id,a.port_id,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Xs(u,g)}return e("QUERY",{query:"PacketCommitments",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryPacketCommitments",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getPacketCommitments({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryPacketCommitments API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryPacketReceipt({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Qe(t)).queryPacketReceipt(a.channel_id,a.port_id,a.sequence)).data;return e("QUERY",{query:"PacketReceipt",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryPacketReceipt",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getPacketReceipt({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryPacketReceipt API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryPacketAcknowledgement({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Qe(t)).queryPacketAcknowledgement(a.channel_id,a.port_id,a.sequence)).data;return e("QUERY",{query:"PacketAcknowledgement",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryPacketAcknowledgement",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getPacketAcknowledgement({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryPacketAcknowledgement API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryPacketAcknowledgements({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Qe(t);let u=(await p.queryPacketAcknowledgements(a.channel_id,a.port_id,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryPacketAcknowledgements(a.channel_id,a.port_id,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Xs(u,g)}return e("QUERY",{query:"PacketAcknowledgements",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryPacketAcknowledgements",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getPacketAcknowledgements({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryPacketAcknowledgements API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryUnreceivedPackets({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Qe(t)).queryUnreceivedPackets(a.channel_id,a.port_id,a.packet_commitment_sequences)).data;return e("QUERY",{query:"UnreceivedPackets",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryUnreceivedPackets",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getUnreceivedPackets({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryUnreceivedPackets API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryUnreceivedAcks({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Qe(t)).queryUnreceivedAcks(a.channel_id,a.port_id,a.packet_ack_sequences)).data;return e("QUERY",{query:"UnreceivedAcks",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryUnreceivedAcks",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getUnreceivedAcks({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryUnreceivedAcks API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryNextSequenceReceive({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Qe(t)).queryNextSequenceReceive(a.channel_id,a.port_id)).data;return e("QUERY",{query:"NextSequenceReceive",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryNextSequenceReceive",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getNextSequenceReceive({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryNextSequenceReceive API Node Unavailable. Could not perform query: "+a.error.message)}}}},Wn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Wn||(Wn={}));class C8{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[Wn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[Wn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[Wn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||Wn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==Wn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class R8 extends C8{constructor(){super(...arguments);this.queryClientParams=(t={})=>this.request(r({path:"/ibc/client/v1/params",method:"GET",format:"json"},t)),this.queryClientStates=(t,n={})=>this.request(r({path:"/ibc/core/client/v1/client_states",method:"GET",query:t,format:"json"},n)),this.queryClientState=(t,n={})=>this.request(r({path:`/ibc/core/client/v1/client_states/${t}`,method:"GET",format:"json"},n)),this.queryClientStatus=(t,n={})=>this.request(r({path:`/ibc/core/client/v1/client_status/${t}`,method:"GET",format:"json"},n)),this.queryConsensusStates=(t,n,s={})=>this.request(r({path:`/ibc/core/client/v1/consensus_states/${t}`,method:"GET",query:n,format:"json"},s)),this.queryConsensusStateHeights=(t,n,s={})=>this.request(r({path:`/ibc/core/client/v1/consensus_states/${t}/heights`,method:"GET",query:n,format:"json"},s)),this.queryConsensusState=(t,n,s,i,o={})=>this.request(r({path:`/ibc/core/client/v1/consensus_states/${t}/revision/${n}/height/${s}`,method:"GET",query:i,format:"json"},o)),this.queryUpgradedClientState=(t={})=>this.request(r({path:"/ibc/core/client/v1/upgraded_client_states",method:"GET",format:"json"},t)),this.queryUpgradedConsensusState=(t={})=>this.request(r({path:"/ibc/core/client/v1/upgraded_consensus_states",method:"GET",format:"json"},t))}}const E8=[],T8=new Y.Registry(E8),N8=async({addr:e}={addr:"http://localhost:1317"})=>new R8({baseUrl:e}),jp={type_url:""},ue={encode(e,t=l.Writer.create()){return e.type_url!==""&&t.uint32(10).string(e.type_url),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},jp);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.type_url=n.string();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},jp);return e.type_url!==void 0&&e.type_url!==null?t.type_url=String(e.type_url):t.type_url="",e.value!==void 0&&e.value!==null&&(t.value=O8(e.value)),t},toJSON(e){const t={};return e.type_url!==void 0&&(t.type_url=e.type_url),e.value!==void 0&&(t.value=U8(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},jp);return e.type_url!==void 0&&e.type_url!==null?t.type_url=e.type_url:t.type_url="",e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}};var _o=(()=>{if(typeof _o!="undefined")return _o;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const A8=_o.atob||(e=>_o.Buffer.from(e,"base64").toString("binary"));function O8(e){const t=A8(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const q8=_o.btoa||(e=>_o.Buffer.from(e,"binary").toString("base64"));function U8(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return q8(t.join(""))}const ef={seconds:0,nanos:0},tf={encode(e,t=l.Writer.create()){return e.seconds!==0&&t.uint32(8).int64(e.seconds),e.nanos!==0&&t.uint32(16).int32(e.nanos),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},ef);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.seconds=$8(n.int64());break;case 2:i.nanos=n.int32();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},ef);return e.seconds!==void 0&&e.seconds!==null?t.seconds=Number(e.seconds):t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=Number(e.nanos):t.nanos=0,t},toJSON(e){const t={};return e.seconds!==void 0&&(t.seconds=e.seconds),e.nanos!==void 0&&(t.nanos=e.nanos),t},fromPartial(e){const t=r({},ef);return e.seconds!==void 0&&e.seconds!==null?t.seconds=e.seconds:t.seconds=0,e.nanos!==void 0&&e.nanos!==null?t.nanos=e.nanos:t.nanos=0,t}};var nf=(()=>{if(typeof nf!="undefined")return nf;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function $8(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new nf.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const of={name:"",height:0,info:""},ws={encode(e,t=l.Writer.create()){return e.name!==""&&t.uint32(10).string(e.name),e.time!==void 0&&tf.encode(I8(e.time),t.uint32(18).fork()).ldelim(),e.height!==0&&t.uint32(24).int64(e.height),e.info!==""&&t.uint32(34).string(e.info),e.upgraded_client_state!==void 0&&ue.encode(e.upgraded_client_state,t.uint32(42).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},of);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.name=n.string();break;case 2:i.time=m_(tf.decode(n,n.uint32()));break;case 3:i.height=D8(n.int64());break;case 4:i.info=n.string();break;case 5:i.upgraded_client_state=ue.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},of);return e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.time!==void 0&&e.time!==null?t.time=x8(e.time):t.time=void 0,e.height!==void 0&&e.height!==null?t.height=Number(e.height):t.height=0,e.info!==void 0&&e.info!==null?t.info=String(e.info):t.info="",e.upgraded_client_state!==void 0&&e.upgraded_client_state!==null?t.upgraded_client_state=ue.fromJSON(e.upgraded_client_state):t.upgraded_client_state=void 0,t},toJSON(e){const t={};return e.name!==void 0&&(t.name=e.name),e.time!==void 0&&(t.time=e.time!==void 0?e.time.toISOString():null),e.height!==void 0&&(t.height=e.height),e.info!==void 0&&(t.info=e.info),e.upgraded_client_state!==void 0&&(t.upgraded_client_state=e.upgraded_client_state?ue.toJSON(e.upgraded_client_state):void 0),t},fromPartial(e){const t=r({},of);return e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.time!==void 0&&e.time!==null?t.time=e.time:t.time=void 0,e.height!==void 0&&e.height!==null?t.height=e.height:t.height=0,e.info!==void 0&&e.info!==null?t.info=e.info:t.info="",e.upgraded_client_state!==void 0&&e.upgraded_client_state!==null?t.upgraded_client_state=ue.fromPartial(e.upgraded_client_state):t.upgraded_client_state=void 0,t}};var sf=(()=>{if(typeof sf!="undefined")return sf;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function I8(e){const t=e.getTime()/1e3,n=e.getTime()%1e3*1e6;return{seconds:t,nanos:n}}function m_(e){let t=e.seconds*1e3;return t+=e.nanos/1e6,new Date(t)}function x8(e){return e instanceof Date?e:typeof e=="string"?new Date(e):m_(tf.fromJSON(e))}function D8(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new sf.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const rf={client_id:""},Q8={encode(e,t=l.Writer.create()){return e.client_id!==""&&t.uint32(10).string(e.client_id),e.client_state!==void 0&&ue.encode(e.client_state,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},rf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.client_id=n.string();break;case 2:i.client_state=ue.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},rf);return e.client_id!==void 0&&e.client_id!==null?t.client_id=String(e.client_id):t.client_id="",e.client_state!==void 0&&e.client_state!==null?t.client_state=ue.fromJSON(e.client_state):t.client_state=void 0,t},toJSON(e){const t={};return e.client_id!==void 0&&(t.client_id=e.client_id),e.client_state!==void 0&&(t.client_state=e.client_state?ue.toJSON(e.client_state):void 0),t},fromPartial(e){const t=r({},rf);return e.client_id!==void 0&&e.client_id!==null?t.client_id=e.client_id:t.client_id="",e.client_state!==void 0&&e.client_state!==null?t.client_state=ue.fromPartial(e.client_state):t.client_state=void 0,t}},af={},vo={encode(e,t=l.Writer.create()){return e.height!==void 0&&bo.encode(e.height,t.uint32(10).fork()).ldelim(),e.consensus_state!==void 0&&ue.encode(e.consensus_state,t.uint32(18).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},af);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.height=bo.decode(n,n.uint32());break;case 2:i.consensus_state=ue.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},af);return e.height!==void 0&&e.height!==null?t.height=bo.fromJSON(e.height):t.height=void 0,e.consensus_state!==void 0&&e.consensus_state!==null?t.consensus_state=ue.fromJSON(e.consensus_state):t.consensus_state=void 0,t},toJSON(e){const t={};return e.height!==void 0&&(t.height=e.height?bo.toJSON(e.height):void 0),e.consensus_state!==void 0&&(t.consensus_state=e.consensus_state?ue.toJSON(e.consensus_state):void 0),t},fromPartial(e){const t=r({},af);return e.height!==void 0&&e.height!==null?t.height=bo.fromPartial(e.height):t.height=void 0,e.consensus_state!==void 0&&e.consensus_state!==null?t.consensus_state=ue.fromPartial(e.consensus_state):t.consensus_state=void 0,t}},df={client_id:""},M8={encode(e,t=l.Writer.create()){e.client_id!==""&&t.uint32(10).string(e.client_id);for(const n of e.consensus_states)vo.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},df);for(i.consensus_states=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.client_id=n.string();break;case 2:i.consensus_states.push(vo.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},df);if(t.consensus_states=[],e.client_id!==void 0&&e.client_id!==null?t.client_id=String(e.client_id):t.client_id="",e.consensus_states!==void 0&&e.consensus_states!==null)for(const n of e.consensus_states)t.consensus_states.push(vo.fromJSON(n));return t},toJSON(e){const t={};return e.client_id!==void 0&&(t.client_id=e.client_id),e.consensus_states?t.consensus_states=e.consensus_states.map(n=>n?vo.toJSON(n):void 0):t.consensus_states=[],t},fromPartial(e){const t=r({},df);if(t.consensus_states=[],e.client_id!==void 0&&e.client_id!==null?t.client_id=e.client_id:t.client_id="",e.consensus_states!==void 0&&e.consensus_states!==null)for(const n of e.consensus_states)t.consensus_states.push(vo.fromPartial(n));return t}},lf={title:"",description:"",subject_client_id:"",substitute_client_id:""},B8={encode(e,t=l.Writer.create()){return e.title!==""&&t.uint32(10).string(e.title),e.description!==""&&t.uint32(18).string(e.description),e.subject_client_id!==""&&t.uint32(26).string(e.subject_client_id),e.substitute_client_id!==""&&t.uint32(34).string(e.substitute_client_id),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},lf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.title=n.string();break;case 2:i.description=n.string();break;case 3:i.subject_client_id=n.string();break;case 4:i.substitute_client_id=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},lf);return e.title!==void 0&&e.title!==null?t.title=String(e.title):t.title="",e.description!==void 0&&e.description!==null?t.description=String(e.description):t.description="",e.subject_client_id!==void 0&&e.subject_client_id!==null?t.subject_client_id=String(e.subject_client_id):t.subject_client_id="",e.substitute_client_id!==void 0&&e.substitute_client_id!==null?t.substitute_client_id=String(e.substitute_client_id):t.substitute_client_id="",t},toJSON(e){const t={};return e.title!==void 0&&(t.title=e.title),e.description!==void 0&&(t.description=e.description),e.subject_client_id!==void 0&&(t.subject_client_id=e.subject_client_id),e.substitute_client_id!==void 0&&(t.substitute_client_id=e.substitute_client_id),t},fromPartial(e){const t=r({},lf);return e.title!==void 0&&e.title!==null?t.title=e.title:t.title="",e.description!==void 0&&e.description!==null?t.description=e.description:t.description="",e.subject_client_id!==void 0&&e.subject_client_id!==null?t.subject_client_id=e.subject_client_id:t.subject_client_id="",e.substitute_client_id!==void 0&&e.substitute_client_id!==null?t.substitute_client_id=e.substitute_client_id:t.substitute_client_id="",t}},uf={title:"",description:""},J8={encode(e,t=l.Writer.create()){return e.title!==""&&t.uint32(10).string(e.title),e.description!==""&&t.uint32(18).string(e.description),e.plan!==void 0&&ws.encode(e.plan,t.uint32(26).fork()).ldelim(),e.upgraded_client_state!==void 0&&ue.encode(e.upgraded_client_state,t.uint32(34).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},uf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.title=n.string();break;case 2:i.description=n.string();break;case 3:i.plan=ws.decode(n,n.uint32());break;case 4:i.upgraded_client_state=ue.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},uf);return e.title!==void 0&&e.title!==null?t.title=String(e.title):t.title="",e.description!==void 0&&e.description!==null?t.description=String(e.description):t.description="",e.plan!==void 0&&e.plan!==null?t.plan=ws.fromJSON(e.plan):t.plan=void 0,e.upgraded_client_state!==void 0&&e.upgraded_client_state!==null?t.upgraded_client_state=ue.fromJSON(e.upgraded_client_state):t.upgraded_client_state=void 0,t},toJSON(e){const t={};return e.title!==void 0&&(t.title=e.title),e.description!==void 0&&(t.description=e.description),e.plan!==void 0&&(t.plan=e.plan?ws.toJSON(e.plan):void 0),e.upgraded_client_state!==void 0&&(t.upgraded_client_state=e.upgraded_client_state?ue.toJSON(e.upgraded_client_state):void 0),t},fromPartial(e){const t=r({},uf);return e.title!==void 0&&e.title!==null?t.title=e.title:t.title="",e.description!==void 0&&e.description!==null?t.description=e.description:t.description="",e.plan!==void 0&&e.plan!==null?t.plan=ws.fromPartial(e.plan):t.plan=void 0,e.upgraded_client_state!==void 0&&e.upgraded_client_state!==null?t.upgraded_client_state=ue.fromPartial(e.upgraded_client_state):t.upgraded_client_state=void 0,t}},cf={revision_number:0,revision_height:0},bo={encode(e,t=l.Writer.create()){return e.revision_number!==0&&t.uint32(8).uint64(e.revision_number),e.revision_height!==0&&t.uint32(16).uint64(e.revision_height),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},cf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.revision_number=h_(n.uint64());break;case 2:i.revision_height=h_(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},cf);return e.revision_number!==void 0&&e.revision_number!==null?t.revision_number=Number(e.revision_number):t.revision_number=0,e.revision_height!==void 0&&e.revision_height!==null?t.revision_height=Number(e.revision_height):t.revision_height=0,t},toJSON(e){const t={};return e.revision_number!==void 0&&(t.revision_number=e.revision_number),e.revision_height!==void 0&&(t.revision_height=e.revision_height),t},fromPartial(e){const t=r({},cf);return e.revision_number!==void 0&&e.revision_number!==null?t.revision_number=e.revision_number:t.revision_number=0,e.revision_height!==void 0&&e.revision_height!==null?t.revision_height=e.revision_height:t.revision_height=0,t}},pf={allowed_clients:""},G8={encode(e,t=l.Writer.create()){for(const n of e.allowed_clients)t.uint32(10).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},pf);for(i.allowed_clients=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.allowed_clients.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},pf);if(t.allowed_clients=[],e.allowed_clients!==void 0&&e.allowed_clients!==null)for(const n of e.allowed_clients)t.allowed_clients.push(String(n));return t},toJSON(e){const t={};return e.allowed_clients?t.allowed_clients=e.allowed_clients.map(n=>n):t.allowed_clients=[],t},fromPartial(e){const t=r({},pf);if(t.allowed_clients=[],e.allowed_clients!==void 0&&e.allowed_clients!==null)for(const n of e.allowed_clients)t.allowed_clients.push(n);return t}};var ff=(()=>{if(typeof ff!="undefined")return ff;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function h_(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new ff.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const mf={},wo={encode(e,t=l.Writer.create()){return e.key.length!==0&&t.uint32(10).bytes(e.key),e.value.length!==0&&t.uint32(18).bytes(e.value),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},mf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.key=n.bytes();break;case 2:i.value=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},mf);return e.key!==void 0&&e.key!==null&&(t.key=g_(e.key)),e.value!==void 0&&e.value!==null&&(t.value=g_(e.value)),t},toJSON(e){const t={};return e.key!==void 0&&(t.key=y_(e.key!==void 0?e.key:new Uint8Array)),e.value!==void 0&&(t.value=y_(e.value!==void 0?e.value:new Uint8Array)),t},fromPartial(e){const t=r({},mf);return e.key!==void 0&&e.key!==null?t.key=e.key:t.key=new Uint8Array,e.value!==void 0&&e.value!==null?t.value=e.value:t.value=new Uint8Array,t}},hf={client_id:""},L8={encode(e,t=l.Writer.create()){e.client_id!==""&&t.uint32(10).string(e.client_id);for(const n of e.client_metadata)wo.encode(n,t.uint32(18).fork()).ldelim();return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},hf);for(i.client_metadata=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.client_id=n.string();break;case 2:i.client_metadata.push(wo.decode(n,n.uint32()));break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},hf);if(t.client_metadata=[],e.client_id!==void 0&&e.client_id!==null?t.client_id=String(e.client_id):t.client_id="",e.client_metadata!==void 0&&e.client_metadata!==null)for(const n of e.client_metadata)t.client_metadata.push(wo.fromJSON(n));return t},toJSON(e){const t={};return e.client_id!==void 0&&(t.client_id=e.client_id),e.client_metadata?t.client_metadata=e.client_metadata.map(n=>n?wo.toJSON(n):void 0):t.client_metadata=[],t},fromPartial(e){const t=r({},hf);if(t.client_metadata=[],e.client_id!==void 0&&e.client_id!==null?t.client_id=e.client_id:t.client_id="",e.client_metadata!==void 0&&e.client_metadata!==null)for(const n of e.client_metadata)t.client_metadata.push(wo.fromPartial(n));return t}};var So=(()=>{if(typeof So!="undefined")return So;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const V8=So.atob||(e=>So.Buffer.from(e,"base64").toString("binary"));function g_(e){const t=V8(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const W8=So.btoa||(e=>So.Buffer.from(e,"binary").toString("base64"));function y_(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return W8(t.join(""))}l.util.Long!==S&&(l.util.Long=S,l.configure());async function Dt(e){return await N8({addr:e["common/env/apiCosmos"]})}function Ks(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function Qt(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const __=()=>({ClientState:{},ClientStates:{},ConsensusState:{},ConsensusStates:{},ConsensusStateHeights:{},ClientStatus:{},ClientParams:{},UpgradedClientState:{},UpgradedConsensusState:{},_Structure:{IdentifiedClientState:Qt(Q8.fromPartial({})),ConsensusStateWithHeight:Qt(vo.fromPartial({})),ClientConsensusStates:Qt(M8.fromPartial({})),ClientUpdateProposal:Qt(B8.fromPartial({})),UpgradeProposal:Qt(J8.fromPartial({})),Height:Qt(bo.fromPartial({})),Params:Qt(G8.fromPartial({})),GenesisMetadata:Qt(wo.fromPartial({})),IdentifiedGenesisMetadata:Qt(L8.fromPartial({}))},_Registry:T8,_Subscriptions:new Set}),F8=__();var H8={namespaced:!0,state:F8,mutations:{RESET_STATE(e){Object.assign(e,__())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getClientState:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ClientState[JSON.stringify(t)])!=null?n:{}},getClientStates:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ClientStates[JSON.stringify(t)])!=null?n:{}},getConsensusState:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ConsensusState[JSON.stringify(t)])!=null?n:{}},getConsensusStates:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ConsensusStates[JSON.stringify(t)])!=null?n:{}},getConsensusStateHeights:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ConsensusStateHeights[JSON.stringify(t)])!=null?n:{}},getClientStatus:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ClientStatus[JSON.stringify(t)])!=null?n:{}},getClientParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ClientParams[JSON.stringify(t)])!=null?n:{}},getUpgradedClientState:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.UpgradedClientState[JSON.stringify(t)])!=null?n:{}},getUpgradedConsensusState:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.UpgradedConsensusState[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: ibc.core.client.v1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryClientState({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Dt(t)).queryClientState(a.client_id)).data;return e("QUERY",{query:"ClientState",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryClientState",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getClientState({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryClientState API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryClientStates({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Dt(t);let u=(await p.queryClientStates(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryClientStates(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Ks(u,g)}return e("QUERY",{query:"ClientStates",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryClientStates",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getClientStates({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryClientStates API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryConsensusState({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Dt(t);let u=(await p.queryConsensusState(a.client_id,a.revision_number,a.revision_height,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryConsensusState(a.client_id,a.revision_number,a.revision_height,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Ks(u,g)}return e("QUERY",{query:"ConsensusState",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryConsensusState",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getConsensusState({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryConsensusState API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryConsensusStates({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Dt(t);let u=(await p.queryConsensusStates(a.client_id,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryConsensusStates(a.client_id,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Ks(u,g)}return e("QUERY",{query:"ConsensusStates",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryConsensusStates",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getConsensusStates({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryConsensusStates API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryConsensusStateHeights({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Dt(t);let u=(await p.queryConsensusStateHeights(a.client_id,d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryConsensusStateHeights(a.client_id,k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Ks(u,g)}return e("QUERY",{query:"ConsensusStateHeights",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryConsensusStateHeights",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getConsensusStateHeights({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryConsensusStateHeights API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryClientStatus({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Dt(t)).queryClientStatus(a.client_id)).data;return e("QUERY",{query:"ClientStatus",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryClientStatus",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getClientStatus({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryClientStatus API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryClientParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Dt(t)).queryClientParams()).data;return e("QUERY",{query:"ClientParams",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryClientParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getClientParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryClientParams API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryUpgradedClientState({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Dt(t)).queryUpgradedClientState()).data;return e("QUERY",{query:"UpgradedClientState",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryUpgradedClientState",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getUpgradedClientState({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryUpgradedClientState API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryUpgradedConsensusState({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Dt(t)).queryUpgradedConsensusState()).data;return e("QUERY",{query:"UpgradedConsensusState",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryUpgradedConsensusState",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getUpgradedConsensusState({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryUpgradedConsensusState API Node Unavailable. Could not perform query: "+a.error.message)}}}},v_;(function(e){e.STATE_UNINITIALIZED_UNSPECIFIED="STATE_UNINITIALIZED_UNSPECIFIED",e.STATE_INIT="STATE_INIT",e.STATE_TRYOPEN="STATE_TRYOPEN",e.STATE_OPEN="STATE_OPEN"})(v_||(v_={}));var Fn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Fn||(Fn={}));class z8{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[Fn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[Fn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[Fn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||Fn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==Fn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class Y8 extends z8{constructor(){super(...arguments);this.queryClientConnections=(t,n={})=>this.request(r({path:`/ibc/core/connection/v1/client_connections/${t}`,method:"GET",format:"json"},n)),this.queryConnections=(t,n={})=>this.request(r({path:"/ibc/core/connection/v1/connections",method:"GET",query:t,format:"json"},n)),this.queryConnection=(t,n={})=>this.request(r({path:`/ibc/core/connection/v1/connections/${t}`,method:"GET",format:"json"},n)),this.queryConnectionClientState=(t,n={})=>this.request(r({path:`/ibc/core/connection/v1/connections/${t}/client_state`,method:"GET",format:"json"},n)),this.queryConnectionConsensusState=(t,n,s,i={})=>this.request(r({path:`/ibc/core/connection/v1/connections/${t}/consensus_state/revision/${n}/height/${s}`,method:"GET",format:"json"},i))}}const X8=[],K8=new Y.Registry(X8),Z8=async({addr:e}={addr:"http://localhost:1317"})=>new Y8({baseUrl:e});var b_;(function(e){e[e.NO_HASH=0]="NO_HASH",e[e.SHA256=1]="SHA256",e[e.SHA512=2]="SHA512",e[e.KECCAK=3]="KECCAK",e[e.RIPEMD160=4]="RIPEMD160",e[e.BITCOIN=5]="BITCOIN",e[e.SHA512_256=6]="SHA512_256",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(b_||(b_={}));var w_;(function(e){e[e.NO_PREFIX=0]="NO_PREFIX",e[e.VAR_PROTO=1]="VAR_PROTO",e[e.VAR_RLP=2]="VAR_RLP",e[e.FIXED32_BIG=3]="FIXED32_BIG",e[e.FIXED32_LITTLE=4]="FIXED32_LITTLE",e[e.FIXED64_BIG=5]="FIXED64_BIG",e[e.FIXED64_LITTLE=6]="FIXED64_LITTLE",e[e.REQUIRE_32_BYTES=7]="REQUIRE_32_BYTES",e[e.REQUIRE_64_BYTES=8]="REQUIRE_64_BYTES",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(w_||(w_={}));var ko=(()=>{if(typeof ko!="undefined")return ko;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();ko.atob;ko.btoa;const gf={},Ss={encode(e,t=l.Writer.create()){return e.key_prefix.length!==0&&t.uint32(10).bytes(e.key_prefix),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},gf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.key_prefix=n.bytes();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},gf);return e.key_prefix!==void 0&&e.key_prefix!==null&&(t.key_prefix=eD(e.key_prefix)),t},toJSON(e){const t={};return e.key_prefix!==void 0&&(t.key_prefix=nD(e.key_prefix!==void 0?e.key_prefix:new Uint8Array)),t},fromPartial(e){const t=r({},gf);return e.key_prefix!==void 0&&e.key_prefix!==null?t.key_prefix=e.key_prefix:t.key_prefix=new Uint8Array,t}};var Po=(()=>{if(typeof Po!="undefined")return Po;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();const j8=Po.atob||(e=>Po.Buffer.from(e,"base64").toString("binary"));function eD(e){const t=j8(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n}const tD=Po.btoa||(e=>Po.Buffer.from(e,"binary").toString("base64"));function nD(e){const t=[];for(let n=0;n<e.byteLength;++n)t.push(String.fromCharCode(e[n]));return tD(t.join(""))}var S_;(function(e){e[e.STATE_UNINITIALIZED_UNSPECIFIED=0]="STATE_UNINITIALIZED_UNSPECIFIED",e[e.STATE_INIT=1]="STATE_INIT",e[e.STATE_TRYOPEN=2]="STATE_TRYOPEN",e[e.STATE_OPEN=3]="STATE_OPEN",e[e.UNRECOGNIZED=-1]="UNRECOGNIZED"})(S_||(S_={}));function k_(e){switch(e){case 0:case"STATE_UNINITIALIZED_UNSPECIFIED":return 0;case 1:case"STATE_INIT":return 1;case 2:case"STATE_TRYOPEN":return 2;case 3:case"STATE_OPEN":return 3;case-1:case"UNRECOGNIZED":default:return-1}}function P_(e){switch(e){case 0:return"STATE_UNINITIALIZED_UNSPECIFIED";case 1:return"STATE_INIT";case 2:return"STATE_TRYOPEN";case 3:return"STATE_OPEN";default:return"UNKNOWN"}}const yf={client_id:"",state:0,delay_period:0},iD={encode(e,t=l.Writer.create()){e.client_id!==""&&t.uint32(10).string(e.client_id);for(const n of e.versions)lt.encode(n,t.uint32(18).fork()).ldelim();return e.state!==0&&t.uint32(24).int32(e.state),e.counterparty!==void 0&&dt.encode(e.counterparty,t.uint32(34).fork()).ldelim(),e.delay_period!==0&&t.uint32(40).uint64(e.delay_period),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},yf);for(i.versions=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.client_id=n.string();break;case 2:i.versions.push(lt.decode(n,n.uint32()));break;case 3:i.state=n.int32();break;case 4:i.counterparty=dt.decode(n,n.uint32());break;case 5:i.delay_period=Cf(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},yf);if(t.versions=[],e.client_id!==void 0&&e.client_id!==null?t.client_id=String(e.client_id):t.client_id="",e.versions!==void 0&&e.versions!==null)for(const n of e.versions)t.versions.push(lt.fromJSON(n));return e.state!==void 0&&e.state!==null?t.state=k_(e.state):t.state=0,e.counterparty!==void 0&&e.counterparty!==null?t.counterparty=dt.fromJSON(e.counterparty):t.counterparty=void 0,e.delay_period!==void 0&&e.delay_period!==null?t.delay_period=Number(e.delay_period):t.delay_period=0,t},toJSON(e){const t={};return e.client_id!==void 0&&(t.client_id=e.client_id),e.versions?t.versions=e.versions.map(n=>n?lt.toJSON(n):void 0):t.versions=[],e.state!==void 0&&(t.state=P_(e.state)),e.counterparty!==void 0&&(t.counterparty=e.counterparty?dt.toJSON(e.counterparty):void 0),e.delay_period!==void 0&&(t.delay_period=e.delay_period),t},fromPartial(e){const t=r({},yf);if(t.versions=[],e.client_id!==void 0&&e.client_id!==null?t.client_id=e.client_id:t.client_id="",e.versions!==void 0&&e.versions!==null)for(const n of e.versions)t.versions.push(lt.fromPartial(n));return e.state!==void 0&&e.state!==null?t.state=e.state:t.state=0,e.counterparty!==void 0&&e.counterparty!==null?t.counterparty=dt.fromPartial(e.counterparty):t.counterparty=void 0,e.delay_period!==void 0&&e.delay_period!==null?t.delay_period=e.delay_period:t.delay_period=0,t}},_f={id:"",client_id:"",state:0,delay_period:0},oD={encode(e,t=l.Writer.create()){e.id!==""&&t.uint32(10).string(e.id),e.client_id!==""&&t.uint32(18).string(e.client_id);for(const n of e.versions)lt.encode(n,t.uint32(26).fork()).ldelim();return e.state!==0&&t.uint32(32).int32(e.state),e.counterparty!==void 0&&dt.encode(e.counterparty,t.uint32(42).fork()).ldelim(),e.delay_period!==0&&t.uint32(48).uint64(e.delay_period),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},_f);for(i.versions=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.id=n.string();break;case 2:i.client_id=n.string();break;case 3:i.versions.push(lt.decode(n,n.uint32()));break;case 4:i.state=n.int32();break;case 5:i.counterparty=dt.decode(n,n.uint32());break;case 6:i.delay_period=Cf(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},_f);if(t.versions=[],e.id!==void 0&&e.id!==null?t.id=String(e.id):t.id="",e.client_id!==void 0&&e.client_id!==null?t.client_id=String(e.client_id):t.client_id="",e.versions!==void 0&&e.versions!==null)for(const n of e.versions)t.versions.push(lt.fromJSON(n));return e.state!==void 0&&e.state!==null?t.state=k_(e.state):t.state=0,e.counterparty!==void 0&&e.counterparty!==null?t.counterparty=dt.fromJSON(e.counterparty):t.counterparty=void 0,e.delay_period!==void 0&&e.delay_period!==null?t.delay_period=Number(e.delay_period):t.delay_period=0,t},toJSON(e){const t={};return e.id!==void 0&&(t.id=e.id),e.client_id!==void 0&&(t.client_id=e.client_id),e.versions?t.versions=e.versions.map(n=>n?lt.toJSON(n):void 0):t.versions=[],e.state!==void 0&&(t.state=P_(e.state)),e.counterparty!==void 0&&(t.counterparty=e.counterparty?dt.toJSON(e.counterparty):void 0),e.delay_period!==void 0&&(t.delay_period=e.delay_period),t},fromPartial(e){const t=r({},_f);if(t.versions=[],e.id!==void 0&&e.id!==null?t.id=e.id:t.id="",e.client_id!==void 0&&e.client_id!==null?t.client_id=e.client_id:t.client_id="",e.versions!==void 0&&e.versions!==null)for(const n of e.versions)t.versions.push(lt.fromPartial(n));return e.state!==void 0&&e.state!==null?t.state=e.state:t.state=0,e.counterparty!==void 0&&e.counterparty!==null?t.counterparty=dt.fromPartial(e.counterparty):t.counterparty=void 0,e.delay_period!==void 0&&e.delay_period!==null?t.delay_period=e.delay_period:t.delay_period=0,t}},vf={client_id:"",connection_id:""},dt={encode(e,t=l.Writer.create()){return e.client_id!==""&&t.uint32(10).string(e.client_id),e.connection_id!==""&&t.uint32(18).string(e.connection_id),e.prefix!==void 0&&Ss.encode(e.prefix,t.uint32(26).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},vf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.client_id=n.string();break;case 2:i.connection_id=n.string();break;case 3:i.prefix=Ss.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},vf);return e.client_id!==void 0&&e.client_id!==null?t.client_id=String(e.client_id):t.client_id="",e.connection_id!==void 0&&e.connection_id!==null?t.connection_id=String(e.connection_id):t.connection_id="",e.prefix!==void 0&&e.prefix!==null?t.prefix=Ss.fromJSON(e.prefix):t.prefix=void 0,t},toJSON(e){const t={};return e.client_id!==void 0&&(t.client_id=e.client_id),e.connection_id!==void 0&&(t.connection_id=e.connection_id),e.prefix!==void 0&&(t.prefix=e.prefix?Ss.toJSON(e.prefix):void 0),t},fromPartial(e){const t=r({},vf);return e.client_id!==void 0&&e.client_id!==null?t.client_id=e.client_id:t.client_id="",e.connection_id!==void 0&&e.connection_id!==null?t.connection_id=e.connection_id:t.connection_id="",e.prefix!==void 0&&e.prefix!==null?t.prefix=Ss.fromPartial(e.prefix):t.prefix=void 0,t}},bf={paths:""},sD={encode(e,t=l.Writer.create()){for(const n of e.paths)t.uint32(10).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},bf);for(i.paths=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.paths.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},bf);if(t.paths=[],e.paths!==void 0&&e.paths!==null)for(const n of e.paths)t.paths.push(String(n));return t},toJSON(e){const t={};return e.paths?t.paths=e.paths.map(n=>n):t.paths=[],t},fromPartial(e){const t=r({},bf);if(t.paths=[],e.paths!==void 0&&e.paths!==null)for(const n of e.paths)t.paths.push(n);return t}},wf={client_id:"",paths:""},rD={encode(e,t=l.Writer.create()){e.client_id!==""&&t.uint32(10).string(e.client_id);for(const n of e.paths)t.uint32(18).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},wf);for(i.paths=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.client_id=n.string();break;case 2:i.paths.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},wf);if(t.paths=[],e.client_id!==void 0&&e.client_id!==null?t.client_id=String(e.client_id):t.client_id="",e.paths!==void 0&&e.paths!==null)for(const n of e.paths)t.paths.push(String(n));return t},toJSON(e){const t={};return e.client_id!==void 0&&(t.client_id=e.client_id),e.paths?t.paths=e.paths.map(n=>n):t.paths=[],t},fromPartial(e){const t=r({},wf);if(t.paths=[],e.client_id!==void 0&&e.client_id!==null?t.client_id=e.client_id:t.client_id="",e.paths!==void 0&&e.paths!==null)for(const n of e.paths)t.paths.push(n);return t}},Sf={identifier:"",features:""},lt={encode(e,t=l.Writer.create()){e.identifier!==""&&t.uint32(10).string(e.identifier);for(const n of e.features)t.uint32(18).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Sf);for(i.features=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.identifier=n.string();break;case 2:i.features.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Sf);if(t.features=[],e.identifier!==void 0&&e.identifier!==null?t.identifier=String(e.identifier):t.identifier="",e.features!==void 0&&e.features!==null)for(const n of e.features)t.features.push(String(n));return t},toJSON(e){const t={};return e.identifier!==void 0&&(t.identifier=e.identifier),e.features?t.features=e.features.map(n=>n):t.features=[],t},fromPartial(e){const t=r({},Sf);if(t.features=[],e.identifier!==void 0&&e.identifier!==null?t.identifier=e.identifier:t.identifier="",e.features!==void 0&&e.features!==null)for(const n of e.features)t.features.push(n);return t}},kf={max_expected_time_per_block:0},aD={encode(e,t=l.Writer.create()){return e.max_expected_time_per_block!==0&&t.uint32(8).uint64(e.max_expected_time_per_block),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},kf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.max_expected_time_per_block=Cf(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},kf);return e.max_expected_time_per_block!==void 0&&e.max_expected_time_per_block!==null?t.max_expected_time_per_block=Number(e.max_expected_time_per_block):t.max_expected_time_per_block=0,t},toJSON(e){const t={};return e.max_expected_time_per_block!==void 0&&(t.max_expected_time_per_block=e.max_expected_time_per_block),t},fromPartial(e){const t=r({},kf);return e.max_expected_time_per_block!==void 0&&e.max_expected_time_per_block!==null?t.max_expected_time_per_block=e.max_expected_time_per_block:t.max_expected_time_per_block=0,t}};var Pf=(()=>{if(typeof Pf!="undefined")return Pf;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Cf(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Pf.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());async function ks(e){return await Z8({addr:e["common/env/apiCosmos"]})}function dD(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function Hn(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const C_=()=>({Connection:{},Connections:{},ClientConnections:{},ConnectionClientState:{},ConnectionConsensusState:{},_Structure:{ConnectionEnd:Hn(iD.fromPartial({})),IdentifiedConnection:Hn(oD.fromPartial({})),Counterparty:Hn(dt.fromPartial({})),ClientPaths:Hn(sD.fromPartial({})),ConnectionPaths:Hn(rD.fromPartial({})),Version:Hn(lt.fromPartial({})),Params:Hn(aD.fromPartial({}))},_Registry:K8,_Subscriptions:new Set}),lD=C_();var uD={namespaced:!0,state:lD,mutations:{RESET_STATE(e){Object.assign(e,C_())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getConnection:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Connection[JSON.stringify(t)])!=null?n:{}},getConnections:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Connections[JSON.stringify(t)])!=null?n:{}},getClientConnections:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ClientConnections[JSON.stringify(t)])!=null?n:{}},getConnectionClientState:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ConnectionClientState[JSON.stringify(t)])!=null?n:{}},getConnectionConsensusState:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ConnectionConsensusState[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: ibc.core.connection.v1 initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryConnection({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await ks(t)).queryConnection(a.connection_id)).data;return e("QUERY",{query:"Connection",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryConnection",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getConnection({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryConnection API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryConnections({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await ks(t);let u=(await p.queryConnections(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryConnections(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=dD(u,g)}return e("QUERY",{query:"Connections",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryConnections",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getConnections({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryConnections API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryClientConnections({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await ks(t)).queryClientConnections(a.client_id)).data;return e("QUERY",{query:"ClientConnections",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryClientConnections",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getClientConnections({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryClientConnections API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryConnectionClientState({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await ks(t)).queryConnectionClientState(a.connection_id)).data;return e("QUERY",{query:"ConnectionClientState",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryConnectionClientState",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getConnectionClientState({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryConnectionClientState API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryConnectionConsensusState({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await ks(t)).queryConnectionConsensusState(a.connection_id,a.revision_number,a.revision_height)).data;return e("QUERY",{query:"ConnectionConsensusState",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryConnectionConsensusState",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getConnectionConsensusState({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryConnectionConsensusState API Node Unavailable. Could not perform query: "+a.error.message)}}}},zn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(zn||(zn={}));class cD{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[zn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[zn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[zn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||zn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==zn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class pD extends cD{constructor(){super(...arguments);this.queryQueryScript=(t,n={})=>this.request(r({path:"/dyson/query",method:"GET",query:t,format:"json"},n)),this.querySchema=(t,n={})=>this.request(r({path:"/dyson/schema",method:"GET",query:t,format:"json"},n)),this.queryScript=(t,n={})=>this.request(r({path:"/dyson/script",method:"GET",query:t,format:"json"},n)),this.queryScriptAll=(t,n={})=>this.request(r({path:"/dyson/scriptAll",method:"GET",query:t,format:"json"},n)),this.queryStorage=(t,n={})=>this.request(r({path:"/dyson/storage",method:"GET",query:t,format:"json"},n)),this.queryStorageAll=(t,n={})=>this.request(r({path:"/dyson/storageAll",method:"GET",query:t,format:"json"},n)),this.queryPrefixStorage=(t,n={})=>this.request(r({path:"/dyson/storageprefix",method:"GET",query:t,format:"json"},n)),this.queryWsgi=(t,n={})=>this.request(r({path:"/dyson/wsgi",method:"GET",query:t,format:"json"},n)),this.queryCronAll=(t,n={})=>this.request(r({path:"/org/dyson/dyson/cron",method:"GET",query:t,format:"json"},n)),this.queryScheduledRun=(t,n={})=>this.request(r({path:"/org/dyson/dyson/scheduledRun",method:"GET",query:t,format:"json"},n)),this.queryScheduledRunAll=(t,n={})=>this.request(r({path:"/org/dyson/dyson/scheduledRunAll",method:"GET",query:t,format:"json"},n)),this.queryScheduledGasPriceAndFeeAtBlock=(t,n={})=>this.request(r({path:"/org/dyson/dyson/scheduled_gas_price_at_block",method:"GET",query:t,format:"json"},n))}}const Rf={creator:"",address:"",extra_lines:"",function_name:"",args:"",kwargs:"",coins:""},ye={encode(e,t=l.Writer.create()){return e.creator!==""&&t.uint32(10).string(e.creator),e.address!==""&&t.uint32(18).string(e.address),e.extra_lines!==""&&t.uint32(26).string(e.extra_lines),e.function_name!==""&&t.uint32(34).string(e.function_name),e.args!==""&&t.uint32(42).string(e.args),e.kwargs!==""&&t.uint32(50).string(e.kwargs),e.coins!==""&&t.uint32(58).string(e.coins),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Rf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creator=n.string();break;case 2:i.address=n.string();break;case 3:i.extra_lines=n.string();break;case 4:i.function_name=n.string();break;case 5:i.args=n.string();break;case 6:i.kwargs=n.string();break;case 7:i.coins=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Rf);return e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",e.address!==void 0&&e.address!==null?t.address=String(e.address):t.address="",e.extra_lines!==void 0&&e.extra_lines!==null?t.extra_lines=String(e.extra_lines):t.extra_lines="",e.function_name!==void 0&&e.function_name!==null?t.function_name=String(e.function_name):t.function_name="",e.args!==void 0&&e.args!==null?t.args=String(e.args):t.args="",e.kwargs!==void 0&&e.kwargs!==null?t.kwargs=String(e.kwargs):t.kwargs="",e.coins!==void 0&&e.coins!==null?t.coins=String(e.coins):t.coins="",t},toJSON(e){const t={};return e.creator!==void 0&&(t.creator=e.creator),e.address!==void 0&&(t.address=e.address),e.extra_lines!==void 0&&(t.extra_lines=e.extra_lines),e.function_name!==void 0&&(t.function_name=e.function_name),e.args!==void 0&&(t.args=e.args),e.kwargs!==void 0&&(t.kwargs=e.kwargs),e.coins!==void 0&&(t.coins=e.coins),t},fromPartial(e){const t=r({},Rf);return e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",e.address!==void 0&&e.address!==null?t.address=e.address:t.address="",e.extra_lines!==void 0&&e.extra_lines!==null?t.extra_lines=e.extra_lines:t.extra_lines="",e.function_name!==void 0&&e.function_name!==null?t.function_name=e.function_name:t.function_name="",e.args!==void 0&&e.args!==null?t.args=e.args:t.args="",e.kwargs!==void 0&&e.kwargs!==null?t.kwargs=e.kwargs:t.kwargs="",e.coins!==void 0&&e.coins!==null?t.coins=e.coins:t.coins="",t}},Ef={response:""},Ps={encode(e,t=l.Writer.create()){return e.response!==""&&t.uint32(10).string(e.response),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ef);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.response=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ef);return e.response!==void 0&&e.response!==null?t.response=String(e.response):t.response="",t},toJSON(e){const t={};return e.response!==void 0&&(t.response=e.response),t},fromPartial(e){const t=r({},Ef);return e.response!==void 0&&e.response!==null?t.response=e.response:t.response="",t}},Tf={creator:"",height:0,gas:0},R_={encode(e,t=l.Writer.create()){return e.creator!==""&&t.uint32(10).string(e.creator),e.height!==0&&t.uint32(16).uint64(e.height),e.gas!==0&&t.uint32(24).uint64(e.gas),e.msg!==void 0&&ye.encode(e.msg,t.uint32(34).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Tf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creator=n.string();break;case 2:i.height=I_(n.uint64());break;case 3:i.gas=I_(n.uint64());break;case 4:i.msg=ye.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Tf);return e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",e.height!==void 0&&e.height!==null?t.height=Number(e.height):t.height=0,e.gas!==void 0&&e.gas!==null?t.gas=Number(e.gas):t.gas=0,e.msg!==void 0&&e.msg!==null?t.msg=ye.fromJSON(e.msg):t.msg=void 0,t},toJSON(e){const t={};return e.creator!==void 0&&(t.creator=e.creator),e.height!==void 0&&(t.height=e.height),e.gas!==void 0&&(t.gas=e.gas),e.msg!==void 0&&(t.msg=e.msg?ye.toJSON(e.msg):void 0),t},fromPartial(e){const t=r({},Tf);return e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",e.height!==void 0&&e.height!==null?t.height=e.height:t.height=0,e.gas!==void 0&&e.gas!==null?t.gas=e.gas:t.gas=0,e.msg!==void 0&&e.msg!==null?t.msg=ye.fromPartial(e.msg):t.msg=void 0,t}},Nf={creator:"",index:""},E_={encode(e,t=l.Writer.create()){return e.creator!==""&&t.uint32(10).string(e.creator),e.index!==""&&t.uint32(18).string(e.index),e.msg!==void 0&&ye.encode(e.msg,t.uint32(26).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Nf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creator=n.string();break;case 2:i.index=n.string();break;case 3:i.msg=ye.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Nf);return e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",e.index!==void 0&&e.index!==null?t.index=String(e.index):t.index="",e.msg!==void 0&&e.msg!==null?t.msg=ye.fromJSON(e.msg):t.msg=void 0,t},toJSON(e){const t={};return e.creator!==void 0&&(t.creator=e.creator),e.index!==void 0&&(t.index=e.index),e.msg!==void 0&&(t.msg=e.msg?ye.toJSON(e.msg):void 0),t},fromPartial(e){const t=r({},Nf);return e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",e.index!==void 0&&e.index!==null?t.index=e.index:t.index="",e.msg!==void 0&&e.msg!==null?t.msg=ye.fromPartial(e.msg):t.msg=void 0,t}},Af={},fD={encode(e,t=l.Writer.create()){return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Af);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){default:n.skipType(o&7);break}}return i},fromJSON(e){return r({},Af)},toJSON(e){return{}},fromPartial(e){return r({},Af)}},Of={creator:"",index:""},T_={encode(e,t=l.Writer.create()){return e.creator!==""&&t.uint32(10).string(e.creator),e.index!==""&&t.uint32(18).string(e.index),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Of);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creator=n.string();break;case 2:i.index=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Of);return e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",e.index!==void 0&&e.index!==null?t.index=String(e.index):t.index="",t},toJSON(e){const t={};return e.creator!==void 0&&(t.creator=e.creator),e.index!==void 0&&(t.index=e.index),t},fromPartial(e){const t=r({},Of);return e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",e.index!==void 0&&e.index!==null?t.index=e.index:t.index="",t}},qf={},mD={encode(e,t=l.Writer.create()){return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},qf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){default:n.skipType(o&7);break}}return i},fromJSON(e){return r({},qf)},toJSON(e){return{}},fromPartial(e){return r({},qf)}},Uf={creator:"",index:"",data:"",force:!1},N_={encode(e,t=l.Writer.create()){return e.creator!==""&&t.uint32(10).string(e.creator),e.index!==""&&t.uint32(18).string(e.index),e.data!==""&&t.uint32(26).string(e.data),e.force===!0&&t.uint32(32).bool(e.force),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Uf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creator=n.string();break;case 2:i.index=n.string();break;case 3:i.data=n.string();break;case 4:i.force=n.bool();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Uf);return e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",e.index!==void 0&&e.index!==null?t.index=String(e.index):t.index="",e.data!==void 0&&e.data!==null?t.data=String(e.data):t.data="",e.force!==void 0&&e.force!==null?t.force=Boolean(e.force):t.force=!1,t},toJSON(e){const t={};return e.creator!==void 0&&(t.creator=e.creator),e.index!==void 0&&(t.index=e.index),e.data!==void 0&&(t.data=e.data),e.force!==void 0&&(t.force=e.force),t},fromPartial(e){const t=r({},Uf);return e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",e.index!==void 0&&e.index!==null?t.index=e.index:t.index="",e.data!==void 0&&e.data!==null?t.data=e.data:t.data="",e.force!==void 0&&e.force!==null?t.force=e.force:t.force=!1,t}},$f={creator:"",index:"",data:"",force:!1},A_={encode(e,t=l.Writer.create()){return e.creator!==""&&t.uint32(10).string(e.creator),e.index!==""&&t.uint32(18).string(e.index),e.data!==""&&t.uint32(26).string(e.data),e.force===!0&&t.uint32(32).bool(e.force),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},$f);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creator=n.string();break;case 2:i.index=n.string();break;case 3:i.data=n.string();break;case 4:i.force=n.bool();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},$f);return e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",e.index!==void 0&&e.index!==null?t.index=String(e.index):t.index="",e.data!==void 0&&e.data!==null?t.data=String(e.data):t.data="",e.force!==void 0&&e.force!==null?t.force=Boolean(e.force):t.force=!1,t},toJSON(e){const t={};return e.creator!==void 0&&(t.creator=e.creator),e.index!==void 0&&(t.index=e.index),e.data!==void 0&&(t.data=e.data),e.force!==void 0&&(t.force=e.force),t},fromPartial(e){const t=r({},$f);return e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",e.index!==void 0&&e.index!==null?t.index=e.index:t.index="",e.data!==void 0&&e.data!==null?t.data=e.data:t.data="",e.force!==void 0&&e.force!==null?t.force=e.force:t.force=!1,t}},If={creator:"",index:""},O_={encode(e,t=l.Writer.create()){return e.creator!==""&&t.uint32(10).string(e.creator),e.index!==""&&t.uint32(18).string(e.index),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},If);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creator=n.string();break;case 2:i.index=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},If);return e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",e.index!==void 0&&e.index!==null?t.index=String(e.index):t.index="",t},toJSON(e){const t={};return e.creator!==void 0&&(t.creator=e.creator),e.index!==void 0&&(t.index=e.index),t},fromPartial(e){const t=r({},If);return e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",e.index!==void 0&&e.index!==null?t.index=e.index:t.index="",t}},xf={creator:"",code:""},q_={encode(e,t=l.Writer.create()){return e.creator!==""&&t.uint32(10).string(e.creator),e.code!==""&&t.uint32(26).string(e.code),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},xf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creator=n.string();break;case 3:i.code=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},xf);return e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",e.code!==void 0&&e.code!==null?t.code=String(e.code):t.code="",t},toJSON(e){const t={};return e.creator!==void 0&&(t.creator=e.creator),e.code!==void 0&&(t.code=e.code),t},fromPartial(e){const t=r({},xf);return e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",e.code!==void 0&&e.code!==null?t.code=e.code:t.code="",t}},Df={creator:"",code:""},U_={encode(e,t=l.Writer.create()){return e.creator!==""&&t.uint32(10).string(e.creator),e.code!==""&&t.uint32(26).string(e.code),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Df);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creator=n.string();break;case 3:i.code=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Df);return e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",e.code!==void 0&&e.code!==null?t.code=String(e.code):t.code="",t},toJSON(e){const t={};return e.creator!==void 0&&(t.creator=e.creator),e.code!==void 0&&(t.code=e.code),t},fromPartial(e){const t=r({},Df);return e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",e.code!==void 0&&e.code!==null?t.code=e.code:t.code="",t}},Qf={creator:""},$_={encode(e,t=l.Writer.create()){return e.creator!==""&&t.uint32(10).string(e.creator),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Qf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creator=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Qf);return e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",t},toJSON(e){const t={};return e.creator!==void 0&&(t.creator=e.creator),t},fromPartial(e){const t=r({},Qf);return e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",t}};var Mf=(()=>{if(typeof Mf!="undefined")return Mf;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function I_(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Mf.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const hD=[["/dyson.MsgDeleteStorage",O_],["/dyson.MsgUpdateStorage",A_],["/dyson.MsgCreateStorage",N_],["/dyson.MsgRun",ye],["/dyson.MsgCreateScheduledRun",R_],["/dyson.MsgUpdateScript",U_],["/dyson.MsgDeleteScheduledRun",T_],["/dyson.MsgCreateScript",q_],["/dyson.MsgUpdateScheduledRun",E_],["/dyson.MsgDeleteScript",$_]],re=new Error("wallet is required"),Bf=new Y.Registry(hD),gD={amount:[],gas:"200000"},yD=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw re;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:Bf}):n=await J.SigningStargateClient.offline(e,{registry:Bf});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:gD,memo:""})=>n.signAndBroadcast(s,i,o,d),msgDeleteStorage:i=>({typeUrl:"/dyson.MsgDeleteStorage",value:O_.fromPartial(i)}),msgUpdateStorage:i=>({typeUrl:"/dyson.MsgUpdateStorage",value:A_.fromPartial(i)}),msgCreateStorage:i=>({typeUrl:"/dyson.MsgCreateStorage",value:N_.fromPartial(i)}),msgRun:i=>({typeUrl:"/dyson.MsgRun",value:ye.fromPartial(i)}),msgCreateScheduledRun:i=>({typeUrl:"/dyson.MsgCreateScheduledRun",value:R_.fromPartial(i)}),msgUpdateScript:i=>({typeUrl:"/dyson.MsgUpdateScript",value:U_.fromPartial(i)}),msgDeleteScheduledRun:i=>({typeUrl:"/dyson.MsgDeleteScheduledRun",value:T_.fromPartial(i)}),msgCreateScript:i=>({typeUrl:"/dyson.MsgCreateScript",value:q_.fromPartial(i)}),msgUpdateScheduledRun:i=>({typeUrl:"/dyson.MsgUpdateScheduledRun",value:E_.fromPartial(i)}),msgDeleteScript:i=>({typeUrl:"/dyson.MsgDeleteScript",value:$_.fromPartial(i)})}},_D=async({addr:e}={addr:"http://localhost:1317"})=>new pD({baseUrl:e}),Jf={blockHeight:"",indexes:""},vD={encode(e,t=l.Writer.create()){e.blockHeight!==""&&t.uint32(10).string(e.blockHeight);for(const n of e.indexes)t.uint32(18).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Jf);for(i.indexes=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.blockHeight=n.string();break;case 2:i.indexes.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Jf);if(t.indexes=[],e.blockHeight!==void 0&&e.blockHeight!==null?t.blockHeight=String(e.blockHeight):t.blockHeight="",e.indexes!==void 0&&e.indexes!==null)for(const n of e.indexes)t.indexes.push(String(n));return t},toJSON(e){const t={};return e.blockHeight!==void 0&&(t.blockHeight=e.blockHeight),e.indexes?t.indexes=e.indexes.map(n=>n):t.indexes=[],t},fromPartial(e){const t=r({},Jf);if(t.indexes=[],e.blockHeight!==void 0&&e.blockHeight!==null?t.blockHeight=e.blockHeight:t.blockHeight="",e.indexes!==void 0&&e.indexes!==null)for(const n of e.indexes)t.indexes.push(n);return t}},Gf={denom:"",amount:""},Cs={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Gf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Gf);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},Gf);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}},Lf={denom:"",amount:""},Rs={encode(e,t=l.Writer.create()){return e.denom!==""&&t.uint32(10).string(e.denom),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Lf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.denom=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Lf);return e.denom!==void 0&&e.denom!==null?t.denom=String(e.denom):t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.denom!==void 0&&(t.denom=e.denom),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},Lf);return e.denom!==void 0&&e.denom!==null?t.denom=e.denom:t.denom="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}},Vf={index:"",creator:"",height:0,gas:0,error:""},bD={encode(e,t=l.Writer.create()){return e.index!==""&&t.uint32(10).string(e.index),e.creator!==""&&t.uint32(18).string(e.creator),e.height!==0&&t.uint32(24).uint64(e.height),e.gas!==0&&t.uint32(32).uint64(e.gas),e.msg!==void 0&&ye.encode(e.msg,t.uint32(42).fork()).ldelim(),e.resp!==void 0&&Ps.encode(e.resp,t.uint32(50).fork()).ldelim(),e.error!==""&&t.uint32(58).string(e.error),e.gasprice!==void 0&&Rs.encode(e.gasprice,t.uint32(66).fork()).ldelim(),e.fee!==void 0&&Cs.encode(e.fee,t.uint32(74).fork()).ldelim(),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Vf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.index=n.string();break;case 2:i.creator=n.string();break;case 3:i.height=x_(n.uint64());break;case 4:i.gas=x_(n.uint64());break;case 5:i.msg=ye.decode(n,n.uint32());break;case 6:i.resp=Ps.decode(n,n.uint32());break;case 7:i.error=n.string();break;case 8:i.gasprice=Rs.decode(n,n.uint32());break;case 9:i.fee=Cs.decode(n,n.uint32());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Vf);return e.index!==void 0&&e.index!==null?t.index=String(e.index):t.index="",e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",e.height!==void 0&&e.height!==null?t.height=Number(e.height):t.height=0,e.gas!==void 0&&e.gas!==null?t.gas=Number(e.gas):t.gas=0,e.msg!==void 0&&e.msg!==null?t.msg=ye.fromJSON(e.msg):t.msg=void 0,e.resp!==void 0&&e.resp!==null?t.resp=Ps.fromJSON(e.resp):t.resp=void 0,e.error!==void 0&&e.error!==null?t.error=String(e.error):t.error="",e.gasprice!==void 0&&e.gasprice!==null?t.gasprice=Rs.fromJSON(e.gasprice):t.gasprice=void 0,e.fee!==void 0&&e.fee!==null?t.fee=Cs.fromJSON(e.fee):t.fee=void 0,t},toJSON(e){const t={};return e.index!==void 0&&(t.index=e.index),e.creator!==void 0&&(t.creator=e.creator),e.height!==void 0&&(t.height=e.height),e.gas!==void 0&&(t.gas=e.gas),e.msg!==void 0&&(t.msg=e.msg?ye.toJSON(e.msg):void 0),e.resp!==void 0&&(t.resp=e.resp?Ps.toJSON(e.resp):void 0),e.error!==void 0&&(t.error=e.error),e.gasprice!==void 0&&(t.gasprice=e.gasprice?Rs.toJSON(e.gasprice):void 0),e.fee!==void 0&&(t.fee=e.fee?Cs.toJSON(e.fee):void 0),t},fromPartial(e){const t=r({},Vf);return e.index!==void 0&&e.index!==null?t.index=e.index:t.index="",e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",e.height!==void 0&&e.height!==null?t.height=e.height:t.height=0,e.gas!==void 0&&e.gas!==null?t.gas=e.gas:t.gas=0,e.msg!==void 0&&e.msg!==null?t.msg=ye.fromPartial(e.msg):t.msg=void 0,e.resp!==void 0&&e.resp!==null?t.resp=Ps.fromPartial(e.resp):t.resp=void 0,e.error!==void 0&&e.error!==null?t.error=e.error:t.error="",e.gasprice!==void 0&&e.gasprice!==null?t.gasprice=Rs.fromPartial(e.gasprice):t.gasprice=void 0,e.fee!==void 0&&e.fee!==null?t.fee=Cs.fromPartial(e.fee):t.fee=void 0,t}};var Wf=(()=>{if(typeof Wf!="undefined")return Wf;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function x_(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Wf.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Ff={creator:"",index:"",code:""},wD={encode(e,t=l.Writer.create()){return e.creator!==""&&t.uint32(10).string(e.creator),e.index!==""&&t.uint32(18).string(e.index),e.code!==""&&t.uint32(26).string(e.code),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Ff);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creator=n.string();break;case 2:i.index=n.string();break;case 3:i.code=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Ff);return e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",e.index!==void 0&&e.index!==null?t.index=String(e.index):t.index="",e.code!==void 0&&e.code!==null?t.code=String(e.code):t.code="",t},toJSON(e){const t={};return e.creator!==void 0&&(t.creator=e.creator),e.index!==void 0&&(t.index=e.index),e.code!==void 0&&(t.code=e.code),t},fromPartial(e){const t=r({},Ff);return e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",e.index!==void 0&&e.index!==null?t.index=e.index:t.index="",e.code!==void 0&&e.code!==null?t.code=e.code:t.code="",t}},Hf={creator:"",index:"",data:""},SD={encode(e,t=l.Writer.create()){return e.creator!==""&&t.uint32(10).string(e.creator),e.index!==""&&t.uint32(18).string(e.index),e.data!==""&&t.uint32(26).string(e.data),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Hf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.creator=n.string();break;case 2:i.index=n.string();break;case 3:i.data=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Hf);return e.creator!==void 0&&e.creator!==null?t.creator=String(e.creator):t.creator="",e.index!==void 0&&e.index!==null?t.index=String(e.index):t.index="",e.data!==void 0&&e.data!==null?t.data=String(e.data):t.data="",t},toJSON(e){const t={};return e.creator!==void 0&&(t.creator=e.creator),e.index!==void 0&&(t.index=e.index),e.data!==void 0&&(t.data=e.data),t},fromPartial(e){const t=r({},Hf);return e.creator!==void 0&&e.creator!==null?t.creator=e.creator:t.creator="",e.index!==void 0&&e.index!==null?t.index=e.index:t.index="",e.data!==void 0&&e.data!==null?t.data=e.data:t.data="",t}};async function ce(e){return await yD(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function Me(e){return await _D({addr:e["common/env/apiCosmos"]})}function Be(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function Co(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const D_=()=>({ScheduledRun:{},ScheduledRunAll:{},Storage:{},StorageAll:{},Script:{},Schema:{},Wsgi:{},QueryScript:{},ScriptAll:{},PrefixStorage:{},ScheduledGasPriceAndFeeAtBlock:{},Cron:{},CronAll:{},_Structure:{Cron:Co(vD.fromPartial({})),ScheduledRun:Co(bD.fromPartial({})),Script:Co(wD.fromPartial({})),Storage:Co(SD.fromPartial({})),MsgUpdateScheduledRunResponse:Co(fD.fromPartial({})),MsgDeleteScheduledRunResponse:Co(mD.fromPartial({}))},_Registry:Bf,_Subscriptions:new Set}),kD=D_();var PD={namespaced:!0,state:kD,mutations:{RESET_STATE(e){Object.assign(e,D_())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getScheduledRun:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ScheduledRun[JSON.stringify(t)])!=null?n:{}},getScheduledRunAll:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ScheduledRunAll[JSON.stringify(t)])!=null?n:{}},getStorage:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Storage[JSON.stringify(t)])!=null?n:{}},getStorageAll:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.StorageAll[JSON.stringify(t)])!=null?n:{}},getScript:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Script[JSON.stringify(t)])!=null?n:{}},getSchema:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Schema[JSON.stringify(t)])!=null?n:{}},getWsgi:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Wsgi[JSON.stringify(t)])!=null?n:{}},getQueryScript:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.QueryScript[JSON.stringify(t)])!=null?n:{}},getScriptAll:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ScriptAll[JSON.stringify(t)])!=null?n:{}},getPrefixStorage:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.PrefixStorage[JSON.stringify(t)])!=null?n:{}},getScheduledGasPriceAndFeeAtBlock:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ScheduledGasPriceAndFeeAtBlock[JSON.stringify(t)])!=null?n:{}},getCron:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Cron[JSON.stringify(t)])!=null?n:{}},getCronAll:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.CronAll[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: dyson initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryScheduledRun({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.queryScheduledRun(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryScheduledRun(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"ScheduledRun",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryScheduledRun",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getScheduledRun({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryScheduledRun API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryScheduledRunAll({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.queryScheduledRunAll(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryScheduledRunAll(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"ScheduledRunAll",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryScheduledRunAll",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getScheduledRunAll({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryScheduledRunAll API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryStorage({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.queryStorage(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryStorage(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"Storage",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryStorage",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getStorage({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryStorage API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryStorageAll({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.queryStorageAll(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryStorageAll(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"StorageAll",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryStorageAll",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getStorageAll({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryStorageAll API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryScript({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.queryScript(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryScript(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"Script",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryScript",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getScript({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryScript API Node Unavailable. Could not perform query: "+a.error.message)}},async QuerySchema({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.querySchema(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.querySchema(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"Schema",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QuerySchema",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getSchema({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QuerySchema API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryWsgi({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.queryWsgi(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryWsgi(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"Wsgi",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryWsgi",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getWsgi({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryWsgi API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryQueryScript({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.queryQueryScript(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryQueryScript(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"QueryScript",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryQueryScript",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getQueryScript({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryQueryScript API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryScriptAll({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.queryScriptAll(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryScriptAll(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"ScriptAll",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryScriptAll",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getScriptAll({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryScriptAll API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryPrefixStorage({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.queryPrefixStorage(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryPrefixStorage(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"PrefixStorage",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryPrefixStorage",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getPrefixStorage({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryPrefixStorage API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryScheduledGasPriceAndFeeAtBlock({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.queryScheduledGasPriceAndFeeAtBlock(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryScheduledGasPriceAndFeeAtBlock(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"ScheduledGasPriceAndFeeAtBlock",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryScheduledGasPriceAndFeeAtBlock",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getScheduledGasPriceAndFeeAtBlock({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryScheduledGasPriceAndFeeAtBlock API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryCron({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.queryCron(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryCron(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"Cron",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryCron",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getCron({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryCron API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryCronAll({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Me(t);let u=(await p.queryCronAll(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryCronAll(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Be(u,g)}return e("QUERY",{query:"CronAll",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryCronAll",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getCronAll({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryCronAll API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgDeleteStorage({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await ce(e),d=await o.msgDeleteStorage(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==re?new Error("TxClient:MsgDeleteStorage:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDeleteStorage:Send Could not broadcast Tx: "+o.message)}},async sendMsgUpdateStorage({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await ce(e),d=await o.msgUpdateStorage(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==re?new Error("TxClient:MsgUpdateStorage:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateStorage:Send Could not broadcast Tx: "+o.message)}},async sendMsgCreateStorage({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await ce(e),d=await o.msgCreateStorage(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==re?new Error("TxClient:MsgCreateStorage:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateStorage:Send Could not broadcast Tx: "+o.message)}},async sendMsgRun({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await ce(e),d=await o.msgRun(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==re?new Error("TxClient:MsgRun:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgRun:Send Could not broadcast Tx: "+o.message)}},async sendMsgCreateScheduledRun({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await ce(e),d=await o.msgCreateScheduledRun(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==re?new Error("TxClient:MsgCreateScheduledRun:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateScheduledRun:Send Could not broadcast Tx: "+o.message)}},async sendMsgUpdateScript({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await ce(e),d=await o.msgUpdateScript(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==re?new Error("TxClient:MsgUpdateScript:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateScript:Send Could not broadcast Tx: "+o.message)}},async sendMsgDeleteScheduledRun({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await ce(e),d=await o.msgDeleteScheduledRun(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==re?new Error("TxClient:MsgDeleteScheduledRun:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDeleteScheduledRun:Send Could not broadcast Tx: "+o.message)}},async sendMsgCreateScript({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await ce(e),d=await o.msgCreateScript(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==re?new Error("TxClient:MsgCreateScript:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateScript:Send Could not broadcast Tx: "+o.message)}},async sendMsgUpdateScheduledRun({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await ce(e),d=await o.msgUpdateScheduledRun(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==re?new Error("TxClient:MsgUpdateScheduledRun:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateScheduledRun:Send Could not broadcast Tx: "+o.message)}},async sendMsgDeleteScript({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await ce(e),d=await o.msgDeleteScript(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==re?new Error("TxClient:MsgDeleteScript:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDeleteScript:Send Could not broadcast Tx: "+o.message)}},async MsgDeleteStorage({rootGetters:e},{value:t}){try{return await(await ce(e)).msgDeleteStorage(t)}catch(n){throw n==re?new Error("TxClient:MsgDeleteStorage:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDeleteStorage:Create Could not create message: "+n.message)}},async MsgUpdateStorage({rootGetters:e},{value:t}){try{return await(await ce(e)).msgUpdateStorage(t)}catch(n){throw n==re?new Error("TxClient:MsgUpdateStorage:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateStorage:Create Could not create message: "+n.message)}},async MsgCreateStorage({rootGetters:e},{value:t}){try{return await(await ce(e)).msgCreateStorage(t)}catch(n){throw n==re?new Error("TxClient:MsgCreateStorage:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateStorage:Create Could not create message: "+n.message)}},async MsgRun({rootGetters:e},{value:t}){try{return await(await ce(e)).msgRun(t)}catch(n){throw n==re?new Error("TxClient:MsgRun:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgRun:Create Could not create message: "+n.message)}},async MsgCreateScheduledRun({rootGetters:e},{value:t}){try{return await(await ce(e)).msgCreateScheduledRun(t)}catch(n){throw n==re?new Error("TxClient:MsgCreateScheduledRun:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateScheduledRun:Create Could not create message: "+n.message)}},async MsgUpdateScript({rootGetters:e},{value:t}){try{return await(await ce(e)).msgUpdateScript(t)}catch(n){throw n==re?new Error("TxClient:MsgUpdateScript:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateScript:Create Could not create message: "+n.message)}},async MsgDeleteScheduledRun({rootGetters:e},{value:t}){try{return await(await ce(e)).msgDeleteScheduledRun(t)}catch(n){throw n==re?new Error("TxClient:MsgDeleteScheduledRun:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDeleteScheduledRun:Create Could not create message: "+n.message)}},async MsgCreateScript({rootGetters:e},{value:t}){try{return await(await ce(e)).msgCreateScript(t)}catch(n){throw n==re?new Error("TxClient:MsgCreateScript:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgCreateScript:Create Could not create message: "+n.message)}},async MsgUpdateScheduledRun({rootGetters:e},{value:t}){try{return await(await ce(e)).msgUpdateScheduledRun(t)}catch(n){throw n==re?new Error("TxClient:MsgUpdateScheduledRun:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateScheduledRun:Create Could not create message: "+n.message)}},async MsgDeleteScript({rootGetters:e},{value:t}){try{return await(await ce(e)).msgDeleteScript(t)}catch(n){throw n==re?new Error("TxClient:MsgDeleteScript:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDeleteScript:Create Could not create message: "+n.message)}}}},Yn;(function(e){e.Json="application/json",e.FormData="multipart/form-data",e.UrlEncoded="application/x-www-form-urlencoded"})(Yn||(Yn={}));class CD{constructor(t={}){this.baseUrl="",this.securityData=null,this.securityWorker=null,this.abortControllers=new Map,this.baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"},this.setSecurityData=n=>{this.securityData=n},this.contentFormatters={[Yn.Json]:n=>n!==null&&(typeof n=="object"||typeof n=="string")?JSON.stringify(n):n,[Yn.FormData]:n=>Object.keys(n||{}).reduce((s,i)=>(s.append(i,n[i]),s),new FormData),[Yn.UrlEncoded]:n=>this.toQueryString(n)},this.createAbortSignal=n=>{if(this.abortControllers.has(n)){const i=this.abortControllers.get(n);return i?i.signal:void 0}const s=new AbortController;return this.abortControllers.set(n,s),s.signal},this.abortRequest=n=>{const s=this.abortControllers.get(n);s&&(s.abort(),this.abortControllers.delete(n))},this.request=g=>{var b=g,{body:n,secure:s,path:i,type:o,query:d,format:c="json",baseUrl:a,cancelToken:p}=b,u=K(b,["body","secure","path","type","query","format","baseUrl","cancelToken"]);const N=s&&this.securityWorker&&this.securityWorker(this.securityData)||{},C=this.mergeRequestParams(u,N),P=d&&this.toQueryString(d),T=this.contentFormatters[o||Yn.Json];return fetch(`${a||this.baseUrl||""}${i}${P?`?${P}`:""}`,k(r({},C),{headers:r(r({},o&&o!==Yn.FormData?{"Content-Type":o}:{}),C.headers||{}),signal:p?this.createAbortSignal(p):void 0,body:typeof n=="undefined"||n===null?null:T(n)})).then(async v=>{const h=v;h.data=null,h.error=null;const R=await v[c]().then(w=>(h.ok?h.data=w:h.error=w,h)).catch(w=>(h.error=w,h));if(p&&this.abortControllers.delete(p),!v.ok)throw R;return R})},Object.assign(this,t)}addQueryParam(t,n){const s=t[n];return encodeURIComponent(n)+"="+encodeURIComponent(Array.isArray(s)?s.join(","):typeof s=="number"?s:`${s}`)}toQueryString(t){const n=t||{};return Object.keys(n).filter(i=>typeof n[i]!="undefined").map(i=>typeof n[i]=="object"&&!Array.isArray(n[i])?this.toQueryString(n[i]):this.addQueryParam(n,i)).join("&")}addQueryParams(t){const n=this.toQueryString(t);return n?`?${n}`:""}mergeRequestParams(t,n){return k(r(r(r({},this.baseApiParams),t),n||{}),{headers:r(r(r({},this.baseApiParams.headers||{}),t.headers||{}),n&&n.headers||{})})}}class RD extends CD{constructor(){super(...arguments);this.queryExpirationsAll=(t,n={})=>this.request(r({path:"/org/dyson/names/expirations",method:"GET",query:t,format:"json"},n)),this.queryExpirations=(t,n={})=>this.request(r({path:`/org/dyson/names/expirations/${t}`,method:"GET",format:"json"},n)),this.queryGenerateCommit=(t,n={})=>this.request(r({path:"/org/dyson/names/generate_commit",method:"GET",query:t,format:"json"},n)),this.queryName=(t,n={})=>this.request(r({path:"/org/dyson/names/name",method:"GET",query:t,format:"json"},n)),this.queryNameAll=(t,n={})=>this.request(r({path:"/org/dyson/names/nameall",method:"GET",query:t,format:"json"},n)),this.queryParams=(t={})=>this.request(r({path:"/org/dyson/names/params",method:"GET",format:"json"},t)),this.queryResolve=(t,n={})=>this.request(r({path:"/org/dyson/names/resolve",method:"GET",query:t,format:"json"},n))}}const zf={name:"",destination:"",price:"",authorized:"",owner:"",expiration_height:0,registration_height:0},ED={encode(e,t=l.Writer.create()){return e.name!==""&&t.uint32(10).string(e.name),e.destination!==""&&t.uint32(18).string(e.destination),e.price!==""&&t.uint32(26).string(e.price),e.authorized!==""&&t.uint32(42).string(e.authorized),e.owner!==""&&t.uint32(66).string(e.owner),e.expiration_height!==0&&t.uint32(88).uint64(e.expiration_height),e.registration_height!==0&&t.uint32(96).uint64(e.registration_height),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},zf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.name=n.string();break;case 2:i.destination=n.string();break;case 3:i.price=n.string();break;case 5:i.authorized=n.string();break;case 8:i.owner=n.string();break;case 11:i.expiration_height=Q_(n.uint64());break;case 12:i.registration_height=Q_(n.uint64());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},zf);return e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.destination!==void 0&&e.destination!==null?t.destination=String(e.destination):t.destination="",e.price!==void 0&&e.price!==null?t.price=String(e.price):t.price="",e.authorized!==void 0&&e.authorized!==null?t.authorized=String(e.authorized):t.authorized="",e.owner!==void 0&&e.owner!==null?t.owner=String(e.owner):t.owner="",e.expiration_height!==void 0&&e.expiration_height!==null?t.expiration_height=Number(e.expiration_height):t.expiration_height=0,e.registration_height!==void 0&&e.registration_height!==null?t.registration_height=Number(e.registration_height):t.registration_height=0,t},toJSON(e){const t={};return e.name!==void 0&&(t.name=e.name),e.destination!==void 0&&(t.destination=e.destination),e.price!==void 0&&(t.price=e.price),e.authorized!==void 0&&(t.authorized=e.authorized),e.owner!==void 0&&(t.owner=e.owner),e.expiration_height!==void 0&&(t.expiration_height=e.expiration_height),e.registration_height!==void 0&&(t.registration_height=e.registration_height),t},fromPartial(e){const t=r({},zf);return e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.destination!==void 0&&e.destination!==null?t.destination=e.destination:t.destination="",e.price!==void 0&&e.price!==null?t.price=e.price:t.price="",e.authorized!==void 0&&e.authorized!==null?t.authorized=e.authorized:t.authorized="",e.owner!==void 0&&e.owner!==null?t.owner=e.owner:t.owner="",e.expiration_height!==void 0&&e.expiration_height!==null?t.expiration_height=e.expiration_height:t.expiration_height=0,e.registration_height!==void 0&&e.registration_height!==null?t.registration_height=e.registration_height:t.registration_height=0,t}};var Yf=(()=>{if(typeof Yf!="undefined")return Yf;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();function Q_(e){if(e.gt(Number.MAX_SAFE_INTEGER))throw new Yf.Error("Value is larger than Number.MAX_SAFE_INTEGER");return e.toNumber()}l.util.Long!==S&&(l.util.Long=S,l.configure());const Xf={commit:"",owner:"",price:""},M_={encode(e,t=l.Writer.create()){return e.commit!==""&&t.uint32(18).string(e.commit),e.owner!==""&&t.uint32(10).string(e.owner),e.price!==""&&t.uint32(34).string(e.price),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Xf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 2:i.commit=n.string();break;case 1:i.owner=n.string();break;case 4:i.price=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Xf);return e.commit!==void 0&&e.commit!==null?t.commit=String(e.commit):t.commit="",e.owner!==void 0&&e.owner!==null?t.owner=String(e.owner):t.owner="",e.price!==void 0&&e.price!==null?t.price=String(e.price):t.price="",t},toJSON(e){const t={};return e.commit!==void 0&&(t.commit=e.commit),e.owner!==void 0&&(t.owner=e.owner),e.price!==void 0&&(t.price=e.price),t},fromPartial(e){const t=r({},Xf);return e.commit!==void 0&&e.commit!==null?t.commit=e.commit:t.commit="",e.owner!==void 0&&e.owner!==null?t.owner=e.owner:t.owner="",e.price!==void 0&&e.price!==null?t.price=e.price:t.price="",t}},Kf={name:"",owner:"",destination:"",authorized:""},B_={encode(e,t=l.Writer.create()){return e.name!==""&&t.uint32(18).string(e.name),e.owner!==""&&t.uint32(10).string(e.owner),e.destination!==""&&t.uint32(26).string(e.destination),e.authorized!==""&&t.uint32(50).string(e.authorized),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Kf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 2:i.name=n.string();break;case 1:i.owner=n.string();break;case 3:i.destination=n.string();break;case 6:i.authorized=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Kf);return e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.owner!==void 0&&e.owner!==null?t.owner=String(e.owner):t.owner="",e.destination!==void 0&&e.destination!==null?t.destination=String(e.destination):t.destination="",e.authorized!==void 0&&e.authorized!==null?t.authorized=String(e.authorized):t.authorized="",t},toJSON(e){const t={};return e.name!==void 0&&(t.name=e.name),e.owner!==void 0&&(t.owner=e.owner),e.destination!==void 0&&(t.destination=e.destination),e.authorized!==void 0&&(t.authorized=e.authorized),t},fromPartial(e){const t=r({},Kf);return e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.owner!==void 0&&e.owner!==null?t.owner=e.owner:t.owner="",e.destination!==void 0&&e.destination!==null?t.destination=e.destination:t.destination="",e.authorized!==void 0&&e.authorized!==null?t.authorized=e.authorized:t.authorized="",t}},Zf={name:"",owner:""},J_={encode(e,t=l.Writer.create()){return e.name!==""&&t.uint32(18).string(e.name),e.owner!==""&&t.uint32(10).string(e.owner),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},Zf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 2:i.name=n.string();break;case 1:i.owner=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},Zf);return e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.owner!==void 0&&e.owner!==null?t.owner=String(e.owner):t.owner="",t},toJSON(e){const t={};return e.name!==void 0&&(t.name=e.name),e.owner!==void 0&&(t.owner=e.owner),t},fromPartial(e){const t=r({},Zf);return e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.owner!==void 0&&e.owner!==null?t.owner=e.owner:t.owner="",t}},jf={name:"",owner:"",salt:""},G_={encode(e,t=l.Writer.create()){return e.name!==""&&t.uint32(18).string(e.name),e.owner!==""&&t.uint32(10).string(e.owner),e.salt!==""&&t.uint32(26).string(e.salt),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},jf);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 2:i.name=n.string();break;case 1:i.owner=n.string();break;case 3:i.salt=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},jf);return e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.owner!==void 0&&e.owner!==null?t.owner=String(e.owner):t.owner="",e.salt!==void 0&&e.salt!==null?t.salt=String(e.salt):t.salt="",t},toJSON(e){const t={};return e.name!==void 0&&(t.name=e.name),e.owner!==void 0&&(t.owner=e.owner),e.salt!==void 0&&(t.salt=e.salt),t},fromPartial(e){const t=r({},jf);return e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.owner!==void 0&&e.owner!==null?t.owner=e.owner:t.owner="",e.salt!==void 0&&e.salt!==null?t.salt=e.salt:t.salt="",t}},em={name:"",owner:"",price:""},L_={encode(e,t=l.Writer.create()){return e.name!==""&&t.uint32(18).string(e.name),e.owner!==""&&t.uint32(10).string(e.owner),e.price!==""&&t.uint32(26).string(e.price),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},em);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 2:i.name=n.string();break;case 1:i.owner=n.string();break;case 3:i.price=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},em);return e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.owner!==void 0&&e.owner!==null?t.owner=String(e.owner):t.owner="",e.price!==void 0&&e.price!==null?t.price=String(e.price):t.price="",t},toJSON(e){const t={};return e.name!==void 0&&(t.name=e.name),e.owner!==void 0&&(t.owner=e.owner),e.price!==void 0&&(t.price=e.price),t},fromPartial(e){const t=r({},em);return e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.owner!==void 0&&e.owner!==null?t.owner=e.owner:t.owner="",e.price!==void 0&&e.price!==null?t.price=e.price:t.price="",t}},tm={name:"",owner:"",newOwner:""},V_={encode(e,t=l.Writer.create()){return e.name!==""&&t.uint32(18).string(e.name),e.owner!==""&&t.uint32(10).string(e.owner),e.newOwner!==""&&t.uint32(26).string(e.newOwner),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},tm);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 2:i.name=n.string();break;case 1:i.owner=n.string();break;case 3:i.newOwner=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},tm);return e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.owner!==void 0&&e.owner!==null?t.owner=String(e.owner):t.owner="",e.newOwner!==void 0&&e.newOwner!==null?t.newOwner=String(e.newOwner):t.newOwner="",t},toJSON(e){const t={};return e.name!==void 0&&(t.name=e.name),e.owner!==void 0&&(t.owner=e.owner),e.newOwner!==void 0&&(t.newOwner=e.newOwner),t},fromPartial(e){const t=r({},tm);return e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.owner!==void 0&&e.owner!==null?t.owner=e.owner:t.owner="",e.newOwner!==void 0&&e.newOwner!==null?t.newOwner=e.newOwner:t.newOwner="",t}},nm={name:"",newOwner:""},W_={encode(e,t=l.Writer.create()){return e.name!==""&&t.uint32(18).string(e.name),e.newOwner!==""&&t.uint32(10).string(e.newOwner),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},nm);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 2:i.name=n.string();break;case 1:i.newOwner=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},nm);return e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",e.newOwner!==void 0&&e.newOwner!==null?t.newOwner=String(e.newOwner):t.newOwner="",t},toJSON(e){const t={};return e.name!==void 0&&(t.name=e.name),e.newOwner!==void 0&&(t.newOwner=e.newOwner),t},fromPartial(e){const t=r({},nm);return e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",e.newOwner!==void 0&&e.newOwner!==null?t.newOwner=e.newOwner:t.newOwner="",t}},im={buyer:"",name:""},F_={encode(e,t=l.Writer.create()){return e.buyer!==""&&t.uint32(10).string(e.buyer),e.name!==""&&t.uint32(18).string(e.name),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},im);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.buyer=n.string();break;case 2:i.name=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},im);return e.buyer!==void 0&&e.buyer!==null?t.buyer=String(e.buyer):t.buyer="",e.name!==void 0&&e.name!==null?t.name=String(e.name):t.name="",t},toJSON(e){const t={};return e.buyer!==void 0&&(t.buyer=e.buyer),e.name!==void 0&&(t.name=e.name),t},fromPartial(e){const t=r({},im);return e.buyer!==void 0&&e.buyer!==null?t.buyer=e.buyer:t.buyer="",e.name!==void 0&&e.name!==null?t.name=e.name:t.name="",t}},om={owner:"",amount:""},H_={encode(e,t=l.Writer.create()){return e.owner!==""&&t.uint32(10).string(e.owner),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},om);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.owner=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},om);return e.owner!==void 0&&e.owner!==null?t.owner=String(e.owner):t.owner="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.owner!==void 0&&(t.owner=e.owner),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},om);return e.owner!==void 0&&e.owner!==null?t.owner=e.owner:t.owner="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}},sm={owner:"",amount:""},z_={encode(e,t=l.Writer.create()){return e.owner!==""&&t.uint32(10).string(e.owner),e.amount!==""&&t.uint32(18).string(e.amount),t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},sm);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.owner=n.string();break;case 2:i.amount=n.string();break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},sm);return e.owner!==void 0&&e.owner!==null?t.owner=String(e.owner):t.owner="",e.amount!==void 0&&e.amount!==null?t.amount=String(e.amount):t.amount="",t},toJSON(e){const t={};return e.owner!==void 0&&(t.owner=e.owner),e.amount!==void 0&&(t.amount=e.amount),t},fromPartial(e){const t=r({},sm);return e.owner!==void 0&&e.owner!==null?t.owner=e.owner:t.owner="",e.amount!==void 0&&e.amount!==null?t.amount=e.amount:t.amount="",t}};var Y_=(()=>{if(typeof Y_!="undefined")return Y_;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw"Unable to locate global object"})();l.util.Long!==S&&(l.util.Long=S,l.configure());const TD=[["/names.MsgUpdateName",B_],["/names.MsgOfferTo",V_],["/names.MsgMintCoins",H_],["/names.MsgDeleteName",J_],["/names.MsgRegister",M_],["/names.MsgAccept",W_],["/names.MsgBurnCoins",z_],["/names.MsgBuy",F_],["/names.MsgSetPriceAndExtend",L_],["/names.MsgReveal",G_]],ae=new Error("wallet is required"),rm=new Y.Registry(TD),ND={amount:[],gas:"200000"},AD=async(e,{addr:t}={addr:"http://localhost:26657"})=>{if(!e)throw ae;let n;t?n=await J.SigningStargateClient.connectWithSigner(t,e,{registry:rm}):n=await J.SigningStargateClient.offline(e,{registry:rm});const{address:s}=(await e.getAccounts())[0];return{signAndBroadcast:(i,{fee:o,memo:d}={fee:ND,memo:""})=>n.signAndBroadcast(s,i,o,d),msgUpdateName:i=>({typeUrl:"/names.MsgUpdateName",value:B_.fromPartial(i)}),msgOfferTo:i=>({typeUrl:"/names.MsgOfferTo",value:V_.fromPartial(i)}),msgMintCoins:i=>({typeUrl:"/names.MsgMintCoins",value:H_.fromPartial(i)}),msgDeleteName:i=>({typeUrl:"/names.MsgDeleteName",value:J_.fromPartial(i)}),msgRegister:i=>({typeUrl:"/names.MsgRegister",value:M_.fromPartial(i)}),msgAccept:i=>({typeUrl:"/names.MsgAccept",value:W_.fromPartial(i)}),msgBurnCoins:i=>({typeUrl:"/names.MsgBurnCoins",value:z_.fromPartial(i)}),msgBuy:i=>({typeUrl:"/names.MsgBuy",value:F_.fromPartial(i)}),msgSetPriceAndExtend:i=>({typeUrl:"/names.MsgSetPriceAndExtend",value:L_.fromPartial(i)}),msgReveal:i=>({typeUrl:"/names.MsgReveal",value:G_.fromPartial(i)})}},OD=async({addr:e}={addr:"http://localhost:1317"})=>new RD({baseUrl:e}),am={blockHeight:"",names:""},qD={encode(e,t=l.Writer.create()){e.blockHeight!==""&&t.uint32(10).string(e.blockHeight);for(const n of e.names)t.uint32(18).string(n);return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},am);for(i.names=[];n.pos<s;){const o=n.uint32();switch(o>>>3){case 1:i.blockHeight=n.string();break;case 2:i.names.push(n.string());break;default:n.skipType(o&7);break}}return i},fromJSON(e){const t=r({},am);if(t.names=[],e.blockHeight!==void 0&&e.blockHeight!==null?t.blockHeight=String(e.blockHeight):t.blockHeight="",e.names!==void 0&&e.names!==null)for(const n of e.names)t.names.push(String(n));return t},toJSON(e){const t={};return e.blockHeight!==void 0&&(t.blockHeight=e.blockHeight),e.names?t.names=e.names.map(n=>n):t.names=[],t},fromPartial(e){const t=r({},am);if(t.names=[],e.blockHeight!==void 0&&e.blockHeight!==null?t.blockHeight=e.blockHeight:t.blockHeight="",e.names!==void 0&&e.names!==null)for(const n of e.names)t.names.push(n);return t}},dm={},UD={encode(e,t=l.Writer.create()){return t},decode(e,t){const n=e instanceof Uint8Array?new l.Reader(e):e;let s=t===void 0?n.len:n.pos+t;const i=r({},dm);for(;n.pos<s;){const o=n.uint32();switch(o>>>3){default:n.skipType(o&7);break}}return i},fromJSON(e){return r({},dm)},toJSON(e){return{}},fromPartial(e){return r({},dm)}};async function pe(e){return await AD(e["common/wallet/signer"],{addr:e["common/env/apiTendermint"]})}async function Xn(e){return await OD({addr:e["common/env/apiCosmos"]})}function Es(e,t){for(let n of Object.keys(t))Array.isArray(t[n])?e[n]=[...e[n],...t[n]]:e[n]=t[n];return e}function lm(e){let t={fields:[]};for(const[n,s]of Object.entries(e)){let i={};i.name=n,i.type=typeof s,t.fields.push(i)}return t}const X_=()=>({Params:{},Name:{},NameAll:{},Resolve:{},GenerateCommit:{},Expirations:{},ExpirationsAll:{},_Structure:{Expirations:lm(qD.fromPartial({})),Name:lm(ED.fromPartial({})),Params:lm(UD.fromPartial({}))},_Registry:rm,_Subscriptions:new Set}),$D=X_();var ID={namespaced:!0,state:$D,mutations:{RESET_STATE(e){Object.assign(e,X_())},QUERY(e,{query:t,key:n,value:s}){e[t][JSON.stringify(n)]=s},SUBSCRIBE(e,t){e._Subscriptions.add(JSON.stringify(t))},UNSUBSCRIBE(e,t){e._Subscriptions.delete(JSON.stringify(t))}},getters:{getParams:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Params[JSON.stringify(t)])!=null?n:{}},getName:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Name[JSON.stringify(t)])!=null?n:{}},getNameAll:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.NameAll[JSON.stringify(t)])!=null?n:{}},getResolve:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Resolve[JSON.stringify(t)])!=null?n:{}},getGenerateCommit:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.GenerateCommit[JSON.stringify(t)])!=null?n:{}},getExpirations:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.Expirations[JSON.stringify(t)])!=null?n:{}},getExpirationsAll:e=>(t={params:{}})=>{var n;return t.query||(t.query=null),(n=e.ExpirationsAll[JSON.stringify(t)])!=null?n:{}},getTypeStructure:e=>t=>e._Structure[t].fields,getRegistry:e=>e._Registry},actions:{init({dispatch:e,rootGetters:t}){console.log("Vuex module: names initialized!"),t["common/env/client"]&&t["common/env/client"].on("newblock",()=>{e("StoreUpdate")})},resetState({commit:e}){e("RESET_STATE")},unsubscribe({commit:e},t){e("UNSUBSCRIBE",t)},async StoreUpdate({state:e,dispatch:t}){e._Subscriptions.forEach(async n=>{try{const s=JSON.parse(n);await t(s.action,s.payload)}catch(s){throw new Error("Subscriptions: "+s.message)}})},async QueryParams({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Xn(t)).queryParams()).data;return e("QUERY",{query:"Params",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryParams",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getParams({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryParams API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryName({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Xn(t);let u=(await p.queryName(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryName(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Es(u,g)}return e("QUERY",{query:"Name",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryName",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getName({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryName API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryNameAll({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Xn(t);let u=(await p.queryNameAll(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryNameAll(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Es(u,g)}return e("QUERY",{query:"NameAll",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryNameAll",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getNameAll({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryNameAll API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryResolve({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Xn(t);let u=(await p.queryResolve(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryResolve(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Es(u,g)}return e("QUERY",{query:"Resolve",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryResolve",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getResolve({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryResolve API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryGenerateCommit({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Xn(t);let u=(await p.queryGenerateCommit(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryGenerateCommit(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Es(u,g)}return e("QUERY",{query:"GenerateCommit",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryGenerateCommit",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getGenerateCommit({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryGenerateCommit API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryExpirations({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{};let u=(await(await Xn(t)).queryExpirations(a.blockHeight)).data;return e("QUERY",{query:"Expirations",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryExpirations",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getExpirations({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryExpirations API Node Unavailable. Could not perform query: "+a.error.message)}},async QueryExpirationsAll({commit:e,rootGetters:t,getters:n},{options:{subscribe:s,all:i}={subscribe:!1,all:!1},params:o,query:d=null}){var c;try{const a=o!=null?o:{},p=await Xn(t);let u=(await p.queryExpirationsAll(d)).data;for(;i&&u.pagination&&u.pagination.next_key!=null;){let g=(await p.queryExpirationsAll(k(r({},d),{"pagination.key":u.pagination.next_key}))).data;u=Es(u,g)}return e("QUERY",{query:"ExpirationsAll",key:{params:r({},a),query:d},value:u}),s&&e("SUBSCRIBE",{action:"QueryExpirationsAll",payload:{options:{all:i},params:r({},a),query:d}}),(c=n.getExpirationsAll({params:r({},a),query:d}))!=null?c:{}}catch(a){throw new Error("QueryClient:QueryExpirationsAll API Node Unavailable. Could not perform query: "+a.error.message)}},async sendMsgUpdateName({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await pe(e),d=await o.msgUpdateName(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==ae?new Error("TxClient:MsgUpdateName:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateName:Send Could not broadcast Tx: "+o.message)}},async sendMsgOfferTo({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await pe(e),d=await o.msgOfferTo(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==ae?new Error("TxClient:MsgOfferTo:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgOfferTo:Send Could not broadcast Tx: "+o.message)}},async sendMsgMintCoins({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await pe(e),d=await o.msgMintCoins(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==ae?new Error("TxClient:MsgMintCoins:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgMintCoins:Send Could not broadcast Tx: "+o.message)}},async sendMsgDeleteName({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await pe(e),d=await o.msgDeleteName(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==ae?new Error("TxClient:MsgDeleteName:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDeleteName:Send Could not broadcast Tx: "+o.message)}},async sendMsgRegister({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await pe(e),d=await o.msgRegister(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==ae?new Error("TxClient:MsgRegister:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgRegister:Send Could not broadcast Tx: "+o.message)}},async sendMsgAccept({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await pe(e),d=await o.msgAccept(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==ae?new Error("TxClient:MsgAccept:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgAccept:Send Could not broadcast Tx: "+o.message)}},async sendMsgBurnCoins({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await pe(e),d=await o.msgBurnCoins(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==ae?new Error("TxClient:MsgBurnCoins:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgBurnCoins:Send Could not broadcast Tx: "+o.message)}},async sendMsgBuy({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await pe(e),d=await o.msgBuy(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==ae?new Error("TxClient:MsgBuy:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgBuy:Send Could not broadcast Tx: "+o.message)}},async sendMsgSetPriceAndExtend({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await pe(e),d=await o.msgSetPriceAndExtend(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==ae?new Error("TxClient:MsgSetPriceAndExtend:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSetPriceAndExtend:Send Could not broadcast Tx: "+o.message)}},async sendMsgReveal({rootGetters:e},{value:t,fee:n=[],memo:s="",gas:i="200000"}){try{const o=await pe(e),d=await o.msgReveal(t);return await o.signAndBroadcast([d],{fee:{amount:n,gas:i},memo:s})}catch(o){throw o==ae?new Error("TxClient:MsgReveal:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgReveal:Send Could not broadcast Tx: "+o.message)}},async MsgUpdateName({rootGetters:e},{value:t}){try{return await(await pe(e)).msgUpdateName(t)}catch(n){throw n==ae?new Error("TxClient:MsgUpdateName:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgUpdateName:Create Could not create message: "+n.message)}},async MsgOfferTo({rootGetters:e},{value:t}){try{return await(await pe(e)).msgOfferTo(t)}catch(n){throw n==ae?new Error("TxClient:MsgOfferTo:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgOfferTo:Create Could not create message: "+n.message)}},async MsgMintCoins({rootGetters:e},{value:t}){try{return await(await pe(e)).msgMintCoins(t)}catch(n){throw n==ae?new Error("TxClient:MsgMintCoins:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgMintCoins:Create Could not create message: "+n.message)}},async MsgDeleteName({rootGetters:e},{value:t}){try{return await(await pe(e)).msgDeleteName(t)}catch(n){throw n==ae?new Error("TxClient:MsgDeleteName:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgDeleteName:Create Could not create message: "+n.message)}},async MsgRegister({rootGetters:e},{value:t}){try{return await(await pe(e)).msgRegister(t)}catch(n){throw n==ae?new Error("TxClient:MsgRegister:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgRegister:Create Could not create message: "+n.message)}},async MsgAccept({rootGetters:e},{value:t}){try{return await(await pe(e)).msgAccept(t)}catch(n){throw n==ae?new Error("TxClient:MsgAccept:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgAccept:Create Could not create message: "+n.message)}},async MsgBurnCoins({rootGetters:e},{value:t}){try{return await(await pe(e)).msgBurnCoins(t)}catch(n){throw n==ae?new Error("TxClient:MsgBurnCoins:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgBurnCoins:Create Could not create message: "+n.message)}},async MsgBuy({rootGetters:e},{value:t}){try{return await(await pe(e)).msgBuy(t)}catch(n){throw n==ae?new Error("TxClient:MsgBuy:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgBuy:Create Could not create message: "+n.message)}},async MsgSetPriceAndExtend({rootGetters:e},{value:t}){try{return await(await pe(e)).msgSetPriceAndExtend(t)}catch(n){throw n==ae?new Error("TxClient:MsgSetPriceAndExtend:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgSetPriceAndExtend:Create Could not create message: "+n.message)}},async MsgReveal({rootGetters:e},{value:t}){try{return await(await pe(e)).msgReveal(t)}catch(n){throw n==ae?new Error("TxClient:MsgReveal:Init Could not initialize signing client. Wallet is required."):new Error("TxClient:MsgReveal:Create Could not create message: "+n.message)}}}},xD={CosmosCosmosSdkCosmosAuthV1Beta1:X(tq,"cosmos.auth.v1beta1"),CosmosCosmosSdkCosmosAuthzV1Beta1:X(vq,"cosmos.authz.v1beta1"),CosmosCosmosSdkCosmosBankV1Beta1:X(Uq,"cosmos.bank.v1beta1"),CosmosCosmosSdkCosmosBaseTendermintV1Beta1:X(mU,"cosmos.base.tendermint.v1beta1"),CosmosCosmosSdkCosmosCrisisV1Beta1:X(vU,"cosmos.crisis.v1beta1"),CosmosCosmosSdkCosmosDistributionV1Beta1:X(GU,"cosmos.distribution.v1beta1"),CosmosCosmosSdkCosmosEvidenceV1Beta1:X(r$,"cosmos.evidence.v1beta1"),CosmosCosmosSdkCosmosFeegrantV1Beta1:X(k$,"cosmos.feegrant.v1beta1"),CosmosCosmosSdkCosmosGovV1:X(W$,"cosmos.gov.v1"),CosmosCosmosSdkCosmosGovV1Beta1:X(g4,"cosmos.gov.v1beta1"),CosmosCosmosSdkCosmosGroupV1:X(z4,"cosmos.group.v1"),CosmosCosmosSdkCosmosMintV1Beta1:X(oI,"cosmos.mint.v1beta1"),CosmosCosmosSdkCosmosNftV1Beta1:X(bI,"cosmos.nft.v1beta1"),CosmosCosmosSdkCosmosParamsV1Beta1:X(AI,"cosmos.params.v1beta1"),CosmosCosmosSdkCosmosSlashingV1Beta1:X(YI,"cosmos.slashing.v1beta1"),CosmosCosmosSdkCosmosStakingV1Beta1:X(Ox,"cosmos.staking.v1beta1"),CosmosCosmosSdkCosmosTxV1Beta1:X(Zx,"cosmos.tx.v1beta1"),CosmosCosmosSdkCosmosUpgradeV1Beta1:X(y6,"cosmos.upgrade.v1beta1"),CosmosCosmosSdkCosmosVestingV1Beta1:X(A6,"cosmos.vesting.v1beta1"),IbcGoV5IbcApplicationsInterchainAccountsControllerV1:X(M6,"ibc.applications.interchain_accounts.controller.v1"),IbcGoV5IbcApplicationsInterchainAccountsHostV1:X(Y6,"ibc.applications.interchain_accounts.host.v1"),IbcGoV5IbcApplicationsTransferV1:X(a8,"ibc.applications.transfer.v1"),IbcGoV5IbcCoreChannelV1:X(P8,"ibc.core.channel.v1"),IbcGoV5IbcCoreClientV1:X(H8,"ibc.core.client.v1"),IbcGoV5IbcCoreConnectionV1:X(uD,"ibc.core.connection.v1"),OrgDysonDyson:X(PD,"dyson"),OrgDysonNames:X(ID,"names")};function X(e,t){return function(s){if(s.hasModule([t]))throw new Error("Duplicate module name detected: "+t);s.registerModule([t],e),s.subscribe(i=>{i.type=="common/env/INITIALIZE_WS_COMPLETE"&&s.dispatch(t+"/init",null,{root:!0})})}}function DD(e){for(const t of Object.values(xD))t(e);xO(e),MO(e),JO(e)}const um=yv({state(){return{}},mutations:{},actions:{}});DD(um);const cm=_v(WE);vv({app:cm,dsn:"REPLACE_VITE_SENTRY_DSN",integrations:[new bv({routingInstrumentation:wv(dh),tracingOrigins:["localhost",/^\//]})],tracesSampleRate:1,logErrors:!0});cm.use(um).use(dh).use(bE).mount("#app");window.vueApp=cm;window.vueStore=um;
